[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x38, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x38, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x38, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x38, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x38, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000794, 8), (unique, 0x10000794, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x13d31e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121110, 8) , (register, 0x38, 8) , (const, 0x2f, 4)]
[ ---  CBRANCH (ram, 0x13d3c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x68, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x68, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x68, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x68, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x68, 4)]
[ ---  CBRANCH (ram, 0x13da25, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fd70, 8) , (register, 0x38, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13da25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000063c, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x13d430, 1)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa8, 8)]
[(unique, 0x100006e4, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x13d4aa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 1) , (const, 0x3a, 1), (register, 0x18, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000397, 8) , (unique, 0x10000397, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (unique, 0x1000038f, 8) , (unique, 0x1000038f, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (unique, 0x1000038b, 4) , (unique, 0x1000038b, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x1000037b, 8) , (unique, 0x1000037b, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000372, 8) , (unique, 0x10000372, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0x10000362, 8) , (unique, 0x10000362, 8)]
[(register, 0x18, 1) MULTIEQUAL (register, 0x18, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x100006f4, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000724, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0x10000754, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100006e4, 8) , (unique, 0x1000036a, 8) , (unique, 0x1000036a, 8)]
[(unique, 0x10000352, 8) MULTIEQUAL (unique, 0x100006ec, 8) , (unique, 0x100006f4, 8) , (unique, 0x100006fc, 8) , (unique, 0x10000704, 8) , (unique, 0x1000070c, 8) , (unique, 0x10000714, 8)]
[(unique, 0x1000035a, 8) MULTIEQUAL (unique, 0x1000071c, 8) , (unique, 0x10000724, 8) , (unique, 0x1000072c, 8) , (unique, 0x10000734, 8) , (unique, 0x1000073c, 8) , (unique, 0x10000744, 8)]
[(unique, 0x10000362, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (unique, 0x10000362, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x1000036a, 8) MULTIEQUAL (unique, 0x1000074c, 8) , (unique, 0x10000754, 8) , (unique, 0x1000075c, 8) , (unique, 0x10000764, 8) , (unique, 0x1000076c, 8) , (register, 0xb8, 8)]
[(unique, 0x10000372, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x10000372, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000037b, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x1000037b, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x1000038b, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (unique, 0x1000038b, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(unique, 0x1000038f, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (unique, 0x1000038f, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0x10000397, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000397, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x13d4dc, 1) , (unique, 0x10000351, 1), (unique, 0x10000351, 1) INT_EQUAL (unique, 0x1000037a, 1) , (const, 0x3a, 1), (unique, 0x1000037a, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x18, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x13d4dc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000037a, 1) , (const, 0x0, 1)]
[(unique, 0x100006dc, 8) COPY (unique, 0x1000036a, 8)]
[ ---  CBRANCH (ram, 0x13d412, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (unique, 0x10000362, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x10000352, 8) , (const, 0x1, 8)]
[(unique, 0x1000078c, 8) COPY (unique, 0x1000036a, 8)]
[ ---  CBRANCH (ram, 0x13d448, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000037a, 1) , (const, 0x25, 1)]
[(unique, 0x3100, 8) PTRADD (unique, 0x1000035a, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x13d5c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x4e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000035a, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000372, 8) , (const, 0x766, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x1000037b, 8) , (const, 0x766, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (unique, 0x1000038b, 4) , (const, 0x766, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (unique, 0x1000038f, 8) , (const, 0x766, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000397, 8) , (const, 0x766, 4)]
[(unique, 0x10000604, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x13d96c, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x10000362, 8) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0x10000352, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[(unique, 0x10000514, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x100, 8)]
[ ---  CBRANCH (ram, 0x13d987, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3200, 8) , (unique, 0x10000362, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x100, 8)]
[(unique, 0x1000051c, 8) COPY (unique, 0x10000362, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7a1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x7a1, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x7a1, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x7a1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7a1, 4)]
[(register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0x1000036a, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (unique, 0x10000362, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000514, 8) , (unique, 0x1000051c, 8)]
[ ---  CBRANCH (ram, 0x13d528, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbb00, 1) , (const, 0x4f, 1)]
[(unique, 0x100005b4, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x13d6d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000397, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (unique, 0x1000038f, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (unique, 0x1000038b, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x1000037b, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000372, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100005ac, 8) , (unique, 0x100005b4, 8)]
[(unique, 0x1000069c, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100006ac, 8) , (unique, 0x1000036a, 8)]
[ ---  CBRANCH (ram, 0x13d6e0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100005dc, 8) , (unique, 0x10000352, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0x10000362, 8)]
[(unique, 0x100004f4, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x101, 8)]
[ ---  CBRANCH (ram, 0x13d723, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x100, 8) , (register, 0xb0, 8)]
[(unique, 0x100004fc, 8) COPY (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x65f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x65f, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x65f, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x65f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x65f, 4)]
[(unique, 0x10000674, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x13d430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (register, 0xb8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100004f4, 8) , (unique, 0x100004fc, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x67f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0x3400, 8) CAST (unique, 0x100007a4, 8), (unique, 0x100007a4, 8) INT_ADD (unique, 0x1000079c, 8) , (register, 0x28, 8), (unique, 0x1000079c, 8) CAST (register, 0xb8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000069c, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13d762, 1) , (unique, 0x10000338, 1), (unique, 0x10000338, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5f, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100005ac, 8) COPY (register, 0x18, 8)]
[(unique, 0x100005dc, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x100006ac, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x13d762, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(unique, 0x10000574, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x13d630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x74, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000056c, 8) , (unique, 0x10000574, 8)]
[ ---  CBRANCH (ram, 0x13d640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000056c, 8) , (unique, 0x10000574, 8)]
[ ---  CBRANCH (ram, 0x13d657, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5f, 1)]
[ ---  CBRANCH (ram, 0x13d61b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5f, 1)]
[(unique, 0x1000059c, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x100005cc, 8) COPY (unique, 0x10000352, 8)]
[(unique, 0x1000068c, 8) COPY (unique, 0x1000036a, 8)]
[ ---  BRANCH (ram, 0x13d68a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000397, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x1000038f, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (unique, 0x1000038b, 4) , (stack, 0xffffffffffffff40, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x1000037b, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000372, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x1000059c, 8) , (unique, 0x100005a4, 8)]
[(unique, 0x10000624, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000068c, 8) , (unique, 0x10000694, 8)]
[ ---  CBRANCH (ram, 0x13d668, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100005cc, 8) , (unique, 0x100005d4, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000362, 8) , (register, 0xb0, 8)]
[(unique, 0x100004d4, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x101, 8)]
[ ---  CBRANCH (ram, 0x13d6a6, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x100, 8) , (register, 0xb0, 8)]
[(unique, 0x100004dc, 8) COPY (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5dc, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5dc, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x5dc, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x5dc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5dc, 4)]
[(unique, 0x1000066c, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x13d430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (register, 0xb8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100004d4, 8) , (unique, 0x100004dc, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5fc, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0x3400, 8) CAST (unique, 0x100007b4, 8), (unique, 0x100007b4, 8) INT_ADD (unique, 0x100007ac, 8) , (register, 0x28, 8), (unique, 0x100007ac, 8) CAST (register, 0xb8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000624, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13d762, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100005a4, 8) COPY (register, 0x18, 8)]
[(unique, 0x100005d4, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000694, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x13d762, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(unique, 0x1000056c, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x13d61b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(unique, 0x10000554, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x13d5f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x63, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x10000564, 8), (unique, 0x10000564, 8) MULTIEQUAL (unique, 0x10000554, 8) , (unique, 0x1000055c, 8)]
[ ---  CBRANCH (ram, 0x13d600, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x10000564, 8), (unique, 0x10000564, 8) MULTIEQUAL (unique, 0x10000554, 8) , (unique, 0x1000055c, 8)]
[(unique, 0x1000055c, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x13d613, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[ ---  CBRANCH (ram, 0x13d898, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(unique, 0x1000058c, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x100005bc, 8) COPY (unique, 0x10000352, 8)]
[ ---  BRANCH (ram, 0x13d8b8, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000397, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x1000038f, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (unique, 0x1000038b, 4) , (stack, 0xffffffffffffff40, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x1000037b, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000372, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x1000058c, 8) , (unique, 0x10000594, 8)]
[(unique, 0x1000061c, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000078c, 8) , (unique, 0x10000634, 8)]
[ ---  CBRANCH (ram, 0x13d8a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100005bc, 8) , (unique, 0x100005c4, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000362, 8) , (register, 0xb0, 8)]
[(unique, 0x100004c4, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x101, 8)]
[ ---  CBRANCH (ram, 0x13d8d4, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x100, 8) , (register, 0xb0, 8)]
[(unique, 0x100004cc, 8) COPY (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x555, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x555, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x555, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x555, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x555, 4)]
[(unique, 0x10000664, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x13d430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (register, 0xb8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100004c4, 8) , (unique, 0x100004cc, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x581, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0x3400, 8) CAST (unique, 0x100007c4, 8), (unique, 0x100007c4, 8) INT_ADD (unique, 0x100007bc, 8) , (register, 0x28, 8), (unique, 0x100007bc, 8) CAST (register, 0xb8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000061c, 8) , (register, 0x0, 8)]
[(unique, 0x10000594, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100005c4, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000634, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000061c, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13d61b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000397, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000397, 8) , (unique, 0x10000397, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x1000038f, 8) , (stack, 0xffffffffffffff58, 8) , (unique, 0x1000038f, 8) , (unique, 0x1000038f, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (unique, 0x1000038b, 4) , (stack, 0xffffffffffffff40, 4) , (unique, 0x1000038b, 4) , (unique, 0x1000038b, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x1000037b, 8) , (ram, 0x4eae68, 8) , (unique, 0x1000037b, 8) , (unique, 0x1000037b, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000372, 8) , (register, 0x110, 8) , (unique, 0x10000372, 8) , (unique, 0x10000372, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000362, 8) , (register, 0xb0, 8) , (unique, 0x10000362, 8) , (unique, 0x10000362, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000035a, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x10000704, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000352, 8) , (unique, 0x3100, 8) , (unique, 0x10000352, 8) , (unique, 0x10000352, 8)]
[(unique, 0x10000734, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000764, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000036a, 8) , (register, 0xb8, 8) , (unique, 0x1000036a, 8) , (unique, 0x1000036a, 8)]
[ ---  BRANCH (ram, 0x13d4ac, 1)]
[ ---  CBRANCH (ram, 0x13d750, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x25, 1)]
[ ---  CBRANCH (ram, 0x13d477, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x4c, 1)]
[ ---  CBRANCH (ram, 0x13d8f7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000035a, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x13d49d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(unique, 0x100006fc, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000072c, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000075c, 8) COPY (unique, 0x1000036a, 8)]
[ ---  BRANCH (ram, 0x13d4ac, 1)]
[ ---  CBRANCH (ram, 0x13d498, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x13d4aa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000372, 8) , (const, 0x6c8, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x1000037b, 8) , (const, 0x6c8, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (unique, 0x1000038b, 4) , (const, 0x6c8, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (unique, 0x1000038f, 8) , (const, 0x6c8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000397, 8) , (const, 0x6c8, 4)]
[(unique, 0x100005f4, 8) COPY (register, 0x10, 8)]
[(unique, 0x100006b4, 8) COPY (unique, 0x1000036a, 8)]
[ ---  CBRANCH (ram, 0x13d9ad, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x10000362, 8) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0x10000352, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x10, 8)]
[(unique, 0x100004e4, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x100, 8)]
[ ---  CBRANCH (ram, 0x13d9c8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3200, 8) , (unique, 0x10000362, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x100, 8)]
[(unique, 0x100004ec, 8) COPY (unique, 0x10000362, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x70f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x70f, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x70f, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x70f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x70f, 4)]
[(register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0x1000036a, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (unique, 0x10000362, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100004e4, 8) , (unique, 0x100004ec, 8)]
[(unique, 0x10000457, 8) MULTIEQUAL (unique, 0x3b80, 8) , (unique, 0x3b80, 8)]
[(unique, 0x1000045f, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x10000468, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000478, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000488, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000490, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(unique, 0x10000494, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0x1000049c, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x100005fc, 8) COPY (unique, 0x10000480, 8), (unique, 0x10000480, 8) MULTIEQUAL (unique, 0x100005f4, 8) , (unique, 0x10000604, 8)]
[(unique, 0x100006bc, 8) COPY (unique, 0x10000470, 8), (unique, 0x10000470, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13d430, 1) , (unique, 0x10000467, 1), (unique, 0x10000467, 1) INT_EQUAL (unique, 0x10000470, 8) , (const, 0x0, 8), (unique, 0x10000470, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000362, 8) , (unique, 0x1000045f, 8) , (unique, 0x10000362, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6e3, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000478, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x6e3, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x10000488, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x6e3, 4), (stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (unique, 0x10000490, 4) , (stack, 0xffffffffffffff40, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x6e3, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (unique, 0x10000494, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6e3, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x1000049c, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8), (register, 0x38, 8) CAST (unique, 0x100007d4, 8), (unique, 0x100007d4, 8) INT_ADD (unique, 0x100007cc, 8) , (unique, 0x10000352, 8), (unique, 0x100007cc, 8) CAST (register, 0xb8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x10000468, 8) , (register, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100005f4, 8) , (unique, 0x100005fc, 8) , (unique, 0x10000604, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100006b4, 8) , (unique, 0x100006bc, 8) , (unique, 0x1000036a, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000035a, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x10000714, 8) COPY (stack, 0xffffffffffffff10, 8), (stack, 0xffffffffffffff10, 8) MULTIEQUAL (unique, 0x3b80, 8) , (unique, 0x10000457, 8) , (unique, 0x3b80, 8)]
[(unique, 0x10000744, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x13d4ac, 1)]
[(unique, 0x100006a4, 8) COPY (unique, 0x1000036a, 8)]
[ ---  CBRANCH (ram, 0x13d933, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x10000362, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x10000352, 8) , (const, 0x1, 8)]
[(unique, 0x10000504, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x101, 8)]
[ ---  CBRANCH (ram, 0x13d946, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x100, 8) , (unique, 0x10000362, 8)]
[(unique, 0x1000050c, 8) COPY (unique, 0x10000362, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000372, 8) , (const, 0x751, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x1000037b, 8) , (const, 0x751, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (unique, 0x1000038b, 4) , (const, 0x751, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (unique, 0x1000038f, 8) , (const, 0x751, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000397, 8) , (const, 0x751, 4)]
[ ---  CBRANCH (ram, 0x13d430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0x1000036a, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (unique, 0x10000362, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000504, 8) , (unique, 0x1000050c, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000397, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x1000038f, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (unique, 0x1000038b, 4) , (stack, 0xffffffffffffff40, 4)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000372, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000362, 8) , (register, 0xb0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x732, 4), (ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x1000037b, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x25, 1), (unique, 0x3400, 8) CAST (unique, 0x100007e4, 8), (unique, 0x100007e4, 8) INT_ADD (unique, 0x100007dc, 8) , (unique, 0x10000352, 8), (unique, 0x100007dc, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100006a4, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000035a, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x1000070c, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x1000073c, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000076c, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  BRANCH (ram, 0x13d4ac, 1)]
[(unique, 0x100006c4, 8) COPY (unique, 0x1000036a, 8)]
[ ---  CBRANCH (ram, 0x13d580, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x10000362, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x10000352, 8) , (const, 0x1, 8)]
[(unique, 0x10000524, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x101, 8)]
[ ---  CBRANCH (ram, 0x13d593, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x100, 8) , (unique, 0x10000362, 8)]
[(unique, 0x1000052c, 8) COPY (unique, 0x10000362, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000372, 8) , (const, 0x47a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x1000037b, 8) , (const, 0x47a, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (unique, 0x1000038b, 4) , (const, 0x47a, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (unique, 0x1000038f, 8) , (const, 0x47a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000397, 8) , (const, 0x47a, 4)]
[ ---  CBRANCH (ram, 0x13d430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0x1000036a, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (unique, 0x10000362, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000524, 8) , (unique, 0x1000052c, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000397, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x1000038f, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (unique, 0x1000038b, 4) , (stack, 0xffffffffffffff40, 4)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000372, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000362, 8) , (register, 0xb0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x435, 4), (ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x1000037b, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x1000037a, 1), (unique, 0x3400, 8) CAST (unique, 0x100007f4, 8), (unique, 0x100007f4, 8) INT_ADD (unique, 0x100007ec, 8) , (unique, 0x10000352, 8), (unique, 0x100007ec, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100006c4, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000035a, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100006ec, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000071c, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (unique, 0x1000035a, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000074c, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100006c4, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x32c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x32c, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x32c, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x32c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x32c, 4)]
[ ---  CBRANCH (ram, 0x13d9ee, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[(unique, 0x10000534, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x100, 8)]
[ ---  CBRANCH (ram, 0x13da04, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3200, 8) , (register, 0xb0, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x100, 8)]
[(unique, 0x1000053c, 8) COPY (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3ed, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3ed, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x3ed, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x3ed, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ed, 4)]
[(unique, 0x10000654, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x13d430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (register, 0xb8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000534, 8) , (unique, 0x1000053c, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x340, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x340, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x340, 4), (stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x340, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x340, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0xb8, 8) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100006e4, 8) , (register, 0x0, 8)]
[(unique, 0x1000060c, 8) COPY (register, 0xa8, 8)]
[(unique, 0x100006d4, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100006e4, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13d4ec, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000397, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (unique, 0x1000038f, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (unique, 0x1000038b, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x1000037b, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000372, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (unique, 0x1000036a, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x1000060c, 8) , (unique, 0x1000035a, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x10000352, 8)]
[(unique, 0x10000544, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x101, 8)]
[ ---  CBRANCH (ram, 0x13d4ff, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x100, 8) , (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0x10000362, 8)]
[(unique, 0x1000054c, 8) COPY (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3bf, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3bf, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x3bf, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x3bf, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3bf, 4)]
[(unique, 0x1000064c, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x13d430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (register, 0xb8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000544, 8) , (unique, 0x1000054c, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000397, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (unique, 0x1000038f, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (unique, 0x1000038b, 4) , (stack, 0xffffffffffffff40, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000372, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0x10000362, 8) , (register, 0xb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x1000060c, 8) , (unique, 0x1000035a, 8) , (register, 0xa8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x35b, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x1000037b, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) CAST (unique, 0x10000804, 8), (unique, 0x10000804, 8) INT_ADD (unique, 0x100007fc, 8) , (register, 0x28, 8), (unique, 0x100007fc, 8) CAST (register, 0xb8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x10000352, 8) , (register, 0x28, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100006d4, 8) , (unique, 0x100006dc, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13d778, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x10000352, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x390, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x390, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x390, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x390, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x390, 4)]
[ ---  CBRANCH (ram, 0x13d420, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fd70, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x86, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x86, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x86, 4), (stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x86, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x86, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x13d909, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x18, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8), (register, 0x18, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x13d371, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x8000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff40, 4) , (const, 0xf000, 4)]
[ ---  CBRANCH (ram, 0x13d7a0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xb, 8) , (unique, 0x1000080c, 8), (unique, 0x1000080c, 8) CAST (stack, 0xffffffffffffff58, 8)]
[(register, 0x28, 8) COPY (const, 0xffffffff, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xbd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000814, 8) , (const, 0x16, 4), (unique, 0x10000814, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000081c, 8) , (stack, 0xffffffffffffff58, 8), (unique, 0x1000081c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x116, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x116, 4)]
[(unique, 0x100004bc, 8) COPY (stack, 0xffffffffffffff58, 8), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x116, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x122, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x116, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x113, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000082c, 8) , (register, 0x0, 8), (unique, 0x1000082c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xa, 8) , (const, 0x4, 8), (register, 0x0, 8) CAST (unique, 0x10000824, 8), (unique, 0x10000824, 8) CALL (ram, 0x21b9d0, 8) , (const, 0x0, 8) , (stack, 0xffffffffffffff58, 8) , (const, 0x1, 4) , (const, 0x2, 4) , (register, 0x18, 4) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13da2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CAST (unique, 0x10000824, 8), (unique, 0x10000824, 8) CALL (ram, 0x21b9d0, 8) , (const, 0x0, 8) , (stack, 0xffffffffffffff58, 8) , (const, 0x1, 4) , (const, 0x2, 4) , (register, 0x18, 4) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x26a, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x26a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x26a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x279, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x26a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000083c, 8) , (register, 0x0, 8), (unique, 0x1000083c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xa, 8) , (const, 0x4, 8), (register, 0x0, 8) CAST (unique, 0x10000834, 8), (unique, 0x10000834, 8) CALL (ram, 0x1212c0, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0x100005e4, 8) COPY (unique, 0x100004bc, 8)]
[ ---  CBRANCH (ram, 0x13d909, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000834, 8), (unique, 0x10000834, 8) CALL (ram, 0x1212c0, 8) , (stack, 0xffffffffffffff58, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x293, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x293, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x293, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x293, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x13da97, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x210110, 8) , (register, 0x18, 4) , (register, 0x30, 8) , (register, 0xa0, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000844, 8), (unique, 0x10000844, 8) CAST (register, 0x0, 8), (register, 0x30, 8) INT_SUB (register, 0x28, 8) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100005e4, 8) , (unique, 0x100005ec, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100004bc, 8) , (register, 0xa0, 8)]
[(register, 0xa0, 8) INT_SUB (register, 0xa0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13da7f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x13da9a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000084c, 8), (unique, 0x1000084c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) COPY (const, 0xffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2c4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2c4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2c4, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000854, 8), (unique, 0x10000854, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x13d384, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000085c, 8), (unique, 0x1000085c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(unique, 0x100005ec, 8) COPY (stack, 0xffffffffffffff58, 8)]
[ ---  CBRANCH (ram, 0x13dadc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0x10000349, 1) COPY (const, 0x1, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2df, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x13d7d8, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x125, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 4)]
[(unique, 0x1000034a, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000348, 1) MULTIEQUAL (unique, 0x1000034a, 1) , (unique, 0x10000349, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x13daaf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x960408de, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x13d913, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xde080496, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x24f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000864, 8) , (register, 0x10, 8), (unique, 0x10000864, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x8, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x13d7f5, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x147, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000870, 8) , (register, 0x10, 8), (unique, 0x10000870, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1000086c, 4), (unique, 0x1000086c, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000878, 8) , (register, 0x8, 8), (unique, 0x10000878, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000313, 4), (unique, 0x10000313, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000880, 8) , (unique, 0x3100, 8), (unique, 0x10000880, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000317, 8) INT_MULT (register, 0x10, 8) , (const, 0x6, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000313, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (unique, 0x10000313, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15b, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000888, 8) , (unique, 0x3a00, 8), (unique, 0x10000888, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x100003ff, 8) , (const, 0x4, 8), (unique, 0x100003ff, 8) INT_ADD (unique, 0x100003f7, 8) , (const, 0x3, 8), (unique, 0x100003f7, 8) INT_MULT (register, 0x10, 8) , (const, 0x6, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000313, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (unique, 0x10000313, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x13d844, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 8) , (unique, 0x10000890, 8), (unique, 0x10000890, 8) CAST (unique, 0x10000248, 8), (unique, 0x10000248, 8) INT_MULT (register, 0x10, 8) , (const, 0x3, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000313, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (unique, 0x10000313, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[(register, 0x8, 8) COPY (const, 0x2, 8)]
[(unique, 0x1000057c, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x13d83b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x10000898, 4), (unique, 0x10000898, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000584, 8) COPY (register, 0x30, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x1000057c, 8) , (unique, 0x10000584, 8)]
[ ---  CBRANCH (ram, 0x13d830, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (unique, 0x1000089c, 8), (unique, 0x1000089c, 8) CAST (unique, 0x10000248, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x13d913, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x100008a4, 8), (unique, 0x100008a4, 8) CAST (stack, 0xffffffffffffff58, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x10000317, 8), (unique, 0x3880, 8) INT_ADD (register, 0x10, 8) , (const, 0xc, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x10000317, 8), (unique, 0x3880, 8) INT_SUB (stack, 0xffffffffffffff58, 8) , (const, 0xd, 8)]
[ ---  CBRANCH (ram, 0x13d88a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100008b4, 8), (unique, 0x100008b4, 8) INT_ADD (unique, 0x100008ac, 8) , (register, 0x10, 8), (unique, 0x100008ac, 8) CAST (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x13d913, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3a00, 8)]
[(register, 0x10, 8) PTRADD (unique, 0x3400, 8) , (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x13d881, 1)]
[ ---  CBRANCH (ram, 0x13d878, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x8, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x13d384, 1)]
[ ---  CBRANCH (ram, 0x13d913, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x10, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x13d901, 1) , (unique, 0x10000348, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x22a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x22a, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x13d384, 1)]
[(register, 0x28, 8) COPY (const, 0xffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x225, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x225, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x225, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100008bc, 8), (unique, 0x100008bc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x13d384, 1)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x18, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc6, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc2, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc2, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc6, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc2, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0xb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000644, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x13d3d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) COPY (const, 0xffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2f9, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x10000478, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2f9, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x10000488, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2f9, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x1000049c, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000063c, 8) , (unique, 0x10000644, 8) , (unique, 0x1000064c, 8) , (unique, 0x10000654, 8) , (unique, 0x1000078c, 8) , (unique, 0x10000664, 8) , (unique, 0x1000066c, 8) , (unique, 0x10000674, 8) , (unique, 0x1000078c, 8) , (unique, 0x1000078c, 8)]
[ ---  BRANCH (ram, 0x13d393, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x13dad7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100008c4, 8), (unique, 0x100008c4, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf3, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf3, 4)]
[ ---  RETURN (const, 0x1, 4)]
