[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000244, 8), (unique, 0x10000244, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x1000022c, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x19c181, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19c1d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x116, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x116, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x116, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x19c1f0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x116, 4)]
[ ---  CALL (ram, 0x164dc0, 8) , (ram, 0x4ed9b0, 8) , (unique, 0x1000011c, 8) , (register, 0x38, 8), (unique, 0x1000011c, 8) COPY (const, 0x2b4fff, 8)]
[(unique, 0x1000023c, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x19c181, 1)]
[(register, 0xa8, 8) CAST (unique, 0x10000254, 8), (unique, 0x10000254, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3c79, 8)]
[ ---  CBRANCH (ram, 0x19c156, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000024c, 8), (unique, 0x1000024c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x53, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x53, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x19c100, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x53, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x1000015c, 8) , (unique, 0x1000007f, 8) , (const, 0x1, 8), (unique, 0x1000015c, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x1000007f, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x34, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x80, 4), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x53, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000026c, 8) , (const, 0x28, 1), (unique, 0x1000026c, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000264, 8), (unique, 0x10000264, 8) INT_ADD (unique, 0x1000025c, 8) , (unique, 0x1000007f, 8), (unique, 0x1000025c, 8) CAST (unique, 0x100001a4, 8), (unique, 0x100001a4, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x1000007f, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x34, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x19c1a0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000284, 8) , (const, 0x19c1af, 8), (unique, 0x10000284, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x1000021c, 8) , (unique, 0x10000214, 8) , (const, 0x1, 8), (unique, 0x1000021c, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x10000214, 8) INT_ADD (unique, 0x1000007f, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf7, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xf7, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xf6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf7, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf6, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xfa, 4), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xf7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x78302d, 4), (register, 0x0, 8) CAST (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) CALL (ram, 0x121230, 8) , (unique, 0x3100, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000027c, 8), (unique, 0x1000027c, 8) INT_ADD (unique, 0x10000274, 8) , (unique, 0x100001fc, 8), (unique, 0x10000274, 8) CAST (unique, 0x10000204, 8), (unique, 0x10000204, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x100001fc, 8) INT_ADD (unique, 0x1000007f, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x19c142, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002a4, 8) , (const, 0x19c132, 8), (unique, 0x100002a4, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001d4, 8) , (unique, 0x100001cc, 8) , (const, 0x1, 8), (unique, 0x100001d4, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x100001cc, 8) INT_ADD (unique, 0x1000007f, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x89, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x89, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x8f, 4), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x8a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x78302b, 4), (register, 0x0, 8) CAST (unique, 0x100002ac, 8), (unique, 0x100002ac, 8) CALL (ram, 0x121230, 8) , (unique, 0x3100, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000029c, 8), (unique, 0x1000029c, 8) INT_ADD (unique, 0x10000294, 8) , (unique, 0x100001b4, 8), (unique, 0x10000294, 8) CAST (unique, 0x100001bc, 8), (unique, 0x100001bc, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x100001b4, 8) INT_ADD (unique, 0x1000007f, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) INT_SUB (register, 0x38, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002bc, 8) , (const, 0x19c14e, 8), (unique, 0x100002bc, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001ec, 8) , (unique, 0x100001e4, 8) , (const, 0x1, 8), (unique, 0x100001ec, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x100001e4, 8) INT_ADD (unique, 0x1000007f, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa6, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa6, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa5, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa6, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa5, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xa9, 4), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xa6, 4), (ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x29, 2), (register, 0x0, 8) CAST (unique, 0x100002c4, 8), (unique, 0x100002c4, 8) CALL (ram, 0x158880, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x10, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_ADD (unique, 0x100002b4, 8) , (const, 0x3, 8), (unique, 0x100002b4, 8) CAST (register, 0x0, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (unique, 0x3800, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b52f6, 8)]
[ ---  CBRANCH (ram, 0x19c1c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3c79, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3c79, 8)]
[ ---  BRANCH (ram, 0x19c166, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002d4, 8) , (const, 0x19c181, 8), (unique, 0x100002d4, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc7, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xc6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc6, 4)]
[ ---  CALL (ram, 0x164dc0, 8) , (ram, 0x4ed9b0, 8) , (unique, 0x10000114, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0xa8, 8) , (register, 0x38, 8), (unique, 0x10000114, 8) COPY (const, 0x2b4ff1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[(unique, 0x10000234, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x1000022c, 8) , (unique, 0x10000234, 8) , (unique, 0x1000023c, 8)]
[ ---  CBRANCH (ram, 0x19c1f2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e4, 8) , (unique, 0x1000010c, 8), (unique, 0x100002e4, 8) CAST (register, 0x20, 8), (unique, 0x1000010c, 8) PTRSUB (const, 0x0, 8) , (const, 0x19c1f7, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xeb, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xea, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xeb, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xea, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ed9b0, 8) COPY (ram, 0x4ed9b0, 8), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xeb, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ed9b0, 8) COPY (ram, 0x4ed9b0, 8)]
[ ---  RETURN (const, 0x0, 8)]
