[ ---  CBRANCH (ram, 0x26720a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000176, 8), (unique, 0x10000176, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0x100000cc, 8), (unique, 0x100000cc, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000017e, 8), (unique, 0x1000017e, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000e4, 8) , (unique, 0x100000d4, 8), (unique, 0x100000e4, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x100000d4, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000dc, 8), (unique, 0x100000dc, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000017e, 8), (unique, 0x1000017e, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000017e, 8), (unique, 0x1000017e, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000186, 8) , (register, 0x38, 4), (unique, 0x10000186, 8) CAST (unique, 0xbd80, 8), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x2d, 4), (register, 0x30, 8) COPY (const, 0x1, 8)]
[(register, 0x38, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x2d, 4), (unique, 0x3100, 8) CAST (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2d, 4)]
[(ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x2d, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x28, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x23, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x22b, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x22a, 4)]
[(stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0x2d, 4)]
[ ---  CALL (ram, 0x13ec60, 8) , (unique, 0x100000cc, 8), (unique, 0x100000cc, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x30, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x35, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0x35, 4), (stack, 0xfffffffffffffef4, 4) MULTIEQUAL (stack, 0xfffffffffffffef4, 4) , (stack, 0xfffffffffffffef4, 4)]
[ ---  CALL (ram, 0x267100, 8)]
[(unique, 0x100000c0, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x35, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x267265, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000196, 8), (unique, 0x10000196, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x35, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x35, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eada8, 8) MULTIEQUAL (ram, 0x4eada8, 8) , (ram, 0x4eada8, 8)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x69, 4), (stack, 0xffffffffffffffd8, 8) COPY (const, 0x267251, 8)]
[ ---  CALL (ram, 0x1210b0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0x100000c0, 4), (unique, 0xbd80, 8) CAST (unique, 0x1000019e, 8), (unique, 0x1000019e, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x74, 4), (register, 0x30, 8) COPY (const, 0x1, 8)]
[(register, 0x38, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x74, 4), (unique, 0x3100, 8) CAST (unique, 0x100001a6, 8), (unique, 0x100001a6, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x74, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x69, 4)]
[(ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x74, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x71, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x69, 4)]
[(stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0x74, 4), (stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0x69, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x74, 4), (stack, 0xffffffffffffffd8, 8) COPY (const, 0x267265, 8)]
[ ---  CALL (ram, 0x13ec60, 8)]
[(register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x77, 4)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x77, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x77, 4), (stack, 0xffffffffffffffd8, 8) COPY (const, 0x26726a, 8)]
[ ---  CALL (ram, 0x267100, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001be, 8), (unique, 0x100001be, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x77, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x77, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eada8, 8) MULTIEQUAL (ram, 0x4eada8, 8) , (ram, 0x4eada8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c6, 8) , (unique, 0x3800, 8), (unique, 0x100001c6, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x3800, 8) CAST (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffef8, 8), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x77, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x77, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eada8, 8) MULTIEQUAL (ram, 0x4eada8, 8) , (ram, 0x4eada8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc0, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x77, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0xc0, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0xb9, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x77, 4), (ram, 0x4eada8, 8) MULTIEQUAL (ram, 0x4eada8, 8) , (ram, 0x4eada8, 8)]
[(stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0xc0, 4), (stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0x77, 4), (stack, 0xfffffffffffffef4, 4) MULTIEQUAL (stack, 0xfffffffffffffef4, 4) , (stack, 0xfffffffffffffef4, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (unique, 0x10000166, 8) , (const, 0xc0, 4), (unique, 0x10000166, 8) COPY (register, 0x38, 8), (register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x77, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (unique, 0x3800, 8) , (const, 0xc0, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffef4, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xc0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001b6, 8), (unique, 0x100001b6, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x77, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (unique, 0x1000016e, 8) , (const, 0xc0, 4), (unique, 0x1000016e, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x267320, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x13eb70, 8) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8)]
[(ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x114, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ce, 8) , (unique, 0xbd80, 8), (unique, 0x100001ce, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x267302, 1)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0xd6, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0xd6, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xd6, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xd6, 4)]
[ ---  CALLIND (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001d6, 8) , (unique, 0xbd80, 8), (unique, 0x100001d6, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0xd6, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 16)]
[(ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0xe5, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0xe2, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0xdd, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0xd6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001de, 8) , (const, 0x0, 8), (unique, 0x100001de, 8) CAST (unique, 0x10000158, 8), (unique, 0x10000158, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x10000162, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffd8, 8) MULTIEQUAL (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[(stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8)]
[(ram, 0x4eada8, 8) MULTIEQUAL (ram, 0x4eada8, 8) , (ram, 0x4eada8, 8)]
[(register, 0x0, 4) COPY (unique, 0x100000c8, 4), (unique, 0x100000c8, 4) MULTIEQUAL (unique, 0x10000162, 4) , (stack, 0xfffffffffffffef4, 4)]
[ ---  CBRANCH (ram, 0x267335, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x108, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eada8, 8) COPY (ram, 0x4eada8, 8), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x108, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eada8, 8) COPY (ram, 0x4eada8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
