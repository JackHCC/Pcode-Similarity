[ ---  CBRANCH (ram, 0x186be0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000063, 8) , (const, 0x0, 8), (unique, 0x10000063, 8) INT_AND (register, 0x30, 8) , (const, 0x7, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x16, 4)]
[ ---  CBRANCH (ram, 0x186d70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x186d70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x16, 4)]
[ ---  CBRANCH (ram, 0x186d76, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001f4, 8), (unique, 0x100001f4, 8) CAST (ram, 0x4c2ee0, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x286, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x286, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x286, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x286, 4)]
[(register, 0x0, 8) CAST (unique, 0x100001fc, 8), (unique, 0x100001fc, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (stack, 0x0, 8)]
[ ---  CBRANCH (ram, 0x186de8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x186d8a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x186e27, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0x10, 8)]
[(unique, 0x100001e4, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) COPY (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x186c88, 1)]
[ ---  CBRANCH (ram, 0x186e14, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x8000000000000000, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000204, 8) , (const, 0x16, 4), (unique, 0x10000204, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x262, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x262, 4)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x262, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x262, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x186e27, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0x100000ab, 8) , (const, 0x21, 8), (unique, 0x100000ab, 8) INT_2COMP (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000020c, 8) , (const, 0xc, 4), (unique, 0x1000020c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x25d, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x25d, 4)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x25d, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x25d, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[(unique, 0x100001ec, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x186e59, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x100001d4, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x186c88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x20, 8)]
[(unique, 0x100001dc, 8) COPY (unique, 0x100000c3, 8), (unique, 0x100000c3, 8) INT_MULT (register, 0xa0, 8) , (const, 0x2, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100000c3, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x186c80, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100000c3, 8) , (register, 0x30, 8), (unique, 0x100000c3, 8) INT_MULT (register, 0xa0, 8) , (const, 0x2, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100000c3, 8) , (register, 0xa0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100001d4, 8) , (unique, 0x100001dc, 8) , (unique, 0x100001e4, 8) , (unique, 0x100001ec, 8)]
[ ---  CBRANCH (ram, 0x186d9f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000214, 8), (unique, 0x10000214, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2d90, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x186d9f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x21c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x21c, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x21c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x21c, 4)]
[ ---  CBRANCH (ram, 0x186cdf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000021c, 8), (unique, 0x1000021c, 8) CALL (ram, 0x17d8c0, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x240, 4), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x239, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x240, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x239, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x240, 4), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x239, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x240, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x239, 4)]
[ ---  CBRANCH (ram, 0x186dda, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000022c, 8), (unique, 0x1000022c, 8) CALL (ram, 0x182470, 8) , (register, 0x0, 8) , (register, 0xa0, 8) , (register, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x10000224, 8), (unique, 0x10000224, 8) CALL (ram, 0x17dae0, 8) , (unique, 0x3a00, 8) , (const, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (register, 0xa0, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x186df2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x186cc1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x218, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x218, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x218, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x218, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x118, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x118, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x118, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x118, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x186cdf, 1)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x1fb, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1fb, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x1fb, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1fb, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x121, 4), (ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x121, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x121, 4), (ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x121, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x186df2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000234, 8), (unique, 0x10000234, 8) CALL (ram, 0x182470, 8) , (register, 0xa8, 8) , (register, 0xa0, 8) , (register, 0x10, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x1e0, 4), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x1d9, 4), (ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e0, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d9, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x1e0, 4), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x1d9, 4), (ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1e0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1d9, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000244, 8), (unique, 0x10000244, 8) CALL (ram, 0x182470, 8) , (register, 0x0, 8) , (register, 0xa0, 8) , (register, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) CALL (ram, 0x17dff0, 8) , (register, 0xa8, 8) , (register, 0x10, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x186dda, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x186cf9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x186d0b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x1ca, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ca, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x1ca, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ca, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x13c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x13c, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x13c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x13c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0x100001ad, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(unique, 0x100001b5, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100001bd, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(unique, 0x100001c5, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x186d28, 1) , (unique, 0x100001ac, 1), (unique, 0x100001ac, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (unique, 0x100001ad, 8) , (const, 0x1bc, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x100001b5, 8) , (const, 0x1bc, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (unique, 0x100001bd, 8) , (const, 0x1bc, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x100001c5, 4) , (const, 0x1bc, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (register, 0xa8, 8)]
[(unique, 0x100001cc, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x1bc, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x100001c5, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (unique, 0x100001bd, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x100001b5, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (unique, 0x100001ad, 8) , (ram, 0x4c2d90, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x186d83, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001cc, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x186d56, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000113, 8) , (const, 0x0, 8), (unique, 0x10000113, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000254, 8), (unique, 0x10000254, 8) INT_ADD (unique, 0x1000024c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000024c, 8) CAST (register, 0x10, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8)]
[ ---  CBRANCH (ram, 0x186d4d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000011b, 8) , (const, 0x0, 8), (unique, 0x1000011b, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000264, 8), (unique, 0x10000264, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x1000025c, 8) , (const, 0x10, 8), (unique, 0x1000025c, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x186e3a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0xa8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x17d3b0, 8) , (unique, 0x10000194, 8) , (unique, 0x1000018c, 8) , (const, 0xc3d, 8) , (unique, 0x1000019c, 8), (unique, 0x1000019c, 8) COPY (const, 0x291110, 8), (unique, 0x10000194, 8) COPY (const, 0x290d28, 8), (unique, 0x1000018c, 8) COPY (const, 0x28d3f9, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x1ab, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ab, 4)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x1ab, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ab, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x275, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x275, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x275, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x275, 4)]
[(register, 0x0, 8) CALL (ram, 0x183550, 8) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x186d7e, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[ ---  CBRANCH (ram, 0x186d59, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x186, 4), (ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x186, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x186, 4), (ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x186, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
