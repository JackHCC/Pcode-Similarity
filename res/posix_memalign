[ ---  CBRANCH (ram, 0x428c20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4), (register, 0x10, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x428c20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x16, 4)]
[ ---  CBRANCH (ram, 0x428c90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5780, 8) , (const, 0x0, 8)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x2c2, 4)]
[(register, 0x0, 8) CAST (unique, 0x100001ec, 8), (unique, 0x100001ec, 8) CALLIND (unique, 0x100001e4, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (stack, 0x0, 8), (unique, 0x100001e4, 8) CAST (ram, 0x4c5780, 8)]
[ ---  BRANCH (ram, 0x428c7b, 1)]
[ ---  CBRANCH (ram, 0x428c70, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x428c30, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x428d58, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x8000000000000000, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x100001f4, 8), (unique, 0x100001f4, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x2ac, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[(unique, 0x100001dc, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x428e47, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x100001d4, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x428bb7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x428c60, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100000dc, 8) , (register, 0x30, 8), (unique, 0x100000dc, 8) INT_MULT (register, 0x28, 8) , (const, 0x2, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x100000dc, 8)]
[(unique, 0x100001cc, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x20, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x100001cc, 8) , (unique, 0x100001d4, 8) , (unique, 0x100001dc, 8) , (unique, 0x100000dc, 8)]
[ ---  CBRANCH (ram, 0x428ca0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001fc, 8), (unique, 0x100001fc, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0xa4, 4)]
[ ---  CBRANCH (ram, 0x428c80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000204, 8), (unique, 0x10000204, 8) CALL (ram, 0x424fb0, 8) , (unique, 0x100001b6, 8) , (register, 0x28, 8) , (register, 0x10, 8), (unique, 0x100001b6, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x428c0b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ac, 8) , (const, 0x0, 8), (unique, 0x100000ac, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000214, 8), (unique, 0x10000214, 8) INT_ADD (unique, 0x1000020c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000020c, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x428c0b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000b4, 8) , (const, 0x0, 8), (unique, 0x100000b4, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x428e28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000224, 8), (unique, 0x10000224, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x1000021c, 8) , (const, 0x10, 8), (unique, 0x1000021c, 8) CAST (register, 0x0, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x1000018e, 8) , (unique, 0x10000186, 8) , (const, 0xce8, 8) , (unique, 0x100001a6, 8), (unique, 0x100001a6, 8) COPY (const, 0x49c228, 8), (unique, 0x1000018e, 8) COPY (const, 0x49c018, 8), (unique, 0x10000186, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x108, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x428d70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000022c, 8), (unique, 0x1000022c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001be, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x100001be, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x232, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x232, 4)]
[ ---  CBRANCH (ram, 0x428cce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000234, 8), (unique, 0x10000234, 8) CALL (ram, 0x421c80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x256, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x24f, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x256, 4), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x24f, 4)]
[ ---  CBRANCH (ram, 0x428dcf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000244, 8), (unique, 0x10000244, 8) CALL (ram, 0x424fb0, 8) , (register, 0x0, 8) , (register, 0x28, 8) , (register, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) CALL (ram, 0x422050, 8) , (unique, 0x3a00, 8) , (const, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x428cfd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x428ddd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000024c, 8), (unique, 0x1000024c, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x229, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22e, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x22e, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x428cce, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x152, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x158, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x158, 4), (ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[ ---  CBRANCH (ram, 0x428daf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000254, 8), (unique, 0x10000254, 8) CALL (ram, 0x424fb0, 8) , (register, 0xa8, 8) , (register, 0x28, 8) , (register, 0x10, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1fd, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f6, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1fd, 4), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1f6, 4), (ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000264, 8), (unique, 0x10000264, 8) CALL (ram, 0x424fb0, 8) , (register, 0x0, 8) , (register, 0x28, 8) , (register, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x1000025c, 8), (unique, 0x1000025c, 8) CALL (ram, 0x4225f0, 8) , (register, 0xa8, 8) , (register, 0x10, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[(ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x428cfd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x428dfd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000026c, 8), (unique, 0x1000026c, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1d3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x428cfd, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x428cfd, 1)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x179, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x428c80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x428c0b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000010c, 8) , (const, 0x0, 8), (unique, 0x1000010c, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000027c, 8), (unique, 0x1000027c, 8) INT_ADD (unique, 0x10000274, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000274, 8) CAST (register, 0x80, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x428d2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000114, 8) , (const, 0x0, 8), (unique, 0x10000114, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x10000284, 8) , (const, 0x10, 8), (unique, 0x10000284, 8) CAST (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x428c0b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000294, 8) , (register, 0xa8, 8), (unique, 0x10000294, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000196, 8) , (unique, 0x1000017e, 8) , (const, 0xcfb, 8) , (unique, 0x1000019e, 8), (unique, 0x1000019e, 8) COPY (const, 0x49c228, 8), (unique, 0x10000196, 8) COPY (const, 0x49c078, 8), (unique, 0x1000017e, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1c3, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x2b2, 4)]
[(register, 0x0, 8) CALL (ram, 0x426550, 8) , (register, 0x10, 8)]
[(ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[ ---  CBRANCH (ram, 0x428c0b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x0, 8)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0xe3, 4), (ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
