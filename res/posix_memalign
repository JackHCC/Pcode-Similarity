[ ---  CBRANCH (ram, 0x19aef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000099, 8) , (const, 0x0, 8), (unique, 0x10000099, 8) INT_AND (register, 0x30, 8) , (const, 0x7, 8)]
[ ---  CBRANCH (ram, 0x19aef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x19aef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x16, 4)]
[ ---  CBRANCH (ram, 0x19af50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000034d, 8), (unique, 0x1000034d, 8) CAST (ram, 0x4eaed0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x36d, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x36d, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x36d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x36d, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x36d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x36d, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000355, 8), (unique, 0x10000355, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (stack, 0x0, 8)]
[ ---  BRANCH (ram, 0x19af0b, 1)]
[ ---  CBRANCH (ram, 0x19af00, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x19af28, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x19b098, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0x10, 8)]
[(unique, 0x1000033d, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x19ae20, 1)]
[ ---  CBRANCH (ram, 0x19b0b0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x8000000000000000, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035d, 8) , (const, 0x16, 4), (unique, 0x1000035d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x349, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x349, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x349, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x349, 4)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x349, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x349, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x19b098, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0x100000e1, 8) , (const, 0x21, 8), (unique, 0x100000e1, 8) INT_2COMP (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000365, 8) , (const, 0xc, 4), (unique, 0x10000365, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x343, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x343, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x343, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x343, 4)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x343, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x343, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[(unique, 0x10000345, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x19b131, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x1000032d, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x19ae20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x20, 8)]
[(unique, 0x10000335, 8) COPY (unique, 0x100000f9, 8), (unique, 0x100000f9, 8) INT_MULT (register, 0x18, 8) , (const, 0x2, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100000f9, 8)]
[ ---  CBRANCH (ram, 0x19ae18, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100000f9, 8) , (register, 0x30, 8), (unique, 0x100000f9, 8) INT_MULT (register, 0x18, 8) , (const, 0x2, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100000f9, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x1000032d, 8) , (unique, 0x10000335, 8) , (unique, 0x1000033d, 8) , (unique, 0x10000345, 8)]
[ ---  CBRANCH (ram, 0x19af60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0xea, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xea, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xea, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xea, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0xea, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xea, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xea, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x19ae43, 8)]
[ ---  CBRANCH (ram, 0x19af40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) CALL (ram, 0x195490, 8) , (unique, 0x100002e6, 8) , (register, 0x18, 8) , (register, 0x10, 8), (unique, 0x100002e6, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x19af10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000111, 8) , (const, 0x0, 8), (unique, 0x10000111, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000037d, 8), (unique, 0x1000037d, 8) INT_ADD (unique, 0x10000375, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000375, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19af10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000119, 8) , (const, 0x0, 8), (unique, 0x10000119, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x19af10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x100002de, 8), (unique, 0x100002de, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000038d, 8), (unique, 0x1000038d, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x10000385, 8) , (const, 0x10, 8), (unique, 0x10000385, 8) CAST (register, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[ ---  CBRANCH (ram, 0x19aeb7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000395, 8), (unique, 0x10000395, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x100002ae, 8) , (unique, 0xbd80, 8) , (register, 0x8, 8) , (unique, 0x1000029e, 8) , (const, 0xceb, 8) , (unique, 0x100002ce, 8) , (unique, 0x10000286, 8) , (unique, 0x100002be, 8) , (stack, 0xffffffffffffffd0, 8), (unique, 0x100002ce, 8) COPY (const, 0x2b8ff8, 8), (unique, 0x100002be, 8) COPY (const, 0x2b8de8, 8), (unique, 0x100002ae, 8) COPY (const, 0x2b8758, 8), (unique, 0x1000029e, 8) COPY (const, 0x2b4cf8, 8), (unique, 0x10000286, 8) COPY (const, 0x2b3ed0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000039d, 8), (unique, 0x1000039d, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x169, 4)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x17b, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x178, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x169, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x17b, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x178, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x169, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x17b, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x178, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x169, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x178, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x169, 4)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x17b, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x178, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x169, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x17b, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x178, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x169, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x19b0c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003a5, 8), (unique, 0x100003a5, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4ead70, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x303, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x303, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x303, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x303, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x303, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x303, 4)]
[ ---  CBRANCH (ram, 0x19afac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003ad, 8), (unique, 0x100003ad, 8) CALL (ram, 0x191da0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x327, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x320, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x327, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x320, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x327, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x320, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x327, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x320, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x327, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x320, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x327, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x320, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x327, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x19b0f6, 8)]
[ ---  CBRANCH (ram, 0x19b123, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003bd, 8), (unique, 0x100003bd, 8) CALL (ram, 0x195490, 8) , (register, 0x0, 8) , (register, 0x18, 8) , (register, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x100003b5, 8), (unique, 0x100003b5, 8) CALL (ram, 0x1916e0, 8) , (unique, 0x3a00, 8) , (const, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x19b123, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19af8e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2ff, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2ff, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2ff, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2ff, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x2ff, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2ff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x1d7, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1d7, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1d7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d7, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x1d7, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1d7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x19afac, 1)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2e2, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2e2, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2e2, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e2, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x2e2, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2e2, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x1e0, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1e0, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1e0, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e0, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x1e0, 4), (ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1e0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1e0, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x19afba, 8)]
[ ---  CBRANCH (ram, 0x19b103, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003c5, 8), (unique, 0x100003c5, 8) CALL (ram, 0x195490, 8) , (register, 0xa8, 8) , (register, 0x18, 8) , (register, 0x10, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2c9, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2c2, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2c9, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2c2, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2c9, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2c2, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2c9, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2c2, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x2c9, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x2c2, 4), (ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2c9, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2c2, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2c9, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x19b120, 8)]
[(register, 0x0, 8) CAST (unique, 0x100003d5, 8), (unique, 0x100003d5, 8) CALL (ram, 0x195490, 8) , (register, 0x0, 8) , (register, 0x18, 8) , (register, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x100003cd, 8), (unique, 0x100003cd, 8) CALL (ram, 0x191fc0, 8) , (register, 0xa8, 8) , (register, 0x10, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19aff5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19afd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2b3, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2b3, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2b3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2b3, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x2b3, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2b3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x1fb, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1fb, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1fb, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1fb, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x1fb, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1fb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0x100002ef, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(unique, 0x100002f7, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(unique, 0x100002ff, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(unique, 0x10000307, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x1000030f, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(unique, 0x10000317, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x19aff5, 1) , (unique, 0x100002ee, 1), (unique, 0x100002ee, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4ead70, 8) INDIRECT (unique, 0x100002ef, 8) , (const, 0x2a5, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x100002f7, 8) , (const, 0x2a5, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x100002ff, 8) , (const, 0x2a5, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x10000307, 8) , (const, 0x2a5, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (unique, 0x1000030f, 8) , (const, 0x2a5, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000317, 4) , (const, 0x2a5, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2a5, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (register, 0xa8, 8)]
[(unique, 0x10000325, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x2a5, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x10000317, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (unique, 0x1000030f, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x10000307, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (unique, 0x100002ff, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (unique, 0x100002f7, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (unique, 0x100002ef, 8) , (ram, 0x4ead70, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x19af40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000325, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x19af10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001d2, 8) , (const, 0x0, 8), (unique, 0x100001d2, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003e5, 8), (unique, 0x100003e5, 8) INT_ADD (unique, 0x100003dd, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100003dd, 8) CAST (register, 0x10, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[ ---  CBRANCH (ram, 0x19b022, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001da, 8) , (const, 0x0, 8), (unique, 0x100001da, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003f5, 8), (unique, 0x100003f5, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x100003ed, 8) , (const, 0x10, 8), (unique, 0x100003ed, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19af10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0xa8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[ ---  CBRANCH (ram, 0x19b065, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003fd, 8), (unique, 0x100003fd, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x100002b6, 8) , (unique, 0xbd80, 8) , (register, 0x8, 8) , (unique, 0x100002a6, 8) , (const, 0xcfe, 8) , (unique, 0x100002d6, 8) , (unique, 0x10000296, 8) , (unique, 0x100002c6, 8) , (stack, 0xffffffffffffffd0, 8), (unique, 0x100002d6, 8) COPY (const, 0x2b8ff8, 8), (unique, 0x100002c6, 8) COPY (const, 0x2b8e48, 8), (unique, 0x100002b6, 8) COPY (const, 0x2b8758, 8), (unique, 0x100002a6, 8) COPY (const, 0x2b4cf8, 8), (unique, 0x10000296, 8) COPY (const, 0x2b3ed0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000405, 8), (unique, 0x10000405, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x284, 4)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x296, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x293, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x284, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x296, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x293, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x284, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x296, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x293, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x284, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x296, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x293, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x284, 4)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x296, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x293, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x284, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x296, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x293, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x284, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x35d, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x35d, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x35d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x35d, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x35d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x35d, 4)]
[(register, 0x0, 8) CALL (ram, 0x197070, 8) , (register, 0x10, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[ ---  CBRANCH (ram, 0x19af40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x17f, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x17f, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x17f, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x17f, 4), (ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x17f, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
