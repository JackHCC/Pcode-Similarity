[(stack, 0xffffffffffffffa8, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100005e7, 8), (unique, 0x100005e7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x20, 8) CAST (unique, 0x100005f7, 8), (unique, 0x100005f7, 8) INT_ADD (unique, 0x100005ef, 8) , (unique, 0x1000009a, 8), (unique, 0x100005ef, 8) CAST (unique, 0x100001de, 8), (unique, 0x100001de, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(register, 0x20, 8) CAST (unique, 0x10000607, 8), (unique, 0x10000607, 8) INT_ADD (unique, 0x100005ff, 8) , (unique, 0x1000009a, 8), (unique, 0x100005ff, 8) CAST (unique, 0x100001f6, 8), (unique, 0x100001f6, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(stack, 0xffffffffffffffa0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (const, 0x3, 4), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000206, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(register, 0x20, 8) CAST (unique, 0x10000627, 8), (unique, 0x10000627, 8) INT_ADD (unique, 0x1000061f, 8) , (unique, 0x10000216, 8), (unique, 0x1000061f, 8) CAST (unique, 0x10000296, 8), (unique, 0x10000296, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x10000216, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x1000021e, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000226, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x1000022e, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000236, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x1000023e, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000246, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x1000024e, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000256, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x1000025e, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000266, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[(stack, 0xffffffffffffff90, 8) COPY (register, 0x20, 8), (register, 0x20, 8) CAST (unique, 0x10000617, 8), (unique, 0x10000617, 8) INT_ADD (unique, 0x1000060f, 8) , (unique, 0x1000020e, 8), (unique, 0x1000060f, 8) CAST (unique, 0x1000027e, 8), (unique, 0x1000027e, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x1000020e, 8) INT_ADD (unique, 0x100000a2, 8) , (unique, 0x1000009a, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x12, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x1000009a, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x2314f0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2314f8, 8), (register, 0x20, 8) CAST (unique, 0x10000637, 8), (unique, 0x10000637, 8) INT_ADD (unique, 0x1000062f, 8) , (unique, 0x10000567, 8), (unique, 0x1000062f, 8) CAST (unique, 0x1000056f, 8), (unique, 0x1000056f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff60, 8), (unique, 0x10000567, 8) INT_ADD (unique, 0x10000206, 8) , (const, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x348, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x348, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x347, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x348, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x347, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x348, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x347, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x348, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x347, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x348, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x347, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x348, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x347, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x348, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x347, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x348, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x347, 4)]
[(register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x23143f, 1)]
[(stack, 0xffffffffffffff98, 8) COPY (register, 0x20, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff88, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffb0, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x100002fe, 8) , (const, 0x8, 8), (unique, 0x100002fe, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x231332, 1)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x231343, 8), (register, 0x20, 8) CAST (unique, 0x10000647, 8), (unique, 0x10000647, 8) INT_ADD (unique, 0x1000063f, 8) , (unique, 0x100004c7, 8), (unique, 0x1000063f, 8) CAST (unique, 0x100004cf, 8), (unique, 0x100004cf, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff60, 8), (unique, 0x100004c7, 8) INT_ADD (unique, 0x1000021e, 8) , (const, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe7, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xe7, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xe7, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xe7, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xe7, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xe7, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xe7, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe7, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xe7, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe7, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x265fb0, 8) , (unique, 0xbd80, 8) , (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x18, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0xa8, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x2312e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x265fb0, 8) , (unique, 0xbd80, 8) , (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0xa8, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x231349, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x231349, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x15, 8)]
[ ---  BRANCH (ram, 0x231320, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2312f2, 8), (register, 0x20, 8) CAST (unique, 0x10000657, 8), (unique, 0x10000657, 8) INT_ADD (unique, 0x1000064f, 8) , (unique, 0x10000487, 8), (unique, 0x1000064f, 8) CAST (unique, 0x1000048f, 8), (unique, 0x1000048f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff60, 8), (unique, 0x10000487, 8) INT_ADD (unique, 0x10000226, 8) , (const, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30e, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x30e, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x30d, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x30e, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x30d, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x30e, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x30d, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x30e, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x30d, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x30e, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x30d, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x30e, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x30d, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x30e, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x30d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x30e, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x30d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x30e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x30d, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100005d7, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x23130d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x231309, 8), (register, 0x20, 8) CAST (unique, 0x10000667, 8), (unique, 0x10000667, 8) INT_ADD (unique, 0x1000065f, 8) , (unique, 0x100004a7, 8), (unique, 0x1000065f, 8) CAST (unique, 0x100004af, 8), (unique, 0x100004af, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff60, 8), (unique, 0x100004a7, 8) INT_ADD (unique, 0x1000022e, 8) , (const, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x32c, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x32c, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x32b, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x32c, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x32b, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x32c, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x32b, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x32c, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x32b, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x32c, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x32b, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x32c, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x32b, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x32c, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x32b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x32c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x32b, 4)]
[(register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100005df, 8) COPY (stack, 0xffffffffffffff80, 8), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x32c, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x32b, 4), (stack, 0xffffffffffffff80, 8) COPY (register, 0x0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) INT_ADD (unique, 0x3a00, 8) , (register, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2b, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100005d7, 8) , (unique, 0x100005df, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x344, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x344, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x344, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x344, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x344, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x344, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x344, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x344, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x344, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0x100005c7, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x231350, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (stack, 0xffffffffffffffb0, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x231364, 8), (register, 0x20, 8) CAST (unique, 0x10000677, 8), (unique, 0x10000677, 8) INT_ADD (unique, 0x1000066f, 8) , (unique, 0x100004e7, 8), (unique, 0x1000066f, 8) CAST (unique, 0x100004ef, 8), (unique, 0x100004ef, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff60, 8), (unique, 0x100004e7, 8) INT_ADD (unique, 0x10000236, 8) , (const, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x134, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x133, 4)]
[(unique, 0x100005cf, 8) COPY (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x133, 4)]
[(unique, 0x100005bf, 8) COPY (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x133, 4)]
[ ---  CBRANCH (ram, 0x23143f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0xa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) COPY (unique, 0x3400, 8)]
[(register, 0xa0, 8) CAST (unique, 0x10000687, 8), (unique, 0x10000687, 8) INT_ADD (unique, 0x100005cf, 8) , (unique, 0x1000067f, 8), (unique, 0x1000067f, 8) CAST (register, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000068f, 8), (unique, 0x1000068f, 8) INT_ADD (stack, 0xffffffffffffff88, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100005c7, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xa8, 8), (unique, 0x3400, 8) CAST (unique, 0x100006b7, 8), (unique, 0x100006b7, 8) INT_ADD (unique, 0x100006af, 8) , (unique, 0x3300, 8), (unique, 0x100006af, 8) CAST (register, 0x0, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x100006a7, 8) , (const, 0x8, 8), (unique, 0x100006a7, 8) CAST (register, 0xb8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa8, 8) , (register, 0xa8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100006c7, 8), (unique, 0x100006c7, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffa8, 8) , (unique, 0x100006bf, 8) , (const, 0x8, 8), (unique, 0x100006bf, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x231468, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000069f, 8), (unique, 0x1000069f, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100005bf, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x10000697, 8) , (const, 0x4, 8), (unique, 0x10000697, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x231468, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x231468, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x231479, 8), (register, 0x20, 8) CAST (unique, 0x100006d7, 8), (unique, 0x100006d7, 8) INT_ADD (unique, 0x100006cf, 8) , (unique, 0x10000527, 8), (unique, 0x100006cf, 8) CAST (unique, 0x1000052f, 8), (unique, 0x1000052f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff60, 8), (unique, 0x10000527, 8) INT_ADD (unique, 0x10000246, 8) , (const, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2de, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x2de, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x2dd, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x2de, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x2dd, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x2de, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x2dd, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2de, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2dd, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2de, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2dd, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2de, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2dd, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2de, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2dd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2de, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2dd, 4)]
[(register, 0x0, 4) CALL (ram, 0x165000, 8) , (register, 0xa8, 8) , (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) COPY (const, 0x2b68cf, 8)]
[ ---  CBRANCH (ram, 0x2314b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2313d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2314df, 8), (register, 0x20, 8) CAST (unique, 0x100006e7, 8), (unique, 0x100006e7, 8) INT_ADD (unique, 0x100006df, 8) , (unique, 0x10000547, 8), (unique, 0x100006df, 8) CAST (unique, 0x1000054f, 8), (unique, 0x1000054f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff60, 8), (unique, 0x10000547, 8) INT_ADD (unique, 0x1000023e, 8) , (const, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x298, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x298, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x298, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x298, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x298, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x298, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x298, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x298, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x298, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x297, 4)]
[(register, 0x0, 4) CALL (ram, 0x165000, 8) , (register, 0xa8, 8) , (unique, 0x1000017e, 8) , (unique, 0xbd80, 8) , (unique, 0x10000176, 8) , (unique, 0xbd80, 8), (unique, 0x1000017e, 8) COPY (const, 0x2b68c8, 8), (unique, 0x10000176, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3c79, 8)]
[ ---  BRANCH (ram, 0x231481, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x231398, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb0, 8) , (register, 0xb8, 8), (register, 0xb8, 8) CAST (unique, 0x100006f7, 8), (unique, 0x100006f7, 8) INT_ADD (unique, 0x100006ef, 8) , (const, 0x1, 8), (unique, 0x100006ef, 8) CAST (register, 0xb8, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x231498, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x80, 8) COPY (const, 0x2b, 8)]
[(register, 0x30, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000013e, 8) , (const, 0x1, 8), (unique, 0x1000013e, 8) INT_2COMP (unique, 0x100006ff, 8), (unique, 0x100006ff, 8) CAST (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x2313e8, 1)]
[(register, 0x88, 8) PTRADD (register, 0x88, 8) , (unique, 0x100000fc, 8) , (const, 0x1, 8), (unique, 0x100000fc, 8) INT_2COMP (unique, 0x10000707, 8), (unique, 0x10000707, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x80, 8) COPY (const, 0x2d, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x30, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x2313f9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8), (register, 0x20, 8) CAST (unique, 0x10000717, 8), (unique, 0x10000717, 8) INT_ADD (unique, 0x1000070f, 8) , (unique, 0x10000507, 8), (unique, 0x1000070f, 8) CAST (unique, 0x1000050f, 8), (unique, 0x1000050f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff60, 8), (unique, 0x10000507, 8) INT_ADD (unique, 0x1000024e, 8) , (const, 0x8, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x231417, 8), (register, 0x20, 8) CAST (unique, 0x10000737, 8), (unique, 0x10000737, 8) INT_ADD (unique, 0x1000072f, 8) , (unique, 0x10000256, 8), (unique, 0x1000072f, 8) CAST (unique, 0x100003de, 8), (unique, 0x100003de, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff60, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1fe, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1fd, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1fd, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1fd, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1fd, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1fd, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1fd, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1fd, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1de, 4)]
[(register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALL (ram, 0x165000, 8) , (register, 0xa8, 8) , (unique, 0x10000196, 8) , (unique, 0xbd80, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x88, 8), (unique, 0x10000196, 8) COPY (const, 0x2b68d4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x231398, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb0, 8) , (register, 0xb8, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1fd, 4), (register, 0xb8, 8) CAST (unique, 0x10000727, 8), (unique, 0x10000727, 8) INT_ADD (unique, 0x1000071f, 8) , (const, 0x1, 8), (unique, 0x1000071f, 8) CAST (register, 0xb8, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x231505, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x3400, 8) , (register, 0xa8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000747, 8), (unique, 0x10000747, 8) INT_ADD (unique, 0x1000073f, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x1000073f, 8) CAST (register, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x1000016e, 8), (unique, 0x1000016e, 8) PTRSUB (const, 0x0, 8) , (const, 0x231524, 8), (register, 0x20, 8) CAST (unique, 0x10000757, 8), (unique, 0x10000757, 8) INT_ADD (unique, 0x1000074f, 8) , (unique, 0x100005a7, 8), (unique, 0x1000074f, 8) CAST (unique, 0x100005af, 8), (unique, 0x100005af, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff60, 8), (unique, 0x100005a7, 8) INT_ADD (unique, 0x1000025e, 8) , (const, 0x10, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x266, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x265, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x266, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x265, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x266, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x265, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x266, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x265, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x266, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x265, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x266, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x265, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x266, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x265, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x266, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x265, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100001a6, 8) , (unique, 0x1000019e, 8) , (const, 0x73, 4) , (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) COPY (const, 0x2bb580, 8), (unique, 0x100001a6, 8) COPY (const, 0x2ba480, 8), (unique, 0x1000019e, 8) COPY (const, 0x2b68e6, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x0, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x231500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000075f, 8), (unique, 0x1000075f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x231505, 8), (register, 0x20, 8) CAST (unique, 0x1000076f, 8), (unique, 0x1000076f, 8) INT_ADD (unique, 0x10000767, 8) , (unique, 0x10000587, 8), (unique, 0x10000767, 8) CAST (unique, 0x1000058f, 8), (unique, 0x1000058f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff60, 8), (unique, 0x10000587, 8) INT_ADD (unique, 0x10000266, 8) , (const, 0x10, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x25c, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x25c, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x25c, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x25c, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x25c, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x25c, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x25c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25c, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
