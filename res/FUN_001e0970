[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x206, 1) INT_EQUAL (ram, 0x4f0a90, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1e0bce, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (ram, 0x4f0a90, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1e09bf, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x1e0af1, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x64, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (ram, 0x4f0a90, 4) , (const, 0x1, 4)]
[(ram, 0x4f0a90, 4) COPY (const, 0x0, 4)]
[(ram, 0x4f0a90, 4) MULTIEQUAL (ram, 0x4f0a90, 4) , (ram, 0x4f0a90, 4)]
[ ---  CBRANCH (ram, 0x1e09bf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f096a, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x274, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x274, 4)]
[(ram, 0x4edd0c, 1) INDIRECT (ram, 0x4edd0c, 1) , (const, 0x274, 4)]
[(ram, 0x4efe50, 8) INDIRECT (ram, 0x4efe50, 8) , (const, 0x274, 4)]
[(ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0x274, 4)]
[(ram, 0x4f096a, 1) INDIRECT (ram, 0x4f096a, 1) , (const, 0x274, 4)]
[(ram, 0x4f0a90, 4) INDIRECT (ram, 0x4f0a90, 4) , (const, 0x274, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x274, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x274, 4)]
[ ---  CBRANCH (ram, 0x1e0bab, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x260560, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8)]
[(ram, 0x4f0a90, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1e09bf, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f0a90, 4) MULTIEQUAL (ram, 0x4f0a90, 4) , (ram, 0x4f0a90, 4) , (ram, 0x4f0a90, 4) , (register, 0x0, 4)]
[(ram, 0x4f096a, 1) MULTIEQUAL (ram, 0x4f096a, 1) , (ram, 0x4f096a, 1) , (ram, 0x4f096a, 1) , (ram, 0x4f096a, 1)]
[(ram, 0x4efe68, 8) MULTIEQUAL (ram, 0x4efe68, 8) , (ram, 0x4efe68, 8) , (ram, 0x4efe68, 8) , (ram, 0x4efe68, 8)]
[(ram, 0x4edd0c, 1) MULTIEQUAL (ram, 0x4edd0c, 1) , (ram, 0x4edd0c, 1) , (ram, 0x4edd0c, 1) , (ram, 0x4edd0c, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000226, 8) COPY (ram, 0x4efe50, 8), (ram, 0x4efe50, 8) MULTIEQUAL (ram, 0x4efe50, 8) , (ram, 0x4efe50, 8) , (ram, 0x4efe50, 8) , (ram, 0x4efe50, 8)]
[ ---  CBRANCH (ram, 0x1e0c50, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25b, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000194, 8) , (unique, 0x100001bc, 8) , (const, 0x4b, 4) , (unique, 0x100001d4, 8), (unique, 0x100001d4, 8) COPY (const, 0x2bb4c0, 8), (unique, 0x100001bc, 8) COPY (const, 0x2b7344, 8), (unique, 0x10000194, 8) COPY (const, 0x2b52c8, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x25b, 4)]
[(ram, 0x4edd0c, 1) COPY (ram, 0x4edd0c, 1), (ram, 0x4edd0c, 1) INDIRECT (ram, 0x4edd0c, 1) , (const, 0x25b, 4)]
[(ram, 0x4efe50, 8) COPY (ram, 0x4efe50, 8), (ram, 0x4efe50, 8) INDIRECT (ram, 0x4efe50, 8) , (const, 0x25b, 4)]
[(ram, 0x4efe68, 8) COPY (ram, 0x4efe68, 8), (ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0x25b, 4)]
[(ram, 0x4f096a, 1) COPY (ram, 0x4f096a, 1), (ram, 0x4f096a, 1) INDIRECT (ram, 0x4f096a, 1) , (const, 0x25b, 4)]
[(ram, 0x4f0a90, 4) COPY (ram, 0x4f0a90, 4), (ram, 0x4f0a90, 4) INDIRECT (ram, 0x4f0a90, 4) , (const, 0x25b, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x75, 4)]
[(ram, 0x4edd0c, 1) INDIRECT (ram, 0x4edd0c, 1) , (const, 0x75, 4)]
[(ram, 0x4efe50, 8) INDIRECT (ram, 0x4efe50, 8) , (const, 0x75, 4)]
[(ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0x75, 4)]
[(ram, 0x4f096a, 1) INDIRECT (ram, 0x4f096a, 1) , (const, 0x75, 4)]
[(ram, 0x4f0a90, 4) INDIRECT (ram, 0x4f0a90, 4) , (const, 0x75, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x30, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1e0bd9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4efe50, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x215, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x215, 4)]
[(ram, 0x4edd0c, 1) INDIRECT (ram, 0x4edd0c, 1) , (const, 0x215, 4)]
[(ram, 0x4efe50, 8) INDIRECT (ram, 0x4efe50, 8) , (const, 0x215, 4)]
[(ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0x215, 4)]
[(ram, 0x4f096a, 1) INDIRECT (ram, 0x4f096a, 1) , (const, 0x215, 4)]
[(ram, 0x4f0a90, 4) INDIRECT (ram, 0x4f0a90, 4) , (const, 0x215, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x215, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x215, 4)]
[ ---  CBRANCH (ram, 0x1e0c11, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x248a10, 8) , (unique, 0x1000019c, 8) , (const, 0x0, 8) , (unique, 0x1000018c, 8) , (unique, 0x100001dc, 8), (unique, 0x100001dc, 8) PTRSUB (const, 0x0, 8) , (const, 0x4efe50, 8), (unique, 0x1000019c, 8) COPY (const, 0x2b52d2, 8), (unique, 0x1000018c, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3c79, 8)]
[(unique, 0x10000256, 8) COPY (ram, 0x4efe68, 8)]
[(unique, 0x10000276, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) COPY (ram, 0x4efe68, 8)]
[ ---  CBRANCH (ram, 0x1e0b75, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4efe68, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x245, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x245, 4)]
[(ram, 0x4edd0c, 1) INDIRECT (ram, 0x4edd0c, 1) , (const, 0x245, 4)]
[(ram, 0x4efe50, 8) INDIRECT (ram, 0x4efe50, 8) , (const, 0x245, 4)]
[(ram, 0x4f096a, 1) INDIRECT (ram, 0x4f096a, 1) , (const, 0x245, 4)]
[(ram, 0x4f0a90, 4) INDIRECT (ram, 0x4f0a90, 4) , (const, 0x245, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x245, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x245, 4)]
[(unique, 0x10000266, 8) COPY (ram, 0x4efe68, 8), (ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0x245, 4)]
[(unique, 0x10000286, 8) COPY (ram, 0x4efe50, 8), (ram, 0x4efe50, 8) COPY (ram, 0x4efe68, 8), (ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0x245, 4)]
[ ---  CBRANCH (ram, 0x1e0c07, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x248a10, 8) , (unique, 0x100001ac, 8) , (const, 0x0, 8) , (unique, 0x100001c4, 8) , (unique, 0x100001e4, 8), (unique, 0x100001e4, 8) PTRSUB (const, 0x0, 8) , (const, 0x4efe68, 8), (unique, 0x100001c4, 8) COPY (const, 0x2b9730, 8), (unique, 0x100001ac, 8) COPY (const, 0x2b7067, 8)]
[(ram, 0x4edd0c, 1) COPY (const, 0x1, 1)]
[(unique, 0x1000025e, 8) COPY (unique, 0x10000246, 8), (unique, 0x10000246, 8) COPY (ram, 0x4efe50, 8)]
[(unique, 0x1000027e, 8) COPY (ram, 0x4efe50, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (ram, 0x4efe68, 8) , (unique, 0x10000226, 8)]
[(unique, 0x1000024e, 8) COPY (unique, 0x10000226, 8)]
[(unique, 0x1000026e, 8) COPY (ram, 0x4efe50, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f0a90, 4) MULTIEQUAL (ram, 0x4f0a90, 4) , (ram, 0x4f0a90, 4) , (ram, 0x4f0a90, 4) , (ram, 0x4f0a90, 4)]
[(ram, 0x4f096a, 1) MULTIEQUAL (ram, 0x4f096a, 1) , (ram, 0x4f096a, 1) , (ram, 0x4f096a, 1) , (ram, 0x4f096a, 1)]
[(ram, 0x4efe68, 8) MULTIEQUAL (ram, 0x4efe68, 8) , (ram, 0x4efe68, 8) , (ram, 0x4efe68, 8) , (ram, 0x4efe68, 8)]
[(ram, 0x4edd0c, 1) MULTIEQUAL (register, 0x206, 1) , (ram, 0x4edd0c, 1) , (ram, 0x4edd0c, 1) , (ram, 0x4edd0c, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x1000024e, 8) , (unique, 0x10000256, 8) , (unique, 0x1000025e, 8) , (unique, 0x10000266, 8)]
[(ram, 0x4efe50, 8) COPY (unique, 0x1000028e, 8), (unique, 0x1000028e, 8) MULTIEQUAL (unique, 0x1000026e, 8) , (unique, 0x10000276, 8) , (unique, 0x1000027e, 8) , (unique, 0x10000286, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x1000022e, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4edd0c, 1) INDIRECT (ram, 0x4edd0c, 1) , (const, 0x8f, 4), (ram, 0x4edd0c, 1) MULTIEQUAL (ram, 0x4edd0c, 1) , (ram, 0x4edd0c, 1)]
[(ram, 0x4efe50, 8) INDIRECT (ram, 0x4efe50, 8) , (const, 0x8f, 4), (ram, 0x4efe50, 8) MULTIEQUAL (ram, 0x4efe50, 8) , (ram, 0x4efe50, 8)]
[(ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0x8f, 4), (ram, 0x4efe68, 8) MULTIEQUAL (ram, 0x4efe68, 8) , (ram, 0x4efe68, 8)]
[(ram, 0x4f096a, 1) INDIRECT (ram, 0x4f096a, 1) , (const, 0x8f, 4), (ram, 0x4f096a, 1) MULTIEQUAL (ram, 0x4f096a, 1) , (ram, 0x4f096a, 1)]
[(ram, 0x4f0a90, 4) INDIRECT (ram, 0x4f0a90, 4) , (const, 0x8f, 4), (ram, 0x4f0a90, 4) MULTIEQUAL (ram, 0x4f0a90, 4) , (ram, 0x4f0a90, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x8f, 4), (stack, 0xffffffffffffff90, 8) COPY (const, 0x1e0a17, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x8f, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1e0b4e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002a6, 8), (unique, 0x100002a6, 8) CALL (ram, 0x248f60, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x200, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x200, 4)]
[(ram, 0x4edd0c, 1) INDIRECT (ram, 0x4edd0c, 1) , (const, 0x200, 4)]
[(ram, 0x4efe50, 8) INDIRECT (ram, 0x4efe50, 8) , (const, 0x200, 4)]
[(ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0x200, 4)]
[(ram, 0x4f096a, 1) INDIRECT (ram, 0x4f096a, 1) , (const, 0x200, 4)]
[(ram, 0x4f0a90, 4) INDIRECT (ram, 0x4f0a90, 4) , (const, 0x200, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x200, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x200, 4)]
[(register, 0x0, 4) CALL (ram, 0x1e06c0, 8) , (register, 0xb8, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (unique, 0x3800, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (stack, 0xffffffffffffff90, 8)]
[ ---  BRANCH (ram, 0x1e0a60, 1)]
[ ---  CALL (ram, 0x266330, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcb, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xcb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa0, 4)]
[(ram, 0x4edd0c, 1) INDIRECT (ram, 0x4edd0c, 1) , (const, 0xcb, 4), (ram, 0x4edd0c, 1) INDIRECT (ram, 0x4edd0c, 1) , (const, 0xa0, 4)]
[(ram, 0x4efe50, 8) INDIRECT (ram, 0x4efe50, 8) , (const, 0xcb, 4), (ram, 0x4efe50, 8) INDIRECT (ram, 0x4efe50, 8) , (const, 0xa0, 4)]
[(ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0xcb, 4), (ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0xa0, 4)]
[(ram, 0x4f096a, 1) INDIRECT (ram, 0x4f096a, 1) , (const, 0xcb, 4), (ram, 0x4f096a, 1) INDIRECT (ram, 0x4f096a, 1) , (const, 0xa0, 4)]
[(ram, 0x4f0a90, 4) INDIRECT (ram, 0x4f0a90, 4) , (const, 0xcb, 4), (ram, 0x4f0a90, 4) INDIRECT (ram, 0x4f0a90, 4) , (const, 0xa0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xcb, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xa0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcb, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa0, 4)]
[(register, 0x0, 4) CALLIND (register, 0x0, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (unique, 0x3800, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x10, 8) , (stack, 0xffffffffffffff90, 8), (register, 0x10, 8) PTRADD (ram, 0x4eae68, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xa0, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa0, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa0, 4), (stack, 0xffffffffffffff90, 8) COPY (const, 0x1e0a2d, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f0a90, 4) MULTIEQUAL (ram, 0x4f0a90, 4) , (ram, 0x4f0a90, 4)]
[(ram, 0x4f096a, 1) MULTIEQUAL (ram, 0x4f096a, 1) , (ram, 0x4f096a, 1)]
[(ram, 0x4efe68, 8) MULTIEQUAL (ram, 0x4efe68, 8) , (ram, 0x4efe68, 8)]
[(ram, 0x4efe50, 8) MULTIEQUAL (ram, 0x4efe50, 8) , (ram, 0x4efe50, 8)]
[(ram, 0x4edd0c, 1) MULTIEQUAL (ram, 0x4edd0c, 1) , (ram, 0x4edd0c, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000185, 1) COPY (const, 0x0, 1)]
[(unique, 0x10000236, 8) COPY (unique, 0x1000022e, 8)]
[(unique, 0x1000023e, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f0a90, 4) MULTIEQUAL (ram, 0x4f0a90, 4) , (ram, 0x4f0a90, 4)]
[(ram, 0x4f096a, 1) MULTIEQUAL (ram, 0x4f096a, 1) , (ram, 0x4f096a, 1)]
[(ram, 0x4efe68, 8) MULTIEQUAL (ram, 0x4efe68, 8) , (ram, 0x4efe68, 8)]
[(ram, 0x4efe50, 8) MULTIEQUAL (ram, 0x4efe50, 8) , (ram, 0x4efe50, 8)]
[(ram, 0x4edd0c, 1) MULTIEQUAL (ram, 0x4edd0c, 1) , (ram, 0x4edd0c, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000183, 1) MULTIEQUAL (unique, 0x10000185, 1) , (unique, 0x10000184, 1)]
[ ---  CBRANCH (ram, 0x1e0aab, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0x100002ae, 8) , (unique, 0x100002b6, 8), (unique, 0x100002b6, 8) CAST (register, 0x80, 8), (unique, 0x100002ae, 8) CAST (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000236, 8) , (register, 0x38, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x1000023e, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1e0aa2, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x100002be, 8), (unique, 0x100002be, 8) CAST (unique, 0x1000022e, 8)]
[ ---  CBRANCH (ram, 0x1e0b38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1e0a99, 1)]
[ ---  CBRANCH (ram, 0x1e0a90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000022e, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1e0b38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x10000184, 1) COPY (const, 0x1, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e5, 4)]
[(ram, 0x4edd0c, 1) INDIRECT (ram, 0x4edd0c, 1) , (const, 0x1e5, 4)]
[(ram, 0x4efe50, 8) INDIRECT (ram, 0x4efe50, 8) , (const, 0x1e5, 4)]
[(ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0x1e5, 4)]
[(ram, 0x4f096a, 1) INDIRECT (ram, 0x4f096a, 1) , (const, 0x1e5, 4)]
[(ram, 0x4f0a90, 4) INDIRECT (ram, 0x4f0a90, 4) , (const, 0x1e5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_SUB (register, 0x80, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1e0a6e, 1)]
[ ---  CBRANCH (ram, 0x1e0a73, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (unique, 0x100002c6, 8) , (unique, 0x100002ce, 8), (unique, 0x100002ce, 8) CAST (register, 0x38, 8), (unique, 0x100002c6, 8) CAST (register, 0x80, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x10000296, 8) COPY (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x1e0c32, 1) , (unique, 0x10000183, 1)]
[(unique, 0x1000029e, 8) COPY (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x1e0ab4, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x10000296, 8) , (unique, 0x1000029e, 8)]
[ ---  CBRANCH (ram, 0x1e0c3f, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x4, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x0, 4) , (const, 0x2, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1be, 4)]
[ ---  CALL (ram, 0x189910, 8) , (unique, 0x100001cc, 8), (unique, 0x100001cc, 8) COPY (const, 0x2b9750, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1be, 4)]
[(ram, 0x4edd0c, 1) COPY (ram, 0x4edd0c, 1), (ram, 0x4edd0c, 1) INDIRECT (ram, 0x4edd0c, 1) , (const, 0x1be, 4)]
[(ram, 0x4efe50, 8) COPY (ram, 0x4efe50, 8), (ram, 0x4efe50, 8) INDIRECT (ram, 0x4efe50, 8) , (const, 0x1be, 4)]
[(ram, 0x4efe68, 8) COPY (ram, 0x4efe68, 8), (ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0x1be, 4)]
[(ram, 0x4f096a, 1) COPY (ram, 0x4f096a, 1), (ram, 0x4f096a, 1) INDIRECT (ram, 0x4f096a, 1) , (const, 0x1be, 4)]
[(ram, 0x4f0a90, 4) COPY (ram, 0x4f0a90, 4), (ram, 0x4f0a90, 4) INDIRECT (ram, 0x4f0a90, 4) , (const, 0x1be, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1e0ace, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4edd0c, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1e0add, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1e0ba8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002e2, 8), (unique, 0x100002e2, 8) INT_ADD (unique, 0x100002da, 8) , (unique, 0x1000020c, 8), (unique, 0x100002da, 8) CAST (register, 0xb8, 8), (unique, 0x1000020c, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x8, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100002d6, 4), (unique, 0x100002d6, 4) CAST (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1e0ba8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002ea, 8), (unique, 0x100002ea, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f0a90, 4) MULTIEQUAL (ram, 0x4f0a90, 4) , (ram, 0x4f0a90, 4) , (ram, 0x4f0a90, 4)]
[(ram, 0x4f096a, 1) MULTIEQUAL (ram, 0x4f096a, 1) , (ram, 0x4f096a, 1) , (ram, 0x4f096a, 1)]
[(ram, 0x4efe68, 8) MULTIEQUAL (ram, 0x4efe68, 8) , (ram, 0x4efe68, 8) , (ram, 0x4efe68, 8)]
[(ram, 0x4efe50, 8) MULTIEQUAL (ram, 0x4efe50, 8) , (ram, 0x4efe50, 8) , (ram, 0x4efe50, 8)]
[(ram, 0x4edd0c, 1) MULTIEQUAL (ram, 0x4edd0c, 1) , (ram, 0x4edd0c, 1) , (ram, 0x4edd0c, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) INT_AND (stack, 0xffffffffffffffb8, 8) , (const, 0xffffffff, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f0a90, 4) MULTIEQUAL (ram, 0x4f0a90, 4) , (ram, 0x4f0a90, 4)]
[(ram, 0x4f096a, 1) MULTIEQUAL (ram, 0x4f096a, 1) , (ram, 0x4f096a, 1)]
[(ram, 0x4efe68, 8) MULTIEQUAL (ram, 0x4efe68, 8) , (ram, 0x4efe68, 8)]
[(ram, 0x4efe50, 8) MULTIEQUAL (ram, 0x4efe50, 8) , (ram, 0x4efe50, 8)]
[(ram, 0x4edd0c, 1) MULTIEQUAL (ram, 0x4edd0c, 1) , (ram, 0x4edd0c, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1e0c4b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4edd0c, 1) COPY (ram, 0x4edd0c, 1)]
[(ram, 0x4efe50, 8) COPY (ram, 0x4efe50, 8)]
[(ram, 0x4efe68, 8) COPY (ram, 0x4efe68, 8)]
[(ram, 0x4f096a, 1) COPY (ram, 0x4f096a, 1)]
[(ram, 0x4f0a90, 4) COPY (ram, 0x4f0a90, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1b8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b8, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b8, 4)]
[(ram, 0x4edd0c, 1) COPY (ram, 0x4edd0c, 1), (ram, 0x4edd0c, 1) INDIRECT (ram, 0x4edd0c, 1) , (const, 0x1b8, 4)]
[(ram, 0x4efe50, 8) COPY (ram, 0x4efe50, 8), (ram, 0x4efe50, 8) INDIRECT (ram, 0x4efe50, 8) , (const, 0x1b8, 4)]
[(ram, 0x4efe68, 8) COPY (ram, 0x4efe68, 8), (ram, 0x4efe68, 8) INDIRECT (ram, 0x4efe68, 8) , (const, 0x1b8, 4)]
[(ram, 0x4f096a, 1) COPY (ram, 0x4f096a, 1), (ram, 0x4f096a, 1) INDIRECT (ram, 0x4f096a, 1) , (const, 0x1b8, 4)]
[(ram, 0x4f0a90, 4) COPY (ram, 0x4f0a90, 4), (ram, 0x4f0a90, 4) INDIRECT (ram, 0x4f0a90, 4) , (const, 0x1b8, 4)]
[ ---  RETURN (const, 0x1, 4)]
