[ ---  CBRANCH (ram, 0x201ad0, 1) , (unique, 0x18100, 1), (unique, 0x18100, 1) FLOAT_LESS (ram, 0x293b30, 10) , (register, 0x1000, 10), (register, 0x1000, 10) FLOAT_ABS (stack, 0x8, 10)]
[ ---  CBRANCH (ram, 0x201b50, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x38, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x201b50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 1)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[(ram, 0x293b30, 10) INDIRECT (ram, 0x293b30, 10) , (const, 0x32f, 4), (ram, 0x293b30, 10) INDIRECT (ram, 0x293b30, 10) , (const, 0x323, 4)]
[(ram, 0x293ca0, 10) INDIRECT (ram, 0x293ca0, 10) , (const, 0x32f, 4), (ram, 0x293ca0, 10) INDIRECT (ram, 0x293ca0, 10) , (const, 0x323, 4)]
[(ram, 0x294584, 4) INDIRECT (ram, 0x294584, 4) , (const, 0x32f, 4), (ram, 0x294584, 4) INDIRECT (ram, 0x294584, 4) , (const, 0x323, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x1, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x201b00, 1) , (unique, 0x18000, 1), (unique, 0x18000, 1) FLOAT_EQUAL (stack, 0x8, 10) , (unique, 0x5f380, 10), (unique, 0x5f380, 10) INT2FLOAT (const, 0x0, 4)]
[(unique, 0x100000f0, 10) COPY (stack, 0x8, 10)]
[ ---  CBRANCH (ram, 0x201bb0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) FLOAT_LESS (stack, 0x8, 10) , (unique, 0x5f380, 10), (unique, 0x5f380, 10) INT2FLOAT (const, 0x0, 4)]
[(register, 0x1000, 10) FLOAT_NEG (stack, 0x8, 10)]
[ ---  BRANCH (ram, 0x201a5f, 1)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[(unique, 0x100000dc, 10) COPY (register, 0x1000, 10), (register, 0x1000, 10) MULTIEQUAL (unique, 0x100000f0, 10) , (register, 0x1000, 10)]
[ ---  CBRANCH (ram, 0x201a88, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) FLOAT_LESS (register, 0x1000, 10) , (ram, 0x293ca0, 10), (register, 0x1000, 10) MULTIEQUAL (unique, 0x100000f0, 10) , (register, 0x1000, 10)]
[(register, 0x18, 4) COPY (const, 0xffffecbd, 4)]
[(unique, 0x100000e6, 10) COPY (register, 0x100a, 10), (register, 0x100a, 10) FLOAT_DIV (stack, 0x8, 10) , (ram, 0x293ca0, 10)]
[ ---  CBRANCH (ram, 0x201bc0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) FLOAT_LESS (register, 0x100a, 10) , (unique, 0x5f380, 10), (unique, 0x5f380, 10) INT2FLOAT (const, 0x0, 4), (register, 0x100a, 10) FLOAT_DIV (stack, 0x8, 10) , (ram, 0x293ca0, 10)]
[(register, 0x18, 4) COPY (const, 0xffffecbd, 4)]
[(unique, 0x100000d2, 10) COPY (register, 0x1000, 10), (register, 0x1000, 10) FLOAT_NEG (register, 0x100a, 10)]
[ ---  BRANCH (ram, 0x201a8a, 1)]
[(register, 0x100a, 10) MULTIEQUAL (register, 0x100a, 10) , (stack, 0x8, 10) , (register, 0x100a, 10)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x201b88, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) FLOAT_LESS (register, 0x1000, 10) , (unique, 0x5ea80, 10), (unique, 0x5ea80, 10) INT2FLOAT (const, 0x1, 4), (register, 0x1000, 10) MULTIEQUAL (unique, 0x100000d2, 10) , (unique, 0x100000dc, 10) , (unique, 0x100000e6, 10)]
[(register, 0x1000, 10) FLOAT2FLOAT (ram, 0x294584, 4)]
[(unique, 0x100000c8, 10) COPY (unique, 0x5ea80, 10)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x201b90, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) FLOAT_LESS (register, 0x1000, 10) , (unique, 0x5ea80, 10), (register, 0x1000, 10) FLOAT_MULT (register, 0x1000, 10) , (register, 0x1000, 10), (register, 0x1000, 10) FLOAT_MULT (register, 0x1000, 10) , (register, 0x1000, 10), (register, 0x1000, 10) MULTIEQUAL (unique, 0x100000c8, 10) , (register, 0x1000, 10)]
[(register, 0x100a, 10) FLOAT_MULT (register, 0x1000, 10) , (register, 0x100a, 10)]
[ ---  BRANCH (ram, 0x201b10, 1)]
[ ---  CBRANCH (ram, 0x201b08, 1) , (unique, 0x18100, 1), (unique, 0x18100, 1) FLOAT_LESSEQUAL (register, 0x1000, 10) , (register, 0x1000, 10), (register, 0x1000, 10) FLOAT2FLOAT (ram, 0x294584, 4)]
[(unique, 0x5ea80, 10) INT2FLOAT (const, 0x1, 4)]
[(register, 0x1000, 10) FLOAT2FLOAT (ram, 0x294584, 4)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x201ab0, 1) , (unique, 0x18100, 1), (unique, 0x18100, 1) FLOAT_LESSEQUAL (register, 0x1000, 10) , (register, 0x1000, 10), (register, 0x1000, 10) FLOAT_MULT (register, 0x100a, 10) , (register, 0x1000, 10), (register, 0x100a, 10) FLOAT_MULT (register, 0x100a, 10) , (register, 0x1000, 10), (register, 0x100a, 10) MULTIEQUAL (unique, 0x5ea80, 10) , (register, 0x100a, 10)]
[(register, 0x100a, 10) FLOAT_DIV (register, 0x100a, 10) , (register, 0x100a, 10)]
[ ---  BRANCH (ram, 0x201b10, 1)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x201b10, 1)]
[(register, 0x1000, 10) MULTIEQUAL (register, 0x100a, 10) , (register, 0x100a, 10) , (stack, 0x8, 10) , (register, 0x100a, 10)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x201b52, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x38, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x201b52, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 1)]
[(ram, 0x293ca0, 10) INDIRECT (ram, 0x293ca0, 10) , (const, 0x1b1, 4), (ram, 0x293ca0, 10) INDIRECT (ram, 0x293ca0, 10) , (const, 0x1af, 4)]
[(ram, 0x294584, 4) INDIRECT (ram, 0x294584, 4) , (const, 0x1b1, 4), (ram, 0x294584, 4) INDIRECT (ram, 0x294584, 4) , (const, 0x1af, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x201bcc, 1) , (unique, 0x18100, 1), (unique, 0x18100, 1) FLOAT_LESS (ram, 0x293b30, 10) , (register, 0x1000, 10), (register, 0x1000, 10) FLOAT_ABS (register, 0x1000, 10), (ram, 0x293b30, 10) INDIRECT (ram, 0x293b30, 10) , (const, 0x1b1, 4), (ram, 0x293b30, 10) INDIRECT (ram, 0x293b30, 10) , (const, 0x1af, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x201ae9, 1)]
[(register, 0x0, 4) INT_ZEXT (register, 0x1081, 1), (register, 0x1081, 1) FLOAT_LESS (register, 0x1000, 10) , (unique, 0x63a00, 10), (unique, 0x63a00, 10) INT2FLOAT (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x201ae9, 1)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[(ram, 0x293b30, 10) INDIRECT (ram, 0x293b30, 10) , (const, 0x1ff, 4), (ram, 0x293b30, 10) MULTIEQUAL (ram, 0x293b30, 10) , (ram, 0x293b30, 10) , (ram, 0x293b30, 10)]
[(ram, 0x293ca0, 10) INDIRECT (ram, 0x293ca0, 10) , (const, 0x1ff, 4), (ram, 0x293ca0, 10) MULTIEQUAL (ram, 0x293ca0, 10) , (ram, 0x293ca0, 10) , (ram, 0x293ca0, 10)]
[(ram, 0x294584, 4) INDIRECT (ram, 0x294584, 4) , (const, 0x1ff, 4), (ram, 0x294584, 4) MULTIEQUAL (ram, 0x294584, 4) , (ram, 0x294584, 4) , (ram, 0x294584, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x201b60, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (const, 0x15, 4) , (register, 0x38, 4)]
[(register, 0x38, 4) COPY (const, 0x15, 4)]
[(ram, 0x293b30, 10) INDIRECT (ram, 0x293b30, 10) , (const, 0x26d, 4)]
[(ram, 0x293ca0, 10) INDIRECT (ram, 0x293ca0, 10) , (const, 0x26d, 4)]
[(ram, 0x294584, 4) INDIRECT (ram, 0x294584, 4) , (const, 0x26d, 4)]
[ ---  CBRANCH (ram, 0x201aeb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x201740, 8) , (register, 0x1200, 8) , (register, 0x38, 4) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8), (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0xffffffff, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(ram, 0x293b30, 10) COPY (ram, 0x293b30, 10)]
[(ram, 0x293ca0, 10) COPY (ram, 0x293ca0, 10)]
[(ram, 0x294584, 4) COPY (ram, 0x294584, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(ram, 0x293b30, 10) COPY (ram, 0x293b30, 10), (ram, 0x293b30, 10) INDIRECT (ram, 0x293b30, 10) , (const, 0x206, 4), (ram, 0x293b30, 10) MULTIEQUAL (ram, 0x293b30, 10) , (ram, 0x293b30, 10)]
[(ram, 0x293ca0, 10) COPY (ram, 0x293ca0, 10), (ram, 0x293ca0, 10) INDIRECT (ram, 0x293ca0, 10) , (const, 0x206, 4), (ram, 0x293ca0, 10) MULTIEQUAL (ram, 0x293ca0, 10) , (ram, 0x293ca0, 10)]
[(ram, 0x294584, 4) COPY (ram, 0x294584, 4), (ram, 0x294584, 4) INDIRECT (ram, 0x294584, 4) , (const, 0x206, 4), (ram, 0x294584, 4) MULTIEQUAL (ram, 0x294584, 4) , (ram, 0x294584, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
