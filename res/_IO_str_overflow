[ ---  CBRANCH (ram, 0x18ff78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000155, 4) , (const, 0x0, 4), (unique, 0x10000155, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1900d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x400, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xc00, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x8, 4), (register, 0x8, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x800, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002c0, 8) , (unique, 0xbd80, 8), (unique, 0x100002c0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002b0, 8), (unique, 0x100002b0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002c8, 8) , (unique, 0xbd80, 8), (unique, 0x100002c8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002b8, 8), (unique, 0x100002b8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18ff9c, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002d0, 8), (unique, 0x100002d0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x19009f, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) INT_ADD (unique, 0x100000c1, 8) , (register, 0xb8, 8), (register, 0x30, 8) PTRADD (register, 0x10, 8) , (unique, 0x100000c9, 8) , (const, 0x1, 8), (unique, 0x100000c9, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f0, 8), (unique, 0x100002f0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0x100000c1, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0xffffffff, 4), (register, 0xb8, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100002e8, 8), (unique, 0x100002e8, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002e0, 8), (unique, 0x100002e0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1900ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1900ea, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0xb8, 8) , (unique, 0x3880, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x10000169, 8) , (const, 0x64, 8), (unique, 0x10000169, 8) INT_MULT (register, 0xb8, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1900ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000308, 8), (unique, 0x10000308, 8) CALLIND (unique, 0xbd80, 8) , (unique, 0x3880, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000300, 8), (unique, 0x10000300, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x38, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x1900bf, 1)]
[ ---  CBRANCH (ram, 0x190017, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8) , (register, 0xb8, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000310, 8), (unique, 0x10000310, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x3a, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000318, 8) , (const, 0x0, 8), (unique, 0x10000318, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x1211f0, 8) , (unique, 0x3b80, 8) , (const, 0x0, 4) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0x3880, 8) , (register, 0xb8, 8), (unique, 0x3b80, 8) CAST (unique, 0x10000328, 8), (unique, 0x10000328, 8) INT_ADD (unique, 0x10000320, 8) , (register, 0xb8, 8), (unique, 0x10000320, 8) CAST (register, 0x0, 8)]
[ ---  CALL (ram, 0x18e2a0, 8) , (register, 0x38, 8) , (register, 0x0, 8) , (unique, 0x3b80, 8) , (const, 0x1, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0x10000330, 8) , (unique, 0x3880, 8), (unique, 0x10000330, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000358, 8) , (register, 0x0, 8), (unique, 0x10000358, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003a8, 8) , (register, 0x0, 8), (unique, 0x100003a8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x10000380, 8), (unique, 0x10000380, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x10000360, 8), (unique, 0x10000360, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000338, 8), (unique, 0x10000338, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003b8, 8) , (register, 0x1200, 8), (unique, 0x100003b8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x1200, 8) INT_ADD (register, 0x1200, 8) , (unique, 0x10000388, 8), (unique, 0x10000388, 8) CAST (register, 0x0, 8), (register, 0x1200, 8) INT_SUB (unique, 0x10000179, 8) , (unique, 0x10000368, 8), (unique, 0x10000368, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000179, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000348, 8), (unique, 0x10000348, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003c0, 8) , (register, 0x1208, 8), (unique, 0x100003c0, 8) CAST (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x1208, 8) INT_ADD (register, 0x1208, 8) , (unique, 0x10000390, 8), (unique, 0x10000390, 8) CAST (register, 0x0, 8), (register, 0x1208, 8) INT_SUB (unique, 0x10000181, 8) , (unique, 0x10000370, 8), (unique, 0x10000370, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000181, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000350, 8), (unique, 0x10000350, 8) CAST (unique, 0x10000189, 8), (unique, 0x10000189, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003c8, 8) , (register, 0x10, 8), (unique, 0x100003c8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (register, 0x10, 8) CAST (unique, 0x100003a0, 8), (unique, 0x100003a0, 8) INT_ADD (register, 0x10, 8) , (unique, 0x10000398, 8), (unique, 0x10000398, 8) CAST (register, 0x0, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x10000378, 8), (unique, 0x10000378, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000340, 8), (unique, 0x10000340, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003d0, 8) , (unique, 0xbd80, 8), (unique, 0x100003d0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003b0, 8), (unique, 0x100003b0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1900b3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003d8, 8) , (unique, 0x3100, 8), (unique, 0x100003d8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x28, 1), (register, 0x28, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003e0, 8), (unique, 0x100003e0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1900bf, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003e8, 8), (unique, 0x100003e8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003f0, 8) , (register, 0x10, 8), (unique, 0x100003f0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (unique, 0x1000005d, 4), (unique, 0x1000005d, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0xffffffff, 4)]
