[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x18, 4)]
[ ---  CBRANCH (ram, 0x1c8c00, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x1cd4f0, 8) , (const, 0x3, 4)]
[(register, 0x38, 8) COPY (const, 0x40, 8)]
[(register, 0x0, 8) COPY (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x1c8b79, 1)]
[(unique, 0x100000a7, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x1c8b71, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (register, 0x0, 8) , (const, 0x41, 8)]
[(unique, 0x100000af, 8) COPY (register, 0x0, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100000a7, 8) , (unique, 0x100000af, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (register, 0x0, 8) , (const, 0x3c, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1c8bf4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000bf, 8), (unique, 0x100000bf, 8) CALL (ram, 0x11f8a0, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3680, 8) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x56, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x56, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x56, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (register, 0x0, 8) , (const, 0x56, 4)]
[(unique, 0x100000b7, 8) COPY (register, 0x28, 8), (register, 0x28, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1c87a0, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8)]
[ ---  BRANCH (ram, 0x1c8bd0, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x60, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x60, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x60, 4), (stack, 0xffffffffffffffd8, 8) MULTIEQUAL (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x60, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CBRANCH (ram, 0x1c8bb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1c8c10, 8) , (register, 0x28, 8) , (stack, 0xffffffffffffffe0, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100000b7, 8) , (register, 0x28, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CBRANCH (ram, 0x1c8be2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x16, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000c7, 8), (unique, 0x100000c7, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[(register, 0x28, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1c8be2, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x100000cf, 4), (unique, 0x100000cf, 4) CAST (register, 0x18, 4), (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x73, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x73, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x73, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
