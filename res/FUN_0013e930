[(ram, 0x2bbea0, 8) INDIRECT (ram, 0x2bbea0, 8) , (const, 0xf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x13e9e0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x7fff000000000000, 8), (register, 0x0, 8) INT_AND (stack, 0xffffffffffffffe0, 8) , (const, 0x7fffffffffffffff, 8), (stack, 0xffffffffffffffe0, 8) SUBPIECE (stack, 0xffffffffffffffd8, 16) , (const, 0x8, 8), (stack, 0xffffffffffffffd8, 16) INT_ADD (unique, 0x100000a1, 16) , (stack, 0xffffffffffffffd8, 12), (unique, 0x100000a1, 16) INT_LEFT (unique, 0x10000091, 16) , (const, 0x60, 16), (unique, 0x10000091, 16) INT_SEXT (unique, 0x100000bd, 4), (unique, 0x100000bd, 4) CAST (register, 0x120c, 4), (stack, 0xffffffffffffffd8, 12) INT_ADD (unique, 0x10000085, 12) , (register, 0x1200, 8), (unique, 0x10000085, 12) INT_LEFT (unique, 0x10000079, 12) , (const, 0x40, 12), (unique, 0x10000079, 12) INT_SEXT (unique, 0x100000b9, 4), (unique, 0x100000b9, 4) CAST (register, 0x1208, 4)]
[ ---  CBRANCH (ram, 0x13e9e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x1200, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x2956f0, 8) , (register, 0x1200, 8) , (register, 0x1200, 8)]
[(ram, 0x2bbea0, 8) COPY (ram, 0x2bbea0, 8), (ram, 0x2bbea0, 8) INDIRECT (ram, 0x2bbea0, 8) , (const, 0xbc, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0xffffc002, 4)]
[ ---  CBRANCH (ram, 0x13e9ab, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x1000000000000, 8)]
[(ram, 0x2bbea0, 8) INDIRECT (ram, 0x2bbea0, 8) , (const, 0x4b, 4)]
[ ---  CALL (ram, 0x297600, 8)]
[(register, 0x8, 4) COPY (const, 0xffffbf90, 4)]
[(register, 0x0, 8) INT_AND (register, 0x1208, 8) , (const, 0x7fffffffffffffff, 8), (register, 0x1208, 8) INDIRECT (const, 0x0, 8) , (const, 0x4b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) SUBPIECE (unique, 0x100000b1, 8) , (const, 0x0, 4), (unique, 0x100000b1, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x30, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(ram, 0x2bbea0, 8) COPY (ram, 0x2bbea0, 8), (ram, 0x2bbea0, 8) INDIRECT (ram, 0x2bbea0, 8) , (const, 0x8f, 4), (ram, 0x2bbea0, 8) MULTIEQUAL (ram, 0x2bbea0, 8) , (ram, 0x2bbea0, 8)]
[ ---  RETURN (const, 0x0, 8)]
