[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffb8, 16) INDIRECT (stack, 0xffffffffffffffb8, 16) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x2c, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002de, 8), (unique, 0x100002de, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x243600, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x2, 4)]
[(register, 0x80, 4) COPY (const, 0x0, 4)]
[(unique, 0x100001fd, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffb8, 16) INT_AND (stack, 0xffffffffffffffb8, 16) , (const, 0xffffffffffffff00, 16)]
[(unique, 0x1000025e, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x243644, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x30, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[(unique, 0x100001f9, 1) MULTIEQUAL (unique, 0x100001fd, 1) , (unique, 0x100001fc, 1) , (unique, 0x100001fa, 1)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000025e, 8) , (unique, 0x10000266, 8) , (unique, 0x1000026e, 8)]
[ ---  CBRANCH (ram, 0x243620, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000025e, 8) , (unique, 0x10000266, 8) , (unique, 0x1000026e, 8)]
[(register, 0x10, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4), (unique, 0x3400, 4) INT_ADD (unique, 0x3100, 4) , (unique, 0x3300, 4), (unique, 0x3300, 4) INT_MULT (register, 0x10, 4) , (const, 0x2, 4), (register, 0x10, 4) INT_ADD (unique, 0x100000fd, 4) , (unique, 0x10000101, 4), (unique, 0x100000fd, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0x10000101, 4) INT_MULT (unique, 0x10000105, 4) , (const, 0x4, 4), (unique, 0x10000105, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x243690, 1) , (unique, 0x100001f9, 1)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xff, 4) , (unique, 0x3400, 4)]
[(stack, 0xffffffffffffffb8, 16) INDIRECT (stack, 0xffffffffffffffb8, 16) , (const, 0x382, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x382, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x10, 1)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x4, 4) , (register, 0x80, 4), (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x1, 4)]
[(unique, 0x100001fb, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x24363f, 1)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xff, 4) , (unique, 0x3400, 4)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(stack, 0xffffffffffffffb8, 16) INDIRECT (stack, 0xffffffffffffffb8, 16) , (const, 0x360, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x360, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x10, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(unique, 0x100001fa, 1) MULTIEQUAL (unique, 0x100001f9, 1) , (unique, 0x100001fb, 1)]
[(unique, 0x1000026e, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x243674, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (unique, 0x100001f8, 1), (unique, 0x100001f8, 1) BOOL_NEGATE (unique, 0x100002e6, 1), (unique, 0x100002e6, 1) CAST (unique, 0x59000, 1), (unique, 0x59000, 1) INT_AND (register, 0x206, 1) , (unique, 0x100001f9, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x2e, 4)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x300, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100001fc, 1) COPY (const, 0x0, 1)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000266, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x243644, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x3, 4) , (register, 0x80, 4), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x32f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e7, 8) , (stack, 0xffffffffffffffb8, 4), (unique, 0x100002e7, 8) CAST (register, 0x10, 8), (stack, 0xffffffffffffffb8, 4) SUBPIECE (stack, 0xffffffffffffffb8, 16) , (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2434fe, 1)]
[ ---  CBRANCH (ram, 0x243520, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0xa, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x44, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002ef, 8) , (const, 0x61, 4), (unique, 0x100002ef, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffb8, 16) COPY (const, 0x0, 16)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x30, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x1000023e, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2436b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x2435ea, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x18, 8) , (register, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000023e, 8) , (unique, 0x3100, 8)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000246, 8) COPY (register, 0x18, 8)]
[(unique, 0x10000276, 8) COPY (register, 0x18, 8)]
[(unique, 0x1000029e, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x1000029e, 8) , (unique, 0x100002a6, 8) , (unique, 0x100002ae, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000276, 8) , (unique, 0x1000027e, 8) , (unique, 0x100002d6, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x30, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000246, 8) , (unique, 0x100002c6, 8) , (unique, 0x100002c6, 8)]
[(unique, 0x100002c6, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000246, 8) , (unique, 0x100002c6, 8) , (unique, 0x100002c6, 8)]
[ ---  CBRANCH (ram, 0x2436e0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100002f7, 1) , (const, 0xa, 1), (unique, 0x100002f7, 1) CAST (register, 0x80, 1), (register, 0x80, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000246, 8) , (unique, 0x100002c6, 8) , (unique, 0x100002c6, 8)]
[ ---  CBRANCH (ram, 0x2436f8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100002f8, 1) , (const, 0x6, 1), (unique, 0x100002f8, 1) CAST (register, 0x80, 1), (register, 0x80, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0x9f, 1)]
[(unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x57, 4)]
[ ---  BRANCH (ram, 0x243576, 1)]
[ ---  CBRANCH (ram, 0x243750, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100002f9, 1) , (const, 0x6, 1), (unique, 0x100002f9, 1) CAST (register, 0x8, 1), (register, 0x8, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0xbf, 1)]
[(unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x37, 4)]
[ ---  BRANCH (ram, 0x243576, 1)]
[(unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x30, 4)]
[ ---  CBRANCH (ram, 0x243700, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100002fa, 4) , (const, 0x0, 4), (unique, 0x100002fa, 4) CAST (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x243774, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x3a, 4)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x2e, 4)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x238, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x238, 4)]
[(stack, 0xffffffffffffffb8, 16) INDIRECT (stack, 0xffffffffffffffb8, 16) , (const, 0x238, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x238, 4)]
[(unique, 0x10000236, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x2435a6, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2430c0, 8) , (const, 0x0, 8) , (register, 0x38, 8) , (register, 0x0, 8) , (register, 0x88, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x2434fe, 1)]
[(unique, 0x100002d6, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x243720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb8, 16) INDIRECT (stack, 0xffffffffffffffb8, 16) , (const, 0x206, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (unique, 0x10000188, 1), (unique, 0x10000188, 1) SUBPIECE (unique, 0x10000226, 4) , (const, 0x0, 4), (unique, 0x10000226, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x8, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002ae, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x24355b, 1)]
[(unique, 0x100002be, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0xffff, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x4, 4)]
[(register, 0x90, 8) INT_ADD (register, 0x90, 8) , (const, 0x1, 8)]
[(unique, 0x1000028e, 8) COPY (register, 0x38, 8)]
[(unique, 0x100002b6, 8) COPY (register, 0xa8, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100002b6, 8) , (unique, 0x100002be, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0x1000027e, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000028e, 8) , (unique, 0x100002d6, 8)]
[(unique, 0x100002a6, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x24355b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x243758, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb8, 16) INDIRECT (stack, 0xffffffffffffffb8, 16) , (const, 0x1c3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (unique, 0x1000018a, 1), (unique, 0x1000018a, 1) SUBPIECE (unique, 0x1000022a, 4) , (const, 0x0, 4), (unique, 0x1000022a, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x8, 4)]
[(unique, 0x1000022e, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x2435a6, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x1000022e, 8) , (unique, 0x10000236, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x2435e7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x2435d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x2435f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x2434fe, 1)]
[ ---  CALL (ram, 0x1212b0, 8) , (register, 0xa0, 8) , (register, 0xa8, 8) , (unique, 0x1000030e, 8), (unique, 0x1000030e, 8) CAST (register, 0x18, 8), (register, 0xa0, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x100000b5, 8) , (const, 0x1, 8), (unique, 0x100000b5, 8) INT_2COMP (unique, 0x10000306, 8), (unique, 0x10000306, 8) CAST (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (unique, 0x100000ad, 8) , (const, 0x1, 8), (unique, 0x100000ad, 8) INT_2COMP (unique, 0x100002fe, 8), (unique, 0x100002fe, 8) CAST (register, 0xa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x194, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x17c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x194, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17c, 4)]
[(stack, 0xffffffffffffffb8, 16) INDIRECT (stack, 0xffffffffffffffb8, 16) , (const, 0x194, 4), (stack, 0xffffffffffffffb8, 16) INDIRECT (stack, 0xffffffffffffffb8, 16) , (const, 0x17c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x194, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x17c, 4)]
[ ---  CALL (ram, 0x1211f0, 8) , (register, 0xa8, 8) , (const, 0x0, 4) , (unique, 0x1000031e, 8), (unique, 0x1000031e, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0xa0, 8) , (unique, 0x100000cd, 8) , (const, 0x1, 8), (unique, 0x100000cd, 8) INT_2COMP (unique, 0x10000316, 8), (unique, 0x10000316, 8) CAST (register, 0xa8, 8), (register, 0xa0, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x100000b5, 8) , (const, 0x1, 8), (unique, 0x100000b5, 8) INT_2COMP (unique, 0x10000306, 8), (unique, 0x10000306, 8) CAST (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (unique, 0x100000ad, 8) , (const, 0x1, 8), (unique, 0x100000ad, 8) INT_2COMP (unique, 0x100002fe, 8), (unique, 0x100002fe, 8) CAST (register, 0xa8, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000326, 8) , (stack, 0xffffffffffffffb8, 4), (unique, 0x10000326, 8) CAST (register, 0x10, 8), (stack, 0xffffffffffffffb8, 4) SUBPIECE (stack, 0xffffffffffffffb8, 16) , (const, 0x0, 8), (stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001b4, 8) , (stack, 0xffffffffffffffbc, 4), (unique, 0x100001b4, 8) CAST (unique, 0x10000336, 8), (unique, 0x10000336, 8) INT_ADD (unique, 0x1000032e, 8) , (const, 0x4, 8), (unique, 0x1000032e, 8) CAST (register, 0x10, 8), (stack, 0xffffffffffffffbc, 4) SUBPIECE (stack, 0xffffffffffffffb8, 16) , (const, 0x4, 8), (stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001bc, 8) , (stack, 0xffffffffffffffc0, 4), (unique, 0x100001bc, 8) CAST (unique, 0x10000346, 8), (unique, 0x10000346, 8) INT_ADD (unique, 0x1000033e, 8) , (const, 0x8, 8), (unique, 0x1000033e, 8) CAST (register, 0x10, 8), (stack, 0xffffffffffffffc0, 4) SUBPIECE (stack, 0xffffffffffffffb8, 16) , (const, 0x8, 8), (stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x85b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x859, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x857, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x856, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c4, 8) , (stack, 0xffffffffffffffc4, 4), (unique, 0x100001c4, 8) CAST (unique, 0x10000356, 8), (unique, 0x10000356, 8) INT_ADD (unique, 0x1000034e, 8) , (const, 0xc, 8), (unique, 0x1000034e, 8) CAST (register, 0x10, 8), (stack, 0xffffffffffffffc4, 4) SUBPIECE (stack, 0xffffffffffffffb8, 16) , (const, 0xc, 8), (stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[ ---  BRANCH (ram, 0x2434fe, 1)]
[(stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2437a4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000035e, 8), (unique, 0x1000035e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffb8, 16) INDIRECT (stack, 0xffffffffffffffb8, 16) , (const, 0x6c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x6c, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x6c, 4)]
[ ---  RETURN (const, 0x1, 4)]
