[(unique, 0x10000380, 8) COPY (ram, 0x4c7c88, 8)]
[(unique, 0x100003e0, 8) COPY (unique, 0x10000470, 8), (unique, 0x10000470, 8) CAST (register, 0x38, 8)]
[(unique, 0x10000428, 8) COPY (ram, 0x4c7c88, 8)]
[ ---  CBRANCH (ram, 0x42208a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c88, 8) , (const, 0x0, 8)]
[(unique, 0x10000458, 8) COPY (ram, 0x4c5720, 8)]
[ ---  CBRANCH (ram, 0x4221c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5720, 8) , (const, 0x0, 8)]
[(unique, 0x10000438, 8) COPY (ram, 0x4c7c88, 8)]
[ ---  CBRANCH (ram, 0x42208a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (ram, 0x4c5718, 8) , (ram, 0x4c56e8, 8)]
[(register, 0x38, 8) INDIRECT (unique, 0x100003e0, 8) , (const, 0x5e8, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5e8, 4)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x5e8, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x5e8, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x5e8, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x5e8, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x5e8, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x5e8, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x5e8, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x5e8, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x5e8, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x5e8, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x5e8, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x5e8, 4)]
[ ---  CBRANCH (ram, 0x4222e8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALL (ram, 0x4584b0, 8)]
[(ram, 0x4c7c88, 8) COPY (const, 0x10, 8)]
[(register, 0x0, 8) COPY (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x42208a, 1)]
[(unique, 0x10000440, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (const, 0x3, 4)]
[ ---  BRANCH (ram, 0x42208a, 1)]
[(unique, 0x10000430, 8) COPY (ram, 0x4c7c88, 8), (ram, 0x4c7c88, 8) COPY (ram, 0x4c5720, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7c88, 8) MULTIEQUAL (unique, 0x10000428, 8) , (unique, 0x10000430, 8) , (unique, 0x10000438, 8) , (unique, 0x10000440, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100003e0, 8) , (unique, 0x100003e0, 8) , (unique, 0x100003e0, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x422248, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (ram, 0x4c56e8, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000380, 8) , (unique, 0x10000458, 8) , (unique, 0x10000458, 8) , (register, 0x0, 8) , (register, 0x0, 8), (ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(unique, 0x3100, 8) INT_ADD (ram, 0x4c56e8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x42225b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000478, 8), (unique, 0x10000478, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(register, 0x30, 8) INDIRECT (unique, 0x10000390, 8) , (const, 0x38c, 4), (unique, 0x10000390, 8) COPY (ram, 0x4c5708, 8)]
[(register, 0x38, 8) INDIRECT (unique, 0x3200, 8) , (const, 0x38c, 4), (unique, 0x3200, 8) CAST (unique, 0x10000480, 8), (unique, 0x10000480, 8) PTRADD (register, 0x38, 8) , (const, 0x119, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x38c, 4)]
[(ram, 0x4c56e8, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x38c, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x38c, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x38c, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x38c, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x38c, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x38c, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x38c, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x38c, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x38c, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x38c, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x38c, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x38c, 4)]
[ ---  CBRANCH (ram, 0x4224c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000488, 8), (unique, 0x10000488, 8) CALL (ram, 0x4218a0, 8) , (unique, 0x3200, 8) , (ram, 0x4c5708, 8), (unique, 0x3200, 8) CAST (unique, 0x10000480, 8), (unique, 0x10000480, 8) PTRADD (register, 0x38, 8) , (const, 0x119, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) INDIRECT (unique, 0x10000398, 8) , (const, 0x5ac, 4), (unique, 0x10000398, 8) COPY (ram, 0x4c5708, 8)]
[(register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x5ac, 4), (register, 0x38, 8) COPY (const, 0x8c8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5ac, 4)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x5ac, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x5ac, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x5ac, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x5ac, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x5ac, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x5ac, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x5ac, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x5ac, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x5ac, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x5ac, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x5ac, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x5ac, 4)]
[ ---  CBRANCH (ram, 0x422348, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000490, 8), (unique, 0x10000490, 8) CALL (ram, 0x4218a0, 8) , (const, 0x8c8, 8) , (ram, 0x4c5708, 8)]
[ ---  CBRANCH (ram, 0x4224f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000498, 8), (unique, 0x10000498, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c56e8, 8) COPY (ram, 0x4c56e8, 8), (ram, 0x4c56e8, 8) INT_SUB (ram, 0x4c56e8, 8) , (const, 0x1, 8)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8)]
[(ram, 0x4c5718, 8) COPY (ram, 0x4c5718, 8)]
[(ram, 0x4c5720, 8) COPY (ram, 0x4c5720, 8)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4)]
[(ram, 0x4c6010, 8) COPY (ram, 0x4c6010, 8)]
[(ram, 0x4c7c80, 8) COPY (ram, 0x4c7c80, 8)]
[(ram, 0x4c7c88, 8) COPY (ram, 0x4c7c88, 8)]
[(ram, 0x4c7ca0, 4) COPY (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x39d, 4), (ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x39d, 4), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x39d, 4), (ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x39d, 4), (ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x39d, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x39d, 4), (ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x39d, 4), (ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x39d, 4), (ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x39d, 4), (ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x39d, 4), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x39d, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x39d, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x10e, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000360, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x10, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000360, 8) , (unique, 0x10000368, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0xc01, 4), (ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0xc00, 4), (ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0xc01, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0xc00, 4), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0xc01, 4), (ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0xc00, 4), (ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0xc01, 4), (ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0xc00, 4), (ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0xc01, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0xc00, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0xc01, 4), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0xc00, 4), (ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0xc01, 4), (ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0xc00, 4), (ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0xc01, 4), (ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0xc00, 4), (ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0xc01, 4), (ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0xc00, 4), (ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0xc01, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0xc00, 4), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0xc01, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0xc00, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xc01, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xc00, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000020d, 8) , (register, 0x0, 8), (unique, 0x1000020d, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000360, 8) , (unique, 0x10000368, 8)]
[(unique, 0x10000368, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000360, 8) , (unique, 0x10000368, 8)]
[ ---  CBRANCH (ram, 0x422360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3200, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000360, 8) , (unique, 0x10000368, 8)]
[ ---  CBRANCH (ram, 0x422500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (unique, 0x100004a0, 8), (unique, 0x100004a0, 8) CAST (unique, 0x1000023e, 8), (unique, 0x1000023e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c7cb8, 8) COPY (const, 0x80, 8)]
[ ---  BRANCH (ram, 0x422389, 1)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x3c8, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x3c8, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x3c8, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x3c8, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x3c8, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x3c8, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x3c8, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x3c8, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x3c8, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x3c8, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x3c8, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x3c8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004b0, 8), (unique, 0x100004b0, 8) INT_ADD (unique, 0x100004a8, 8) , (const, 0x24, 8), (unique, 0x100004a8, 8) CAST (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004b8, 8) , (const, 0x0, 4), (unique, 0x100004b8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x117, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x1, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x114, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd80, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x116, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x3e4, 4), (ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x3e1, 4), (ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x3db, 4), (ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x3d4, 4), (ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x3e4, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x3e1, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x3db, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x3d4, 4), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x3e4, 4), (ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x3e1, 4), (ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x3db, 4), (ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x3d4, 4), (ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x3e4, 4), (ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x3e1, 4), (ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x3db, 4), (ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x3d4, 4), (ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x3e4, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x3e1, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x3db, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x3d4, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x3e4, 4), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x3e1, 4), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x3db, 4), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x3d4, 4), (ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x3e4, 4), (ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x3e1, 4), (ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x3db, 4), (ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x3d4, 4), (ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x3e4, 4), (ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x3e1, 4), (ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x3db, 4), (ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x3d4, 4), (ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x3e4, 4), (ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x3e1, 4), (ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x3db, 4), (ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x3d4, 4), (ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x3e4, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x3e1, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x3db, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x3d4, 4), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x3e4, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x3e1, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x3db, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x3d4, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x3e4, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x3e1, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x3db, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x3d4, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd80, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x115, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4), (register, 0x8, 4) INT_ADD (unique, 0x10000205, 4) , (const, 0x8c8, 4), (unique, 0x10000205, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4223c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4), (register, 0x8, 4) INT_ADD (unique, 0x10000205, 4) , (const, 0x8c8, 4), (unique, 0x10000205, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[(register, 0x10, 8) CAST (unique, 0x100004c8, 8), (unique, 0x100004c8, 8) INT_ADD (unique, 0x100004c0, 8) , (unique, 0x1000030e, 8), (unique, 0x100004c0, 8) CAST (unique, 0x3200, 8), (unique, 0x1000030e, 8) INT_SUB (const, 0x10, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x10, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3200, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ADD (unique, 0x100004d8, 8) , (unique, 0x10000316, 8), (unique, 0x100004d8, 8) CAST (register, 0x18, 8), (unique, 0x10000316, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100004d0, 8), (unique, 0x100004d0, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3200, 8) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004e0, 8), (unique, 0x100004e0, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x1000026e, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x1000026e, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004e8, 8) , (unique, 0x3100, 8), (unique, 0x100004e8, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000276, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x10000276, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x42c, 4), (ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x429, 4), (ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x422, 4), (ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x40d, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x42c, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x429, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x422, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x40d, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x42c, 4), (ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x429, 4), (ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x422, 4), (ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x40d, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x42c, 4), (ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x429, 4), (ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x422, 4), (ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x40d, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x42c, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x429, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x422, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x40d, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x42c, 4), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x429, 4), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x422, 4), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x40d, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x42c, 4), (ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x429, 4), (ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x422, 4), (ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x40d, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x42c, 4), (ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x429, 4), (ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x422, 4), (ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x40d, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x42c, 4), (ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x429, 4), (ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x422, 4), (ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x40d, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x42c, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x429, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x422, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x40d, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x42c, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x429, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x422, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x40d, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x42c, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x429, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x422, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x40d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004f0, 8) , (const, 0x0, 4), (unique, 0x100004f0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x422592, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004f8, 8), (unique, 0x100004f8, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7ca0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7ca0, 4) COPY (const, 0x1, 4)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x5a4, 4)]
[(register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x5a4, 4), (register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7ca0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5a4, 4)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x5a4, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x5a4, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x5a4, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x5a4, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x5a4, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x5a4, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x5a4, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x5a4, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x5a4, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x5a4, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x5a4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x5a4, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[ ---  BRANCH (ram, 0x42240f, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7ca0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7ca0, 4) COPY (const, 0x1, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x44f, 4), (ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x44f, 4), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x44f, 4), (ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x44f, 4), (ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x44f, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x44f, 4), (ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x44f, 4), (ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x44f, 4), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x44f, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x44f, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (ram, 0x4c6010, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x112, 8) , (const, 0x8, 8), (ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(unique, 0x10000354, 4) COPY (ram, 0x4c7ca0, 4), (ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x44f, 4), (ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[ ---  CBRANCH (ram, 0x422561, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000500, 8), (unique, 0x10000500, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7ca0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42243b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x10000354, 4)]
[(register, 0x30, 8) COPY (const, 0x81, 8)]
[(register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7ca0, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x42243b, 1)]
[(ram, 0x4c7ca0, 4) INT_ADD (ram, 0x4c7ca0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000468, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x4225b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000508, 8), (unique, 0x10000508, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7cb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7cb0, 4) COPY (const, 0x1, 4)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x558, 4)]
[(register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x558, 4), (register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7cb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x558, 4)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x558, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x558, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x558, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x558, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x558, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x558, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x558, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x558, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x558, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x558, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x558, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[(unique, 0x10000418, 8) COPY (ram, 0x4c6010, 8), (ram, 0x4c6010, 8) INDIRECT (unique, 0x10000468, 8) , (const, 0x558, 4)]
[ ---  BRANCH (ram, 0x422457, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7cb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7cb0, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (unique, 0x10000468, 8) , (unique, 0x10000468, 8) , (unique, 0x10000418, 8) , (unique, 0x10000468, 8)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x422477, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4225de, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000510, 8), (unique, 0x10000510, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x880, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x4aa, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x4aa, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x4aa, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x4aa, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x4aa, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x4aa, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x4aa, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x4aa, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x4aa, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x4aa, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x4aa, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x4aa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000518, 8), (unique, 0x10000518, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x880, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(unique, 0x1000035c, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[ ---  CBRANCH (ram, 0x422530, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000520, 8), (unique, 0x10000520, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c7cb0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42248e, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x1000035c, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x42248e, 1)]
[(ram, 0x4c7cb0, 4) INT_ADD (ram, 0x4c7cb0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[ ---  CBRANCH (ram, 0x422510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000528, 8), (unique, 0x10000528, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000530, 8), (unique, 0x10000530, 8) CAST (unique, 0x3100, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x507, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x507, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x507, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x507, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x507, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x507, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x507, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x507, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x507, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x507, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x507, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x507, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000538, 8) , (const, 0x1, 4), (unique, 0x10000538, 8) CAST (unique, 0x3100, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x50c, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x50c, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x50c, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x50c, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x50c, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x50c, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x50c, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x50c, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x50c, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x50c, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x50c, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x50c, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x4221b1, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000540, 8), (unique, 0x10000540, 8) CAST (unique, 0x3100, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x4e6, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x4e6, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x4e6, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x4e6, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x4e6, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x4e6, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x4e6, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x4e6, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x4e6, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x4e6, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x4e6, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x4e6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000548, 8) , (const, 0x1, 4), (unique, 0x10000548, 8) CAST (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x422220, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c80, 8) , (const, 0x0, 8)]
[(ram, 0x4c7c80, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  BRANCH (ram, 0x4220a7, 1)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(unique, 0x100003f8, 8) COPY (unique, 0x10000550, 8), (unique, 0x10000550, 8) CAST (ram, 0x4c7c80, 8), (ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[ ---  BRANCH (ram, 0x4220d1, 1)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100003f8, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4220b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000558, 8), (unique, 0x10000558, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000560, 8), (unique, 0x10000560, 8) CAST (register, 0xa0, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x348, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x348, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x348, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x348, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x348, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x348, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x348, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x348, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x348, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x348, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x348, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x348, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000568, 8) , (const, 0x1, 4), (unique, 0x10000568, 8) CAST (register, 0xa0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000570, 8), (unique, 0x10000570, 8) CAST (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x4220b5, 1)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(unique, 0x100003b8, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4220f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000578, 8), (unique, 0x10000578, 8) CAST (register, 0xa0, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x7f, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x7f, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x7f, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x7f, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x7f, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x7f, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x7f, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x7f, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x7f, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x7f, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x7f, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x7f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000580, 8) , (const, 0x1, 4), (unique, 0x10000580, 8) CAST (register, 0xa0, 8)]
[(unique, 0x100003a0, 8) COPY (register, 0x30, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[ ---  CBRANCH (ram, 0x4221f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x10000590, 8), (unique, 0x10000590, 8) CAST (ram, 0x4c7c80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000588, 8), (unique, 0x10000588, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (register, 0xa0, 8) , (const, 0x10e, 8) , (const, 0x8, 8), (ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(unique, 0x10000388, 8) COPY (unique, 0x10000598, 8), (unique, 0x10000598, 8) CAST (ram, 0x4c7c80, 8)]
[ ---  CBRANCH (ram, 0x422238, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (ram, 0x4c7c80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005a0, 8), (unique, 0x100005a0, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x870, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x4221fd, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000388, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x422308, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100005a8, 8), (unique, 0x100005a8, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005b0, 8), (unique, 0x100005b0, 8) CAST (register, 0x10, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x329, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x329, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x329, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x329, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x329, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x329, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x329, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x329, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x329, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x329, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x329, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x329, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005b8, 8) , (const, 0x1, 4), (unique, 0x100005b8, 8) CAST (register, 0x10, 8)]
[(unique, 0x100003a8, 8) COPY (register, 0x30, 8)]
[(register, 0x38, 8) INDIRECT (unique, 0x100003d8, 8) , (const, 0x32f, 4), (unique, 0x100003d8, 8) COPY (unique, 0x100005c0, 8), (unique, 0x100005c0, 8) CAST (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x32f, 4)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x32f, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x32f, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x32f, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x32f, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x32f, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x32f, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x32f, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x32f, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x32f, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x32f, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x32f, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x32f, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[(unique, 0x100003b0, 8) COPY (register, 0x30, 8), (register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x32f, 4)]
[ ---  BRANCH (ram, 0x4220f0, 1)]
[(unique, 0x100003c8, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005c8, 8), (unique, 0x100005c8, 8) CAST (register, 0x10, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x307, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x307, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x307, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x307, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x307, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x307, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x307, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x307, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x307, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x307, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x307, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x307, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005d0, 8) , (const, 0x1, 4), (unique, 0x100005d0, 8) CAST (register, 0x10, 8)]
[(unique, 0x100003c0, 8) COPY (register, 0x30, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0xa0, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100003a0, 8) , (unique, 0x100003a8, 8) , (unique, 0x100003b0, 8) , (unique, 0x100003b8, 8) , (unique, 0x100003c0, 8) , (unique, 0x100003c8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005d8, 8), (unique, 0x100005d8, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x1000025e, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x1000025e, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x422280, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100005e0, 8), (unique, 0x100005e0, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7cb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7cb0, 4) COPY (const, 0x1, 4)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x2ca, 4)]
[(register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x2ca, 4), (register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7cb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x2ca, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x2ca, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x2ca, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x2ca, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[ ---  BRANCH (ram, 0x422118, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7cb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7cb0, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x422138, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4225de, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100005e8, 8), (unique, 0x100005e8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x880, 8)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x189, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x189, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x189, 4), (ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x189, 4), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x189, 4), (ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x189, 4), (ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x189, 4), (ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x189, 4), (ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x189, 4), (ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x189, 4), (ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x189, 4), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x189, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x189, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  CALL (ram, 0x421c50, 8)]
[(unique, 0x10000350, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x189, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[ ---  CBRANCH (ram, 0x422640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0x100005f0, 8), (unique, 0x100005f0, 8) CAST (unique, 0x10000246, 8), (unique, 0x10000246, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8), (register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x189, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x4226c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100005f8, 8), (unique, 0x100005f8, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c57a0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x422652, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x10000350, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x422652, 1)]
[(unique, 0xbd00, 4) INT_ADD (ram, 0x4c57a0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x265, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x265, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x265, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x265, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x265, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (unique, 0xbd00, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x265, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x265, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x265, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x265, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x265, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x265, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x265, 4)]
[ ---  CBRANCH (ram, 0x422630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000608, 8) , (const, 0x0, 8), (unique, 0x10000608, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000600, 8), (unique, 0x10000600, 8) CALL (ram, 0x421c80, 8)]
[(ram, 0x4c56e8, 8) COPY (ram, 0x4c56e8, 8), (ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x27e, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x27e, 4)]
[(ram, 0x4c5718, 8) COPY (ram, 0x4c5718, 8), (ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x27e, 4)]
[(ram, 0x4c5720, 8) COPY (ram, 0x4c5720, 8), (ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x27e, 4)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x27e, 4)]
[(ram, 0x4c6010, 8) COPY (ram, 0x4c6010, 8), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x27e, 4)]
[(ram, 0x4c7c80, 8) COPY (ram, 0x4c7c80, 8), (ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x27e, 4)]
[(ram, 0x4c7c88, 8) COPY (ram, 0x4c7c88, 8), (ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x27e, 4)]
[(ram, 0x4c7ca0, 4) COPY (ram, 0x4c7ca0, 4), (ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x27e, 4)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x27e, 4)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x27e, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x27e, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000610, 8), (unique, 0x10000610, 8) CALL (ram, 0x422050, 8) , (register, 0x30, 8) , (unique, 0x1000024e, 8), (unique, 0x1000024e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x422670, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000618, 8), (unique, 0x10000618, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x225, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x225, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x225, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x225, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x225, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x225, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x225, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x225, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x225, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x225, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x225, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x225, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x422611, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x422611, 1)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x1b8, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x1b8, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x1b8, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x1b8, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x1b8, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x1b8, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x1b8, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x1b8, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x1b8, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x1b8, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x1b8, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x1b8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[ ---  CBRANCH (ram, 0x422690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000620, 8), (unique, 0x10000620, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c57a0, 4) , (const, 0x0, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x422630, 1) , (unique, 0x10000224, 1), (unique, 0x10000224, 1) BOOL_NEGATE (register, 0x206, 1)]
[(stack, 0xffffffffffffffc8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x213, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x213, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x213, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x213, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x213, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x213, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x213, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x213, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x213, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x213, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x213, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x213, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000256, 8), (unique, 0x10000256, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  BRANCH (ram, 0x422630, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c57a0, 4) , (const, 0x0, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c56e8, 8) COPY (ram, 0x4c56e8, 8), (ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5718, 8) COPY (ram, 0x4c5718, 8), (ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5720, 8) COPY (ram, 0x4c5720, 8), (ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c6010, 8) COPY (ram, 0x4c6010, 8), (ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c7c80, 8) COPY (ram, 0x4c7c80, 8), (ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c7c88, 8) COPY (ram, 0x4c7c88, 8), (ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7ca0, 4) COPY (ram, 0x4c7ca0, 4), (ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (unique, 0x10000628, 8), (unique, 0x10000628, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffffc8, 8) , (register, 0x0, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0xd4, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0xd4, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0xd4, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0xd4, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0xd4, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0xd4, 4)]
[(ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0xd4, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0xd4, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0xd4, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0xd4, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0xd4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xd4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000630, 8), (unique, 0x10000630, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x880, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7c80, 8) MULTIEQUAL (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7ca8, 8)]
[(unique, 0x10000448, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(unique, 0x1000033f, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x3200, 8)]
[ ---  CBRANCH (ram, 0x42215f, 1) , (unique, 0x10000347, 1), (unique, 0x10000347, 1) INT_NOTEQUAL (unique, 0x10000348, 8) , (const, 0x0, 8), (unique, 0x10000348, 8) MULTIEQUAL (unique, 0x10000448, 8) , (unique, 0x10000450, 8)]
[ ---  CBRANCH (ram, 0x4224a9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x10000348, 8) , (const, 0x110, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x1000022e, 8) , (unique, 0x10000226, 8) , (const, 0x31c, 8) , (unique, 0x10000236, 8), (unique, 0x10000236, 8) COPY (const, 0x49c320, 8), (unique, 0x1000022e, 8) COPY (const, 0x49b201, 8), (unique, 0x10000226, 8) COPY (const, 0x49b1a1, 8)]
[(ram, 0x4c56e8, 8) COPY (ram, 0x4c56e8, 8), (ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x184, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x184, 4)]
[(ram, 0x4c5718, 8) COPY (ram, 0x4c5718, 8), (ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x184, 4)]
[(ram, 0x4c5720, 8) COPY (ram, 0x4c5720, 8), (ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x184, 4)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x184, 4)]
[(ram, 0x4c6010, 8) COPY (ram, 0x4c6010, 8), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x184, 4)]
[(ram, 0x4c7c80, 8) COPY (ram, 0x4c7c80, 8), (ram, 0x4c7c80, 8) INDIRECT (ram, 0x4c7c80, 8) , (const, 0x184, 4)]
[(ram, 0x4c7c88, 8) COPY (ram, 0x4c7c88, 8), (ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x184, 4)]
[(ram, 0x4c7ca0, 4) COPY (ram, 0x4c7ca0, 4), (ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x184, 4)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x184, 4)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x184, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x184, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000638, 8), (unique, 0x10000638, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x10000348, 8) , (const, 0x10f, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x422150, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000348, 8) , (register, 0xa0, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x170, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x170, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x170, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x170, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x170, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x170, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x170, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x170, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x170, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x170, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x170, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000033f, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3200, 8) CAST (unique, 0x10000640, 8), (unique, 0x10000640, 8) PTRADD (unique, 0x10000348, 8) , (const, 0x10f, 8) , (const, 0x8, 8)]
[(unique, 0x10000450, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0xea, 4), (ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0xea, 4), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0xea, 4), (ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0xea, 4), (ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0xea, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0xea, 4), (ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0xea, 4), (ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0xea, 4), (ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0xea, 4), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xea, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (register, 0xa0, 8) , (const, 0x110, 8) , (const, 0x8, 8)]
[(unique, 0x10000358, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0xea, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[ ---  CBRANCH (ram, 0x4222b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000648, 8), (unique, 0x10000648, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c7cb0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42219c, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x10000358, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x42219c, 1)]
[(ram, 0x4c7cb0, 4) INT_ADD (ram, 0x4c7cb0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c56e8, 8) INDIRECT (ram, 0x4c56e8, 8) , (const, 0x10e, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x10e, 4)]
[(ram, 0x4c5718, 8) INDIRECT (ram, 0x4c5718, 8) , (const, 0x10e, 4)]
[(ram, 0x4c5720, 8) INDIRECT (ram, 0x4c5720, 8) , (const, 0x10e, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x10e, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x10e, 4)]
[(ram, 0x4c7c88, 8) INDIRECT (ram, 0x4c7c88, 8) , (const, 0x10e, 4)]
[(ram, 0x4c7ca0, 4) INDIRECT (ram, 0x4c7ca0, 4) , (const, 0x10e, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x10e, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x10e, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x10e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000650, 8) , (register, 0xa0, 8), (unique, 0x10000650, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000266, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x10000266, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000658, 8), (unique, 0x10000658, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (register, 0xa0, 8) , (const, 0x10e, 8) , (const, 0x8, 8)]
[(ram, 0x4c56e8, 8) COPY (ram, 0x4c56e8, 8), (ram, 0x4c56e8, 8) MULTIEQUAL (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8) , (ram, 0x4c56e8, 8)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5718, 8) COPY (ram, 0x4c5718, 8), (ram, 0x4c5718, 8) MULTIEQUAL (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8) , (ram, 0x4c5718, 8)]
[(ram, 0x4c5720, 8) COPY (ram, 0x4c5720, 8), (ram, 0x4c5720, 8) MULTIEQUAL (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8) , (ram, 0x4c5720, 8)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c6010, 8) COPY (ram, 0x4c6010, 8), (ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c7c80, 8) COPY (ram, 0x4c7c80, 8), (ram, 0x4c7c80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8) , (ram, 0x4c7c80, 8)]
[(ram, 0x4c7c88, 8) COPY (ram, 0x4c7c88, 8), (ram, 0x4c7c88, 8) MULTIEQUAL (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8) , (ram, 0x4c7c88, 8)]
[(ram, 0x4c7ca0, 4) COPY (ram, 0x4c7ca0, 4), (ram, 0x4c7ca0, 4) MULTIEQUAL (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4) , (ram, 0x4c7ca0, 4)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
