[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x3b, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x3b, 4)]
[(stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x3b, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x3b, 4), (stack, 0xffffffffffffff60, 8) COPY (const, 0x0, 8)]
[ ---  CALL (ram, 0x17ba60, 8) , (register, 0x20, 8) , (const, 0x8000, 8) , (const, 0xffffffff, 8) , (const, 0x0, 8) , (const, 0x0, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed8, 8)]
[(stack, 0xffffffffffffffb0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c1140, 8)]
[ ---  CBRANCH (ram, 0x176c10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x18, 4), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0x1000009f, 4) , (unique, 0x100000a7, 4), (unique, 0x1000009f, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x100000a7, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001a2, 8), (unique, 0x100001a2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000019a, 8), (unique, 0x1000019a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x20, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000192, 8), (unique, 0x10000192, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) INT_AND (register, 0x18, 8) , (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x176c18, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x100001aa, 8) , (const, 0x40, 8), (unique, 0x100001aa, 8) CAST (register, 0x18, 8)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x13e, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x13e, 4)]
[(stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x13e, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x13e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x13e, 4)]
[ ---  CALL (ram, 0x1888c0, 8) , (register, 0x38, 8) , (const, 0x40, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x100001c2, 4), (unique, 0x100001c2, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x8, 4), (register, 0x8, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ba, 8), (unique, 0x100001ba, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x20, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001b2, 8), (unique, 0x100001b2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x176b88, 1)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff08, 8) MULTIEQUAL (stack, 0xffffffffffffff08, 8) , (stack, 0xffffffffffffff08, 8)]
[(stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8)]
[ ---  CBRANCH (ram, 0x176c71, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x137, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x137, 4)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x10000130, 8) , (unique, 0x10000128, 8) , (const, 0x97, 4) , (unique, 0x10000158, 8), (unique, 0x10000158, 8) COPY (const, 0x293080, 8), (unique, 0x10000130, 8) COPY (const, 0x28d36a, 8), (unique, 0x10000128, 8) COPY (const, 0x28d356, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001c6, 8), (unique, 0x100001c6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x10000182, 8) COPY (register, 0x10, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000182, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CALL (ram, 0x17cf00, 8) , (register, 0x20, 8) , (register, 0x30, 8) , (register, 0xb8, 8), (register, 0xb8, 8) CAST (unique, 0x100001ce, 8), (unique, 0x100001ce, 8) INT_SEXT (register, 0x10, 4), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x176c52, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (stack, 0xffffffffffffff08, 8) , (unique, 0x100000bf, 8) , (const, 0x1, 8), (unique, 0x100000bf, 8) INT_2COMP (unique, 0x100001d6, 8), (unique, 0x100001d6, 8) CAST (stack, 0xfffffffffffffef8, 8), (stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x8a, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x8a, 4), (register, 0xb8, 8) CAST (unique, 0x100001ce, 8), (unique, 0x100001ce, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x0, 4), (stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8), (stack, 0xffffffffffffff08, 8) MULTIEQUAL (stack, 0xffffffffffffff08, 8) , (stack, 0xffffffffffffff08, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x12e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x12e, 4)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x10000138, 8) , (unique, 0x10000120, 8) , (const, 0x9f, 4) , (unique, 0x10000150, 8), (unique, 0x10000150, 8) COPY (const, 0x293080, 8), (unique, 0x10000138, 8) COPY (const, 0x290560, 8), (unique, 0x10000120, 8) COPY (const, 0x28d356, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x176c33, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff00, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (stack, 0xfffffffffffffef8, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100001ee, 4), (unique, 0x100001ee, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0x1000010f, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000010f, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001de, 8), (unique, 0x100001de, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001f2, 8) , (register, 0x18, 8), (unique, 0x100001f2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (unique, 0xbd80, 8), (register, 0x18, 8) INT_SEXT (register, 0x18, 4), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x1000018a, 8) , (const, 0xe5, 4), (unique, 0x1000018a, 8) COPY (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000212, 8) , (unique, 0xbd80, 8), (unique, 0x10000212, 8) CAST (unique, 0x3100, 8), (unique, 0xbd80, 8) PTRADD (stack, 0xffffffffffffff00, 8) , (unique, 0x1000020a, 8) , (const, 0x1, 8), (unique, 0x1000020a, 8) CAST (unique, 0x10000178, 8), (unique, 0x10000178, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100000e3, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000202, 8), (unique, 0x10000202, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x1, 8), (unique, 0x100000e3, 8) INT_2COMP (unique, 0x100001fa, 8), (unique, 0x100001fa, 8) CAST (stack, 0xffffffffffffff08, 8), (stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0xe5, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x14d130, 8) , (register, 0x20, 8) , (register, 0x30, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x125, 4)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x10000140, 8) , (unique, 0x10000118, 8) , (const, 0xa2, 4) , (unique, 0x10000148, 8), (unique, 0x10000148, 8) COPY (const, 0x293080, 8), (unique, 0x10000140, 8) COPY (const, 0x2905b8, 8), (unique, 0x10000118, 8) COPY (const, 0x28d356, 8)]
[ ---  RETURN (const, 0x1, 4)]
