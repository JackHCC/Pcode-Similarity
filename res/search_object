[ ---  CBRANCH (ram, 0x496480, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002bf, 1) , (const, 0x0, 1), (unique, 0x100002bf, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005c7, 8), (unique, 0x100005c7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x496750, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8), (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4), (register, 0xa0, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0xb, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005cf, 8), (unique, 0x100005cf, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100005d7, 8), (unique, 0x100005d7, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4965d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002c1, 1) , (const, 0x0, 1), (unique, 0x100002c1, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x6d5, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x6d5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6d5, 4)]
[ ---  CBRANCH (ram, 0x4964da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x496160, 8)]
[ ---  CBRANCH (ram, 0x4964cc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x32f, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x32f, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x32f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x4964b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x496160, 8) , (register, 0x38, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x7f8, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100005df, 8), (unique, 0x100005df, 8) CAST (unique, 0x100002f7, 8), (unique, 0x100002f7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4b61f0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x49660a, 1)]
[(register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x496a80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x496ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58f00, 8) , (const, 0x0, 8), (unique, 0x58f00, 8) INT_AND (stack, 0xffffffffffffff88, 8) , (const, 0xffffffffffe00000, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005ef, 8) , (register, 0x0, 4), (unique, 0x100005ef, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x7ff, 4), (register, 0x10, 4) INT_LEFT (stack, 0xffffffffffffff88, 4) , (const, 0xb, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005e7, 8), (unique, 0x100005e7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (stack, 0xffffffffffffff88, 4) SUBPIECE (stack, 0xffffffffffffff88, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x4965fe, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005ff, 8) , (unique, 0xbc80, 4), (unique, 0x100005ff, 8) CAST (unique, 0x3100, 8), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x7ff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005f7, 8), (unique, 0x100005f7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x496750, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff88, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x399, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x399, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x49660a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000607, 8), (unique, 0x10000607, 8) CALL (ram, 0x426550, 8) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (stack, 0xffffffffffffff88, 8) , (const, 0x8, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (register, 0xa0, 8) , (stack, 0xffffffffffffff88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3ad, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (register, 0x0, 8) , (const, 0x3ad, 4)]
[ ---  CBRANCH (ram, 0x496795, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (unique, 0x3580, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000617, 8), (unique, 0x10000617, 8) INT_ADD (unique, 0x1000060f, 8) , (const, 0x8, 8), (unique, 0x1000060f, 8) CAST (register, 0x0, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000061f, 8), (unique, 0x1000061f, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x496a90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000627, 8), (unique, 0x10000627, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x68a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x68a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (register, 0x0, 8) , (const, 0x68a, 4)]
[ ---  CALL (ram, 0x4962b0, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x4967d8, 1)]
[ ---  CBRANCH (ram, 0x4017da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3ea, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3ea, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ea, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x4962b0, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x4967c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10000537, 8) COPY (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000527, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x4967f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x4017da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff88, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x28, 8) PTRSUB (const, 0x0, 8) , (const, 0x4960c0, 8)]
[ ---  CBRANCH (ram, 0x49681d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000062f, 8), (unique, 0x1000062f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x28, 8) PTRSUB (const, 0x0, 8) , (const, 0x4954d0, 8)]
[ ---  CBRANCH (ram, 0x49681d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58d00, 2) , (const, 0x0, 2), (unique, 0x58d00, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x7f8, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000637, 8), (unique, 0x10000637, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x28, 8) PTRSUB (const, 0x0, 8) , (const, 0x4958f0, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x496ab0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x496b15, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x49694a, 1)]
[(unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x8, 8), (unique, 0x3480, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(register, 0xa0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8120, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0xb8, 8) COPY (const, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xa0, 8), (unique, 0x3400, 8) CAST (unique, 0x10000647, 8), (unique, 0x10000647, 8) INT_ADD (unique, 0x1000063f, 8) , (register, 0xb8, 8), (unique, 0x1000063f, 8) CAST (unique, 0x10000537, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000657, 8), (unique, 0x10000657, 8) INT_ADD (unique, 0x1000064f, 8) , (register, 0xb8, 8), (unique, 0x1000064f, 8) CAST (unique, 0x10000527, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x496900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3580, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x496922, 1)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000527, 8) , (unique, 0x10000417, 8) , (const, 0x8, 8), (unique, 0x10000417, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x496910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000667, 8), (unique, 0x10000667, 8) INT_ADD (unique, 0x1000065f, 8) , (unique, 0x10000407, 8), (unique, 0x1000065f, 8) CAST (unique, 0x10000537, 8), (unique, 0x10000407, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x10, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000527, 8) , (unique, 0x100003f7, 8) , (const, 0x8, 8), (unique, 0x100003f7, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000677, 8), (unique, 0x10000677, 8) INT_ADD (unique, 0x1000066f, 8) , (unique, 0x10000427, 8), (unique, 0x1000066f, 8) CAST (unique, 0x10000537, 8), (unique, 0x10000427, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x10, 8), (unique, 0x3900, 8) INT_MULT (register, 0x30, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x496919, 1)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x496940, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000527, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) CAST (unique, 0x10000687, 8), (unique, 0x10000687, 8) INT_ADD (unique, 0x1000067f, 8) , (const, 0x8, 8), (unique, 0x1000067f, 8) CAST (unique, 0x10000537, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4017da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff88, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000697, 8), (unique, 0x10000697, 8) INT_ADD (unique, 0x1000068f, 8) , (const, 0x8, 8), (unique, 0x1000068f, 8) CAST (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x655, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x655, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x4011c4, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x560, 4)]
[ ---  CALL (ram, 0x4955c0, 8) , (register, 0x38, 8) , (register, 0x28, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000053f, 8) COPY (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x560, 4)]
[(unique, 0x1000052f, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x560, 4)]
[ ---  CBRANCH (ram, 0x496a40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006a7, 8), (unique, 0x100006a7, 8) INT_ADD (unique, 0x1000069f, 8) , (const, 0x8, 8), (unique, 0x1000069f, 8) CAST (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x560, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x100006b7, 8), (unique, 0x100006b7, 8) INT_ADD (unique, 0x100006af, 8) , (unique, 0x3300, 8), (unique, 0x100006af, 8) CAST (unique, 0x1000053f, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x496af3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000052f, 8) , (unique, 0x100004ef, 8) , (const, 0x8, 8), (unique, 0x100004ef, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x496a28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[(unique, 0x100005bf, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8)]
[ ---  BRANCH (ram, 0x496a00, 1)]
[(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_SUB (register, 0x18, 8) , (const, 0x1, 8)]
[(unique, 0x10000587, 8) COPY (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x4969e3, 1)]
[(unique, 0x3100, 8) INT_SUB (register, 0xb0, 8) , (const, 0x1, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000587, 8) , (unique, 0x1000058f, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5aa, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x5aa, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5aa, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000577, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x28, 8)]
[(unique, 0x100005af, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x4969d0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLIND (register, 0x28, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000052f, 8) , (unique, 0x10000487, 8) , (const, 0x8, 8), (unique, 0x10000487, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000587, 8) , (unique, 0x1000058f, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000052f, 8) , (unique, 0x1000046f, 8) , (const, 0x8, 8), (unique, 0x1000046f, 8) INT_ADD (register, 0x28, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000052f, 8) , (unique, 0x10000457, 8) , (const, 0x8, 8), (unique, 0x10000457, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x1000058f, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x496a18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000057f, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x496a00, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0xb8, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000052f, 8) , (unique, 0x1000049f, 8) , (const, 0x8, 8), (unique, 0x1000049f, 8) INT_ADD (register, 0x28, 8) , (const, 0x2, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000577, 8) , (unique, 0x1000057f, 8) , (unique, 0x3100, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x496a28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff88, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x100005af, 8) , (unique, 0x100005af, 8) , (unique, 0x100005bf, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000052f, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006c7, 8), (unique, 0x100006c7, 8) INT_ADD (unique, 0x100006bf, 8) , (const, 0x8, 8), (unique, 0x100006bf, 8) CAST (unique, 0x1000053f, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5f1, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x5f1, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5f1, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x426b40, 8) , (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x4968f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3400, 8) , (unique, 0x100002ff, 8), (unique, 0x100002ff, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8120, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x494, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x494, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x494, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x4968a0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALLIND (register, 0x28, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100006d7, 8), (unique, 0x100006d7, 8) INT_ADD (unique, 0x100006cf, 8) , (unique, 0x100003e7, 8), (unique, 0x100006cf, 8) CAST (unique, 0x10000527, 8), (unique, 0x100003e7, 8) INT_ADD (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000707, 8), (unique, 0x10000707, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x10, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100006f7, 8) , (register, 0xa0, 8), (unique, 0x100006f7, 8) CAST (unique, 0x10000537, 8), (register, 0xa0, 8) CAST (unique, 0x100006ef, 8), (unique, 0x100006ef, 8) INT_SUB (unique, 0x100006df, 8) , (unique, 0x100006e7, 8), (unique, 0x100006e7, 8) CAST (unique, 0x3100, 8), (unique, 0x100006df, 8) CAST (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x4968e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x10000307, 8), (unique, 0x10000307, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8120, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006ff, 8), (unique, 0x100006ff, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x10, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100006f7, 8) , (register, 0xa0, 8), (unique, 0x100006f7, 8) CAST (unique, 0x10000537, 8), (register, 0xa0, 8) CAST (unique, 0x100006ef, 8), (unique, 0x100006ef, 8) INT_SUB (unique, 0x100006df, 8) , (unique, 0x100006e7, 8), (unique, 0x100006e7, 8) CAST (unique, 0x3100, 8), (unique, 0x100006df, 8) CAST (register, 0xa0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8120, 8)]
[ ---  BRANCH (ram, 0x4968dc, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x496870, 1)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x681, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x681, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x681, 4)]
[ ---  CALL (ram, 0x4955c0, 8) , (register, 0x38, 8) , (register, 0x28, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x496a4a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffb8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000717, 8) , (unique, 0xbb00, 1), (unique, 0x10000717, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000070f, 8), (unique, 0x1000070f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000071f, 8), (unique, 0x1000071f, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x49660a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x496460, 1) , (unique, 0x10000521, 1), (unique, 0x10000521, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x200, 1) INT_LESSEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000072f, 8), (unique, 0x1000072f, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x496402, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002c0, 1) , (const, 0x0, 1), (unique, 0x100002c0, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000727, 8), (unique, 0x10000727, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x496a68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002c2, 1) , (const, 0x0, 1), (unique, 0x100002c2, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x329, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x329, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x495ab0, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100004ff, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8)]
[(unique, 0x10000510, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x10000518, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x496460, 1) , (unique, 0x1000050f, 1), (unique, 0x1000050f, 1) INT_EQUAL (unique, 0x10000507, 8) , (const, 0x0, 8), (unique, 0x10000507, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000510, 8) , (const, 0x300, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000518, 8) , (const, 0x300, 4)]
[ ---  CBRANCH (ram, 0x496650, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x495ab0, 8) , (register, 0x38, 8) , (unique, 0x10000507, 8) , (register, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100004ff, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x28, 8) PTRADD (unique, 0x100004ff, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4964f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x0, 1), (register, 0x10, 1) INT_AND (register, 0x10, 1) , (const, 0x4, 1), (register, 0x10, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x496460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000737, 8), (unique, 0x10000737, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(unique, 0x1000059f, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x49654b, 1)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x22b, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x21a, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x22b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x21a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x4957a0, 8) , (register, 0x18, 1) , (const, 0x0, 8) , (register, 0x0, 8) , (unique, 0x3800, 8), (register, 0x0, 8) CALL (ram, 0x4957a0, 8) , (register, 0x0, 1) , (register, 0x0, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x4956e0, 8) , (register, 0x0, 1) , (register, 0x38, 8), (register, 0x18, 1) INT_AND (register, 0x0, 1) , (const, 0xf, 1), (register, 0x0, 1) CALL (ram, 0x495980, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000073f, 8), (unique, 0x1000073f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (register, 0x80, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x1, 4), (unique, 0x3400, 8) INT_ADD (register, 0xa0, 8) , (register, 0xb0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0xa0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x1000059f, 8) , (unique, 0x100005a7, 8)]
[ ---  CBRANCH (ram, 0x496530, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (stack, 0xffffffffffffffb0, 8) , (register, 0x30, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x22b, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x21a, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x496aeb, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10000747, 8), (unique, 0x10000747, 8) CAST (stack, 0xffffffffffffffb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(unique, 0x10000597, 8) COPY (register, 0xb0, 8)]
[(unique, 0x100005a7, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000597, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x496460, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (register, 0xb0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000597, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x496680, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58d00, 2) , (const, 0x0, 2), (unique, 0x58d00, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x7f8, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000074f, 8), (unique, 0x1000074f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xfd, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xfd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfd, 4)]
[(register, 0x0, 8) CALL (ram, 0x4956e0, 8) , (register, 0x18, 1) , (register, 0x38, 8), (register, 0x18, 1) SUBPIECE (register, 0x18, 2) , (const, 0x0, 4), (register, 0x18, 2) INT_RIGHT (unique, 0xbc00, 2) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x496460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000757, 8), (unique, 0x10000757, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(register, 0x18, 2) INT_AND (register, 0x18, 2) , (const, 0xf, 2)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000567, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x4966fb, 1)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x16c, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x15b, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x16c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15b, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x4957a0, 8) , (register, 0x18, 2) , (const, 0x0, 8) , (register, 0x0, 8) , (unique, 0x3800, 8), (register, 0x0, 8) CALL (ram, 0x4957a0, 8) , (register, 0x18, 1) , (register, 0x0, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000075f, 8), (unique, 0x1000075f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (register, 0x80, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x1, 4), (unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (register, 0xa0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000567, 8) , (unique, 0x1000056f, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x4966e0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (stack, 0xffffffffffffffb0, 8) , (register, 0x30, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x16c, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x15b, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x496ac0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10000767, 8), (unique, 0x10000767, 8) CAST (stack, 0xffffffffffffffb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(unique, 0x1000055f, 8) COPY (register, 0x18, 8)]
[(unique, 0x1000056f, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000055f, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x496460, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000055f, 8) , (register, 0x80, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000547, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000076f, 8), (unique, 0x1000076f, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x496460, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (register, 0x8, 8), (register, 0x8, 8) COPY (unique, 0x10000557, 8), (unique, 0x10000557, 8) MULTIEQUAL (unique, 0x10000547, 8) , (unique, 0x1000054f, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x1000054f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x1, 4), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x496478, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000077f, 8), (unique, 0x1000077f, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000777, 8), (unique, 0x10000777, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x1, 4), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x496463, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000787, 8), (unique, 0x10000787, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x496435, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
