[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc, 4)]
[(register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[(unique, 0x1000011e, 8) COPY (ram, 0x4c4708, 8), (ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0xc, 4)]
[(unique, 0x1000013e, 8) COPY (ram, 0x4c4708, 8), (ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x16f654, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000146, 8), (unique, 0x10000146, 8) CAST (ram, 0x4c4708, 8), (ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x16f728, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000015e, 8), (unique, 0x1000015e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000156, 8), (unique, 0x10000156, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000014e, 8), (unique, 0x1000014e, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c4708, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x16f623, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x192, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x192, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x52, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x52, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x16f63e, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x175, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x175, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x175, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x5c, 4), (ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x5c, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000016e, 8) , (register, 0x80, 8), (unique, 0x1000016e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000166, 8), (unique, 0x10000166, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000011e, 8) , (const, 0x88, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000012e, 8) COPY (unique, 0x10000126, 8), (unique, 0x10000126, 8) COPY (ram, 0x4c4708, 8), (ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000012e, 8) , (unique, 0x1000013e, 8)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x64, 4), (ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x64, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[ ---  CBRANCH (ram, 0x16f6c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000176, 8), (unique, 0x10000176, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xc0, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000013e, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x16f668, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x7f, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x7f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000017e, 8) , (const, 0xffffffff, 4), (unique, 0x1000017e, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xc0, 8) , (const, 0x1, 8)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x89, 4), (ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x89, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x16f6cd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000186, 8), (unique, 0x10000186, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xd8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x16f730, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000019e, 8), (unique, 0x1000019e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c4708, 8) , (const, 0x30, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000196, 8), (unique, 0x10000196, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c4708, 8) , (const, 0x28, 8) , (const, 0x1, 8)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x145, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x145, 4)]
[ ---  CBRANCH (ram, 0x16f69d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x17b150, 8) , (unique, 0x100001a6, 8) , (const, 0xa, 4), (unique, 0x100001a6, 8) CAST (ram, 0x4c4708, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) CAST (unique, 0x1000011e, 8)]
[(register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001b6, 8) , (unique, 0x3100, 8), (unique, 0x100001b6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c4708, 8) , (const, 0x28, 8) , (const, 0x1, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0xae, 4), (ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0xac, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xae, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xac, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0xa, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[ ---  CBRANCH (ram, 0x16f6b1, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x7fffffff, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) COPY (const, 0x7fffffff, 8)]
[(register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001be, 8), (unique, 0x100001be, 8) CAST (unique, 0x1000011e, 8)]
[(unique, 0x100000cf, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x100000d7, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(unique, 0x100000df, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x16f6ba, 1) , (unique, 0x100000ce, 1), (unique, 0x100000ce, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c4708, 8) INDIRECT (unique, 0x100000d7, 8) , (const, 0xe7, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x100000df, 4) , (const, 0xe7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001c6, 8), (unique, 0x100001c6, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000011e, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x16f6ba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001c6, 8), (unique, 0x100001c6, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000011e, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[(ram, 0x4c4708, 8) COPY (ram, 0x4c4708, 8), (ram, 0x4c4708, 8) MULTIEQUAL (unique, 0x100000d7, 8) , (ram, 0x4c4708, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (unique, 0x100000df, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x100000cf, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0xf5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ce, 8) , (const, 0x0, 8), (unique, 0x100001ce, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x16f700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xf5, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x137, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x137, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x105, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x105, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x1000010d, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(unique, 0x10000115, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x16f71a, 1) , (unique, 0x1000010c, 1), (unique, 0x1000010c, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c4708, 8) INDIRECT (unique, 0x1000010d, 8) , (const, 0x129, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x10000115, 4) , (const, 0x129, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c4708, 8) COPY (ram, 0x4c4708, 8), (ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (unique, 0x1000010d, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x10000115, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x100000cf, 4)]
