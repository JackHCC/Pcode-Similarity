[(stack, 0xffffffffffffffd8, 8) COPY (register, 0x80, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000187, 8), (unique, 0x10000187, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (unique, 0x1000018f, 8), (unique, 0x1000018f, 8) CAST (register, 0x10, 8)]
[(stack, 0xffffffffffffffe0, 8) COPY (register, 0x88, 8)]
[(stack, 0xffffffffffffffd0, 8) COPY (unique, 0x10000197, 8), (unique, 0x10000197, 8) CAST (register, 0x8, 8)]
[(stack, 0xffffffffffffff98, 4) COPY (const, 0x10, 4)]
[(register, 0x10, 4) COPY (const, 0x10, 4)]
[(stack, 0xffffffffffffffa0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[(unique, 0x1000016b, 8) COPY (unique, 0x1000019f, 8), (unique, 0x1000019f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x1000016b, 8) , (unique, 0x10000173, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1e52d1, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x1000012b, 8) COPY (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x1e51c9, 1)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)]
[(unique, 0x10000123, 8) COPY (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100001af, 8), (unique, 0x100001af, 8) INT_ADD (unique, 0x100001a7, 8) , (register, 0x8, 8), (unique, 0x100001a7, 8) CAST (unique, 0x3100, 8), (register, 0x8, 8) INT_ZEXT (register, 0x10, 4)]
[(unique, 0x10000163, 8) COPY (register, 0x80, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000163, 8) , (register, 0x80, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1e51e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000123, 8) , (unique, 0x1000012b, 8)]
[(stack, 0xffffffffffffff98, 4) COPY (const, 0x10, 4)]
[(unique, 0x10000090, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffa0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x106, 4)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0x106, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3680, 8) , (register, 0x30, 8), (unique, 0x3680, 8) CAST (unique, 0x100001cf, 8), (unique, 0x100001cf, 8) INT_AND (unique, 0x100001c7, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001c7, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000007a, 8) , (unique, 0x1000004e, 8) , (const, 0x1, 8), (unique, 0x1000007a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff9f, 8), (unique, 0x1000004e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x0, 4) COPY (const, 0x10, 4)]
[(register, 0x80, 8) PTRADD (unique, 0x3680, 8) , (unique, 0x100000d2, 8) , (const, 0x8, 8), (unique, 0x100000d2, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x3680, 8) CAST (unique, 0x100001bf, 8), (unique, 0x100001bf, 8) INT_AND (unique, 0x100001b7, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001b7, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000007a, 8) , (unique, 0x1000004e, 8) , (const, 0x1, 8), (unique, 0x1000007a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff9f, 8), (unique, 0x1000004e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0x10000133, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3680, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3680, 8) CAST (unique, 0x100001bf, 8), (unique, 0x100001bf, 8) INT_AND (unique, 0x100001b7, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001b7, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000007a, 8) , (unique, 0x1000004e, 8) , (const, 0x1, 8), (unique, 0x1000007a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff9f, 8), (unique, 0x1000004e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0x1000014b, 8) COPY (unique, 0x100001d7, 8), (unique, 0x100001d7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[(unique, 0x1000017f, 4) COPY (register, 0x8, 4), (register, 0x8, 4) COPY (const, 0x10, 4)]
[ ---  BRANCH (ram, 0x1e5258, 1)]
[(ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x1000008d, 1) MULTIEQUAL (unique, 0x10000090, 1) , (unique, 0x1000008f, 1) , (unique, 0x1000008d, 1)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000014b, 8) , (unique, 0x10000153, 8) , (unique, 0x1000015b, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000133, 8) , (unique, 0x1000013b, 8) , (unique, 0x10000143, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x1000017f, 4) , (unique, 0x1000017b, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1e52b8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13d, 4)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0x13d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100001e7, 8), (unique, 0x100001e7, 8) INT_ADD (unique, 0x100001df, 8) , (register, 0x8, 8), (unique, 0x100001df, 8) CAST (unique, 0x3100, 8), (register, 0x8, 8) INT_ZEXT (register, 0x0, 4)]
[(unique, 0x1000017b, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1e5250, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x80, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x1000008f, 1) COPY (const, 0x1, 1)]
[(unique, 0x1000013b, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000153, 8) COPY (register, 0x30, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x167, 4)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0x167, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x10000143, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x1000015b, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1e52e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1e5276, 1) , (unique, 0x1000008d, 1)]
[(ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff98, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x1000017b, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1e5288, 8), (register, 0x20, 8) CAST (unique, 0x100001ff, 8), (unique, 0x100001ff, 8) INT_ADD (unique, 0x100001f7, 8) , (unique, 0x1000004e, 8), (unique, 0x100001f7, 8) CAST (unique, 0x10000112, 8), (unique, 0x10000112, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff90, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x152, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x152, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0x152, 4), (ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x152, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x151, 4), (stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x151, 4)]
[(register, 0x0, 4) CALL (ram, 0x1e4e30, 8) , (register, 0x38, 8) , (unique, 0x3680, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001ef, 8), (unique, 0x100001ef, 8) CAST (ram, 0x4eaea8, 8), (ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[ ---  BRANCH (ram, 0x1e52a0, 1)]
[ ---  CBRANCH (ram, 0x1e528d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x7fffffff, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x88, 4)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0x88, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000207, 8) , (const, 0x7, 4), (unique, 0x10000207, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffd8, 8) MULTIEQUAL (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1e52dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000020f, 8), (unique, 0x1000020f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaea8, 8) COPY (ram, 0x4eaea8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff90, 8) COPY (const, 0x1e52e2, 8)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xa7, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa7, 4)]
[(ram, 0x4eaea8, 8) COPY (ram, 0x4eaea8, 8), (ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0xa7, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x10000173, 8) COPY (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x1e51b8, 1)]
