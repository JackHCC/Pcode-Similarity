[ ---  CBRANCH (ram, 0x489b70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x489caa, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100004e4, 8) , (const, 0x8, 8), (unique, 0x100004e4, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x489b8a, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (register, 0x30, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x489bc5, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xfffffffffffffffe, 8)]
[(register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x100005ad, 16) , (unique, 0xbd80, 8), (unique, 0x100005ad, 16) INT_LEFT (unique, 0x1000059d, 16) , (const, 0x40, 16), (unique, 0x1000059d, 16) INT_SEXT (unique, 0x100006b5, 8), (unique, 0x100006b5, 8) CAST (register, 0x10, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100006ad, 8), (unique, 0x100006ad, 8) INT_ADD (unique, 0x100006a5, 8) , (register, 0x8, 8), (unique, 0x100006a5, 8) CAST (register, 0x10, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x100006bd, 8), (unique, 0x100006bd, 8) INT_ADD (register, 0x88, 8) , (register, 0x8, 8), (register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x100005ad, 16) , (unique, 0xbd80, 8), (unique, 0x100005ad, 16) INT_LEFT (unique, 0x1000059d, 16) , (const, 0x40, 16), (unique, 0x1000059d, 16) INT_SEXT (unique, 0x100006b5, 8), (unique, 0x100006b5, 8) CAST (register, 0x10, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100006ad, 8), (unique, 0x100006ad, 8) INT_ADD (unique, 0x100006a5, 8) , (register, 0x8, 8), (unique, 0x100006a5, 8) CAST (register, 0x10, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x489bb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x489bf3, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (register, 0x30, 8)]
[(register, 0x88, 8) CAST (unique, 0x100006cd, 8), (unique, 0x100006cd, 8) INT_ADD (register, 0x88, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x88, 8) INT_ADD (register, 0x88, 8) , (unique, 0x1000028f, 8), (unique, 0x1000028f, 8) INT_MULT (register, 0x30, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x1000063d, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006c5, 8), (unique, 0x100006c5, 8) INT_ADD (register, 0x88, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_LEFT (unique, 0x100003a9, 16) , (const, 0x40, 4), (unique, 0x100003a9, 16) INT_ZEXT (register, 0x10, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x1000063d, 8) , (unique, 0x10000645, 8)]
[(unique, 0x10000645, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x1000063d, 8) , (unique, 0x10000645, 8)]
[ ---  CBRANCH (ram, 0x489be0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x88, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x1000063d, 8) , (unique, 0x10000645, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (unique, 0xc780, 1)]
[ ---  CBRANCH (ram, 0x489a70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x489a68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x49, 4)]
[ ---  BRANCH (ram, 0x489a68, 1)]
[(unique, 0x100003e3, 1) COPY (const, 0x0, 1)]
[(unique, 0x3680, 8) INT_MULT (register, 0x88, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x80, 8) , (unique, 0x1000040c, 8) , (const, 0x8, 8), (unique, 0x1000040c, 8) INT_ADD (register, 0x88, 8) , (const, 0xfffffffffffffffe, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x1000041c, 8) , (const, 0x8, 8), (unique, 0x1000041c, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x80, 8) , (unique, 0x100003f4, 8) , (const, 0x8, 8), (unique, 0x100003f4, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SUB (register, 0x8, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x489cda, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x1000041c, 8) , (const, 0x8, 8), (unique, 0x1000041c, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x80, 8) , (unique, 0x100003f4, 8) , (const, 0x8, 8), (unique, 0x100003f4, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SUB (register, 0x8, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x489cfd, 1) , (register, 0x200, 1)]
[ ---  CBRANCH (ram, 0x489766, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x489690, 8) , (unique, 0x3400, 8) , (register, 0x80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CALL (ram, 0x48b370, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[(unique, 0x100003e2, 1) COPY (const, 0x1, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[ ---  BRANCH (ram, 0x489766, 1)]
[(unique, 0x100003e1, 1) MULTIEQUAL (unique, 0x100003e3, 1) , (unique, 0x100003e3, 1) , (unique, 0x100003e2, 1)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4899da, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0xffffffffffffffff, 8), (register, 0xa0, 8) INT_SUB (register, 0xa0, 8) , (register, 0x88, 8), (register, 0xa0, 8) INT_ADD (register, 0x8, 8) , (register, 0x30, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x48986b, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESSEQUAL (register, 0x30, 8) , (register, 0xa0, 8)]
[(unique, 0x1000062d, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x489799, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (register, 0x30, 8)]
[(unique, 0x10000635, 8) COPY (register, 0x30, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x1000062d, 8) , (unique, 0x10000635, 8)]
[(unique, 0x1000064d, 8) COPY (register, 0xa0, 8)]
[(unique, 0x1000066d, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x88, 8) , (const, 0x8, 8)]
[(register, 0x28, 8) COPY (unique, 0x10000665, 8), (unique, 0x10000665, 8) MULTIEQUAL (unique, 0x1000064d, 8) , (unique, 0x10000655, 8) , (unique, 0x1000065d, 8)]
[(register, 0xb8, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0xa8, 8) , (unique, 0x1000043c, 8) , (const, 0x8, 8), (unique, 0x1000043c, 8) INT_SUB (const, 0xffffffffffffffff, 8) , (register, 0x88, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000066d, 8) , (unique, 0x10000675, 8) , (unique, 0x1000067d, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000066d, 8) , (unique, 0x10000675, 8) , (unique, 0x1000067d, 8)]
[ ---  CBRANCH (ram, 0x489a18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x1000054d, 16) , (unique, 0xbd80, 8), (unique, 0x1000054d, 16) INT_LEFT (unique, 0x1000053d, 16) , (const, 0x40, 16), (unique, 0x1000053d, 16) INT_SEXT (unique, 0x100006d5, 8), (unique, 0x100006d5, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x1000054d, 16) , (unique, 0xbd80, 8), (unique, 0x1000054d, 16) INT_LEFT (unique, 0x1000053d, 16) , (const, 0x40, 16), (unique, 0x1000053d, 16) INT_SEXT (unique, 0x100006d5, 8), (unique, 0x100006d5, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x1000055d, 16) , (const, 0x0, 4), (unique, 0x1000055d, 16) INT_RIGHT (unique, 0x3e200, 16) , (const, 0x40, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x1000054d, 16) , (unique, 0xbd80, 8), (unique, 0x1000054d, 16) INT_LEFT (unique, 0x1000053d, 16) , (const, 0x40, 16), (unique, 0x1000053d, 16) INT_SEXT (unique, 0x100006d5, 8), (unique, 0x100006d5, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x3e200, 16) , (const, 0x0, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x1000054d, 16) , (unique, 0xbd80, 8), (unique, 0x1000054d, 16) INT_LEFT (unique, 0x1000053d, 16) , (const, 0x40, 16), (unique, 0x1000053d, 16) INT_SEXT (unique, 0x100006d5, 8), (unique, 0x100006d5, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x489a42, 1)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x489a57, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4897e2, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x4897e2, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x8, 8)]
[(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x489a38, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(register, 0x30, 8) INT_SUB (register, 0x30, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4899f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x48b420, 8) , (unique, 0x3400, 8) , (register, 0x80, 8) , (register, 0x88, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xb8, 8), (unique, 0x3400, 8) CAST (unique, 0x100006dd, 8), (unique, 0x100006dd, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(unique, 0x1000065d, 8) COPY (register, 0x28, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x1000067d, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4897c0, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (register, 0x0, 8) , (register, 0x28, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CALL (ram, 0x48fbc0, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xb8, 8), (unique, 0x3400, 8) CAST (unique, 0x100006e5, 8), (unique, 0x100006e5, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8), (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(unique, 0x10000655, 8) COPY (register, 0x28, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000675, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4897c0, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x28, 8) , (register, 0x0, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x10000464, 8) , (const, 0x8, 8), (unique, 0x10000464, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x4899da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0xffffffffffffffff, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (unique, 0x100003e1, 1)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x28, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x88, 8) , (const, 0x8, 8)]
[(unique, 0x1000061d, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x489886, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (const, 0xfffffffffffffffe, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x88, 8) , (const, 0xfffffffffffffffe, 8)]
[(unique, 0x10000625, 8) COPY (unique, 0x3680, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x1000061d, 8) , (unique, 0x10000625, 8)]
[(register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SUB (const, 0x1, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x4898a4, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x100006ed, 8), (unique, 0x100006ed, 8) CAST (register, 0xb0, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3680, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (unique, 0x3a00, 8) , (unique, 0x100006f5, 8), (unique, 0x100006f5, 8) CAST (register, 0xb0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x3680, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x489910, 1)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff80, 8)]
[ ---  CBRANCH (ram, 0x489943, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x3100, 8)]
[ ---  CALL (ram, 0x401040, 8) , (register, 0x30, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (const, 0x0, 8)]
[(register, 0xb8, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x4898c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x1000051d, 16) , (unique, 0xbd80, 8), (unique, 0x1000051d, 16) INT_LEFT (unique, 0x1000050d, 16) , (const, 0x40, 16), (unique, 0x1000050d, 16) INT_SEXT (unique, 0x100006fd, 8), (unique, 0x100006fd, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x1000051d, 16) , (unique, 0xbd80, 8), (unique, 0x1000051d, 16) INT_LEFT (unique, 0x1000050d, 16) , (const, 0x40, 16), (unique, 0x1000050d, 16) INT_SEXT (unique, 0x100006fd, 8), (unique, 0x100006fd, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x1000052d, 16) , (const, 0x0, 4), (unique, 0x1000052d, 16) INT_RIGHT (unique, 0x3e200, 16) , (const, 0x40, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x1000051d, 16) , (unique, 0xbd80, 8), (unique, 0x1000051d, 16) INT_LEFT (unique, 0x1000050d, 16) , (const, 0x40, 16), (unique, 0x1000050d, 16) INT_SEXT (unique, 0x100006fd, 8), (unique, 0x100006fd, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x3e200, 16) , (const, 0x0, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x1000051d, 16) , (unique, 0xbd80, 8), (unique, 0x1000051d, 16) INT_LEFT (unique, 0x1000050d, 16) , (const, 0x40, 16), (unique, 0x1000050d, 16) INT_SEXT (unique, 0x100006fd, 8), (unique, 0x100006fd, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff80, 8)]
[ ---  BRANCH (ram, 0x489992, 1)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4899a7, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4898c0, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x4898c0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xb0, 8) , (unique, 0x10000474, 8) , (const, 0x8, 8), (unique, 0x10000474, 8) INT_ADD (register, 0x88, 8) , (const, 0xfffffffffffffffe, 8)]
[(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x489988, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(register, 0x30, 8) INT_SUB (register, 0x30, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4898f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) CALL (ram, 0x48b420, 8) , (register, 0xb0, 8) , (register, 0x80, 8) , (register, 0x88, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CALL (ram, 0x48fbc0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xb8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000705, 8), (unique, 0x10000705, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff80, 8)]
[ ---  CBRANCH (ram, 0x4899da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0xffffffffffffffff, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (unique, 0x100003e1, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (unique, 0x100003e1, 1)]
[(unique, 0x100003e0, 1) COPY (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100004b4, 8) , (const, 0x8, 8), (unique, 0x100004b4, 8) INT_ADD (register, 0x8, 8) , (const, 0xfffffffffffffffe, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100004b4, 8) , (const, 0x8, 8), (unique, 0x100004b4, 8) INT_ADD (register, 0x8, 8) , (const, 0xfffffffffffffffe, 8)]
[ ---  CBRANCH (ram, 0x489cbb, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100004b4, 8) , (const, 0x8, 8), (unique, 0x100004b4, 8) INT_ADD (register, 0x8, 8) , (const, 0xfffffffffffffffe, 8)]
[ ---  CBRANCH (ram, 0x489cc6, 1) , (register, 0x200, 1)]
[ ---  CBRANCH (ram, 0x489a98, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100003df, 1) COPY (const, 0x1, 1)]
[(register, 0x38, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x489a98, 1)]
[(unique, 0x100003de, 1) MULTIEQUAL (unique, 0x100003e0, 1) , (unique, 0x100003e0, 1) , (unique, 0x100003df, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4899c8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8)]
[ ---  CBRANCH (ram, 0x489c00, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESSEQUAL (register, 0x30, 8) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x489ac3, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xb8, 8)]
[(register, 0x18, 8) INT_2COMP (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x489afb, 1)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x98, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x90, 8), (register, 0x90, 8) PTRADD (register, 0x90, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x489ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x489b50, 1) , (unique, 0xc580, 1), (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (unique, 0xbd80, 8)]
[(register, 0x38, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x1000025f, 8), (unique, 0x1000025f, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0x100005fd, 8) COPY (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x489b20, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3b80, 8) CAST (unique, 0x1000070d, 8), (unique, 0x1000070d, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x98, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0x12080, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_SUB (register, 0x38, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000068d, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x1000057d, 16) , (register, 0x38, 8), (unique, 0x1000057d, 16) INT_LEFT (unique, 0x1000056d, 16) , (const, 0x40, 16), (unique, 0x1000056d, 16) INT_SEXT (unique, 0x10000715, 8), (unique, 0x10000715, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x1000057d, 16) , (register, 0x38, 8), (unique, 0x1000057d, 16) INT_LEFT (unique, 0x1000056d, 16) , (const, 0x40, 16), (unique, 0x1000056d, 16) INT_SEXT (unique, 0x10000715, 8), (unique, 0x10000715, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x1000058d, 16) , (const, 0x0, 4), (unique, 0x1000058d, 16) INT_RIGHT (unique, 0x3e200, 16) , (const, 0x40, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x1000057d, 16) , (register, 0x38, 8), (unique, 0x1000057d, 16) INT_LEFT (unique, 0x1000056d, 16) , (const, 0x40, 16), (unique, 0x1000056d, 16) INT_SEXT (unique, 0x10000715, 8), (unique, 0x10000715, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(unique, 0x100005ed, 8) COPY (register, 0x0, 8), (register, 0x0, 8) SUBPIECE (unique, 0x3e200, 16) , (const, 0x0, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x1000057d, 16) , (register, 0x38, 8), (unique, 0x1000057d, 16) INT_LEFT (unique, 0x1000056d, 16) , (const, 0x40, 16), (unique, 0x1000056d, 16) INT_SEXT (unique, 0x10000715, 8), (unique, 0x10000715, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x100005ed, 8) , (unique, 0x100005f5, 8) , (unique, 0x100005fd, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x38, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x489b2c, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x38, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x489b3c, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x489b3c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100005f5, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x489b20, 1) , (unique, 0xc580, 1), (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x8, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (register, 0x38, 8), (unique, 0x3b80, 8) CAST (unique, 0x1000071d, 8), (unique, 0x1000071d, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x98, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x8, 8) , (register, 0x10, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000685, 8) COPY (unique, 0x10000237, 8), (unique, 0x10000237, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x489aee, 1)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x38, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x10000379, 8), (unique, 0x10000379, 8) MULTIEQUAL (unique, 0x10000685, 8) , (unique, 0x1000068d, 8)]
[ ---  CBRANCH (ram, 0x4899b8, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (register, 0xb8, 8) , (register, 0x98, 8), (register, 0x98, 8) INT_ADD (register, 0x98, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x489c00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x98, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x90, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x28, 8) INT_2COMP (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x489c3b, 1)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x10000391, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x90, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x489c10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x489c90, 1) , (unique, 0xc580, 1), (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (unique, 0xbd80, 8)]
[(register, 0x38, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x1000032f, 8), (unique, 0x1000032f, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0x10000615, 8) COPY (register, 0x28, 8)]
[ ---  BRANCH (ram, 0x489c60, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3400, 8) CAST (unique, 0x10000725, 8), (unique, 0x10000725, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x98, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_SUB (register, 0x38, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000069d, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x100005cd, 16) , (register, 0x38, 8), (unique, 0x100005cd, 16) INT_LEFT (unique, 0x100005bd, 16) , (const, 0x40, 16), (unique, 0x100005bd, 16) INT_SEXT (unique, 0x1000072d, 8), (unique, 0x1000072d, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x100005cd, 16) , (register, 0x38, 8), (unique, 0x100005cd, 16) INT_LEFT (unique, 0x100005bd, 16) , (const, 0x40, 16), (unique, 0x100005bd, 16) INT_SEXT (unique, 0x1000072d, 8), (unique, 0x1000072d, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x100005dd, 16) , (const, 0x0, 4), (unique, 0x100005dd, 16) INT_RIGHT (unique, 0x3e200, 16) , (const, 0x40, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x100005cd, 16) , (register, 0x38, 8), (unique, 0x100005cd, 16) INT_LEFT (unique, 0x100005bd, 16) , (const, 0x40, 16), (unique, 0x100005bd, 16) INT_SEXT (unique, 0x1000072d, 8), (unique, 0x1000072d, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(unique, 0x10000605, 8) COPY (register, 0x0, 8), (register, 0x0, 8) SUBPIECE (unique, 0x3e200, 16) , (const, 0x0, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x100005cd, 16) , (register, 0x38, 8), (unique, 0x100005cd, 16) INT_LEFT (unique, 0x100005bd, 16) , (const, 0x40, 16), (unique, 0x100005bd, 16) INT_SEXT (unique, 0x1000072d, 8), (unique, 0x1000072d, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000605, 8) , (unique, 0x1000060d, 8) , (unique, 0x10000615, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x38, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x489c6c, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x38, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x489c7c, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x489c7c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000060d, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x489c60, 1) , (unique, 0xc580, 1), (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x8, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) CAST (unique, 0x10000735, 8), (unique, 0x10000735, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x98, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x8, 8) , (register, 0x10, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000695, 8) COPY (unique, 0x10000307, 8), (unique, 0x10000307, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x489c2d, 1)]
[(unique, 0x10000391, 8) MULTIEQUAL (unique, 0x10000695, 8) , (unique, 0x1000069d, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4899c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 8) , (const, 0xffffffffffffffff, 8), (register, 0x98, 8) INT_ADD (register, 0x98, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x90, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x10000391, 8) , (register, 0x38, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003b9, 8) , (register, 0x8, 8), (unique, 0x100003b9, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (unique, 0x100003de, 1)]
