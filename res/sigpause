[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x135b98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x50, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x50, 4)]
[(register, 0x0, 4) CALL (ram, 0x214810, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x38, 4)]
[(unique, 0x3800, 8) CAST (unique, 0x100000f7, 8), (unique, 0x100000f7, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(unique, 0x100000d7, 8) COPY (unique, 0x100000ff, 8), (unique, 0x100000ff, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8)]
[(register, 0x8, 8) COPY (const, 0xf, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100000d7, 8) , (unique, 0x100000df, 8)]
[ ---  CBRANCH (ram, 0x135bc3, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x80, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (register, 0x0, 8) , (const, 0x78, 4)]
[ ---  CALL (ram, 0x214870, 8) , (register, 0x0, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x80, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x78, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1357c0, 8) , (unique, 0x3800, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100000df, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100000c7, 8) , (const, 0x8, 8), (unique, 0x100000c7, 8) INT_ADD (unique, 0x100000bf, 8) , (const, 0x1, 8), (unique, 0x100000bf, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x135bc0, 1)]
[(register, 0x0, 8) INT_ZEXT (register, 0x38, 4)]
[(unique, 0x3800, 8) CAST (unique, 0x10000107, 8), (unique, 0x10000107, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(unique, 0x100000e7, 8) COPY (unique, 0x1000010f, 8), (unique, 0x1000010f, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8)]
[(register, 0x8, 8) COPY (const, 0xf, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100000e7, 8) , (unique, 0x100000ef, 8)]
[ ---  CBRANCH (ram, 0x135b80, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (register, 0x0, 8) , (const, 0x3c, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1357c0, 8) , (unique, 0x3800, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100000ef, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x135b7d, 1)]
