[ ---  CBRANCH (ram, 0x195020, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c59d0, 4) , (const, 0x0, 4)]
[(ram, 0x4c59b0, 8) INDIRECT (ram, 0x4c59b0, 8) , (const, 0xda, 4), (ram, 0x4c59b0, 8) INDIRECT (ram, 0x4c59b0, 8) , (const, 0xc8, 4), (ram, 0x4c59b0, 8) INDIRECT (ram, 0x4c59b0, 8) , (const, 0xc4, 4), (ram, 0x4c59b0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c59d0, 4) INDIRECT (ram, 0x4c59d0, 4) , (const, 0xda, 4), (ram, 0x4c59d0, 4) INDIRECT (ram, 0x4c59d0, 4) , (const, 0xc8, 4), (ram, 0x4c59d0, 4) INDIRECT (ram, 0x4c59d0, 4) , (const, 0xc4, 4)]
[(stack, 0xffffffffffffffd4, 4) INDIRECT (stack, 0xffffffffffffffd4, 4) , (const, 0xda, 4), (stack, 0xffffffffffffffd4, 4) INDIRECT (stack, 0xffffffffffffffd4, 4) , (const, 0xc8, 4), (stack, 0xffffffffffffffd4, 4) INDIRECT (stack, 0xffffffffffffffd4, 4) , (const, 0xc4, 4)]
[ ---  CALL (ram, 0x13adb0, 8) , (register, 0x0, 4) , (unique, 0x100000be, 8) , (const, 0x20, 8) , (unique, 0x100000ce, 8), (unique, 0x100000ce, 8) CAST (unique, 0x100000de, 8), (unique, 0x100000de, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c59a0, 8), (unique, 0x100000be, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5980, 8), (register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x18, 4), (register, 0x18, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1cc770, 8), (register, 0x0, 8) CALL (ram, 0x11f880, 8) , (const, 0x0, 8)]
[(ram, 0x4c59d0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x194fa9, 1)]
[(ram, 0x4c59b0, 8) INDIRECT (ram, 0x4c59b0, 8) , (const, 0x28, 4), (ram, 0x4c59b0, 8) MULTIEQUAL (ram, 0x4c59b0, 8) , (ram, 0x4c59b0, 8)]
[(ram, 0x4c59d0, 4) INDIRECT (ram, 0x4c59d0, 4) , (const, 0x28, 4), (ram, 0x4c59d0, 4) MULTIEQUAL (ram, 0x4c59d0, 4) , (ram, 0x4c59d0, 4)]
[(stack, 0xffffffffffffffd4, 4) INDIRECT (stack, 0xffffffffffffffd4, 4) , (const, 0x28, 4), (stack, 0xffffffffffffffd4, 4) MULTIEQUAL (stack, 0xffffffffffffffd4, 4) , (stack, 0xffffffffffffffd4, 4)]
[ ---  CBRANCH (ram, 0x195010, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd4, 8)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[ ---  CALL (ram, 0x13ac30, 8) , (unique, 0x100000c6, 8) , (unique, 0x3800, 8), (unique, 0x100000c6, 8) CAST (unique, 0x100000e6, 8), (unique, 0x100000e6, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c59a0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (register, 0xa8, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x38, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xa8, 4), (register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (unique, 0x100000b5, 8) , (const, 0x0, 4), (unique, 0x100000b5, 8) INT_REM (unique, 0x100000ee, 8) , (register, 0x8, 8), (unique, 0x100000ee, 8) CAST (register, 0x0, 8), (register, 0x8, 8) INT_SUB (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_SEXT (stack, 0xffffffffffffffd4, 4), (stack, 0xffffffffffffffd4, 4) INDIRECT (stack, 0xffffffffffffffd4, 4) , (const, 0x49, 4), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8), (stack, 0xffffffffffffffd4, 4) MULTIEQUAL (stack, 0xffffffffffffffd4, 4) , (stack, 0xffffffffffffffd4, 4)]
[(ram, 0x4c59b0, 8) INDIRECT (ram, 0x4c59b0, 8) , (const, 0x94, 4), (ram, 0x4c59b0, 8) INDIRECT (ram, 0x4c59b0, 8) , (const, 0x89, 4), (ram, 0x4c59b0, 8) INDIRECT (ram, 0x4c59b0, 8) , (const, 0x49, 4), (ram, 0x4c59b0, 8) MULTIEQUAL (ram, 0x4c59b0, 8) , (ram, 0x4c59b0, 8)]
[(ram, 0x4c59d0, 4) INDIRECT (ram, 0x4c59d0, 4) , (const, 0x94, 4), (ram, 0x4c59d0, 4) INDIRECT (ram, 0x4c59d0, 4) , (const, 0x89, 4), (ram, 0x4c59d0, 4) INDIRECT (ram, 0x4c59d0, 4) , (const, 0x49, 4), (ram, 0x4c59d0, 4) MULTIEQUAL (ram, 0x4c59d0, 4) , (ram, 0x4c59d0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbb00, 1), (register, 0x10, 8) PTRADD (register, 0x38, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xa8, 4), (register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (unique, 0x100000b5, 8) , (const, 0x0, 4), (unique, 0x100000b5, 8) INT_REM (unique, 0x100000ee, 8) , (register, 0x8, 8), (unique, 0x100000ee, 8) CAST (register, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (register, 0xa8, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SUB (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_SEXT (stack, 0xffffffffffffffd4, 4), (stack, 0xffffffffffffffd4, 4) INDIRECT (stack, 0xffffffffffffffd4, 4) , (const, 0x49, 4), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8), (stack, 0xffffffffffffffd4, 4) MULTIEQUAL (stack, 0xffffffffffffffd4, 4) , (stack, 0xffffffffffffffd4, 4)]
[ ---  CBRANCH (ram, 0x194fd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (register, 0xa8, 8), (register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (const, 0x1, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(ram, 0x4c59b0, 8) COPY (ram, 0x4c59b0, 8), (ram, 0x4c59b0, 8) MULTIEQUAL (ram, 0x4c59b0, 8) , (ram, 0x4c59b0, 8)]
[(ram, 0x4c59d0, 4) COPY (ram, 0x4c59d0, 4), (ram, 0x4c59d0, 4) MULTIEQUAL (ram, 0x4c59d0, 4) , (ram, 0x4c59d0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
