[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002cf, 8), (unique, 0x100002cf, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002d7, 8), (unique, 0x100002d7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(unique, 0x100002c7, 8) COPY (register, 0x10, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x100002c7, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x18e62d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8) , (unique, 0xbd80, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0x100002b7, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x100002ef, 8), (unique, 0x100002ef, 8) INT_SUB (unique, 0x100002df, 8) , (unique, 0x100002e7, 8), (unique, 0x100002e7, 8) CAST (register, 0x0, 8), (unique, 0x100002df, 8) CAST (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18e614, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0xb0, 8) , (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x100002ef, 8), (unique, 0x100002ef, 8) INT_SUB (unique, 0x100002df, 8) , (unique, 0x100002e7, 8), (unique, 0x100002e7, 8) CAST (register, 0x0, 8), (unique, 0x100002df, 8) CAST (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x100002bf, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x18e788, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x10000196, 8) , (register, 0x30, 8), (unique, 0x10000196, 8) PTRSUB (const, 0x0, 8) , (const, 0x14, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100002b7, 8) , (unique, 0x100002bf, 8)]
[(register, 0x0, 8) CALL (ram, 0x121230, 8) , (register, 0xa8, 8) , (register, 0x0, 8) , (unique, 0x100002f7, 8), (unique, 0x100002f7, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000307, 8) , (unique, 0xbd80, 8), (unique, 0x10000307, 8) CAST (unique, 0x3100, 8), (unique, 0xbd80, 8) PTRADD (register, 0x30, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002ff, 8), (unique, 0x100002ff, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18e62a, 1)]
[ ---  CBRANCH (ram, 0x18e7f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_SUB (unique, 0x10000151, 4) , (const, 0x1, 4), (unique, 0x10000151, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbb00, 1), (unique, 0x3b80, 8) CAST (unique, 0x10000327, 8), (unique, 0x10000327, 8) INT_ADD (unique, 0x1000031f, 8) , (register, 0x10, 8), (unique, 0x1000031f, 8) CAST (register, 0xa8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000317, 8), (unique, 0x10000317, 8) INT_ADD (unique, 0x1000030f, 8) , (register, 0x10, 8), (unique, 0x1000030f, 8) CAST (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x18e7fc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x38, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0xa8, 8) CAST (unique, 0x10000337, 8), (unique, 0x10000337, 8) INT_ADD (unique, 0x1000032f, 8) , (register, 0x30, 8), (unique, 0x1000032f, 8) CAST (register, 0xa8, 8), (register, 0x30, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000347, 8) , (register, 0x30, 8), (unique, 0x10000347, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0x1000033f, 8), (unique, 0x1000033f, 8) CAST (register, 0x0, 8), (register, 0x30, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x18e62a, 1)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0x0, 8)]
[(register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (unique, 0x100000a9, 8) , (const, 0x1, 8), (unique, 0x100000a9, 8) INT_2COMP (unique, 0x1000034f, 8), (unique, 0x1000034f, 8) CAST (register, 0x30, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x18e6ca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x18e6c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18e64e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0xffffffff, 4), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18e6e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000181, 4) , (const, 0x0, 4), (unique, 0x10000181, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18e717, 1) , (unique, 0x10000190, 1), (unique, 0x10000190, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000367, 8), (unique, 0x10000367, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000035f, 8), (unique, 0x1000035f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000357, 8), (unique, 0x10000357, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18e850, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000036f, 8), (unique, 0x1000036f, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18e700, 1)]
[ ---  CBRANCH (ram, 0x18e6c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000377, 8), (unique, 0x10000377, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000037f, 8), (unique, 0x1000037f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000387, 8), (unique, 0x10000387, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18e7d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000011f, 4) , (const, 0x0, 4), (unique, 0x1000011f, 4) INT_AND (register, 0x10, 4) , (const, 0x100, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000397, 8) , (unique, 0xbd80, 8), (unique, 0x10000397, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000038f, 8), (unique, 0x1000038f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[(unique, 0x100002a7, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18e72c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000039f, 8) , (register, 0x0, 8), (unique, 0x1000039f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(unique, 0x100002af, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x18e72c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003af, 8) , (unique, 0xbd80, 8), (unique, 0x100003af, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003a7, 8), (unique, 0x100003a7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x14, 8) , (const, 0x4, 8)]
[(unique, 0x1000029f, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000029f, 8) , (unique, 0x100002a7, 8) , (unique, 0x100002af, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003b7, 8) , (register, 0x0, 8), (unique, 0x100003b7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003bf, 8) , (register, 0x0, 8), (unique, 0x100003bf, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003c7, 8) , (register, 0x0, 8), (unique, 0x100003c7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xfffff7ff, 4)]
[ ---  BRANCH (ram, 0x18e661, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003cf, 8), (unique, 0x100003cf, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003d7, 8), (unique, 0x100003d7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x18e605, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x18e7a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000187, 4) , (const, 0x0, 4), (unique, 0x10000187, 4) INT_AND (register, 0x10, 4) , (const, 0x100, 4)]
[ ---  CALL (ram, 0x18dd50, 8)]
[ ---  CBRANCH (ram, 0x18e66f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003e7, 8), (unique, 0x100003e7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003df, 8), (unique, 0x100003df, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18e748, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003ef, 8), (unique, 0x100003ef, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18e686, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003f7, 8), (unique, 0x100003f7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18e828, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x100, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CALL (ram, 0x18dd50, 8) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003ff, 8), (unique, 0x100003ff, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18e761, 1)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000407, 8) , (const, 0x0, 8), (unique, 0x10000407, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000040f, 8) , (const, 0x0, 8), (unique, 0x1000040f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x16, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000417, 8) , (const, 0x0, 8), (unique, 0x10000417, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x14, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18e686, 1)]
[ ---  CBRANCH (ram, 0x18e6c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x18db70, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18e840, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000041f, 8), (unique, 0x1000041f, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18e69c, 1)]
[ ---  CBRANCH (ram, 0x18e6c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000427, 8), (unique, 0x10000427, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (register, 0x10, 8) , (unique, 0x100000f3, 8) , (const, 0x1, 8), (unique, 0x100000f3, 8) INT_2COMP (unique, 0x1000042f, 8), (unique, 0x1000042f, 8) CAST (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x18e62d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000043f, 8), (unique, 0x1000043f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000437, 8), (unique, 0x10000437, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
