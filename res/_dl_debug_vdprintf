[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb98, 8)]
[(stack, 0xfffffffffffffb98, 4) COPY (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x485277, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x484dad, 1)]
[(register, 0x80, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[(unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbbc, 8)]
[(unique, 0x1000082f, 8) COPY (register, 0x10, 8)]
[(stack, 0xfffffffffffffbc6, 2) MULTIEQUAL (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2)]
[(stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffb9c, 4) MULTIEQUAL (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4)]
[(stack, 0xfffffffffffffb98, 4) MULTIEQUAL (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x1000082f, 8) , (unique, 0x10000837, 8)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x484df5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x1, 4), (register, 0xb0, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0xb0, 4)]
[(unique, 0x10000807, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x484e38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1)]
[(stack, 0xfffffffffffffbc6, 2) MULTIEQUAL (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2)]
[(stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffb9c, 4) MULTIEQUAL (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4)]
[(stack, 0xfffffffffffffb98, 4) MULTIEQUAL (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x1000080f, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x484e38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x25, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (unique, 0xbb00, 1)]
[(register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x484d58, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x1000080f, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x484d48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0xa, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x484d48, 1) , (register, 0x206, 1)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x484d60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x484d60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x25, 1)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x485258, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x3f, 4) , (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (register, 0x30, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x1000055f, 8) , (unique, 0x100006db, 8) , (const, 0x8, 8), (unique, 0x100006db, 8) INT_ADD (unique, 0x100006d3, 8) , (const, 0x1, 8), (unique, 0x100006d3, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x1000055f, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0x30, 8) PTRADD (register, 0x10, 8) , (unique, 0x100000b4, 8) , (const, 0x1, 8), (unique, 0x100000b4, 8) INT_2COMP (unique, 0x1000085b, 8), (unique, 0x1000085b, 8) CAST (register, 0xa0, 8), (register, 0x8, 8) INT_SEXT (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x484d8e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (register, 0x10, 8) , (unique, 0x100000b4, 8) , (const, 0x1, 8), (unique, 0x100000b4, 8) INT_2COMP (unique, 0x1000085b, 8), (unique, 0x1000085b, 8) CAST (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (register, 0xa0, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x100002e8, 8) , (unique, 0x1000056f, 8) , (const, 0x8, 8), (unique, 0x1000056f, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x100002e8, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x1000081f, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x484e60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x25, 1)]
[(stack, 0xfffffffffffffbc6, 2) MULTIEQUAL (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2)]
[(stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffb9c, 4) MULTIEQUAL (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4)]
[(stack, 0xfffffffffffffb98, 4) MULTIEQUAL (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x1000081f, 8) , (unique, 0x10000827, 8)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x484dd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0xa, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (register, 0x0, 1)]
[ ---  CBRANCH (ram, 0x485192, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (register, 0x10, 8)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (register, 0x10, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x100004a0, 8) , (unique, 0x1000067f, 8) , (const, 0x8, 8), (unique, 0x1000067f, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x100004a0, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0x0, 8) INT_SEXT (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (const, 0x1, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x1000069f, 8) , (unique, 0x10000783, 8) , (const, 0x8, 8), (unique, 0x10000783, 8) INT_ADD (unique, 0x1000077b, 8) , (const, 0x1, 8), (unique, 0x1000077b, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x1000069f, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0x0, 8) INT_SEXT (register, 0x18, 4)]
[ ---  BRANCH (ram, 0x484deb, 1)]
[(stack, 0xfffffffffffffbc6, 2) INDIRECT (stack, 0xfffffffffffffbc6, 2) , (const, 0x15c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) PTRADD (unique, 0xbe00, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x1000058f, 8) , (unique, 0x100006f3, 8) , (const, 0x8, 8), (unique, 0x100006f3, 8) INT_ADD (unique, 0x100006eb, 8) , (const, 0x1, 8), (unique, 0x100006eb, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x1000058f, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)]
[(stack, 0xfffffffffffffbc6, 2) MULTIEQUAL (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x484daa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xfffffffffffffbc6, 2) MULTIEQUAL (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2)]
[(stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffb9c, 4) MULTIEQUAL (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4)]
[(stack, 0xfffffffffffffb98, 4) MULTIEQUAL (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0x3100, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x48512b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x485130, 8), (register, 0x20, 8) CAST (unique, 0x1000086b, 8), (unique, 0x1000086b, 8) INT_ADD (unique, 0x10000863, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000863, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x5e8, 4), (stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x5e7, 4)]
[(stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x5e8, 4), (stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x5e7, 4)]
[(stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x5e8, 4), (stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x5e7, 4)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x5e8, 4), (stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x5e7, 4)]
[(stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x5e8, 4)]
[(stack, 0xfffffffffffffbc6, 2) INDIRECT (stack, 0xfffffffffffffbc6, 2) , (const, 0x5e8, 4)]
[ ---  CBRANCH (ram, 0x485234, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000873, 4) , (const, 0x0, 4), (unique, 0x10000873, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x48c210, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x10000240, 8), (unique, 0x10000240, 8) PTRSUB (const, 0x0, 8) , (const, 0x485253, 8), (register, 0x20, 8) CAST (unique, 0x1000087f, 8), (unique, 0x1000087f, 8) INT_ADD (unique, 0x10000877, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000877, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x637, 4), (stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x636, 4)]
[(stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x637, 4), (stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x636, 4)]
[(stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x637, 4), (stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x636, 4)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x637, 4), (stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x636, 4)]
[(stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x637, 4)]
[(stack, 0xfffffffffffffbc6, 2) INDIRECT (stack, 0xfffffffffffffbc6, 2) , (const, 0x637, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000280, 8) , (unique, 0x10000258, 8) , (const, 0x62, 4) , (unique, 0x10000298, 8), (unique, 0x10000298, 8) COPY (const, 0x4b0620, 8), (unique, 0x10000280, 8) COPY (const, 0x4b0568, 8), (unique, 0x10000258, 8) COPY (const, 0x4b0530, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x485154, 8), (register, 0x20, 8) CAST (unique, 0x10000893, 8), (unique, 0x10000893, 8) INT_ADD (unique, 0x1000088b, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000088b, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x606, 4), (stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x605, 4)]
[(stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x606, 4), (stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x605, 4)]
[(stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x606, 4), (stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x605, 4)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x606, 4), (stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x605, 4)]
[(stack, 0xfffffffffffffbc6, 2) INDIRECT (stack, 0xfffffffffffffbc6, 2) , (const, 0x606, 4)]
[(unique, 0x10000847, 4) COPY (stack, 0xfffffffffffffbb0, 4), (stack, 0xfffffffffffffbb0, 4) SUBPIECE (stack, 0xfffffffffffffbb0, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x606, 4), (stack, 0xfffffffffffffbb0, 8) INT_OR (unique, 0x10000207, 8) , (unique, 0x1000020f, 8), (unique, 0x1000020f, 8) INT_ZEXT (register, 0x0, 4), (unique, 0x10000207, 8) INT_AND (stack, 0xfffffffffffffbb0, 8) , (const, 0xffffffff00000000, 8)]
[ ---  CBRANCH (ram, 0x485181, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3200, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000089b, 8), (unique, 0x1000089b, 8) CALL (ram, 0x46b290, 8) , (register, 0x38, 8) , (unique, 0x3200, 8) , (const, 0xa, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc6, 8), (register, 0x38, 8) INT_SEXT (unique, 0x10000887, 4), (unique, 0x10000887, 4) CAST (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x48517a, 8), (register, 0x20, 8) CAST (unique, 0x100008b3, 8), (unique, 0x100008b3, 8) INT_ADD (unique, 0x100008ab, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100008ab, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x627, 4), (stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x626, 4)]
[(stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x627, 4), (stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x626, 4)]
[(stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x627, 4), (stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x626, 4)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x627, 4), (stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x626, 4)]
[(stack, 0xfffffffffffffbc6, 2) INDIRECT (stack, 0xfffffffffffffbc6, 2) , (const, 0x627, 4)]
[ ---  CALL (ram, 0x401120, 8) , (unique, 0x3200, 8) , (const, 0x20, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000190, 8) , (const, 0x1, 8), (unique, 0x10000190, 8) INT_2COMP (unique, 0x100008a3, 8), (unique, 0x100008a3, 8) CAST (unique, 0x3200, 8)]
[(unique, 0x1000084b, 4) COPY (stack, 0xfffffffffffffbb0, 4), (stack, 0xfffffffffffffbb0, 4) SUBPIECE (stack, 0xfffffffffffffbb0, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x627, 4)]
[(stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffb9c, 4) MULTIEQUAL (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4)]
[(stack, 0xfffffffffffffb98, 4) MULTIEQUAL (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4)]
[(register, 0x80, 4) MULTIEQUAL (unique, 0x10000847, 4) , (unique, 0x1000084b, 4)]
[(stack, 0xfffffffffffffbc6, 2) COPY (const, 0x93a, 2)]
[ ---  BRANCH (ram, 0x484dfe, 1)]
[(stack, 0xfffffffffffffbc6, 2) MULTIEQUAL (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2)]
[(stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffb9c, 4) MULTIEQUAL (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4)]
[(stack, 0xfffffffffffffb98, 4) MULTIEQUAL (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x485215, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x3f, 4) , (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x485234, 8), (register, 0x20, 8) CAST (unique, 0x100008c3, 8), (unique, 0x100008c3, 8) INT_ADD (unique, 0x100008bb, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100008bb, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x5e3, 4), (stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x5e2, 4)]
[(stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x5e3, 4), (stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x5e2, 4)]
[(stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x5e3, 4), (stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x5e2, 4)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x5e3, 4), (stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x5e2, 4)]
[(stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x5e3, 4)]
[(stack, 0xfffffffffffffbc6, 2) INDIRECT (stack, 0xfffffffffffffbc6, 2) , (const, 0x5e3, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000268, 8) , (unique, 0x10000250, 8) , (const, 0x6b, 4) , (unique, 0x10000290, 8), (unique, 0x10000290, 8) COPY (const, 0x4b0620, 8), (unique, 0x10000268, 8) COPY (const, 0x4b053a, 8), (unique, 0x10000250, 8) COPY (const, 0x4b0530, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (const, 0xc, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x100005af, 8) , (unique, 0x1000070b, 8) , (const, 0x8, 8), (unique, 0x1000070b, 8) INT_ADD (unique, 0x10000703, 8) , (const, 0x1, 8), (unique, 0x10000703, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x100005af, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0x0, 8) INT_SEXT (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (unique, 0x3200, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x10000348, 8) , (unique, 0x100005bf, 8) , (const, 0x8, 8), (unique, 0x100005bf, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x10000348, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0x0, 8) INT_SEXT (register, 0x18, 4)]
[(unique, 0x10000817, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x484d32, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(stack, 0xfffffffffffffbc6, 2) MULTIEQUAL (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2)]
[(stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffb9c, 4) MULTIEQUAL (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4)]
[(stack, 0xfffffffffffffb98, 4) MULTIEQUAL (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000807, 8) , (unique, 0x1000080f, 8) , (unique, 0x10000817, 8)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (register, 0x0, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x485258, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x3f, 4) , (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x485277, 8), (register, 0x20, 8) CAST (unique, 0x100008d3, 8), (unique, 0x100008d3, 8) INT_ADD (unique, 0x100008cb, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100008cb, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x5da, 4), (stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x5d9, 4), (stack, 0xfffffffffffffb98, 4) MULTIEQUAL (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4)]
[(stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x5da, 4), (stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x5d9, 4), (stack, 0xfffffffffffffb9c, 4) MULTIEQUAL (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4)]
[(stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x5da, 4), (stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x5d9, 4), (stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x5da, 4), (stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x5d9, 4), (stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x5da, 4), (stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffbc6, 2) INDIRECT (stack, 0xfffffffffffffbc6, 2) , (const, 0x5da, 4), (stack, 0xfffffffffffffbc6, 2) MULTIEQUAL (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000270, 8) , (unique, 0x10000260, 8) , (const, 0x78, 4) , (unique, 0x100002a0, 8), (unique, 0x100002a0, 8) COPY (const, 0x4b0620, 8), (unique, 0x10000270, 8) COPY (const, 0x4b053a, 8), (unique, 0x10000260, 8) COPY (const, 0x4b0530, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (const, 0x0, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x100005df, 8) , (unique, 0x10000723, 8) , (const, 0x8, 8), (unique, 0x10000723, 8) INT_ADD (unique, 0x1000071b, 8) , (const, 0x1, 8), (unique, 0x1000071b, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x100005df, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0x10, 8) INT_SEXT (register, 0x18, 4)]
[(unique, 0x10000827, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x484d96, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x25, 1)]
[(stack, 0xfffffffffffffbc6, 2) MULTIEQUAL (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2)]
[(stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffb9c, 4) MULTIEQUAL (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4)]
[(stack, 0xfffffffffffffb98, 4) MULTIEQUAL (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x4850a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0xa0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0xa0, 1) COPY (const, 0x30, 1)]
[ ---  BRANCH (ram, 0x484e76, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0xa0, 1) COPY (const, 0x20, 1)]
[(register, 0xa0, 1) MULTIEQUAL (register, 0xa0, 1) , (register, 0xa0, 1)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x90, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x485046, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x2a, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x4851b5, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008e3, 8) , (unique, 0x3100, 8), (unique, 0x100008e3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100008db, 8), (unique, 0x100008db, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x48505e, 1)]
[(register, 0x10, 8) CAST (unique, 0x100008f3, 8), (unique, 0x100008f3, 8) INT_ADD (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100008eb, 8), (unique, 0x100008eb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x8, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000219, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x90, 4)]
[(unique, 0x10000221, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x1000022a, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x484e91, 1) , (unique, 0x10000229, 1), (unique, 0x10000229, 1) INT_EQUAL (unique, 0x10000218, 1) , (const, 0x2e, 1), (unique, 0x10000218, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x0, 1)]
[ ---  CBRANCH (ram, 0x4851d7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000221, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x485207, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000903, 8) , (unique, 0x3100, 8), (unique, 0x10000903, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100008fb, 8), (unique, 0x100008fb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4851eb, 1)]
[(register, 0x10, 8) CAST (unique, 0x10000913, 8), (unique, 0x10000913, 8) INT_ADD (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000090b, 8), (unique, 0x1000090b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x8, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000221, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) PTRADD (unique, 0x10000221, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x484e91, 1)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x1000022a, 4) , (unique, 0xbc80, 4)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10000221, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x484e99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x6c, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0x10000218, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x484eda, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x5a, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4850b6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x73, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x484ef5, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbb00, 1) , (const, 0x74, 1)]
[ ---  CBRANCH (ram, 0x484fe5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x75, 1)]
[ ---  CBRANCH (ram, 0x485080, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x78, 1)]
[ ---  CBRANCH (ram, 0x484f09, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x484ff9, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x2f, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000923, 8), (unique, 0x10000923, 8) INT_ADD (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000091b, 8), (unique, 0x1000091b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000933, 8) , (unique, 0x3100, 8), (unique, 0x10000933, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000092b, 8), (unique, 0x1000092b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x484f15, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4850b3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x73, 1)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4851c6, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000943, 8) , (unique, 0x3100, 8), (unique, 0x10000943, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000093b, 8), (unique, 0x1000093b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4850ce, 1)]
[(register, 0x8, 8) CAST (unique, 0x10000953, 8), (unique, 0x10000953, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000094b, 8), (unique, 0x1000094b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (unique, 0xbd80, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x10000458, 8) , (unique, 0x1000064f, 8) , (const, 0x8, 8), (unique, 0x1000064f, 8) INT_MULT (register, 0xa0, 8) , (const, 0x2, 8), (unique, 0x10000458, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0xa0, 8) INT_SEXT (register, 0x18, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x4850f9, 8), (register, 0x20, 8) CAST (unique, 0x10000973, 8), (unique, 0x10000973, 8) INT_ADD (unique, 0x1000096b, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000096b, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x47b, 4), (stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x47a, 4)]
[(stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x47b, 4), (stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x47a, 4)]
[(stack, 0xfffffffffffffbc6, 2) INDIRECT (stack, 0xfffffffffffffbc6, 2) , (const, 0x47b, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000097b, 8), (unique, 0x1000097b, 8) CALL (ram, 0x401190, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000983, 8), (unique, 0x10000983, 8) INT_SEXT (stack, 0xfffffffffffffba8, 4), (stack, 0xfffffffffffffba8, 4) SUBPIECE (stack, 0xfffffffffffffba8, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x47b, 4), (stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x47a, 4), (stack, 0xfffffffffffffba8, 8) CAST (unique, 0x10000963, 8), (unique, 0x10000963, 8) INT_OR (unique, 0x100001e6, 8) , (unique, 0x100001ee, 8), (unique, 0x100001ee, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x100001e6, 8) INT_AND (unique, 0x1000095b, 8) , (const, 0xffffffff00000000, 8), (unique, 0x1000095b, 8) CAST (stack, 0xfffffffffffffba8, 8)]
[(unique, 0x1000084f, 8) COPY (stack, 0xfffffffffffffba0, 8), (stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x47b, 4), (stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x47a, 4), (stack, 0xfffffffffffffba0, 8) COPY (register, 0x98, 8)]
[(unique, 0x10000857, 4) COPY (stack, 0xfffffffffffffbb0, 4), (stack, 0xfffffffffffffbb0, 4) SUBPIECE (stack, 0xfffffffffffffbb0, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x47b, 4), (stack, 0xfffffffffffffbb0, 8) INT_OR (unique, 0x100001f6, 8) , (unique, 0x100001fe, 8), (unique, 0x100001fe, 8) INT_ZEXT (register, 0x80, 4), (unique, 0x100001f6, 8) INT_AND (stack, 0xfffffffffffffbb0, 8) , (const, 0xffffffff00000000, 8)]
[ ---  CBRANCH (ram, 0x4851fa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffba8, 4) , (const, 0xffffffff, 4), (stack, 0xfffffffffffffba8, 4) SUBPIECE (stack, 0xfffffffffffffba8, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x47b, 4), (stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x47a, 4), (stack, 0xfffffffffffffba8, 8) CAST (unique, 0x10000963, 8), (unique, 0x10000963, 8) INT_OR (unique, 0x100001e6, 8) , (unique, 0x100001ee, 8), (unique, 0x100001ee, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x100001e6, 8) INT_AND (unique, 0x1000095b, 8) , (const, 0xffffffff00000000, 8), (unique, 0x1000095b, 8) CAST (stack, 0xfffffffffffffba8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (register, 0x0, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x100006bf, 8) , (unique, 0x1000079b, 8) , (const, 0x8, 8), (unique, 0x1000079b, 8) INT_ADD (unique, 0x10000793, 8) , (const, 0x1, 8), (unique, 0x10000793, 8) INT_MULT (register, 0xa0, 8) , (const, 0x2, 8), (unique, 0x100006bf, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8)]
[ ---  BRANCH (ram, 0x484ece, 1)]
[(unique, 0x100007cf, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x48511e, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)]
[(unique, 0x100007d7, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (register, 0x10, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x1000066f, 8) , (unique, 0x1000076b, 8) , (const, 0x8, 8), (unique, 0x1000076b, 8) INT_ADD (unique, 0x10000763, 8) , (const, 0x1, 8), (unique, 0x10000763, 8) INT_MULT (register, 0xa0, 8) , (const, 0x2, 8), (unique, 0x1000066f, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100007cf, 8) , (unique, 0x100007d7, 8)]
[ ---  BRANCH (ram, 0x484ece, 1)]
[ ---  CBRANCH (ram, 0x48500a, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 1) , (const, 0x74, 1)]
[(unique, 0x10000540, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x485080, 1) , (unique, 0x10000548, 1), (unique, 0x10000548, 1) INT_NOTEQUAL (unique, 0x10000549, 1) , (const, 0x25, 1), (unique, 0x10000549, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (unique, 0x10000540, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x10000388, 8) , (unique, 0x100005ef, 8) , (const, 0x8, 8), (unique, 0x100005ef, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x10000388, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0x0, 8) INT_SEXT (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (const, 0x1, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x1000060f, 8) , (unique, 0x1000073b, 8) , (const, 0x8, 8), (unique, 0x1000073b, 8) INT_ADD (unique, 0x10000733, 8) , (const, 0x1, 8), (unique, 0x10000733, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x1000060f, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0x0, 8) INT_SEXT (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x48502c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x75, 1)]
[ ---  CBRANCH (ram, 0x485080, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x78, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x10000238, 8), (unique, 0x10000238, 8) PTRSUB (const, 0x0, 8) , (const, 0x48509f, 8), (register, 0x20, 8) CAST (unique, 0x10000993, 8), (unique, 0x10000993, 8) INT_ADD (unique, 0x1000098b, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000098b, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x2b8, 4), (stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x2b7, 4)]
[(stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x2b8, 4), (stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x2b7, 4)]
[(stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x2b8, 4), (stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x2b7, 4)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x2b8, 4), (stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x2b7, 4)]
[(stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x2b8, 4)]
[(stack, 0xfffffffffffffbc6, 2) INDIRECT (stack, 0xfffffffffffffbc6, 2) , (const, 0x2b8, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000278, 8) , (unique, 0x10000248, 8) , (const, 0xd8, 4) , (unique, 0x10000288, 8), (unique, 0x10000288, 8) COPY (const, 0x4b0620, 8), (unique, 0x10000278, 8) COPY (const, 0x4b0549, 8), (unique, 0x10000248, 8) COPY (const, 0x4b0530, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x485016, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x485038, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x2f, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(register, 0x10, 8) CAST (unique, 0x100009a3, 8), (unique, 0x100009a3, 8) INT_ADD (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000099b, 8), (unique, 0x1000099b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100009b3, 8) , (unique, 0x3100, 8), (unique, 0x100009b3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100009ab, 8), (unique, 0x100009ab, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x485022, 1)]
[(register, 0x38, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x484f18, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8)]
[(register, 0x20, 8) CAST (unique, 0x100009d3, 8), (unique, 0x100009d3, 8) INT_ADD (unique, 0x100009cb, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x100009cb, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x334, 4)]
[(stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x334, 4), (stack, 0xfffffffffffffb9c, 4) COPY (unique, 0x10000219, 4)]
[(stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x334, 4), (stack, 0xfffffffffffffba0, 8) CAST (unique, 0x100009c3, 8), (unique, 0x100009c3, 8) INT_OR (unique, 0x100001d0, 8) , (unique, 0x100001d8, 8), (unique, 0x100001d8, 8) INT_ZEXT (register, 0x80, 4), (unique, 0x100001d0, 8) INT_AND (unique, 0x100009bb, 8) , (const, 0xffffffff00000000, 8), (unique, 0x100009bb, 8) CAST (stack, 0xfffffffffffffba0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100009e3, 8), (unique, 0x100009e3, 8) INT_ADD (unique, 0x100009db, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100009db, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffba8, 8) COPY (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x8, 8)]
[(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x18, 8), (register, 0x30, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) CAST (unique, 0x100009f3, 8), (unique, 0x100009f3, 8) INT_ADD (unique, 0x100009eb, 8) , (const, 0xffffffffffffffef, 8), (unique, 0x100009eb, 8) CAST (register, 0x20, 8)]
[(register, 0x10, 8) COPY (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x484f72, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x78, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x8, 8)]
[(register, 0x10, 8) COPY (const, 0xa, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x484f80, 8), (register, 0x20, 8) CAST (unique, 0x10000a03, 8), (unique, 0x10000a03, 8) INT_ADD (unique, 0x100009fb, 8) , (const, 0xffffffffffffffd8, 8), (unique, 0x100009fb, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffb98, 4) INDIRECT (stack, 0xfffffffffffffb98, 4) , (const, 0x377, 4)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x377, 4)]
[(stack, 0xfffffffffffffbc6, 2) INDIRECT (stack, 0xfffffffffffffbc6, 2) , (const, 0x377, 4)]
[(register, 0x90, 8) INT_SEXT (stack, 0xfffffffffffffb9c, 4), (stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x377, 4)]
[(stack, 0xfffffffffffffba0, 4) SUBPIECE (stack, 0xfffffffffffffba0, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x377, 4)]
[(register, 0x10, 8) CAST (unique, 0x10000a1b, 8), (unique, 0x10000a1b, 8) INT_SUB (stack, 0xfffffffffffffbb0, 8) , (unique, 0x10000a13, 8), (unique, 0x10000a13, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000a0b, 8), (unique, 0x10000a0b, 8) CALL (ram, 0x46b290, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffbb0, 8) INDIRECT (register, 0x30, 8) , (const, 0x377, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x484fde, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffb9c, 4) , (const, 0xffffffff, 4), (stack, 0xfffffffffffffb9c, 4) INDIRECT (stack, 0xfffffffffffffb9c, 4) , (const, 0x377, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x484fd0, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0x10000a23, 8) , (register, 0x90, 8), (unique, 0x10000a23, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 1), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000a33, 8), (unique, 0x10000a33, 8) INT_SUB (stack, 0xfffffffffffffbb0, 8) , (unique, 0x10000a2b, 8), (unique, 0x10000a2b, 8) CAST (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (register, 0x0, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x100003d0, 8) , (unique, 0x1000061f, 8) , (const, 0x8, 8), (unique, 0x1000061f, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x100003d0, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0x8, 8) INT_SEXT (register, 0x18, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (register, 0x10, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x1000063f, 8) , (unique, 0x10000753, 8) , (const, 0x8, 8), (unique, 0x10000753, 8) INT_ADD (unique, 0x1000074b, 8) , (const, 0x1, 8), (unique, 0x1000074b, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x1000063f, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (register, 0x8, 8) INT_SEXT (register, 0x18, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100007e7, 8) COPY (register, 0x20, 8)]
[(unique, 0x100007ff, 8) COPY (stack, 0xfffffffffffffba8, 8)]
[ ---  BRANCH (ram, 0x484ed1, 1)]
[(stack, 0xfffffffffffffbc6, 2) MULTIEQUAL (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2)]
[(stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffb9c, 4) MULTIEQUAL (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4)]
[(stack, 0xfffffffffffffb98, 4) MULTIEQUAL (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4)]
[(register, 0x80, 4) MULTIEQUAL (stack, 0xfffffffffffffba0, 4) , (register, 0x80, 4) , (unique, 0x10000857, 4) , (unique, 0x10000857, 4)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100007e7, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x98, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x100007ff, 8) , (unique, 0x10000540, 8) , (unique, 0x1000084f, 8) , (unique, 0x1000084f, 8)]
[ ---  BRANCH (ram, 0x484d9d, 1)]
[(stack, 0xfffffffffffffbc6, 2) MULTIEQUAL (stack, 0xfffffffffffffbc6, 2) , (stack, 0xfffffffffffffbc6, 2)]
[(stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffb9c, 4) MULTIEQUAL (stack, 0xfffffffffffffb9c, 4) , (stack, 0xfffffffffffffb9c, 4)]
[(stack, 0xfffffffffffffb98, 4) MULTIEQUAL (stack, 0xfffffffffffffb98, 4) , (stack, 0xfffffffffffffb98, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x10000837, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x484d20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) INT_SEXT (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x100007bf, 16) , (const, 0x14, 8), (unique, 0x100007bf, 16) INT_LEFT (unique, 0x100007af, 16) , (const, 0x40, 16), (unique, 0x100007af, 16) INT_SEXT (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
