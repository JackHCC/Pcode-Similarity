[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x25, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x2a, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x25, 4)]
[(ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x2a, 4), (ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x25, 4)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x2a, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x25, 4)]
[(ram, 0x4c4ed0, 8) INDIRECT (register, 0x0, 8) , (const, 0x2a, 4), (register, 0x0, 8) CALL (ram, 0x4843b0, 8) , (ram, 0x4c87e8, 8) , (ram, 0x4c87b8, 8) , (unique, 0x1000024c, 8) , (unique, 0x10000244, 8), (unique, 0x1000024c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4ec8, 8), (unique, 0x10000244, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4ec0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x2a, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x25, 4)]
[(ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x2a, 4), (ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x25, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x2a, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x25, 4)]
[(ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x2a, 4), (ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x25, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x2a, 4), (ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x25, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x2a, 4), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x25, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2a, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x1000039e, 8) , (const, 0x25, 4), (unique, 0x1000039e, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2a, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x25, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2a, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x25, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25, 4)]
[(unique, 0x100003d6, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003de, 8), (unique, 0x100003de, 8) CALL (ram, 0x426550, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x47fe7b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003de, 8), (unique, 0x100003de, 8) CALL (ram, 0x426550, 8) , (const, 0x28, 8)]
[(register, 0x8, 8) COPY (const, 0x4afb40, 8)]
[ ---  BRANCH (ram, 0x47fe6d, 1)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x98, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x98, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x98, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x98, 4), (stack, 0xffffffffffffffc0, 8) COPY (ram, 0x4c4ec8, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x9a, 4), (ram, 0x4c4eb0, 8) INDIRECT (unique, 0x100003d6, 8) , (const, 0x98, 4)]
[(ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x9a, 4), (ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x98, 4)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x9a, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x98, 4)]
[(ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x9a, 4), (ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x98, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x9a, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x98, 4)]
[(ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x9a, 4), (ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x98, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x9a, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x98, 4)]
[(ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x9a, 4), (ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x98, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x9a, 4), (ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x98, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x9a, 4), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x98, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003e6, 8), (unique, 0x100003e6, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_MULT (register, 0x10, 8) , (const, 0xa0, 8), (register, 0x10, 8) INT_DIV (unique, 0x3100, 8) , (const, 0x28, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x3680, 8) , (const, 0x4f, 8), (unique, 0x3680, 8) INT_MULT (ram, 0x4c4ec8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x47fe66, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003e6, 8), (unique, 0x100003e6, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_MULT (register, 0x10, 8) , (const, 0xa0, 8), (register, 0x10, 8) INT_DIV (unique, 0x3100, 8) , (const, 0x28, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x3680, 8) , (const, 0x4f, 8), (unique, 0x3680, 8) INT_MULT (ram, 0x4c4ec8, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4afc80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000204, 8), (unique, 0x10000204, 8) COPY (const, 0x4af63a, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) COPY (const, 0x4afca0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x10, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) INT_MULT (register, 0x10, 8) , (const, 0xffffffffffffffd8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0xdb, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0xd8, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0xb8, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0xb4, 4)]
[(ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0xdb, 4), (ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0xd8, 4), (ram, 0x4c4eb8, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0xdb, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0xd8, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0xb8, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0xb4, 4)]
[(ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0xdb, 4), (ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0xd8, 4), (ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0xb8, 4), (ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0xb4, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0xdb, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0xd8, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0xb8, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0xb4, 4)]
[(ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0xdb, 4), (ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0xd8, 4), (ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0xb8, 4), (ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0xb4, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0xdb, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0xd8, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0xb8, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0xb4, 4)]
[(ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0xdb, 4), (ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0xd8, 4), (ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0xb8, 4), (ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0xb4, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0xdb, 4), (ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0xd8, 4), (ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0xb8, 4), (ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0xb4, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0xdb, 4), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0xd8, 4), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0xb8, 4), (ram, 0x4c8860, 8) INDIRECT (unique, 0x10000396, 8) , (const, 0xb4, 4), (unique, 0x10000396, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x16, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0x100003a6, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x4afcb7, 8)]
[(unique, 0x100003be, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47fc79, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (const, 0x0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0xef, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0xef, 4), (ram, 0x4c4eb8, 4) MULTIEQUAL (ram, 0x4c4eb8, 4) , (ram, 0x4c4eb8, 4)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0xef, 4), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8)]
[(ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0xef, 4), (ram, 0x4c4ed0, 8) MULTIEQUAL (ram, 0x4c4ed0, 8) , (ram, 0x4c4ed0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0xef, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0xef, 4), (ram, 0x4c4ee8, 4) MULTIEQUAL (ram, 0x4c4ee8, 4) , (ram, 0x4c4ee8, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0xef, 4), (ram, 0x4c7f40, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8)]
[(ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0xef, 4), (ram, 0x4c87b8, 8) MULTIEQUAL (ram, 0x4c87b8, 8) , (ram, 0x4c87b8, 8)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0xef, 4), (ram, 0x4c87e8, 8) MULTIEQUAL (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0xef, 4), (ram, 0x4c8860, 8) MULTIEQUAL (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xef, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xef, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xef, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x3680, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xef, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x401120, 8) , (unique, 0x3100, 8) , (const, 0x0, 8) , (unique, 0x3680, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8)]
[(unique, 0x100003ae, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3a00, 8)]
[(unique, 0x100003c6, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x3680, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000018b, 8) MULTIEQUAL (unique, 0x100003a6, 8) , (unique, 0x100003ae, 8) , (unique, 0x100003b6, 8)]
[(unique, 0x1000019b, 8) MULTIEQUAL (unique, 0x100003be, 8) , (unique, 0x100003c6, 8) , (unique, 0x100003ce, 8)]
[(unique, 0x100001a3, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0x100001ab, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(unique, 0x100001b3, 4) MULTIEQUAL (ram, 0x4c4eb8, 4) , (ram, 0x4c4eb8, 4) , (ram, 0x4c4eb8, 4)]
[(unique, 0x100001b7, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8)]
[(unique, 0x100001bf, 8) MULTIEQUAL (ram, 0x4c4ed0, 8) , (ram, 0x4c4ed0, 8) , (ram, 0x4c4ed0, 8)]
[(unique, 0x100001c7, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(unique, 0x100001cf, 4) MULTIEQUAL (ram, 0x4c4ee8, 4) , (ram, 0x4c4ee8, 4) , (ram, 0x4c4ee8, 4)]
[(unique, 0x100001d3, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8)]
[(unique, 0x100001db, 8) MULTIEQUAL (ram, 0x4c87b8, 8) , (ram, 0x4c87b8, 8) , (ram, 0x4c87b8, 8)]
[(unique, 0x100001e3, 8) MULTIEQUAL (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8)]
[(unique, 0x100001eb, 8) MULTIEQUAL (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8)]
[ ---  CBRANCH (ram, 0x47fce0, 1) , (unique, 0x1000018a, 1), (unique, 0x1000018a, 1) INT_NOTEQUAL (unique, 0x10000193, 8) , (unique, 0x10000234, 8), (unique, 0x10000234, 8) PTRADD (unique, 0x1000022c, 8) , (const, 0x18, 8) , (const, 0x1, 8), (unique, 0x1000022c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4afc80, 8), (unique, 0x10000193, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001a3, 8) , (const, 0x0, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x172, 4), (ram, 0x4c4eb0, 8) INDIRECT (unique, 0x100001ab, 8) , (const, 0x16f, 4)]
[(ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x172, 4), (ram, 0x4c4eb8, 4) INDIRECT (unique, 0x100001b3, 4) , (const, 0x16f, 4)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x172, 4), (ram, 0x4c4ec8, 8) INDIRECT (unique, 0x100001b7, 8) , (const, 0x16f, 4)]
[(ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x172, 4), (ram, 0x4c4ed0, 8) INDIRECT (unique, 0x100001bf, 8) , (const, 0x16f, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x172, 4), (ram, 0x4c4ee0, 8) INDIRECT (unique, 0x100001c7, 8) , (const, 0x16f, 4)]
[(ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x172, 4), (ram, 0x4c4ee8, 4) INDIRECT (unique, 0x100001cf, 4) , (const, 0x16f, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x172, 4), (ram, 0x4c7f40, 8) COPY (const, 0x1a, 8)]
[(ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x172, 4), (ram, 0x4c87b8, 8) INDIRECT (unique, 0x100001db, 8) , (const, 0x16f, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x172, 4), (ram, 0x4c87e8, 8) INDIRECT (unique, 0x100001e3, 8) , (const, 0x16f, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x172, 4), (ram, 0x4c8860, 8) INDIRECT (unique, 0x100001eb, 8) , (const, 0x16f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000019b, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47fd09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47fd23, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4eb8, 4) COPY (ram, 0x4c4eb8, 4)]
[(ram, 0x4c4ec8, 8) COPY (ram, 0x4c4ec8, 8)]
[(ram, 0x4c4ed0, 8) COPY (ram, 0x4c4ed0, 8)]
[(ram, 0x4c4ee0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c4ee8, 4) COPY (ram, 0x4c4ee8, 4)]
[(ram, 0x4c7f40, 8) COPY (ram, 0x4c7f40, 8)]
[(ram, 0x4c87b8, 8) COPY (ram, 0x4c87b8, 8)]
[(ram, 0x4c87e8, 8) COPY (ram, 0x4c87e8, 8)]
[(ram, 0x4c8860, 8) COPY (ram, 0x4c8860, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x19a, 4)]
[(ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x19a, 4)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x19a, 4)]
[(ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x19a, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x19a, 4)]
[(ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x19a, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x19a, 4)]
[(ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x19a, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x19a, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x19a, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x19a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x19a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x19a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x19a, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x8, 8) CAST (unique, 0x100003f6, 8), (unique, 0x100003f6, 8) INT_SUB (unique, 0x100003ee, 8) , (register, 0x0, 8), (unique, 0x100003ee, 8) CAST (unique, 0x100002e4, 8), (unique, 0x100002e4, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffff000, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000115, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x47fd60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x8, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffe00, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x47fd49, 1)]
[(register, 0x20, 8) CAST (unique, 0x10000406, 8), (unique, 0x10000406, 8) INT_ADD (unique, 0x100003fe, 8) , (unique, 0x1000011d, 8), (unique, 0x100003fe, 8) CAST (register, 0x20, 8), (unique, 0x1000011d, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x10000115, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x47fe23, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x10000115, 4) , (const, 0xff0, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2cf, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2cf, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2cf, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2cf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3880, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3880, 8), (unique, 0x3880, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x47fd72, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47fd87, 8), (register, 0x20, 8) CAST (unique, 0x1000041e, 8), (unique, 0x1000041e, 8) INT_ADD (unique, 0x10000416, 8) , (unique, 0x1000030c, 8), (unique, 0x10000416, 8) CAST (register, 0x20, 8), (unique, 0x1000030c, 8) INT_ADD (unique, 0x1000011d, 8) , (const, 0xfffffffffffffff8, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x216, 4)]
[(ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x216, 4)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x216, 4)]
[(ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x216, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x216, 4)]
[(ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x216, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x216, 4)]
[(ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x216, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x216, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x216, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x216, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x215, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x216, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x215, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x216, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x215, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x216, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x215, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x47fe40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000426, 8), (unique, 0x10000426, 8) CALL (ram, 0x401060, 8) , (register, 0x38, 8) , (unique, 0x1000034e, 8) , (unique, 0x3100, 8), (register, 0x38, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x1000040e, 8) , (unique, 0x10000304, 8), (unique, 0x1000040e, 8) CAST (register, 0x20, 8), (unique, 0x10000304, 8) INT_ADD (unique, 0x1000011d, 8) , (const, 0xf, 8), (unique, 0x1000034e, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x38, 8) COPY (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x47fdc9, 1)]
[(register, 0x30, 8) COPY (const, 0x1, 8)]
[(unique, 0x1000035e, 8) COPY (register, 0x0, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x1000035e, 8) , (register, 0x10, 8)]
[(unique, 0x10000356, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x1000036e, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47fdb5, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x1000042e, 1) , (const, 0x2, 1), (unique, 0x1000042e, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)]
[(unique, 0x10000376, 8) COPY (unique, 0x3100, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000036e, 8) , (unique, 0x10000376, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10000356, 8) , (unique, 0x3100, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x47fda0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47fdce, 8), (register, 0x20, 8) CAST (unique, 0x10000437, 8), (unique, 0x10000437, 8) INT_ADD (unique, 0x1000042f, 8) , (unique, 0x10000314, 8), (unique, 0x1000042f, 8) CAST (register, 0x20, 8), (unique, 0x10000314, 8) INT_ADD (unique, 0x1000011d, 8) , (const, 0xfffffffffffffff8, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x25f, 4)]
[(ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x25f, 4)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x25f, 4)]
[(ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x25f, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x25f, 4)]
[(ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x25f, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x25f, 4)]
[(ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x25f, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x25f, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x25f, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x25f, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x25e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x25f, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x25e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x25f, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x25e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25e, 4)]
[ ---  CBRANCH (ram, 0x47fe66, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000043f, 8), (unique, 0x1000043f, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3680, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47fdfd, 8), (register, 0x20, 8) CAST (unique, 0x1000044f, 8), (unique, 0x1000044f, 8) INT_ADD (unique, 0x10000447, 8) , (unique, 0x1000031c, 8), (unique, 0x10000447, 8) CAST (register, 0x20, 8), (unique, 0x1000031c, 8) INT_ADD (unique, 0x1000011d, 8) , (const, 0xfffffffffffffff8, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x285, 4)]
[(ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x285, 4)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x285, 4)]
[(ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x285, 4)]
[(ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x285, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x285, 4)]
[(ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x285, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x285, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x285, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x285, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x284, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x285, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x284, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x285, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x284, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x285, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x284, 4)]
[ ---  CALL (ram, 0x47f640, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0x1000021c, 8) , (unique, 0x100001f4, 8) , (const, 0x0, 8) , (const, 0x0, 8), (unique, 0x1000021c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4af666, 8), (unique, 0x100001f4, 8) COPY (const, 0x49e998, 8)]
[ ---  CBRANCH (ram, 0x47fe2e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) INDIRECT (register, 0x0, 8) , (const, 0x285, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47fe33, 8), (register, 0x20, 8) CAST (unique, 0x1000045f, 8), (unique, 0x1000045f, 8) INT_ADD (unique, 0x10000457, 8) , (unique, 0x10000324, 8), (unique, 0x10000457, 8) CAST (register, 0x20, 8), (unique, 0x10000324, 8) INT_ADD (unique, 0x1000011d, 8) , (const, 0xfffffffffffffff8, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x2a8, 4)]
[(ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x2a8, 4)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x2a8, 4)]
[(ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x2a8, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x2a8, 4)]
[(ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x2a8, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x2a8, 4)]
[(ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x2a8, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x2a8, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x2a8, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2a8, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2a7, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2a8, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2a7, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2a8, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2a7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a7, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4ee0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x47fe0a, 1)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4eb8, 4) COPY (ram, 0x4c4eb8, 4), (ram, 0x4c4eb8, 4) MULTIEQUAL (ram, 0x4c4eb8, 4) , (ram, 0x4c4eb8, 4)]
[(ram, 0x4c4ec8, 8) COPY (ram, 0x4c4ec8, 8), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8)]
[(ram, 0x4c4ed0, 8) COPY (ram, 0x4c4ed0, 8), (ram, 0x4c4ed0, 8) MULTIEQUAL (ram, 0x4c4ed0, 8) , (ram, 0x4c4ed0, 8)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4ee8, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c7f40, 8) COPY (ram, 0x4c7f40, 8), (ram, 0x4c7f40, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8)]
[(ram, 0x4c87b8, 8) COPY (ram, 0x4c87b8, 8), (ram, 0x4c87b8, 8) MULTIEQUAL (ram, 0x4c87b8, 8) , (ram, 0x4c87b8, 8)]
[(ram, 0x4c87e8, 8) COPY (ram, 0x4c87e8, 8), (ram, 0x4c87e8, 8) MULTIEQUAL (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8)]
[(ram, 0x4c8860, 8) COPY (ram, 0x4c8860, 8), (ram, 0x4c8860, 8) MULTIEQUAL (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0xb0, 8) PTRADD (unique, 0x1000019b, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000019b, 8) , (register, 0xb8, 8), (register, 0xb8, 8) CAST (unique, 0x1000046f, 8), (unique, 0x1000046f, 8) INT_ADD (unique, 0x10000467, 8) , (stack, 0xffffffffffffffb8, 8), (unique, 0x10000467, 8) CAST (unique, 0x100001a3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xb8, 8), (unique, 0x3400, 8) CAST (unique, 0x1000048f, 8), (unique, 0x1000048f, 8) INT_ADD (unique, 0x10000487, 8) , (stack, 0xffffffffffffffb0, 8), (unique, 0x10000487, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) CAST (unique, 0x1000046f, 8), (unique, 0x1000046f, 8) INT_ADD (unique, 0x10000467, 8) , (stack, 0xffffffffffffffb8, 8), (unique, 0x10000467, 8) CAST (unique, 0x100001a3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000020c, 8), (unique, 0x1000020c, 8) COPY (const, 0x4af63a, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb8, 8) CAST (unique, 0x1000046f, 8), (unique, 0x1000046f, 8) INT_ADD (unique, 0x10000467, 8) , (stack, 0xffffffffffffffb8, 8), (unique, 0x10000467, 8) CAST (unique, 0x100001a3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0xb8, 8) CAST (unique, 0x1000046f, 8), (unique, 0x1000046f, 8) INT_ADD (unique, 0x10000467, 8) , (stack, 0xffffffffffffffb8, 8), (unique, 0x10000467, 8) CAST (unique, 0x100001a3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000497, 8), (unique, 0x10000497, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x1000047f, 8), (unique, 0x1000047f, 8) INT_ADD (unique, 0x10000477, 8) , (const, 0x8, 8), (unique, 0x10000477, 8) CAST (unique, 0x10000193, 8), (register, 0xb8, 8) CAST (unique, 0x1000046f, 8), (unique, 0x1000046f, 8) INT_ADD (unique, 0x10000467, 8) , (stack, 0xffffffffffffffb8, 8), (unique, 0x10000467, 8) CAST (unique, 0x100001a3, 8)]
[(unique, 0x3a00, 8) PTRADD (unique, 0x1000018b, 8) , (unique, 0x100002cc, 8) , (const, 0x1, 8), (unique, 0x100002cc, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000497, 8), (unique, 0x10000497, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x1000047f, 8), (unique, 0x1000047f, 8) INT_ADD (unique, 0x10000477, 8) , (const, 0x8, 8), (unique, 0x10000477, 8) CAST (unique, 0x10000193, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x142, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x13b, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x138, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x127, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x123, 4), (ram, 0x4c4eb0, 8) INDIRECT (unique, 0x100001ab, 8) , (const, 0x11f, 4)]
[(ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x142, 4), (ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x13b, 4), (ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x138, 4), (ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x127, 4), (ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x123, 4), (ram, 0x4c4eb8, 4) INDIRECT (unique, 0x100001b3, 4) , (const, 0x11f, 4)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x142, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x13b, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x138, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x127, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x123, 4), (ram, 0x4c4ec8, 8) INDIRECT (unique, 0x100001b7, 8) , (const, 0x11f, 4)]
[(ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x142, 4), (ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x13b, 4), (ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x138, 4), (ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x127, 4), (ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x123, 4), (ram, 0x4c4ed0, 8) INDIRECT (unique, 0x100001bf, 8) , (const, 0x11f, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x142, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x13b, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x138, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x127, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x123, 4), (ram, 0x4c4ee0, 8) INDIRECT (unique, 0x100001c7, 8) , (const, 0x11f, 4)]
[(ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x142, 4), (ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x13b, 4), (ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x138, 4), (ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x127, 4), (ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x123, 4), (ram, 0x4c4ee8, 4) INDIRECT (unique, 0x100001cf, 4) , (const, 0x11f, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x142, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x13b, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x138, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x127, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x123, 4), (ram, 0x4c7f40, 8) INDIRECT (unique, 0x100001d3, 8) , (const, 0x11f, 4)]
[(ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x142, 4), (ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x13b, 4), (ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x138, 4), (ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x127, 4), (ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x123, 4), (ram, 0x4c87b8, 8) INDIRECT (unique, 0x100001db, 8) , (const, 0x11f, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x142, 4), (ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x13b, 4), (ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x138, 4), (ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x127, 4), (ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x123, 4), (ram, 0x4c87e8, 8) INDIRECT (unique, 0x100001e3, 8) , (const, 0x11f, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x142, 4), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x13b, 4), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x138, 4), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x127, 4), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x123, 4), (ram, 0x4c8860, 8) INDIRECT (unique, 0x100001eb, 8) , (const, 0x11f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000018b, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0xb8, 8) CAST (unique, 0x1000046f, 8), (unique, 0x1000046f, 8) INT_ADD (unique, 0x10000467, 8) , (stack, 0xffffffffffffffb8, 8), (unique, 0x10000467, 8) CAST (unique, 0x100001a3, 8)]
[ ---  CBRANCH (ram, 0x47fe47, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000018b, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2e0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2e0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2e0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2e0, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000214, 8) , (unique, 0x100001fc, 8) , (const, 0x2e2, 4) , (unique, 0x10000224, 8), (unique, 0x10000224, 8) COPY (const, 0x4afc18, 8), (unique, 0x10000214, 8) COPY (const, 0x4af64d, 8), (unique, 0x100001fc, 8) COPY (const, 0x4af47c, 8)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x2e0, 4)]
[(ram, 0x4c4eb8, 4) COPY (ram, 0x4c4eb8, 4), (ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x2e0, 4)]
[(ram, 0x4c4ec8, 8) COPY (ram, 0x4c4ec8, 8), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x2e0, 4)]
[(ram, 0x4c4ed0, 8) COPY (ram, 0x4c4ed0, 8), (ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x2e0, 4)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x2e0, 4)]
[(ram, 0x4c4ee8, 4) COPY (ram, 0x4c4ee8, 4), (ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x2e0, 4)]
[(ram, 0x4c7f40, 8) COPY (ram, 0x4c7f40, 8), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x2e0, 4)]
[(ram, 0x4c87b8, 8) COPY (ram, 0x4c87b8, 8), (ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x2e0, 4)]
[(ram, 0x4c87e8, 8) COPY (ram, 0x4c87e8, 8), (ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x2e0, 4)]
[(ram, 0x4c8860, 8) COPY (ram, 0x4c8860, 8), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x2e0, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x100003b6, 8) COPY (unique, 0x3a00, 8)]
[(unique, 0x100003ce, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47fc6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8860, 8) MULTIEQUAL (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8)]
[(ram, 0x4c87e8, 8) MULTIEQUAL (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8)]
[(ram, 0x4c87b8, 8) MULTIEQUAL (ram, 0x4c87b8, 8) , (ram, 0x4c87b8, 8)]
[(ram, 0x4c7f40, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8)]
[(ram, 0x4c4ee8, 4) MULTIEQUAL (ram, 0x4c4ee8, 4) , (ram, 0x4c4ee8, 4)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (register, 0x0, 8)]
[(ram, 0x4c4ed0, 8) MULTIEQUAL (ram, 0x4c4ed0, 8) , (ram, 0x4c4ed0, 8)]
[(ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8)]
[(ram, 0x4c4eb8, 4) MULTIEQUAL (ram, 0x4c4eb8, 4) , (ram, 0x4c4eb8, 4)]
[(register, 0x8, 8) COPY (const, 0x4afaf0, 8)]
[(unique, 0x10000366, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(unique, 0x10000386, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47fe7b, 8), (register, 0x20, 8) CAST (unique, 0x100004a7, 8), (unique, 0x100004a7, 8) INT_ADD (unique, 0x1000049f, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000049f, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000366, 8) , (register, 0x20, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2c3, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2c2, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2c3, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2c2, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2c3, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2c2, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2c3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2c2, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x489410, 8) , (const, 0xc, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x2c3, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (unique, 0x10000386, 8) , (unique, 0x100003d6, 8)]
[(ram, 0x4c4eb8, 4) COPY (ram, 0x4c4eb8, 4), (ram, 0x4c4eb8, 4) INDIRECT (ram, 0x4c4eb8, 4) , (const, 0x2c3, 4), (ram, 0x4c4eb8, 4) MULTIEQUAL (ram, 0x4c4eb8, 4) , (ram, 0x4c4eb8, 4)]
[(ram, 0x4c4ec8, 8) COPY (ram, 0x4c4ec8, 8), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x2c3, 4), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8)]
[(ram, 0x4c4ed0, 8) COPY (ram, 0x4c4ed0, 8), (ram, 0x4c4ed0, 8) INDIRECT (ram, 0x4c4ed0, 8) , (const, 0x2c3, 4), (ram, 0x4c4ed0, 8) MULTIEQUAL (ram, 0x4c4ed0, 8) , (ram, 0x4c4ed0, 8)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x2c3, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4ee8, 4) COPY (ram, 0x4c4ee8, 4), (ram, 0x4c4ee8, 4) INDIRECT (ram, 0x4c4ee8, 4) , (const, 0x2c3, 4), (ram, 0x4c4ee8, 4) MULTIEQUAL (ram, 0x4c4ee8, 4) , (ram, 0x4c4ee8, 4)]
[(ram, 0x4c7f40, 8) COPY (ram, 0x4c7f40, 8), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x2c3, 4), (ram, 0x4c7f40, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8)]
[(ram, 0x4c87b8, 8) COPY (ram, 0x4c87b8, 8), (ram, 0x4c87b8, 8) INDIRECT (ram, 0x4c87b8, 8) , (const, 0x2c3, 4), (ram, 0x4c87b8, 8) MULTIEQUAL (ram, 0x4c87b8, 8) , (ram, 0x4c87b8, 8)]
[(ram, 0x4c87e8, 8) COPY (ram, 0x4c87e8, 8), (ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x2c3, 4), (ram, 0x4c87e8, 8) MULTIEQUAL (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8)]
[(ram, 0x4c8860, 8) COPY (ram, 0x4c8860, 8), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x2c3, 4), (ram, 0x4c8860, 8) MULTIEQUAL (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8)]
[ ---  RETURN (const, 0x1, 4)]
