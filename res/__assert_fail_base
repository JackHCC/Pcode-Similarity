[(register, 0xa8, 8) INT_AND (register, 0x8, 8) , (const, 0xffffffff, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001a0, 8), (unique, 0x100001a0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x403055, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4f68, 8) , (const, 0x0, 8)]
[(ram, 0x4c4f68, 8) INDIRECT (ram, 0x4c4f68, 8) , (const, 0x45, 4)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x45, 4)]
[(ram, 0x4c6088, 8) INDIRECT (ram, 0x4c6088, 8) , (const, 0x45, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x45, 4)]
[(ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0x45, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x45, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x45, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x45, 4)]
[ ---  CALL (ram, 0x0, 8) , (const, 0x1, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4c77c0, 8) MULTIEQUAL (ram, 0x4c77c0, 8) , (ram, 0x4c77c0, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c6088, 8) MULTIEQUAL (ram, 0x4c6088, 8) , (ram, 0x4c6088, 8)]
[(ram, 0x4c56c8, 8) MULTIEQUAL (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8)]
[(ram, 0x4c4f68, 8) MULTIEQUAL (ram, 0x4c4f68, 8) , (ram, 0x4c4f68, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x49a38d, 8)]
[(unique, 0x10000170, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x403158, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(unique, 0x10000178, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRSUB (const, 0x0, 8) , (const, 0x4b0c15, 8)]
[ ---  BRANCH (ram, 0x403065, 1)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000170, 8) , (unique, 0x10000178, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x18, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x49a38d, 8)]
[ ---  CBRANCH (ram, 0x40308c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (ram, 0x4c6088, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4b0c15, 8)]
[(ram, 0x4c4f68, 8) INDIRECT (ram, 0x4c4f68, 8) , (const, 0x83, 4)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x83, 4)]
[(ram, 0x4c6088, 8) INDIRECT (ram, 0x4c6088, 8) , (const, 0x83, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x83, 4)]
[(ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0x83, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x83, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x83, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x83, 4)]
[ ---  CBRANCH (ram, 0x40313d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x410e90, 8) , (unique, 0x3800, 8) , (register, 0x38, 8) , (ram, 0x4c6088, 8) , (register, 0x8, 8) , (register, 0x10, 8) , (register, 0xa8, 8) , (register, 0x18, 8) , (register, 0x0, 8) , (register, 0x30, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4c4f68, 8) INDIRECT (ram, 0x4c4f68, 8) , (const, 0x13f, 4)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x13f, 4)]
[(ram, 0x4c6088, 8) INDIRECT (ram, 0x4c6088, 8) , (const, 0x13f, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x13f, 4)]
[(ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x13f, 4)]
[ ---  CALL (ram, 0x455530, 8) , (const, 0x2, 4) , (unique, 0x10000138, 8) , (const, 0x12, 8), (unique, 0x10000138, 8) COPY (const, 0x49a3c0, 8)]
[ ---  BRANCH (ram, 0x4011ba, 1)]
[ ---  CALL (ram, 0x417fe0, 8) , (const, 0x0, 8) , (unique, 0x10000148, 8) , (stack, 0xffffffffffffffc8, 8), (unique, 0x10000148, 8) COPY (const, 0x4b50a6, 8)]
[ ---  CALL (ram, 0x4185c0, 8) , (unique, 0x100001a8, 8), (unique, 0x100001a8, 8) CAST (ram, 0x4c56c8, 8), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0xb1, 4)]
[(ram, 0x4c4f68, 8) INDIRECT (ram, 0x4c4f68, 8) , (const, 0xff, 4), (ram, 0x4c4f68, 8) INDIRECT (ram, 0x4c4f68, 8) , (const, 0xb5, 4), (ram, 0x4c4f68, 8) INDIRECT (ram, 0x4c4f68, 8) , (const, 0xb1, 4)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0xff, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0xb5, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0xb1, 4)]
[(ram, 0x4c6088, 8) INDIRECT (ram, 0x4c6088, 8) , (const, 0xff, 4), (ram, 0x4c6088, 8) INDIRECT (ram, 0x4c6088, 8) , (const, 0xb5, 4), (ram, 0x4c6088, 8) INDIRECT (ram, 0x4c6088, 8) , (const, 0xb1, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xff, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xb5, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xb1, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (register, 0x30, 4) , (const, 0xff, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4), (register, 0x30, 4) INT_ADD (stack, 0xffffffffffffffc4, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (ram, 0x4c6118, 8) , (const, 0x0, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xb5, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xb5, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xb1, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xb1, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xb5, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xb1, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb5, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb1, 4)]
[(unique, 0x10000188, 8) COPY (ram, 0x4c77c0, 8), (ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0xff, 4), (ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0xb5, 4), (ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0xb1, 4)]
[ ---  CBRANCH (ram, 0x4011b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CAST (unique, 0x100001b4, 8), (unique, 0x100001b4, 8) CALL (ram, 0x4561f0, 8) , (const, 0x0, 8) , (register, 0x30, 8) , (const, 0x3, 4) , (const, 0x22, 4) , (const, 0xffffffff, 4) , (const, 0x0, 8), (register, 0x30, 8) INT_SEXT (unique, 0x100001b0, 4), (unique, 0x100001b0, 4) CAST (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4), (register, 0x30, 4) INT_ADD (stack, 0xffffffffffffffc4, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (ram, 0x4c6118, 8) , (const, 0x0, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xb5, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xb5, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xb1, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xb1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4c4f68, 8) INDIRECT (ram, 0x4c4f68, 8) , (const, 0x118, 4), (ram, 0x4c4f68, 8) INDIRECT (ram, 0x4c4f68, 8) , (const, 0x115, 4)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x118, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x115, 4)]
[(ram, 0x4c6088, 8) INDIRECT (ram, 0x4c6088, 8) , (const, 0x118, 4), (ram, 0x4c6088, 8) INDIRECT (ram, 0x4c6088, 8) , (const, 0x115, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x118, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x115, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x118, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x118, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x118, 4)]
[ ---  CALL (ram, 0x401020, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000168, 8) COPY (ram, 0x4c77c0, 8), (ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0x118, 4), (ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0x115, 4)]
[(unique, 0x10000190, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4011b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c77c0, 8) , (const, 0x0, 8), (ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0x118, 4), (ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0x115, 4)]
[(ram, 0x4c4f68, 8) INDIRECT (ram, 0x4c4f68, 8) , (const, 0x134, 4), (ram, 0x4c4f68, 8) MULTIEQUAL (ram, 0x4c4f68, 8) , (ram, 0x4c4f68, 8)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x134, 4), (ram, 0x4c56c8, 8) MULTIEQUAL (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8)]
[(ram, 0x4c6088, 8) INDIRECT (ram, 0x4c6088, 8) , (const, 0x134, 4), (ram, 0x4c6088, 8) MULTIEQUAL (ram, 0x4c6088, 8) , (ram, 0x4c6088, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x134, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0x134, 4), (ram, 0x4c77c0, 8) COPY (unique, 0x10000198, 8), (unique, 0x10000198, 8) MULTIEQUAL (unique, 0x10000188, 8) , (unique, 0x10000190, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x134, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x426b40, 8) , (stack, 0xffffffffffffffc8, 8), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x137, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x137, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x4011c4, 8)]
[(ram, 0x4c4f68, 8) COPY (ram, 0x4c4f68, 8), (ram, 0x4c4f68, 8) INDIRECT (ram, 0x4c4f68, 8) , (const, 0x137, 4), (ram, 0x4c4f68, 8) MULTIEQUAL (ram, 0x4c4f68, 8) , (ram, 0x4c4f68, 8)]
[(ram, 0x4c56c8, 8) COPY (ram, 0x4c56c8, 8), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x137, 4), (ram, 0x4c56c8, 8) MULTIEQUAL (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8)]
[(ram, 0x4c6088, 8) COPY (ram, 0x4c6088, 8), (ram, 0x4c6088, 8) INDIRECT (ram, 0x4c6088, 8) , (const, 0x137, 4), (ram, 0x4c6088, 8) MULTIEQUAL (ram, 0x4c6088, 8) , (ram, 0x4c6088, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x137, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c77c0, 8) COPY (ram, 0x4c77c0, 8), (ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0x137, 4), (ram, 0x4c77c0, 8) MULTIEQUAL (ram, 0x4c77c0, 8) , (ram, 0x4c77c0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CALL (ram, 0x4562a0, 8) , (unique, 0x10000168, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (ram, 0x4c77c0, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x12d, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x12d, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x12c, 4)]
[ ---  CALL (ram, 0x4011b0, 8)]
[(ram, 0x4c4f68, 8) COPY (ram, 0x4c4f68, 8), (ram, 0x4c4f68, 8) INDIRECT (ram, 0x4c4f68, 8) , (const, 0x12d, 4), (ram, 0x4c4f68, 8) INDIRECT (ram, 0x4c4f68, 8) , (const, 0x12c, 4)]
[(ram, 0x4c56c8, 8) COPY (ram, 0x4c56c8, 8), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x12d, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x12c, 4)]
[(ram, 0x4c6088, 8) COPY (ram, 0x4c6088, 8), (ram, 0x4c6088, 8) INDIRECT (ram, 0x4c6088, 8) , (const, 0x12d, 4), (ram, 0x4c6088, 8) INDIRECT (ram, 0x4c6088, 8) , (const, 0x12c, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x12d, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x12c, 4)]
[(ram, 0x4c77c0, 8) COPY (ram, 0x4c77c0, 8), (ram, 0x4c77c0, 8) INDIRECT (ram, 0x4c77c0, 8) , (const, 0x12d, 4), (ram, 0x4c77c0, 8) INDIRECT (unique, 0x10000180, 8) , (const, 0x12c, 4), (unique, 0x10000180, 8) COPY (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8)]
