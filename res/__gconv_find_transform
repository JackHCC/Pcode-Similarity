[(ram, 0x4c88a8, 8) INDIRECT (ram, 0x4c88a8, 8) , (const, 0x33, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x33, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000224, 8), (unique, 0x10000224, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CALL (ram, 0x45e080, 8)]
[ ---  CBRANCH (ram, 0x45cf68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000022c, 8), (unique, 0x1000022c, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x33, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c88b0, 4) , (const, 0x0, 4)]
[(ram, 0x4c88b0, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a3, 4)]
[(ram, 0x4c88a8, 8) INDIRECT (ram, 0x4c88a8, 8) , (const, 0x2a3, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x2a3, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2a3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a3, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x1000018d, 8), (unique, 0x1000018d, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c88b0, 8)]
[ ---  BRANCH (ram, 0x45cde2, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c88b0, 4) , (const, 0x0, 4)]
[(ram, 0x4c88b0, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c88a8, 8) INDIRECT (ram, 0x4c88a8, 8) , (const, 0x5b, 4), (ram, 0x4c88a8, 8) MULTIEQUAL (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x5b, 4), (ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x5b, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5b, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x45ce40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) CALL (ram, 0x466890, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x45cf40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c88a8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xed, 4)]
[(ram, 0x4c88a8, 8) INDIRECT (ram, 0x4c88a8, 8) , (const, 0xed, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0xed, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x10000214, 8) , (const, 0xed, 4), (unique, 0x10000214, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xed, 4)]
[ ---  CBRANCH (ram, 0x45ce7d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) CALL (ram, 0x4568a0, 8) , (unique, 0x3800, 8) , (unique, 0x10000234, 8) , (unique, 0x1000017d, 8), (unique, 0x10000234, 8) CAST (unique, 0x10000195, 8), (unique, 0x10000195, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c88b8, 8), (unique, 0x1000017d, 8) PTRSUB (const, 0x0, 8) , (const, 0x45bf30, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000244, 8), (unique, 0x10000244, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x109, 4)]
[(ram, 0x4c88a8, 8) INDIRECT (ram, 0x4c88a8, 8) , (const, 0x109, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x109, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x1000021c, 8) , (const, 0x109, 4), (unique, 0x1000021c, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x109, 4)]
[ ---  CBRANCH (ram, 0x45ceb1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000254, 8), (unique, 0x10000254, 8) CALL (ram, 0x4568a0, 8) , (unique, 0x3800, 8) , (unique, 0x1000024c, 8) , (unique, 0x10000185, 8), (unique, 0x1000024c, 8) CAST (unique, 0x1000019d, 8), (unique, 0x1000019d, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c88b8, 8), (unique, 0x10000185, 8) PTRSUB (const, 0x0, 8) , (const, 0x45bf30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000025c, 8), (unique, 0x1000025c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45cf90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000157, 4) , (const, 0x0, 4), (unique, 0x10000157, 4) INT_AND (register, 0x80, 4) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x19f, 4)]
[(ram, 0x4c88a8, 8) INDIRECT (ram, 0x4c88a8, 8) , (const, 0x19f, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x19f, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x19f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x19f, 4)]
[ ---  CBRANCH (ram, 0x45d005, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x401140, 8) , (register, 0x38, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x45cfc2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1bb, 4)]
[(ram, 0x4c88a8, 8) INDIRECT (ram, 0x4c88a8, 8) , (const, 0x1bb, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x1bb, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1bb, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1bb, 4)]
[ ---  CBRANCH (ram, 0x45d005, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x401140, 8) , (register, 0xb8, 8) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[(ram, 0x4c88a8, 8) MULTIEQUAL (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x45cebb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1da, 4)]
[(ram, 0x4c88a8, 8) INDIRECT (ram, 0x4c88a8, 8) , (const, 0x1da, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x1da, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1da, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1da, 4)]
[ ---  CBRANCH (ram, 0x45d005, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x401140, 8) , (register, 0x38, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45cebb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f6, 4)]
[(ram, 0x4c88a8, 8) INDIRECT (ram, 0x4c88a8, 8) , (const, 0x1f6, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x1f6, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1f6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f6, 4)]
[ ---  CBRANCH (ram, 0x45cebb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x401140, 8) , (register, 0xb8, 8) , (register, 0x8, 8)]
[(ram, 0x4c88a8, 8) INDIRECT (ram, 0x4c88a8, 8) , (const, 0x130, 4), (ram, 0x4c88a8, 8) MULTIEQUAL (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x130, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x130, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x0, 4) CALL (ram, 0x45bf80, 8) , (register, 0x38, 8) , (register, 0xb8, 8) , (register, 0x30, 8) , (register, 0x8, 8) , (register, 0x10, 8)]
[(unique, 0x10000210, 4) COPY (ram, 0x4c88b0, 4), (ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x130, 4), (ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[ ---  CBRANCH (ram, 0x45d028, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000264, 8), (unique, 0x10000264, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x130, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c88b0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45cee9, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x10000210, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x45cee9, 1)]
[(ram, 0x4c88b0, 4) INT_ADD (ram, 0x4c88b0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[ ---  CBRANCH (ram, 0x45ce15, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(unique, 0x100000f3, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x45ce15, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[(ram, 0x4c88a8, 8) MULTIEQUAL (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8)]
[ ---  CBRANCH (ram, 0x45d081, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000026c, 8), (unique, 0x1000026c, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c88b0, 4) INT_ADD (ram, 0x4c88b0, 4) , (const, 0xffffffff, 4)]
[(register, 0x88, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x45ce15, 1)]
[(register, 0x88, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x45d060, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000274, 8), (unique, 0x10000274, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c88b0, 4) INT_ADD (ram, 0x4c88b0, 4) , (const, 0xffffffff, 4)]
[(register, 0x88, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x45ce15, 1)]
[(register, 0x88, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x45cf08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000027c, 8), (unique, 0x1000027c, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c88b0, 4) INT_ADD (ram, 0x4c88b0, 4) , (const, 0xffffffff, 4)]
[(unique, 0x100001e4, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001ec, 8) MULTIEQUAL (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8)]
[(unique, 0x100001f4, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x100001fc, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000204, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x0, 4)]
[(unique, 0x100001df, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45ce15, 1) , (unique, 0x100001e3, 1), (unique, 0x100001e3, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x10000209, 4), (unique, 0x10000209, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[(ram, 0x4c88b0, 4) COPY (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x45ce15, 1)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x100001f4, 8) , (unique, 0x100001f4, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (unique, 0x100001df, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[(ram, 0x4c88a8, 8) MULTIEQUAL (ram, 0x4c88a8, 8) , (unique, 0x100001ec, 8) , (unique, 0x100001ec, 8) , (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8) , (ram, 0x4c88a8, 8)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0x10000204, 4) , (unique, 0x10000204, 4) , (register, 0x0, 4) , (unique, 0x100000f3, 4) , (register, 0x88, 4) , (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x45d07c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000284, 8), (unique, 0x10000284, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x100001e4, 8) , (unique, 0x100001e4, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x100001fc, 8) , (unique, 0x100001fc, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c88a8, 8) COPY (ram, 0x4c88a8, 8)]
[(ram, 0x4c88b0, 4) COPY (ram, 0x4c88b0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x88, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xac, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xac, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c88a8, 8) COPY (ram, 0x4c88a8, 8), (ram, 0x4c88a8, 8) INDIRECT (ram, 0x4c88a8, 8) , (const, 0xac, 4)]
[(ram, 0x4c88b0, 4) COPY (ram, 0x4c88b0, 4), (ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0xac, 4)]
[ ---  RETURN (const, 0x1, 4)]
