[ ---  CBRANCH (ram, 0x23084d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee940, 4) , (const, 0x0, 4)]
[(ram, 0x4ee940, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee940, 4) , (const, 0x0, 4)]
[(ram, 0x4ee940, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x230870, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1cb, 4)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x1cb, 4)]
[(ram, 0x4ee960, 8) INDIRECT (ram, 0x4ee960, 8) , (const, 0x1cb, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1cb, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x1cb, 4)]
[ ---  CALL (ram, 0x230690, 8)]
[(unique, 0x10000130, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x1cb, 4)]
[(ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee960, 8) MULTIEQUAL (ram, 0x4ee960, 8) , (ram, 0x4ee960, 8) , (ram, 0x4ee960, 8)]
[(ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x10000130, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee960, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000138, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x230890, 1)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x230880, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000015c, 8), (unique, 0x1000015c, 8) CAST (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x100000c3, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0x100000c3, 8) MULTIEQUAL (unique, 0x10000138, 8) , (register, 0x30, 8)]
[(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_MULT (register, 0x8, 8) , (const, 0x30, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x230940, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x30, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x230877, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000164, 8), (unique, 0x10000164, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x19f, 4)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x19f, 4)]
[(ram, 0x4ee960, 8) INDIRECT (ram, 0x4ee960, 8) , (const, 0x19f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x19f, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x19f, 4)]
[ ---  CBRANCH (ram, 0x23098a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000016c, 8), (unique, 0x1000016c, 8) CALL (ram, 0x1211e0, 8) , (const, 0x1, 8) , (const, 0x908, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2308ef, 1)]
[(register, 0x30, 8) COPY (const, 0x8d8, 8)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x1b1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1b1, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x1b1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (ram, 0x4ee960, 8)]
[(ram, 0x4ee960, 8) COPY (unique, 0x10000154, 8), (unique, 0x10000154, 8) INDIRECT (unique, 0x1000014c, 8) , (const, 0x1b1, 4), (unique, 0x1000014c, 8) COPY (register, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x2f, 8)]
[ ---  BRANCH (ram, 0x2308a2, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000174, 8), (unique, 0x10000174, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000e0, 8) , (const, 0x8, 8), (unique, 0x100000e0, 8) INT_MULT (register, 0x8, 8) , (const, 0x6, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000e0, 8) , (const, 0x8, 8), (unique, 0x100000e0, 8) INT_MULT (register, 0x8, 8) , (const, 0x6, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000e0, 8) , (const, 0x8, 8), (unique, 0x100000e0, 8) INT_MULT (register, 0x8, 8) , (const, 0x6, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000e0, 8) , (const, 0x8, 8), (unique, 0x100000e0, 8) INT_MULT (register, 0x8, 8) , (const, 0x6, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0xd2, 4), (ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0xcf, 4), (ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0xcc, 4), (ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0xc9, 4), (ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0xc6, 4), (ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(ram, 0x4ee960, 8) INDIRECT (ram, 0x4ee960, 8) , (const, 0xd2, 4), (ram, 0x4ee960, 8) INDIRECT (ram, 0x4ee960, 8) , (const, 0xcf, 4), (ram, 0x4ee960, 8) INDIRECT (ram, 0x4ee960, 8) , (const, 0xcc, 4), (ram, 0x4ee960, 8) INDIRECT (ram, 0x4ee960, 8) , (const, 0xc9, 4), (ram, 0x4ee960, 8) INDIRECT (ram, 0x4ee960, 8) , (const, 0xc6, 4), (ram, 0x4ee960, 8) MULTIEQUAL (ram, 0x4ee960, 8) , (ram, 0x4ee960, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd2, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xcf, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xcc, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc9, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc6, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0xd2, 4), (ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0xcf, 4), (ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0xcc, 4), (ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0xc9, 4), (ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0xc6, 4), (ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000e0, 8) , (const, 0x8, 8), (unique, 0x100000e0, 8) INT_MULT (register, 0x8, 8) , (const, 0x6, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x10000128, 8) COPY (ram, 0x4f0900, 8), (ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0xd6, 4), (ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(ram, 0x4ee960, 8) INDIRECT (ram, 0x4ee960, 8) , (const, 0xd6, 4), (ram, 0x4ee960, 8) MULTIEQUAL (ram, 0x4ee960, 8) , (ram, 0x4ee960, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd6, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0xd6, 4), (ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (ram, 0x4f0900, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[ ---  CBRANCH (ram, 0x2308e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000017c, 8), (unique, 0x1000017c, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (ram, 0x2308c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000128, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_XOR (unique, 0x10000128, 8) , (unique, 0x2a200, 8), (unique, 0x2a200, 8) INT_MULT (unique, 0x2a180, 8) , (unique, 0x29e80, 8), (unique, 0x2a180, 8) INT_ZEXT (unique, 0x2a100, 1), (unique, 0x2a100, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x10000128, 8) , (ram, 0x4f0900, 8), (ram, 0x4f0900, 8) INT_XOR (ram, 0x4f0900, 8) , (unique, 0x29f80, 8), (unique, 0x29f80, 8) INT_MULT (unique, 0x29f00, 8) , (unique, 0x29e80, 8), (unique, 0x29f00, 8) INT_ZEXT (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (ram, 0x4f0900, 8) , (register, 0x30, 8), (register, 0x206, 1) INT_EQUAL (unique, 0x10000128, 8) , (ram, 0x4f0900, 8)]
[(ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(ram, 0x4ee960, 8) MULTIEQUAL (ram, 0x4ee960, 8) , (ram, 0x4ee960, 8)]
[(ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x230903, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000144, 4) COPY (unique, 0x10000120, 4), (unique, 0x10000120, 4) INT_ADD (ram, 0x4ee940, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x230925, 1) , (unique, 0x10000124, 1), (unique, 0x10000124, 1) INT_NOTEQUAL (unique, 0x10000120, 4) , (const, 0x0, 4), (unique, 0x10000120, 4) INT_ADD (ram, 0x4ee940, 4) , (const, 0xffffffff, 4)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x15b, 4)]
[(ram, 0x4ee960, 8) INDIRECT (ram, 0x4ee960, 8) , (const, 0x15b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x15b, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x15b, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100000d0, 8), (unique, 0x100000d0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee940, 8)]
[(unique, 0x10000140, 4) COPY (ram, 0x4ee940, 4), (ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x15b, 4), (ram, 0x4ee940, 4) INT_ADD (ram, 0x4ee940, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4ee940, 4) COPY (ram, 0x4ee940, 4), (ram, 0x4ee940, 4) COPY (unique, 0x10000148, 4), (unique, 0x10000148, 4) MULTIEQUAL (unique, 0x10000140, 4) , (unique, 0x10000144, 4)]
[(ram, 0x4ee960, 8) COPY (ram, 0x4ee960, 8), (ram, 0x4ee960, 8) MULTIEQUAL (ram, 0x4ee960, 8) , (ram, 0x4ee960, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0900, 8) COPY (ram, 0x4f0900, 8), (ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (register, 0x0, 1), (register, 0x0, 1) INT_AND (unique, 0x100000af, 1) , (const, 0xc, 1), (unique, 0x100000af, 1) INT_2COMP (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
