[(unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe38, 8)]
[(unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffd48, 8)]
[(stack, 0xfffffffffffffcc8, 4) INDIRECT (stack, 0xfffffffffffffcc8, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffccc, 4) INDIRECT (stack, 0xfffffffffffffccc, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffcd8, 8) INDIRECT (stack, 0xfffffffffffffcd8, 8) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffcf0, 4) INDIRECT (stack, 0xfffffffffffffcf0, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffcf4, 4) INDIRECT (stack, 0xfffffffffffffcf4, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffcf8, 4) INDIRECT (stack, 0xfffffffffffffcf8, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffcfc, 4) INDIRECT (stack, 0xfffffffffffffcfc, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd08, 4) INDIRECT (stack, 0xfffffffffffffd08, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd0c, 4) INDIRECT (stack, 0xfffffffffffffd0c, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd28, 4) INDIRECT (stack, 0xfffffffffffffd28, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd2c, 4) INDIRECT (stack, 0xfffffffffffffd2c, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd38, 4) INDIRECT (stack, 0xfffffffffffffd38, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd3c, 4) INDIRECT (stack, 0xfffffffffffffd3c, 4) , (const, 0x31, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x31, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (unique, 0x100008fd, 8) , (const, 0x31, 4), (unique, 0x100008fd, 8) COPY (register, 0x10, 8)]
[ ---  CALL (ram, 0x494680, 8) , (unique, 0x3200, 8) , (unique, 0x3100, 8) , (stack, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc58, 8)]
[(stack, 0xfffffffffffffd48, 4) COPY (stack, 0xfffffffffffffc58, 4), (stack, 0xfffffffffffffc58, 4) INDIRECT (stack, 0xfffffffffffffc58, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd4c, 4) COPY (stack, 0xfffffffffffffc5c, 4), (stack, 0xfffffffffffffc5c, 4) INDIRECT (stack, 0xfffffffffffffc5c, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd50, 4) COPY (stack, 0xfffffffffffffc60, 4), (stack, 0xfffffffffffffc60, 4) INDIRECT (stack, 0xfffffffffffffc60, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd54, 4) COPY (stack, 0xfffffffffffffc64, 4), (stack, 0xfffffffffffffc64, 4) INDIRECT (stack, 0xfffffffffffffc64, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd58, 4) COPY (stack, 0xfffffffffffffc68, 4), (stack, 0xfffffffffffffc68, 4) INDIRECT (stack, 0xfffffffffffffc68, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd5c, 4) COPY (stack, 0xfffffffffffffc6c, 4), (stack, 0xfffffffffffffc6c, 4) INDIRECT (stack, 0xfffffffffffffc6c, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd60, 4) COPY (stack, 0xfffffffffffffc70, 4), (stack, 0xfffffffffffffc70, 4) INDIRECT (stack, 0xfffffffffffffc70, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd64, 4) COPY (stack, 0xfffffffffffffc74, 4), (stack, 0xfffffffffffffc74, 4) INDIRECT (stack, 0xfffffffffffffc74, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd68, 4) COPY (stack, 0xfffffffffffffc78, 4), (stack, 0xfffffffffffffc78, 4) INDIRECT (stack, 0xfffffffffffffc78, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd6c, 4) COPY (stack, 0xfffffffffffffc7c, 4), (stack, 0xfffffffffffffc7c, 4) INDIRECT (stack, 0xfffffffffffffc7c, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd70, 4) COPY (stack, 0xfffffffffffffc80, 4), (stack, 0xfffffffffffffc80, 4) INDIRECT (stack, 0xfffffffffffffc80, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd74, 4) COPY (stack, 0xfffffffffffffc84, 4), (stack, 0xfffffffffffffc84, 4) INDIRECT (stack, 0xfffffffffffffc84, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd78, 4) COPY (stack, 0xfffffffffffffc88, 4), (stack, 0xfffffffffffffc88, 4) INDIRECT (stack, 0xfffffffffffffc88, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd7c, 4) COPY (stack, 0xfffffffffffffc8c, 4), (stack, 0xfffffffffffffc8c, 4) INDIRECT (stack, 0xfffffffffffffc8c, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd80, 4) COPY (stack, 0xfffffffffffffc90, 4), (stack, 0xfffffffffffffc90, 4) INDIRECT (stack, 0xfffffffffffffc90, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd84, 4) COPY (stack, 0xfffffffffffffc94, 4), (stack, 0xfffffffffffffc94, 4) INDIRECT (stack, 0xfffffffffffffc94, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd88, 4) COPY (stack, 0xfffffffffffffc98, 4), (stack, 0xfffffffffffffc98, 4) INDIRECT (stack, 0xfffffffffffffc98, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd8c, 4) COPY (stack, 0xfffffffffffffc9c, 4), (stack, 0xfffffffffffffc9c, 4) INDIRECT (stack, 0xfffffffffffffc9c, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd90, 4) COPY (stack, 0xfffffffffffffca0, 4), (stack, 0xfffffffffffffca0, 4) INDIRECT (stack, 0xfffffffffffffca0, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd94, 4) COPY (stack, 0xfffffffffffffca4, 4), (stack, 0xfffffffffffffca4, 4) INDIRECT (stack, 0xfffffffffffffca4, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd98, 4) COPY (stack, 0xfffffffffffffca8, 4), (stack, 0xfffffffffffffca8, 4) INDIRECT (stack, 0xfffffffffffffca8, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffd9c, 4) COPY (stack, 0xfffffffffffffcac, 4), (stack, 0xfffffffffffffcac, 4) INDIRECT (stack, 0xfffffffffffffcac, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffda0, 4) COPY (stack, 0xfffffffffffffcb0, 4), (stack, 0xfffffffffffffcb0, 4) INDIRECT (stack, 0xfffffffffffffcb0, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffda4, 4) COPY (stack, 0xfffffffffffffcb4, 4), (stack, 0xfffffffffffffcb4, 4) INDIRECT (stack, 0xfffffffffffffcb4, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffda8, 4) COPY (stack, 0xfffffffffffffcb8, 4), (stack, 0xfffffffffffffcb8, 4) INDIRECT (stack, 0xfffffffffffffcb8, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffdac, 4) COPY (stack, 0xfffffffffffffcbc, 4), (stack, 0xfffffffffffffcbc, 4) INDIRECT (stack, 0xfffffffffffffcbc, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffdb0, 4) COPY (stack, 0xfffffffffffffcc0, 4), (stack, 0xfffffffffffffcc0, 4) INDIRECT (stack, 0xfffffffffffffcc0, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffdb4, 4) COPY (stack, 0xfffffffffffffcc4, 4), (stack, 0xfffffffffffffcc4, 4) INDIRECT (stack, 0xfffffffffffffcc4, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffdd8, 8) INT_ADD (unique, 0x10000865, 8) , (stack, 0xfffffffffffffce8, 4), (unique, 0x10000865, 8) INT_LEFT (unique, 0x1000085d, 8) , (const, 0x20, 8), (unique, 0x1000085d, 8) INT_SEXT (unique, 0x10000905, 4), (unique, 0x10000905, 4) CAST (stack, 0xfffffffffffffcec, 4), (stack, 0xfffffffffffffcec, 4) INDIRECT (stack, 0xfffffffffffffcec, 4) , (const, 0x31, 4), (stack, 0xfffffffffffffce8, 4) INDIRECT (stack, 0xfffffffffffffce8, 4) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffe08, 8) INT_ADD (unique, 0x10000875, 8) , (stack, 0xfffffffffffffd18, 4), (unique, 0x10000875, 8) INT_LEFT (unique, 0x1000086d, 8) , (const, 0x20, 8), (unique, 0x1000086d, 8) INT_SEXT (unique, 0x10000909, 4), (unique, 0x10000909, 4) CAST (stack, 0xfffffffffffffd1c, 4), (stack, 0xfffffffffffffd1c, 4) INDIRECT (stack, 0xfffffffffffffd1c, 4) , (const, 0x31, 4), (stack, 0xfffffffffffffd18, 4) INDIRECT (stack, 0xfffffffffffffd18, 4) , (const, 0x31, 4)]
[ ---  BRANCH (ram, 0x494e5f, 1)]
[(stack, 0xfffffffffffffc58, 4) INDIRECT (stack, 0xfffffffffffffc58, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc58, 4) MULTIEQUAL (stack, 0xfffffffffffffc58, 4) , (stack, 0xfffffffffffffc58, 4)]
[(stack, 0xfffffffffffffc5c, 4) INDIRECT (stack, 0xfffffffffffffc5c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc5c, 4) MULTIEQUAL (stack, 0xfffffffffffffc5c, 4) , (stack, 0xfffffffffffffc5c, 4)]
[(stack, 0xfffffffffffffc60, 4) INDIRECT (stack, 0xfffffffffffffc60, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc60, 4) MULTIEQUAL (stack, 0xfffffffffffffc60, 4) , (stack, 0xfffffffffffffc60, 4)]
[(stack, 0xfffffffffffffc64, 4) INDIRECT (stack, 0xfffffffffffffc64, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc64, 4) MULTIEQUAL (stack, 0xfffffffffffffc64, 4) , (stack, 0xfffffffffffffc64, 4)]
[(stack, 0xfffffffffffffc68, 4) INDIRECT (stack, 0xfffffffffffffc68, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc68, 4) MULTIEQUAL (stack, 0xfffffffffffffc68, 4) , (stack, 0xfffffffffffffc68, 4)]
[(stack, 0xfffffffffffffc6c, 4) INDIRECT (stack, 0xfffffffffffffc6c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc6c, 4) MULTIEQUAL (stack, 0xfffffffffffffc6c, 4) , (stack, 0xfffffffffffffc6c, 4)]
[(stack, 0xfffffffffffffc70, 4) INDIRECT (stack, 0xfffffffffffffc70, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc70, 4) MULTIEQUAL (stack, 0xfffffffffffffc70, 4) , (stack, 0xfffffffffffffc70, 4)]
[(stack, 0xfffffffffffffc74, 4) INDIRECT (stack, 0xfffffffffffffc74, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc74, 4) MULTIEQUAL (stack, 0xfffffffffffffc74, 4) , (stack, 0xfffffffffffffc74, 4)]
[(stack, 0xfffffffffffffc78, 4) INDIRECT (stack, 0xfffffffffffffc78, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc78, 4) MULTIEQUAL (stack, 0xfffffffffffffc78, 4) , (stack, 0xfffffffffffffc78, 4)]
[(stack, 0xfffffffffffffc7c, 4) INDIRECT (stack, 0xfffffffffffffc7c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc7c, 4) MULTIEQUAL (stack, 0xfffffffffffffc7c, 4) , (stack, 0xfffffffffffffc7c, 4)]
[(stack, 0xfffffffffffffc80, 4) INDIRECT (stack, 0xfffffffffffffc80, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc80, 4) MULTIEQUAL (stack, 0xfffffffffffffc80, 4) , (stack, 0xfffffffffffffc80, 4)]
[(stack, 0xfffffffffffffc84, 4) INDIRECT (stack, 0xfffffffffffffc84, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc84, 4) MULTIEQUAL (stack, 0xfffffffffffffc84, 4) , (stack, 0xfffffffffffffc84, 4)]
[(stack, 0xfffffffffffffc88, 4) INDIRECT (stack, 0xfffffffffffffc88, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc88, 4) MULTIEQUAL (stack, 0xfffffffffffffc88, 4) , (stack, 0xfffffffffffffc88, 4)]
[(stack, 0xfffffffffffffc8c, 4) INDIRECT (stack, 0xfffffffffffffc8c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc8c, 4) MULTIEQUAL (stack, 0xfffffffffffffc8c, 4) , (stack, 0xfffffffffffffc8c, 4)]
[(stack, 0xfffffffffffffc90, 4) INDIRECT (stack, 0xfffffffffffffc90, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc90, 4) MULTIEQUAL (stack, 0xfffffffffffffc90, 4) , (stack, 0xfffffffffffffc90, 4)]
[(stack, 0xfffffffffffffc94, 4) INDIRECT (stack, 0xfffffffffffffc94, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc94, 4) MULTIEQUAL (stack, 0xfffffffffffffc94, 4) , (stack, 0xfffffffffffffc94, 4)]
[(stack, 0xfffffffffffffc98, 4) INDIRECT (stack, 0xfffffffffffffc98, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc98, 4) MULTIEQUAL (stack, 0xfffffffffffffc98, 4) , (stack, 0xfffffffffffffc98, 4)]
[(stack, 0xfffffffffffffc9c, 4) INDIRECT (stack, 0xfffffffffffffc9c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffc9c, 4) MULTIEQUAL (stack, 0xfffffffffffffc9c, 4) , (stack, 0xfffffffffffffc9c, 4)]
[(stack, 0xfffffffffffffca0, 4) INDIRECT (stack, 0xfffffffffffffca0, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffca0, 4) MULTIEQUAL (stack, 0xfffffffffffffca0, 4) , (stack, 0xfffffffffffffca0, 4)]
[(stack, 0xfffffffffffffca4, 4) INDIRECT (stack, 0xfffffffffffffca4, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffca4, 4) MULTIEQUAL (stack, 0xfffffffffffffca4, 4) , (stack, 0xfffffffffffffca4, 4)]
[(stack, 0xfffffffffffffca8, 4) INDIRECT (stack, 0xfffffffffffffca8, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffca8, 4) MULTIEQUAL (stack, 0xfffffffffffffca8, 4) , (stack, 0xfffffffffffffca8, 4)]
[(stack, 0xfffffffffffffcac, 4) INDIRECT (stack, 0xfffffffffffffcac, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcac, 4) MULTIEQUAL (stack, 0xfffffffffffffcac, 4) , (stack, 0xfffffffffffffcac, 4)]
[(stack, 0xfffffffffffffcb0, 4) INDIRECT (stack, 0xfffffffffffffcb0, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcb0, 4) MULTIEQUAL (stack, 0xfffffffffffffcb0, 4) , (stack, 0xfffffffffffffcb0, 4)]
[(stack, 0xfffffffffffffcb4, 4) INDIRECT (stack, 0xfffffffffffffcb4, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcb4, 4) MULTIEQUAL (stack, 0xfffffffffffffcb4, 4) , (stack, 0xfffffffffffffcb4, 4)]
[(stack, 0xfffffffffffffcb8, 4) INDIRECT (stack, 0xfffffffffffffcb8, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcb8, 4) MULTIEQUAL (stack, 0xfffffffffffffcb8, 4) , (stack, 0xfffffffffffffcb8, 4)]
[(stack, 0xfffffffffffffcbc, 4) INDIRECT (stack, 0xfffffffffffffcbc, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcbc, 4) MULTIEQUAL (stack, 0xfffffffffffffcbc, 4) , (stack, 0xfffffffffffffcbc, 4)]
[(stack, 0xfffffffffffffcc0, 4) INDIRECT (stack, 0xfffffffffffffcc0, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcc0, 4) MULTIEQUAL (stack, 0xfffffffffffffcc0, 4) , (stack, 0xfffffffffffffcc0, 4)]
[(stack, 0xfffffffffffffcc4, 4) INDIRECT (stack, 0xfffffffffffffcc4, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcc4, 4) MULTIEQUAL (stack, 0xfffffffffffffcc4, 4) , (stack, 0xfffffffffffffcc4, 4)]
[(stack, 0xfffffffffffffcc8, 4) INDIRECT (stack, 0xfffffffffffffcc8, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcc8, 4) MULTIEQUAL (stack, 0xfffffffffffffcc8, 4) , (stack, 0xfffffffffffffcc8, 4)]
[(stack, 0xfffffffffffffccc, 4) INDIRECT (stack, 0xfffffffffffffccc, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffccc, 4) MULTIEQUAL (stack, 0xfffffffffffffccc, 4) , (stack, 0xfffffffffffffccc, 4)]
[(stack, 0xfffffffffffffcd8, 8) INDIRECT (stack, 0xfffffffffffffcd8, 8) , (const, 0x91, 4), (stack, 0xfffffffffffffcd8, 8) MULTIEQUAL (stack, 0xfffffffffffffcd8, 8) , (stack, 0xfffffffffffffcd8, 8)]
[(stack, 0xfffffffffffffce8, 4) INDIRECT (stack, 0xfffffffffffffce8, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffce8, 4) MULTIEQUAL (stack, 0xfffffffffffffce8, 4) , (stack, 0xfffffffffffffce8, 4)]
[(stack, 0xfffffffffffffcec, 4) INDIRECT (stack, 0xfffffffffffffcec, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcec, 4) MULTIEQUAL (stack, 0xfffffffffffffcec, 4) , (stack, 0xfffffffffffffcec, 4)]
[(stack, 0xfffffffffffffcf0, 4) INDIRECT (stack, 0xfffffffffffffcf0, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcf0, 4) MULTIEQUAL (stack, 0xfffffffffffffcf0, 4) , (stack, 0xfffffffffffffcf0, 4)]
[(stack, 0xfffffffffffffcf4, 4) INDIRECT (stack, 0xfffffffffffffcf4, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcf4, 4) MULTIEQUAL (stack, 0xfffffffffffffcf4, 4) , (stack, 0xfffffffffffffcf4, 4)]
[(stack, 0xfffffffffffffcf8, 4) INDIRECT (stack, 0xfffffffffffffcf8, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcf8, 4) MULTIEQUAL (stack, 0xfffffffffffffcf8, 4) , (stack, 0xfffffffffffffcf8, 4)]
[(stack, 0xfffffffffffffcfc, 4) INDIRECT (stack, 0xfffffffffffffcfc, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffcfc, 4) MULTIEQUAL (stack, 0xfffffffffffffcfc, 4) , (stack, 0xfffffffffffffcfc, 4)]
[(stack, 0xfffffffffffffd08, 4) INDIRECT (stack, 0xfffffffffffffd08, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd08, 4) MULTIEQUAL (stack, 0xfffffffffffffd08, 4) , (stack, 0xfffffffffffffd08, 4)]
[(stack, 0xfffffffffffffd0c, 4) INDIRECT (stack, 0xfffffffffffffd0c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd0c, 4) MULTIEQUAL (stack, 0xfffffffffffffd0c, 4) , (stack, 0xfffffffffffffd0c, 4)]
[(stack, 0xfffffffffffffd18, 4) INDIRECT (stack, 0xfffffffffffffd18, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd18, 4) MULTIEQUAL (stack, 0xfffffffffffffd18, 4) , (stack, 0xfffffffffffffd18, 4)]
[(stack, 0xfffffffffffffd1c, 4) INDIRECT (stack, 0xfffffffffffffd1c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd1c, 4) MULTIEQUAL (stack, 0xfffffffffffffd1c, 4) , (stack, 0xfffffffffffffd1c, 4)]
[(stack, 0xfffffffffffffd28, 4) INDIRECT (stack, 0xfffffffffffffd28, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd28, 4) MULTIEQUAL (stack, 0xfffffffffffffd28, 4) , (stack, 0xfffffffffffffd28, 4)]
[(stack, 0xfffffffffffffd2c, 4) INDIRECT (stack, 0xfffffffffffffd2c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd2c, 4) MULTIEQUAL (stack, 0xfffffffffffffd2c, 4) , (stack, 0xfffffffffffffd2c, 4)]
[(stack, 0xfffffffffffffd38, 4) INDIRECT (stack, 0xfffffffffffffd38, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd38, 4) MULTIEQUAL (stack, 0xfffffffffffffd38, 4) , (stack, 0xfffffffffffffd38, 4)]
[(stack, 0xfffffffffffffd3c, 4) INDIRECT (stack, 0xfffffffffffffd3c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd3c, 4) MULTIEQUAL (stack, 0xfffffffffffffd3c, 4) , (stack, 0xfffffffffffffd3c, 4)]
[(stack, 0xfffffffffffffd48, 4) INDIRECT (stack, 0xfffffffffffffd48, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd48, 4) MULTIEQUAL (stack, 0xfffffffffffffd48, 4) , (stack, 0xfffffffffffffd48, 4)]
[(stack, 0xfffffffffffffd4c, 4) INDIRECT (stack, 0xfffffffffffffd4c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd4c, 4) MULTIEQUAL (stack, 0xfffffffffffffd4c, 4) , (stack, 0xfffffffffffffd4c, 4)]
[(stack, 0xfffffffffffffd50, 4) INDIRECT (stack, 0xfffffffffffffd50, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd50, 4) MULTIEQUAL (stack, 0xfffffffffffffd50, 4) , (stack, 0xfffffffffffffd50, 4)]
[(stack, 0xfffffffffffffd54, 4) INDIRECT (stack, 0xfffffffffffffd54, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd54, 4) MULTIEQUAL (stack, 0xfffffffffffffd54, 4) , (stack, 0xfffffffffffffd54, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd58, 4) MULTIEQUAL (stack, 0xfffffffffffffd58, 4) , (stack, 0xfffffffffffffd58, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd5c, 4) MULTIEQUAL (stack, 0xfffffffffffffd5c, 4) , (stack, 0xfffffffffffffd5c, 4)]
[(stack, 0xfffffffffffffd60, 4) INDIRECT (stack, 0xfffffffffffffd60, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd60, 4) MULTIEQUAL (stack, 0xfffffffffffffd60, 4) , (stack, 0xfffffffffffffd60, 4)]
[(stack, 0xfffffffffffffd64, 4) INDIRECT (stack, 0xfffffffffffffd64, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd64, 4) MULTIEQUAL (stack, 0xfffffffffffffd64, 4) , (stack, 0xfffffffffffffd64, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd68, 4) MULTIEQUAL (stack, 0xfffffffffffffd68, 4) , (stack, 0xfffffffffffffd68, 4)]
[(stack, 0xfffffffffffffd6c, 4) INDIRECT (stack, 0xfffffffffffffd6c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd6c, 4) MULTIEQUAL (stack, 0xfffffffffffffd6c, 4) , (stack, 0xfffffffffffffd6c, 4)]
[(stack, 0xfffffffffffffd70, 4) INDIRECT (stack, 0xfffffffffffffd70, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd70, 4) MULTIEQUAL (stack, 0xfffffffffffffd70, 4) , (stack, 0xfffffffffffffd70, 4)]
[(stack, 0xfffffffffffffd74, 4) INDIRECT (stack, 0xfffffffffffffd74, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd74, 4) MULTIEQUAL (stack, 0xfffffffffffffd74, 4) , (stack, 0xfffffffffffffd74, 4)]
[(stack, 0xfffffffffffffd78, 4) INDIRECT (stack, 0xfffffffffffffd78, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd78, 4) MULTIEQUAL (stack, 0xfffffffffffffd78, 4) , (stack, 0xfffffffffffffd78, 4)]
[(stack, 0xfffffffffffffd7c, 4) INDIRECT (stack, 0xfffffffffffffd7c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd7c, 4) MULTIEQUAL (stack, 0xfffffffffffffd7c, 4) , (stack, 0xfffffffffffffd7c, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xfffffffffffffd84, 4) INDIRECT (stack, 0xfffffffffffffd84, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd84, 4) MULTIEQUAL (stack, 0xfffffffffffffd84, 4) , (stack, 0xfffffffffffffd84, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd88, 4) MULTIEQUAL (stack, 0xfffffffffffffd88, 4) , (stack, 0xfffffffffffffd88, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd8c, 4) MULTIEQUAL (stack, 0xfffffffffffffd8c, 4) , (stack, 0xfffffffffffffd8c, 4)]
[(stack, 0xfffffffffffffd90, 4) INDIRECT (stack, 0xfffffffffffffd90, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd90, 4) MULTIEQUAL (stack, 0xfffffffffffffd90, 4) , (stack, 0xfffffffffffffd90, 4)]
[(stack, 0xfffffffffffffd94, 4) INDIRECT (stack, 0xfffffffffffffd94, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd94, 4) MULTIEQUAL (stack, 0xfffffffffffffd94, 4) , (stack, 0xfffffffffffffd94, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd98, 4) MULTIEQUAL (stack, 0xfffffffffffffd98, 4) , (stack, 0xfffffffffffffd98, 4)]
[(stack, 0xfffffffffffffd9c, 4) INDIRECT (stack, 0xfffffffffffffd9c, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffd9c, 4) MULTIEQUAL (stack, 0xfffffffffffffd9c, 4) , (stack, 0xfffffffffffffd9c, 4)]
[(stack, 0xfffffffffffffda0, 4) INDIRECT (stack, 0xfffffffffffffda0, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffda0, 4) MULTIEQUAL (stack, 0xfffffffffffffda0, 4) , (stack, 0xfffffffffffffda0, 4)]
[(stack, 0xfffffffffffffda4, 4) INDIRECT (stack, 0xfffffffffffffda4, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffda4, 4) MULTIEQUAL (stack, 0xfffffffffffffda4, 4) , (stack, 0xfffffffffffffda4, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffda8, 4) MULTIEQUAL (stack, 0xfffffffffffffda8, 4) , (stack, 0xfffffffffffffda8, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffdac, 4) MULTIEQUAL (stack, 0xfffffffffffffdac, 4) , (stack, 0xfffffffffffffdac, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffdb0, 4) MULTIEQUAL (stack, 0xfffffffffffffdb0, 4) , (stack, 0xfffffffffffffdb0, 4)]
[(stack, 0xfffffffffffffdb4, 4) INDIRECT (stack, 0xfffffffffffffdb4, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffdb4, 4) MULTIEQUAL (stack, 0xfffffffffffffdb4, 4) , (stack, 0xfffffffffffffdb4, 4)]
[(stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x91, 4), (stack, 0xfffffffffffffdd8, 8) MULTIEQUAL (stack, 0xfffffffffffffdd8, 8) , (stack, 0xfffffffffffffdd8, 8)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0x91, 4), (stack, 0xfffffffffffffe08, 8) MULTIEQUAL (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x91, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x91, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x494e28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x5, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x4932c0, 8) , (unique, 0x3200, 8) , (unique, 0x3200, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x494e88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x494e54, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff88, 8) , (const, 0x0, 8)]
[(stack, 0xfffffffffffffc58, 4) INDIRECT (stack, 0xfffffffffffffc58, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc5c, 4) INDIRECT (stack, 0xfffffffffffffc5c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc60, 4) INDIRECT (stack, 0xfffffffffffffc60, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc64, 4) INDIRECT (stack, 0xfffffffffffffc64, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc68, 4) INDIRECT (stack, 0xfffffffffffffc68, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc6c, 4) INDIRECT (stack, 0xfffffffffffffc6c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc70, 4) INDIRECT (stack, 0xfffffffffffffc70, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc74, 4) INDIRECT (stack, 0xfffffffffffffc74, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc78, 4) INDIRECT (stack, 0xfffffffffffffc78, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc7c, 4) INDIRECT (stack, 0xfffffffffffffc7c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc80, 4) INDIRECT (stack, 0xfffffffffffffc80, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc84, 4) INDIRECT (stack, 0xfffffffffffffc84, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc88, 4) INDIRECT (stack, 0xfffffffffffffc88, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc8c, 4) INDIRECT (stack, 0xfffffffffffffc8c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc90, 4) INDIRECT (stack, 0xfffffffffffffc90, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc94, 4) INDIRECT (stack, 0xfffffffffffffc94, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc98, 4) INDIRECT (stack, 0xfffffffffffffc98, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffc9c, 4) INDIRECT (stack, 0xfffffffffffffc9c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffca0, 4) INDIRECT (stack, 0xfffffffffffffca0, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffca4, 4) INDIRECT (stack, 0xfffffffffffffca4, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffca8, 4) INDIRECT (stack, 0xfffffffffffffca8, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcac, 4) INDIRECT (stack, 0xfffffffffffffcac, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcb0, 4) INDIRECT (stack, 0xfffffffffffffcb0, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcb4, 4) INDIRECT (stack, 0xfffffffffffffcb4, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcb8, 4) INDIRECT (stack, 0xfffffffffffffcb8, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcbc, 4) INDIRECT (stack, 0xfffffffffffffcbc, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcc0, 4) INDIRECT (stack, 0xfffffffffffffcc0, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcc4, 4) INDIRECT (stack, 0xfffffffffffffcc4, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcc8, 4) INDIRECT (stack, 0xfffffffffffffcc8, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffccc, 4) INDIRECT (stack, 0xfffffffffffffccc, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcd8, 8) INDIRECT (stack, 0xfffffffffffffcd8, 8) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffce8, 4) INDIRECT (stack, 0xfffffffffffffce8, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcec, 4) INDIRECT (stack, 0xfffffffffffffcec, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcf0, 4) INDIRECT (stack, 0xfffffffffffffcf0, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcf4, 4) INDIRECT (stack, 0xfffffffffffffcf4, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcf8, 4) INDIRECT (stack, 0xfffffffffffffcf8, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffcfc, 4) INDIRECT (stack, 0xfffffffffffffcfc, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd08, 4) INDIRECT (stack, 0xfffffffffffffd08, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd0c, 4) INDIRECT (stack, 0xfffffffffffffd0c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd18, 4) INDIRECT (stack, 0xfffffffffffffd18, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd1c, 4) INDIRECT (stack, 0xfffffffffffffd1c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd28, 4) INDIRECT (stack, 0xfffffffffffffd28, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd2c, 4) INDIRECT (stack, 0xfffffffffffffd2c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd38, 4) INDIRECT (stack, 0xfffffffffffffd38, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd3c, 4) INDIRECT (stack, 0xfffffffffffffd3c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd48, 4) INDIRECT (stack, 0xfffffffffffffd48, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd4c, 4) INDIRECT (stack, 0xfffffffffffffd4c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd50, 4) INDIRECT (stack, 0xfffffffffffffd50, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd54, 4) INDIRECT (stack, 0xfffffffffffffd54, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd60, 4) INDIRECT (stack, 0xfffffffffffffd60, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd64, 4) INDIRECT (stack, 0xfffffffffffffd64, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd6c, 4) INDIRECT (stack, 0xfffffffffffffd6c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd70, 4) INDIRECT (stack, 0xfffffffffffffd70, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd74, 4) INDIRECT (stack, 0xfffffffffffffd74, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd78, 4) INDIRECT (stack, 0xfffffffffffffd78, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd7c, 4) INDIRECT (stack, 0xfffffffffffffd7c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd84, 4) INDIRECT (stack, 0xfffffffffffffd84, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd90, 4) INDIRECT (stack, 0xfffffffffffffd90, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd94, 4) INDIRECT (stack, 0xfffffffffffffd94, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffd9c, 4) INDIRECT (stack, 0xfffffffffffffd9c, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffda0, 4) INDIRECT (stack, 0xfffffffffffffda0, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffda4, 4) INDIRECT (stack, 0xfffffffffffffda4, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffdb4, 4) INDIRECT (stack, 0xfffffffffffffdb4, 4) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0xd2, 4)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0xd2, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xd2, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xd2, 4)]
[ ---  CBRANCH (ram, 0x494e90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x6, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffff88, 8) , (const, 0x1, 8) , (const, 0x1, 8) , (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x3200, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x18, 8) INT_ADD (stack, 0xfffffffffffffdd8, 8) , (unique, 0x100000e8, 8), (unique, 0x100000e8, 8) INT_SRIGHT (stack, 0xfffffffffffffe08, 8) , (const, 0x3f, 4)]
[(stack, 0xfffffffffffffd48, 4) INDIRECT (stack, 0xfffffffffffffd48, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd48, 4) COPY (stack, 0xfffffffffffffc58, 4)]
[(stack, 0xfffffffffffffd4c, 4) INDIRECT (stack, 0xfffffffffffffd4c, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd4c, 4) COPY (stack, 0xfffffffffffffc5c, 4)]
[(stack, 0xfffffffffffffd50, 4) INDIRECT (stack, 0xfffffffffffffd50, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd50, 4) COPY (stack, 0xfffffffffffffc60, 4)]
[(stack, 0xfffffffffffffd54, 4) INDIRECT (stack, 0xfffffffffffffd54, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd54, 4) COPY (stack, 0xfffffffffffffc64, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd58, 4) COPY (stack, 0xfffffffffffffc68, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd5c, 4) COPY (stack, 0xfffffffffffffc6c, 4)]
[(stack, 0xfffffffffffffd60, 4) INDIRECT (stack, 0xfffffffffffffd60, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd60, 4) COPY (stack, 0xfffffffffffffc70, 4)]
[(stack, 0xfffffffffffffd64, 4) INDIRECT (stack, 0xfffffffffffffd64, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd64, 4) COPY (stack, 0xfffffffffffffc74, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd68, 4) COPY (stack, 0xfffffffffffffc78, 4)]
[(stack, 0xfffffffffffffd6c, 4) INDIRECT (stack, 0xfffffffffffffd6c, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd6c, 4) COPY (stack, 0xfffffffffffffc7c, 4)]
[(stack, 0xfffffffffffffd70, 4) INDIRECT (stack, 0xfffffffffffffd70, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd70, 4) COPY (stack, 0xfffffffffffffc80, 4)]
[(stack, 0xfffffffffffffd74, 4) INDIRECT (stack, 0xfffffffffffffd74, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd74, 4) COPY (stack, 0xfffffffffffffc84, 4)]
[(stack, 0xfffffffffffffd78, 4) INDIRECT (stack, 0xfffffffffffffd78, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd78, 4) COPY (stack, 0xfffffffffffffc88, 4)]
[(stack, 0xfffffffffffffd7c, 4) INDIRECT (stack, 0xfffffffffffffd7c, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd7c, 4) COPY (stack, 0xfffffffffffffc8c, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd80, 4) COPY (stack, 0xfffffffffffffc90, 4)]
[(stack, 0xfffffffffffffd84, 4) INDIRECT (stack, 0xfffffffffffffd84, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd84, 4) COPY (stack, 0xfffffffffffffc94, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd88, 4) COPY (stack, 0xfffffffffffffc98, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd8c, 4) COPY (stack, 0xfffffffffffffc9c, 4)]
[(stack, 0xfffffffffffffd90, 4) INDIRECT (stack, 0xfffffffffffffd90, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd90, 4) COPY (stack, 0xfffffffffffffca0, 4)]
[(stack, 0xfffffffffffffd94, 4) INDIRECT (stack, 0xfffffffffffffd94, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd94, 4) COPY (stack, 0xfffffffffffffca4, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd98, 4) COPY (stack, 0xfffffffffffffca8, 4)]
[(stack, 0xfffffffffffffd9c, 4) INDIRECT (stack, 0xfffffffffffffd9c, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffd9c, 4) COPY (stack, 0xfffffffffffffcac, 4)]
[(stack, 0xfffffffffffffda0, 4) INDIRECT (stack, 0xfffffffffffffda0, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffda0, 4) COPY (stack, 0xfffffffffffffcb0, 4)]
[(stack, 0xfffffffffffffda4, 4) INDIRECT (stack, 0xfffffffffffffda4, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffda4, 4) COPY (stack, 0xfffffffffffffcb4, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffda8, 4) COPY (stack, 0xfffffffffffffcb8, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffdac, 4) COPY (stack, 0xfffffffffffffcbc, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffdb0, 4) COPY (stack, 0xfffffffffffffcc0, 4)]
[(stack, 0xfffffffffffffdb4, 4) INDIRECT (stack, 0xfffffffffffffdb4, 4) , (const, 0x188, 4), (stack, 0xfffffffffffffdb4, 4) COPY (stack, 0xfffffffffffffcc4, 4)]
[(stack, 0xfffffffffffffdd8, 8) INDIRECT (unique, 0x10000750, 8) , (const, 0x188, 4), (unique, 0x10000750, 8) INT_ADD (unique, 0x10000895, 8) , (stack, 0xfffffffffffffce8, 4), (unique, 0x10000895, 8) INT_LEFT (unique, 0x1000088d, 8) , (const, 0x20, 8), (unique, 0x1000088d, 8) INT_SEXT (unique, 0x10000911, 4), (unique, 0x10000911, 4) CAST (stack, 0xfffffffffffffcec, 4)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (unique, 0x10000758, 8) , (const, 0x188, 4), (unique, 0x10000758, 8) INT_ADD (unique, 0x100008a5, 8) , (stack, 0xfffffffffffffcf0, 4), (unique, 0x100008a5, 8) INT_LEFT (unique, 0x1000089d, 8) , (const, 0x20, 8), (unique, 0x1000089d, 8) INT_SEXT (unique, 0x10000915, 4), (unique, 0x10000915, 4) CAST (stack, 0xfffffffffffffcf4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x188, 4)]
[ ---  CBRANCH (ram, 0x494e6f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x494890, 8) , (unique, 0x10000790, 8) , (unique, 0x100007a0, 8) , (unique, 0x10000730, 8) , (stack, 0xfffffffffffffcd8, 8) , (unique, 0x10000750, 8) , (unique, 0x10000760, 8) , (unique, 0x10000770, 8) , (unique, 0x10000780, 8) , (register, 0x38, 8) , (unique, 0x3200, 8) , (unique, 0x3200, 8), (unique, 0x100007a0, 8) INT_ADD (unique, 0x100008f5, 8) , (stack, 0xfffffffffffffd38, 4), (unique, 0x100008f5, 8) INT_LEFT (unique, 0x100008ed, 8) , (const, 0x20, 8), (unique, 0x100008ed, 8) INT_SEXT (unique, 0x10000929, 4), (unique, 0x10000929, 4) CAST (stack, 0xfffffffffffffd3c, 4), (unique, 0x10000780, 8) INT_ADD (unique, 0x100008e5, 8) , (stack, 0xfffffffffffffd18, 4), (unique, 0x100008e5, 8) INT_LEFT (unique, 0x100008dd, 8) , (const, 0x20, 8), (unique, 0x100008dd, 8) INT_SEXT (unique, 0x10000925, 4), (unique, 0x10000925, 4) CAST (stack, 0xfffffffffffffd1c, 4), (unique, 0x10000790, 8) INT_ADD (unique, 0x100008d5, 8) , (stack, 0xfffffffffffffd28, 4), (unique, 0x100008d5, 8) INT_LEFT (unique, 0x100008cd, 8) , (const, 0x20, 8), (unique, 0x100008cd, 8) INT_SEXT (unique, 0x10000921, 4), (unique, 0x10000921, 4) CAST (stack, 0xfffffffffffffd2c, 4), (unique, 0x10000770, 8) INT_ADD (unique, 0x100008c5, 8) , (stack, 0xfffffffffffffd08, 4), (unique, 0x100008c5, 8) INT_LEFT (unique, 0x100008bd, 8) , (const, 0x20, 8), (unique, 0x100008bd, 8) INT_SEXT (unique, 0x1000091d, 4), (unique, 0x1000091d, 4) CAST (stack, 0xfffffffffffffd0c, 4), (unique, 0x10000760, 8) INT_ADD (unique, 0x100008b5, 8) , (stack, 0xfffffffffffffcf8, 4), (unique, 0x100008b5, 8) INT_LEFT (unique, 0x100008ad, 8) , (const, 0x20, 8), (unique, 0x100008ad, 8) INT_SEXT (unique, 0x10000919, 4), (unique, 0x10000919, 4) CAST (stack, 0xfffffffffffffcfc, 4), (unique, 0x10000750, 8) INT_ADD (unique, 0x10000895, 8) , (stack, 0xfffffffffffffce8, 4), (unique, 0x10000895, 8) INT_LEFT (unique, 0x1000088d, 8) , (const, 0x20, 8), (unique, 0x1000088d, 8) INT_SEXT (unique, 0x10000911, 4), (unique, 0x10000911, 4) CAST (stack, 0xfffffffffffffcec, 4), (unique, 0x10000730, 8) INT_ADD (unique, 0x10000885, 8) , (stack, 0xfffffffffffffcc8, 4), (unique, 0x10000885, 8) INT_LEFT (unique, 0x1000087d, 8) , (const, 0x20, 8), (unique, 0x1000087d, 8) INT_SEXT (unique, 0x1000090d, 4), (unique, 0x1000090d, 4) CAST (stack, 0xfffffffffffffccc, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CALL (ram, 0x493950, 8) , (unique, 0x3200, 8) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000092d, 8) , (register, 0x30, 8), (unique, 0x1000092d, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000083b, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000083b, 8) PTRSUB (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x494cf0, 8) , (stack, 0xfffffffffffffdd8, 8), (register, 0x30, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x1a1, 4), (stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x198, 4), (stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd48, 4) INDIRECT (stack, 0xfffffffffffffd48, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd48, 4) INDIRECT (stack, 0xfffffffffffffd48, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd48, 4) INDIRECT (stack, 0xfffffffffffffd48, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd48, 4) INDIRECT (stack, 0xfffffffffffffd48, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd4c, 4) INDIRECT (stack, 0xfffffffffffffd4c, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd4c, 4) INDIRECT (stack, 0xfffffffffffffd4c, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd4c, 4) INDIRECT (stack, 0xfffffffffffffd4c, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd4c, 4) INDIRECT (stack, 0xfffffffffffffd4c, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd50, 4) INDIRECT (stack, 0xfffffffffffffd50, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd50, 4) INDIRECT (stack, 0xfffffffffffffd50, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd50, 4) INDIRECT (stack, 0xfffffffffffffd50, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd50, 4) INDIRECT (stack, 0xfffffffffffffd50, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd54, 4) INDIRECT (stack, 0xfffffffffffffd54, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd54, 4) INDIRECT (stack, 0xfffffffffffffd54, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd54, 4) INDIRECT (stack, 0xfffffffffffffd54, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd54, 4) INDIRECT (stack, 0xfffffffffffffd54, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd60, 4) INDIRECT (stack, 0xfffffffffffffd60, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd60, 4) INDIRECT (stack, 0xfffffffffffffd60, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd60, 4) INDIRECT (stack, 0xfffffffffffffd60, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd60, 4) INDIRECT (stack, 0xfffffffffffffd60, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd64, 4) INDIRECT (stack, 0xfffffffffffffd64, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd64, 4) INDIRECT (stack, 0xfffffffffffffd64, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd64, 4) INDIRECT (stack, 0xfffffffffffffd64, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd64, 4) INDIRECT (stack, 0xfffffffffffffd64, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd6c, 4) INDIRECT (stack, 0xfffffffffffffd6c, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd6c, 4) INDIRECT (stack, 0xfffffffffffffd6c, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd6c, 4) INDIRECT (stack, 0xfffffffffffffd6c, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd6c, 4) INDIRECT (stack, 0xfffffffffffffd6c, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd70, 4) INDIRECT (stack, 0xfffffffffffffd70, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd70, 4) INDIRECT (stack, 0xfffffffffffffd70, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd70, 4) INDIRECT (stack, 0xfffffffffffffd70, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd70, 4) INDIRECT (stack, 0xfffffffffffffd70, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd74, 4) INDIRECT (stack, 0xfffffffffffffd74, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd74, 4) INDIRECT (stack, 0xfffffffffffffd74, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd74, 4) INDIRECT (stack, 0xfffffffffffffd74, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd74, 4) INDIRECT (stack, 0xfffffffffffffd74, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd78, 4) INDIRECT (stack, 0xfffffffffffffd78, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd78, 4) INDIRECT (stack, 0xfffffffffffffd78, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd78, 4) INDIRECT (stack, 0xfffffffffffffd78, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd78, 4) INDIRECT (stack, 0xfffffffffffffd78, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd7c, 4) INDIRECT (stack, 0xfffffffffffffd7c, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd7c, 4) INDIRECT (stack, 0xfffffffffffffd7c, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd7c, 4) INDIRECT (stack, 0xfffffffffffffd7c, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd7c, 4) INDIRECT (stack, 0xfffffffffffffd7c, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd84, 4) INDIRECT (stack, 0xfffffffffffffd84, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd84, 4) INDIRECT (stack, 0xfffffffffffffd84, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd84, 4) INDIRECT (stack, 0xfffffffffffffd84, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd84, 4) INDIRECT (stack, 0xfffffffffffffd84, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd90, 4) INDIRECT (stack, 0xfffffffffffffd90, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd90, 4) INDIRECT (stack, 0xfffffffffffffd90, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd90, 4) INDIRECT (stack, 0xfffffffffffffd90, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd90, 4) INDIRECT (stack, 0xfffffffffffffd90, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd94, 4) INDIRECT (stack, 0xfffffffffffffd94, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd94, 4) INDIRECT (stack, 0xfffffffffffffd94, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd94, 4) INDIRECT (stack, 0xfffffffffffffd94, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd94, 4) INDIRECT (stack, 0xfffffffffffffd94, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffd9c, 4) INDIRECT (stack, 0xfffffffffffffd9c, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffd9c, 4) INDIRECT (stack, 0xfffffffffffffd9c, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd9c, 4) INDIRECT (stack, 0xfffffffffffffd9c, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffd9c, 4) INDIRECT (stack, 0xfffffffffffffd9c, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffda0, 4) INDIRECT (stack, 0xfffffffffffffda0, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffda0, 4) INDIRECT (stack, 0xfffffffffffffda0, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffda0, 4) INDIRECT (stack, 0xfffffffffffffda0, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffda0, 4) INDIRECT (stack, 0xfffffffffffffda0, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffda4, 4) INDIRECT (stack, 0xfffffffffffffda4, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffda4, 4) INDIRECT (stack, 0xfffffffffffffda4, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffda4, 4) INDIRECT (stack, 0xfffffffffffffda4, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffda4, 4) INDIRECT (stack, 0xfffffffffffffda4, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffdb4, 4) INDIRECT (stack, 0xfffffffffffffdb4, 4) , (const, 0x1c6, 4), (stack, 0xfffffffffffffdb4, 4) INDIRECT (stack, 0xfffffffffffffdb4, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffdb4, 4) INDIRECT (stack, 0xfffffffffffffdb4, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffdb4, 4) INDIRECT (stack, 0xfffffffffffffdb4, 4) , (const, 0x198, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1c6, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1a7, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1a1, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x198, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8), (register, 0x8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000935, 8), (unique, 0x10000935, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000084b, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000084b, 8) PTRSUB (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x494cf0, 8) , (stack, 0xfffffffffffffdd8, 8), (stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x198, 4)]
[ ---  CBRANCH (ram, 0x494e88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x3, 8)]
[(stack, 0xfffffffffffffc58, 4) INDIRECT (stack, 0xfffffffffffffc58, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc58, 4) MULTIEQUAL (stack, 0xfffffffffffffc58, 4) , (stack, 0xfffffffffffffc58, 4)]
[(stack, 0xfffffffffffffc5c, 4) INDIRECT (stack, 0xfffffffffffffc5c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc5c, 4) MULTIEQUAL (stack, 0xfffffffffffffc5c, 4) , (stack, 0xfffffffffffffc5c, 4)]
[(stack, 0xfffffffffffffc60, 4) INDIRECT (stack, 0xfffffffffffffc60, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc60, 4) MULTIEQUAL (stack, 0xfffffffffffffc60, 4) , (stack, 0xfffffffffffffc60, 4)]
[(stack, 0xfffffffffffffc64, 4) INDIRECT (stack, 0xfffffffffffffc64, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc64, 4) MULTIEQUAL (stack, 0xfffffffffffffc64, 4) , (stack, 0xfffffffffffffc64, 4)]
[(stack, 0xfffffffffffffc68, 4) INDIRECT (stack, 0xfffffffffffffc68, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc68, 4) MULTIEQUAL (stack, 0xfffffffffffffc68, 4) , (stack, 0xfffffffffffffc68, 4)]
[(stack, 0xfffffffffffffc6c, 4) INDIRECT (stack, 0xfffffffffffffc6c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc6c, 4) MULTIEQUAL (stack, 0xfffffffffffffc6c, 4) , (stack, 0xfffffffffffffc6c, 4)]
[(stack, 0xfffffffffffffc70, 4) INDIRECT (stack, 0xfffffffffffffc70, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc70, 4) MULTIEQUAL (stack, 0xfffffffffffffc70, 4) , (stack, 0xfffffffffffffc70, 4)]
[(stack, 0xfffffffffffffc74, 4) INDIRECT (stack, 0xfffffffffffffc74, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc74, 4) MULTIEQUAL (stack, 0xfffffffffffffc74, 4) , (stack, 0xfffffffffffffc74, 4)]
[(stack, 0xfffffffffffffc78, 4) INDIRECT (stack, 0xfffffffffffffc78, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc78, 4) MULTIEQUAL (stack, 0xfffffffffffffc78, 4) , (stack, 0xfffffffffffffc78, 4)]
[(stack, 0xfffffffffffffc7c, 4) INDIRECT (stack, 0xfffffffffffffc7c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc7c, 4) MULTIEQUAL (stack, 0xfffffffffffffc7c, 4) , (stack, 0xfffffffffffffc7c, 4)]
[(stack, 0xfffffffffffffc80, 4) INDIRECT (stack, 0xfffffffffffffc80, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc80, 4) MULTIEQUAL (stack, 0xfffffffffffffc80, 4) , (stack, 0xfffffffffffffc80, 4)]
[(stack, 0xfffffffffffffc84, 4) INDIRECT (stack, 0xfffffffffffffc84, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc84, 4) MULTIEQUAL (stack, 0xfffffffffffffc84, 4) , (stack, 0xfffffffffffffc84, 4)]
[(stack, 0xfffffffffffffc88, 4) INDIRECT (stack, 0xfffffffffffffc88, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc88, 4) MULTIEQUAL (stack, 0xfffffffffffffc88, 4) , (stack, 0xfffffffffffffc88, 4)]
[(stack, 0xfffffffffffffc8c, 4) INDIRECT (stack, 0xfffffffffffffc8c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc8c, 4) MULTIEQUAL (stack, 0xfffffffffffffc8c, 4) , (stack, 0xfffffffffffffc8c, 4)]
[(stack, 0xfffffffffffffc90, 4) INDIRECT (stack, 0xfffffffffffffc90, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc90, 4) MULTIEQUAL (stack, 0xfffffffffffffc90, 4) , (stack, 0xfffffffffffffc90, 4)]
[(stack, 0xfffffffffffffc94, 4) INDIRECT (stack, 0xfffffffffffffc94, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc94, 4) MULTIEQUAL (stack, 0xfffffffffffffc94, 4) , (stack, 0xfffffffffffffc94, 4)]
[(stack, 0xfffffffffffffc98, 4) INDIRECT (stack, 0xfffffffffffffc98, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc98, 4) MULTIEQUAL (stack, 0xfffffffffffffc98, 4) , (stack, 0xfffffffffffffc98, 4)]
[(stack, 0xfffffffffffffc9c, 4) INDIRECT (stack, 0xfffffffffffffc9c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffc9c, 4) MULTIEQUAL (stack, 0xfffffffffffffc9c, 4) , (stack, 0xfffffffffffffc9c, 4)]
[(stack, 0xfffffffffffffca0, 4) INDIRECT (stack, 0xfffffffffffffca0, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffca0, 4) MULTIEQUAL (stack, 0xfffffffffffffca0, 4) , (stack, 0xfffffffffffffca0, 4)]
[(stack, 0xfffffffffffffca4, 4) INDIRECT (stack, 0xfffffffffffffca4, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffca4, 4) MULTIEQUAL (stack, 0xfffffffffffffca4, 4) , (stack, 0xfffffffffffffca4, 4)]
[(stack, 0xfffffffffffffca8, 4) INDIRECT (stack, 0xfffffffffffffca8, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffca8, 4) MULTIEQUAL (stack, 0xfffffffffffffca8, 4) , (stack, 0xfffffffffffffca8, 4)]
[(stack, 0xfffffffffffffcac, 4) INDIRECT (stack, 0xfffffffffffffcac, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcac, 4) MULTIEQUAL (stack, 0xfffffffffffffcac, 4) , (stack, 0xfffffffffffffcac, 4)]
[(stack, 0xfffffffffffffcb0, 4) INDIRECT (stack, 0xfffffffffffffcb0, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcb0, 4) MULTIEQUAL (stack, 0xfffffffffffffcb0, 4) , (stack, 0xfffffffffffffcb0, 4)]
[(stack, 0xfffffffffffffcb4, 4) INDIRECT (stack, 0xfffffffffffffcb4, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcb4, 4) MULTIEQUAL (stack, 0xfffffffffffffcb4, 4) , (stack, 0xfffffffffffffcb4, 4)]
[(stack, 0xfffffffffffffcb8, 4) INDIRECT (stack, 0xfffffffffffffcb8, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcb8, 4) MULTIEQUAL (stack, 0xfffffffffffffcb8, 4) , (stack, 0xfffffffffffffcb8, 4)]
[(stack, 0xfffffffffffffcbc, 4) INDIRECT (stack, 0xfffffffffffffcbc, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcbc, 4) MULTIEQUAL (stack, 0xfffffffffffffcbc, 4) , (stack, 0xfffffffffffffcbc, 4)]
[(stack, 0xfffffffffffffcc0, 4) INDIRECT (stack, 0xfffffffffffffcc0, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcc0, 4) MULTIEQUAL (stack, 0xfffffffffffffcc0, 4) , (stack, 0xfffffffffffffcc0, 4)]
[(stack, 0xfffffffffffffcc4, 4) INDIRECT (stack, 0xfffffffffffffcc4, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcc4, 4) MULTIEQUAL (stack, 0xfffffffffffffcc4, 4) , (stack, 0xfffffffffffffcc4, 4)]
[(stack, 0xfffffffffffffcc8, 4) INDIRECT (stack, 0xfffffffffffffcc8, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcc8, 4) MULTIEQUAL (stack, 0xfffffffffffffcc8, 4) , (stack, 0xfffffffffffffcc8, 4)]
[(stack, 0xfffffffffffffccc, 4) INDIRECT (stack, 0xfffffffffffffccc, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffccc, 4) MULTIEQUAL (stack, 0xfffffffffffffccc, 4) , (stack, 0xfffffffffffffccc, 4)]
[(stack, 0xfffffffffffffcd8, 8) INDIRECT (stack, 0xfffffffffffffcd8, 8) , (const, 0xec, 4), (stack, 0xfffffffffffffcd8, 8) MULTIEQUAL (stack, 0xfffffffffffffcd8, 8) , (stack, 0xfffffffffffffcd8, 8)]
[(stack, 0xfffffffffffffce8, 4) INDIRECT (stack, 0xfffffffffffffce8, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffce8, 4) MULTIEQUAL (stack, 0xfffffffffffffce8, 4) , (stack, 0xfffffffffffffce8, 4)]
[(stack, 0xfffffffffffffcec, 4) INDIRECT (stack, 0xfffffffffffffcec, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcec, 4) MULTIEQUAL (stack, 0xfffffffffffffcec, 4) , (stack, 0xfffffffffffffcec, 4)]
[(stack, 0xfffffffffffffcf0, 4) INDIRECT (stack, 0xfffffffffffffcf0, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcf0, 4) MULTIEQUAL (stack, 0xfffffffffffffcf0, 4) , (stack, 0xfffffffffffffcf0, 4)]
[(stack, 0xfffffffffffffcf4, 4) INDIRECT (stack, 0xfffffffffffffcf4, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcf4, 4) MULTIEQUAL (stack, 0xfffffffffffffcf4, 4) , (stack, 0xfffffffffffffcf4, 4)]
[(stack, 0xfffffffffffffcf8, 4) INDIRECT (stack, 0xfffffffffffffcf8, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcf8, 4) MULTIEQUAL (stack, 0xfffffffffffffcf8, 4) , (stack, 0xfffffffffffffcf8, 4)]
[(stack, 0xfffffffffffffcfc, 4) INDIRECT (stack, 0xfffffffffffffcfc, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffcfc, 4) MULTIEQUAL (stack, 0xfffffffffffffcfc, 4) , (stack, 0xfffffffffffffcfc, 4)]
[(stack, 0xfffffffffffffd08, 4) INDIRECT (stack, 0xfffffffffffffd08, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd08, 4) MULTIEQUAL (stack, 0xfffffffffffffd08, 4) , (stack, 0xfffffffffffffd08, 4)]
[(stack, 0xfffffffffffffd0c, 4) INDIRECT (stack, 0xfffffffffffffd0c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd0c, 4) MULTIEQUAL (stack, 0xfffffffffffffd0c, 4) , (stack, 0xfffffffffffffd0c, 4)]
[(stack, 0xfffffffffffffd18, 4) INDIRECT (stack, 0xfffffffffffffd18, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd18, 4) MULTIEQUAL (stack, 0xfffffffffffffd18, 4) , (stack, 0xfffffffffffffd18, 4)]
[(stack, 0xfffffffffffffd1c, 4) INDIRECT (stack, 0xfffffffffffffd1c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd1c, 4) MULTIEQUAL (stack, 0xfffffffffffffd1c, 4) , (stack, 0xfffffffffffffd1c, 4)]
[(stack, 0xfffffffffffffd28, 4) INDIRECT (stack, 0xfffffffffffffd28, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd28, 4) MULTIEQUAL (stack, 0xfffffffffffffd28, 4) , (stack, 0xfffffffffffffd28, 4)]
[(stack, 0xfffffffffffffd2c, 4) INDIRECT (stack, 0xfffffffffffffd2c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd2c, 4) MULTIEQUAL (stack, 0xfffffffffffffd2c, 4) , (stack, 0xfffffffffffffd2c, 4)]
[(stack, 0xfffffffffffffd38, 4) INDIRECT (stack, 0xfffffffffffffd38, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd38, 4) MULTIEQUAL (stack, 0xfffffffffffffd38, 4) , (stack, 0xfffffffffffffd38, 4)]
[(stack, 0xfffffffffffffd3c, 4) INDIRECT (stack, 0xfffffffffffffd3c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd3c, 4) MULTIEQUAL (stack, 0xfffffffffffffd3c, 4) , (stack, 0xfffffffffffffd3c, 4)]
[(stack, 0xfffffffffffffd48, 4) INDIRECT (stack, 0xfffffffffffffd48, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd48, 4) MULTIEQUAL (stack, 0xfffffffffffffd48, 4) , (stack, 0xfffffffffffffd48, 4)]
[(stack, 0xfffffffffffffd4c, 4) INDIRECT (stack, 0xfffffffffffffd4c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd4c, 4) MULTIEQUAL (stack, 0xfffffffffffffd4c, 4) , (stack, 0xfffffffffffffd4c, 4)]
[(stack, 0xfffffffffffffd50, 4) INDIRECT (stack, 0xfffffffffffffd50, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd50, 4) MULTIEQUAL (stack, 0xfffffffffffffd50, 4) , (stack, 0xfffffffffffffd50, 4)]
[(stack, 0xfffffffffffffd54, 4) INDIRECT (stack, 0xfffffffffffffd54, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd54, 4) MULTIEQUAL (stack, 0xfffffffffffffd54, 4) , (stack, 0xfffffffffffffd54, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd58, 4) MULTIEQUAL (stack, 0xfffffffffffffd58, 4) , (stack, 0xfffffffffffffd58, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd5c, 4) MULTIEQUAL (stack, 0xfffffffffffffd5c, 4) , (stack, 0xfffffffffffffd5c, 4)]
[(stack, 0xfffffffffffffd60, 4) INDIRECT (stack, 0xfffffffffffffd60, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd60, 4) MULTIEQUAL (stack, 0xfffffffffffffd60, 4) , (stack, 0xfffffffffffffd60, 4)]
[(stack, 0xfffffffffffffd64, 4) INDIRECT (stack, 0xfffffffffffffd64, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd64, 4) MULTIEQUAL (stack, 0xfffffffffffffd64, 4) , (stack, 0xfffffffffffffd64, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd68, 4) MULTIEQUAL (stack, 0xfffffffffffffd68, 4) , (stack, 0xfffffffffffffd68, 4)]
[(stack, 0xfffffffffffffd6c, 4) INDIRECT (stack, 0xfffffffffffffd6c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd6c, 4) MULTIEQUAL (stack, 0xfffffffffffffd6c, 4) , (stack, 0xfffffffffffffd6c, 4)]
[(stack, 0xfffffffffffffd70, 4) INDIRECT (stack, 0xfffffffffffffd70, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd70, 4) MULTIEQUAL (stack, 0xfffffffffffffd70, 4) , (stack, 0xfffffffffffffd70, 4)]
[(stack, 0xfffffffffffffd74, 4) INDIRECT (stack, 0xfffffffffffffd74, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd74, 4) MULTIEQUAL (stack, 0xfffffffffffffd74, 4) , (stack, 0xfffffffffffffd74, 4)]
[(stack, 0xfffffffffffffd78, 4) INDIRECT (stack, 0xfffffffffffffd78, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd78, 4) MULTIEQUAL (stack, 0xfffffffffffffd78, 4) , (stack, 0xfffffffffffffd78, 4)]
[(stack, 0xfffffffffffffd7c, 4) INDIRECT (stack, 0xfffffffffffffd7c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd7c, 4) MULTIEQUAL (stack, 0xfffffffffffffd7c, 4) , (stack, 0xfffffffffffffd7c, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xfffffffffffffd84, 4) INDIRECT (stack, 0xfffffffffffffd84, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd84, 4) MULTIEQUAL (stack, 0xfffffffffffffd84, 4) , (stack, 0xfffffffffffffd84, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd88, 4) MULTIEQUAL (stack, 0xfffffffffffffd88, 4) , (stack, 0xfffffffffffffd88, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd8c, 4) MULTIEQUAL (stack, 0xfffffffffffffd8c, 4) , (stack, 0xfffffffffffffd8c, 4)]
[(stack, 0xfffffffffffffd90, 4) INDIRECT (stack, 0xfffffffffffffd90, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd90, 4) MULTIEQUAL (stack, 0xfffffffffffffd90, 4) , (stack, 0xfffffffffffffd90, 4)]
[(stack, 0xfffffffffffffd94, 4) INDIRECT (stack, 0xfffffffffffffd94, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd94, 4) MULTIEQUAL (stack, 0xfffffffffffffd94, 4) , (stack, 0xfffffffffffffd94, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd98, 4) MULTIEQUAL (stack, 0xfffffffffffffd98, 4) , (stack, 0xfffffffffffffd98, 4)]
[(stack, 0xfffffffffffffd9c, 4) INDIRECT (stack, 0xfffffffffffffd9c, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffd9c, 4) MULTIEQUAL (stack, 0xfffffffffffffd9c, 4) , (stack, 0xfffffffffffffd9c, 4)]
[(stack, 0xfffffffffffffda0, 4) INDIRECT (stack, 0xfffffffffffffda0, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffda0, 4) MULTIEQUAL (stack, 0xfffffffffffffda0, 4) , (stack, 0xfffffffffffffda0, 4)]
[(stack, 0xfffffffffffffda4, 4) INDIRECT (stack, 0xfffffffffffffda4, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffda4, 4) MULTIEQUAL (stack, 0xfffffffffffffda4, 4) , (stack, 0xfffffffffffffda4, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffda8, 4) MULTIEQUAL (stack, 0xfffffffffffffda8, 4) , (stack, 0xfffffffffffffda8, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffdac, 4) MULTIEQUAL (stack, 0xfffffffffffffdac, 4) , (stack, 0xfffffffffffffdac, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffdb0, 4) MULTIEQUAL (stack, 0xfffffffffffffdb0, 4) , (stack, 0xfffffffffffffdb0, 4)]
[(stack, 0xfffffffffffffdb4, 4) INDIRECT (stack, 0xfffffffffffffdb4, 4) , (const, 0xec, 4), (stack, 0xfffffffffffffdb4, 4) MULTIEQUAL (stack, 0xfffffffffffffdb4, 4) , (stack, 0xfffffffffffffdb4, 4)]
[(stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0xec, 4), (stack, 0xfffffffffffffdd8, 8) MULTIEQUAL (stack, 0xfffffffffffffdd8, 8) , (stack, 0xfffffffffffffdd8, 8)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0xec, 4), (stack, 0xfffffffffffffe08, 8) MULTIEQUAL (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xec, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xec, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[ ---  CALL (ram, 0x494800, 8) , (unique, 0x3200, 8) , (unique, 0x3200, 8)]
