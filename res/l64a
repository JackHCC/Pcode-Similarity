[(register, 0x0, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x10, 8) INT_AND (register, 0x38, 8) , (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x14fb6e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000001, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x10000001, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9c80, 8), (register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_AND (register, 0x10, 4) , (const, 0x3f, 4)]
[ ---  CBRANCH (ram, 0x14fb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x6, 4)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x14fb63, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000009, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000009, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9c80, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3f, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x14fb80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_RIGHT (register, 0x10, 8) , (const, 0xc, 4)]
[(register, 0x10, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x14fb63, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000011, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000011, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9c80, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3f, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x14fb90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x12, 4)]
[(register, 0x10, 8) COPY (const, 0x3, 8)]
[ ---  BRANCH (ram, 0x14fb63, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000019, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000019, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9c80, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3f, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x14fba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x18, 4)]
[(register, 0x10, 8) COPY (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x14fb63, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000021, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000021, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9c80, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3f, 4), (register, 0x8, 4) SUBPIECE (unique, 0x10000039, 8) , (const, 0x0, 4), (unique, 0x10000039, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x18, 4)]
[ ---  CBRANCH (ram, 0x14fbb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1e, 4)]
[(register, 0x10, 8) COPY (const, 0x5, 8)]
[ ---  BRANCH (ram, 0x14fb63, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000029, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000029, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9c80, 8)]
[(register, 0x10, 8) COPY (const, 0x6, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed740, 8)]
[(ram, 0x4ed740, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0x158, 4)]
[(ram, 0x4ed741, 1) INDIRECT (ram, 0x4ed741, 1) , (const, 0x158, 4), (ram, 0x4ed741, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (ram, 0x4ed741, 1)]
[(ram, 0x4ed742, 1) INDIRECT (ram, 0x4ed742, 1) , (const, 0x158, 4), (ram, 0x4ed742, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (ram, 0x4ed742, 1) , (ram, 0x4ed742, 1)]
[(ram, 0x4ed743, 1) INDIRECT (ram, 0x4ed743, 1) , (const, 0x158, 4), (ram, 0x4ed743, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (ram, 0x4ed743, 1) , (ram, 0x4ed743, 1) , (ram, 0x4ed743, 1)]
[(ram, 0x4ed744, 1) INDIRECT (ram, 0x4ed744, 1) , (const, 0x158, 4), (ram, 0x4ed744, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (ram, 0x4ed744, 1) , (ram, 0x4ed744, 1) , (ram, 0x4ed744, 1) , (ram, 0x4ed744, 1)]
[(ram, 0x4ed745, 1) INDIRECT (ram, 0x4ed745, 1) , (const, 0x158, 4), (ram, 0x4ed745, 1) MULTIEQUAL (unique, 0xbb00, 1) , (ram, 0x4ed745, 1) , (ram, 0x4ed745, 1) , (ram, 0x4ed745, 1) , (ram, 0x4ed745, 1) , (ram, 0x4ed745, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (unique, 0x10000031, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000031, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed740, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4ed740, 1) COPY (ram, 0x4ed740, 1), (ram, 0x4ed740, 1) MULTIEQUAL (ram, 0x4ed740, 1) , (ram, 0x4ed740, 1)]
[(ram, 0x4ed741, 1) COPY (ram, 0x4ed741, 1), (ram, 0x4ed741, 1) MULTIEQUAL (ram, 0x4ed741, 1) , (ram, 0x4ed741, 1)]
[(ram, 0x4ed742, 1) COPY (ram, 0x4ed742, 1), (ram, 0x4ed742, 1) MULTIEQUAL (ram, 0x4ed742, 1) , (ram, 0x4ed742, 1)]
[(ram, 0x4ed743, 1) COPY (ram, 0x4ed743, 1), (ram, 0x4ed743, 1) MULTIEQUAL (ram, 0x4ed743, 1) , (ram, 0x4ed743, 1)]
[(ram, 0x4ed744, 1) COPY (ram, 0x4ed744, 1), (ram, 0x4ed744, 1) MULTIEQUAL (ram, 0x4ed744, 1) , (ram, 0x4ed744, 1)]
[(ram, 0x4ed745, 1) COPY (ram, 0x4ed745, 1), (ram, 0x4ed745, 1) MULTIEQUAL (ram, 0x4ed745, 1) , (ram, 0x4ed745, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
