[ ---  CBRANCH (ram, 0x1feee0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c6128, 8) , (const, 0x0, 8)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x28, 4)]
[ ---  CBRANCH (ram, 0x1fef10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x16dd20, 8) , (unique, 0x1000003b, 8) , (unique, 0x10000033, 8), (unique, 0x1000003b, 8) COPY (const, 0x28e0ac, 8), (unique, 0x10000033, 8) COPY (const, 0x28bf73, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1feeda, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000004b, 8) , (unique, 0xbd00, 4), (unique, 0x1000004b, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000043, 8), (unique, 0x10000043, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) INDIRECT (register, 0x0, 8) , (const, 0x38, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x16, 4)]
[ ---  CALL (ram, 0x1764d0, 8) , (ram, 0x4c6128, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
