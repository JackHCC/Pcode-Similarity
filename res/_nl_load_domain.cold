[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(stack, 0xfffffffffffffff8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4011c4, 8)]
[(register, 0x20, 8) CAST (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x1000023d, 8) COPY (ram, 0x4c77d8, 8)]
[ ---  CBRANCH (ram, 0x401233, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c77d8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000275, 8), (unique, 0x10000275, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x40120f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000028d, 8), (unique, 0x1000028d, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c77d0, 4) , (const, 0x0, 4)]
[(ram, 0x4c77d0, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000245, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1de, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x1de, 4)]
[(ram, 0x4c77d0, 4) INDIRECT (ram, 0x4c77d0, 4) , (const, 0x1de, 4)]
[(ram, 0x4c77d4, 4) INDIRECT (ram, 0x4c77d4, 4) , (const, 0x1de, 4)]
[(ram, 0x4c77d8, 8) INDIRECT (ram, 0x4c77d8, 8) , (const, 0x1de, 4)]
[(ram, 0x4c77e0, 4) INDIRECT (ram, 0x4c77e0, 4) , (const, 0x1de, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1de, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x1de, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x1000012b, 8), (unique, 0x1000012b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c77d0, 8)]
[(unique, 0x1000024d, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x1000025d, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c77d0, 4) , (const, 0x0, 4)]
[(ram, 0x4c77d0, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000255, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffffe8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe8, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffd8, 4) MULTIEQUAL (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(ram, 0x4c77d8, 8) MULTIEQUAL (unique, 0x1000023d, 8) , (unique, 0x10000245, 8) , (unique, 0x1000024d, 8) , (unique, 0x10000255, 8) , (unique, 0x1000025d, 8)]
[(ram, 0x4c77d0, 4) MULTIEQUAL (ram, 0x4c77d0, 4) , (ram, 0x4c77d0, 4) , (ram, 0x4c77d0, 4) , (ram, 0x4c77d0, 4) , (ram, 0x4c77d0, 4)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c77d4, 4) INT_ADD (ram, 0x4c77d4, 4) , (const, 0x1, 4), (ram, 0x4c77d4, 4) MULTIEQUAL (ram, 0x4c77d4, 4) , (ram, 0x4c77d4, 4) , (ram, 0x4c77d4, 4) , (ram, 0x4c77d4, 4) , (ram, 0x4c77d4, 4)]
[ ---  CBRANCH (ram, 0x401278, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c77e0, 4) , (const, 0x0, 4), (ram, 0x4c77e0, 4) MULTIEQUAL (ram, 0x4c77e0, 4) , (ram, 0x4c77e0, 4) , (ram, 0x4c77e0, 4) , (ram, 0x4c77e0, 4) , (ram, 0x4c77e0, 4)]
[(ram, 0x4c77e0, 4) COPY (const, 0x1, 4)]
[(register, 0x0, 8) COPY (const, 0x10, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[ ---  CBRANCH (ram, 0x401267, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x78, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000295, 8) , (const, 0x0, 8), (unique, 0x10000295, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000153, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000153, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x401251, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x95, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x95, 4)]
[(ram, 0x4c77d0, 4) INDIRECT (ram, 0x4c77d0, 4) , (const, 0x95, 4)]
[(ram, 0x4c77d4, 4) INDIRECT (ram, 0x4c77d4, 4) , (const, 0x95, 4)]
[(ram, 0x4c77d8, 8) INDIRECT (ram, 0x4c77d8, 8) , (const, 0x95, 4)]
[(ram, 0x4c77e0, 4) INDIRECT (ram, 0x4c77e0, 4) , (const, 0x95, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (unique, 0xbe00, 8) , (const, 0x95, 4), (unique, 0xbe00, 8) INT_OR (stack, 0xfffffffffffffed0, 8) , (const, 0x20, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x95, 4)]
[(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x95, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x95, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x95, 4)]
[ ---  CALL (ram, 0x469590, 8) , (const, 0x1, 4) , (register, 0x20, 8) , (const, 0x0, 8)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffffe8, 8) MULTIEQUAL (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8)]
[(stack, 0xffffffffffffffd8, 4) MULTIEQUAL (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(ram, 0x4c77d8, 8) MULTIEQUAL (ram, 0x4c77d8, 8) , (ram, 0x4c77d8, 8)]
[(ram, 0x4c77d4, 4) MULTIEQUAL (ram, 0x4c77d4, 4) , (ram, 0x4c77d4, 4)]
[(ram, 0x4c77d0, 4) MULTIEQUAL (ram, 0x4c77d0, 4) , (ram, 0x4c77d0, 4)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x401347, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c77e0, 4) , (const, 0x1, 4), (ram, 0x4c77e0, 4) MULTIEQUAL (ram, 0x4c77e0, 4) , (ram, 0x4c77e0, 4)]
[ ---  CBRANCH (ram, 0x4013a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c77e0, 4) , (const, 0x2, 4)]
[(ram, 0x4c77e0, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000205, 4) COPY (ram, 0x4c77d0, 4)]
[ ---  CBRANCH (ram, 0x4012e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (ram, 0x4c77d4, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c77d8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4012c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000029d, 8), (unique, 0x1000029d, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(unique, 0x1000020d, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4012e5, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (ram, 0x4c77d0, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(unique, 0x10000209, 4) COPY (ram, 0x4c77d0, 4), (ram, 0x4c77d0, 4) INT_ADD (ram, 0x4c77d0, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x4012e5, 1)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xce, 4)]
[(ram, 0x4c77d0, 4) INDIRECT (ram, 0x4c77d0, 4) , (const, 0xce, 4), (ram, 0x4c77d0, 4) MULTIEQUAL (unique, 0x10000205, 4) , (unique, 0x10000209, 4) , (unique, 0x1000020d, 4) , (unique, 0x1000020d, 4)]
[(ram, 0x4c77d4, 4) INDIRECT (register, 0x0, 4) , (const, 0xce, 4)]
[(ram, 0x4c77e0, 4) INDIRECT (ram, 0x4c77e0, 4) , (const, 0xce, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0xce, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0xce, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0xce, 4)]
[ ---  CALL (ram, 0x40f5f0, 8) , (const, 0x6, 4)]
[(unique, 0x10000215, 8) COPY (ram, 0x4c77d8, 8), (ram, 0x4c77d8, 8) INDIRECT (ram, 0x4c77d8, 8) , (const, 0xce, 4), (ram, 0x4c77d8, 8) MULTIEQUAL (ram, 0x4c77d8, 8) , (ram, 0x4c77d8, 8) , (ram, 0x4c77d8, 8) , (ram, 0x4c77d8, 8)]
[ ---  CBRANCH (ram, 0x40133f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c77d8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002a5, 8), (unique, 0x100002a5, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (ram, 0x4c77d8, 8) INDIRECT (ram, 0x4c77d8, 8) , (const, 0xce, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xce, 4), (ram, 0x4c77d8, 8) MULTIEQUAL (ram, 0x4c77d8, 8) , (ram, 0x4c77d8, 8) , (ram, 0x4c77d8, 8) , (ram, 0x4c77d8, 8)]
[ ---  CBRANCH (ram, 0x40131b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002ad, 8), (unique, 0x100002ad, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c77d0, 4) , (const, 0x0, 4)]
[(ram, 0x4c77d0, 4) COPY (const, 0x1, 4)]
[(unique, 0x1000021d, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x194, 4)]
[(ram, 0x4c77d0, 4) INDIRECT (ram, 0x4c77d0, 4) , (const, 0x194, 4)]
[(ram, 0x4c77d4, 4) INDIRECT (ram, 0x4c77d4, 4) , (const, 0x194, 4)]
[(ram, 0x4c77d8, 8) INDIRECT (ram, 0x4c77d8, 8) , (const, 0x194, 4)]
[(ram, 0x4c77e0, 4) INDIRECT (ram, 0x4c77e0, 4) , (const, 0x194, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x194, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x194, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x194, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000133, 8), (unique, 0x10000133, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c77d0, 8)]
[(unique, 0x10000225, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x10000235, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c77d0, 4) , (const, 0x0, 4)]
[(ram, 0x4c77d0, 4) COPY (const, 0x1, 4)]
[(unique, 0x1000022d, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffffe8, 8) MULTIEQUAL (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(ram, 0x4c77d8, 8) MULTIEQUAL (unique, 0x10000215, 8) , (unique, 0x1000021d, 8) , (unique, 0x10000225, 8) , (unique, 0x1000022d, 8) , (unique, 0x10000235, 8)]
[(ram, 0x4c77d0, 4) MULTIEQUAL (ram, 0x4c77d0, 4) , (ram, 0x4c77d0, 4) , (ram, 0x4c77d0, 4) , (ram, 0x4c77d0, 4) , (ram, 0x4c77d0, 4)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4c77d4, 4) INT_ADD (ram, 0x4c77d4, 4) , (const, 0x1, 4), (ram, 0x4c77d4, 4) MULTIEQUAL (ram, 0x4c77d4, 4) , (ram, 0x4c77d4, 4) , (ram, 0x4c77d4, 4) , (ram, 0x4c77d4, 4) , (ram, 0x4c77d4, 4)]
[ ---  BRANCH (ram, 0x40134c, 1)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffffe8, 8) MULTIEQUAL (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(ram, 0x4c77d8, 8) MULTIEQUAL (ram, 0x4c77d8, 8) , (ram, 0x4c77d8, 8)]
[(ram, 0x4c77d4, 4) MULTIEQUAL (ram, 0x4c77d4, 4) , (ram, 0x4c77d4, 4)]
[(ram, 0x4c77d0, 4) MULTIEQUAL (ram, 0x4c77d0, 4) , (ram, 0x4c77d0, 4)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4c77e0, 4) COPY (const, 0x3, 4)]
[(stack, 0xffffffffffffff50, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001f5, 8) COPY (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x8, 8) COPY (const, 0x24, 8)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffffe8, 8) MULTIEQUAL (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100001f5, 8) , (unique, 0x100001fd, 8)]
[ ---  CBRANCH (ram, 0x401376, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x121, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x121, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002c5, 8) , (const, 0x0, 4), (unique, 0x100002c5, 8) CAST (register, 0x38, 8)]
[(unique, 0x100001fd, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100002bd, 8), (unique, 0x100002bd, 8) INT_ADD (unique, 0x100002b5, 8) , (unique, 0x100001ed, 8), (unique, 0x100002b5, 8) CAST (register, 0x38, 8), (unique, 0x100001ed, 8) INT_MULT (unique, 0x100001b5, 8) , (const, 0x4, 8), (unique, 0x100001b5, 8) INT_ADD (unique, 0x100001ad, 8) , (const, 0x1, 8), (unique, 0x100001ad, 8) INT_MULT (unique, 0xb580, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb580, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x401374, 1)]
[(register, 0x0, 8) COPY (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000017b, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x1000017b, 8) PTRSUB (unique, 0x3c80, 8) , (const, 0x0, 8), (unique, 0x3c80, 8) CAST (unique, 0x100002cd, 8), (unique, 0x100002cd, 8) PTRADD (unique, 0x100001dd, 8) , (const, 0x80, 8) , (const, 0x1, 8), (unique, 0x100001dd, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x40137b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c77d0, 4) INDIRECT (ram, 0x4c77d0, 4) , (const, 0x144, 4)]
[(ram, 0x4c77d4, 4) INDIRECT (ram, 0x4c77d4, 4) , (const, 0x144, 4)]
[(ram, 0x4c77d8, 8) INDIRECT (ram, 0x4c77d8, 8) , (const, 0x144, 4)]
[(ram, 0x4c77e0, 4) INDIRECT (ram, 0x4c77e0, 4) , (const, 0x144, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x144, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x144, 4)]
[(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x144, 4), (stack, 0xffffffffffffffd8, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x144, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x144, 4)]
[ ---  CALL (ram, 0x469550, 8) , (const, 0x6, 4) , (unique, 0x3c80, 8) , (const, 0x0, 8)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffffe8, 8) MULTIEQUAL (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8)]
[(stack, 0xffffffffffffffd8, 4) MULTIEQUAL (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(ram, 0x4c77d8, 8) MULTIEQUAL (ram, 0x4c77d8, 8) , (ram, 0x4c77d8, 8)]
[(ram, 0x4c77d4, 4) MULTIEQUAL (ram, 0x4c77d4, 4) , (ram, 0x4c77d4, 4)]
[(ram, 0x4c77d0, 4) MULTIEQUAL (ram, 0x4c77d0, 4) , (ram, 0x4c77d0, 4)]
[ ---  CBRANCH (ram, 0x4013c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c77e0, 4) , (const, 0x3, 4), (ram, 0x4c77e0, 4) MULTIEQUAL (ram, 0x4c77e0, 4) , (ram, 0x4c77e0, 4)]
[(ram, 0x4c77d0, 4) INDIRECT (ram, 0x4c77d0, 4) , (const, 0x154, 4)]
[(ram, 0x4c77d4, 4) INDIRECT (ram, 0x4c77d4, 4) , (const, 0x154, 4)]
[(ram, 0x4c77d8, 8) INDIRECT (ram, 0x4c77d8, 8) , (const, 0x154, 4)]
[(ram, 0x4c77e0, 4) INDIRECT (ram, 0x4c77e0, 4) , (const, 0x154, 4), (ram, 0x4c77e0, 4) COPY (const, 0x4, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x154, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x154, 4)]
[(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x154, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x154, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x154, 4)]
[ ---  CALL (ram, 0x40f5f0, 8) , (const, 0x6, 4)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffffe8, 8) MULTIEQUAL (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8)]
[(stack, 0xffffffffffffffd8, 4) MULTIEQUAL (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(ram, 0x4c77d8, 8) MULTIEQUAL (ram, 0x4c77d8, 8) , (ram, 0x4c77d8, 8)]
[(ram, 0x4c77d4, 4) MULTIEQUAL (ram, 0x4c77d4, 4) , (ram, 0x4c77d4, 4)]
[(ram, 0x4c77d0, 4) MULTIEQUAL (ram, 0x4c77d0, 4) , (ram, 0x4c77d0, 4)]
[ ---  CBRANCH (ram, 0x4013d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c77e0, 4) , (const, 0x4, 4), (ram, 0x4c77e0, 4) MULTIEQUAL (ram, 0x4c77e0, 4) , (ram, 0x4c77e0, 4)]
[ ---  CBRANCH (ram, 0x4013f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c77e0, 4) , (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x4013f5, 1)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x171, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x171, 4)]
[(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x171, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x171, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x171, 4)]
[ ---  CALL (ram, 0x454cb0, 8) , (const, 0x7f, 4)]
[(ram, 0x4c77d0, 4) COPY (ram, 0x4c77d0, 4), (ram, 0x4c77d0, 4) INDIRECT (ram, 0x4c77d0, 4) , (const, 0x171, 4)]
[(ram, 0x4c77d4, 4) COPY (ram, 0x4c77d4, 4), (ram, 0x4c77d4, 4) INDIRECT (ram, 0x4c77d4, 4) , (const, 0x171, 4)]
[(ram, 0x4c77d8, 8) COPY (ram, 0x4c77d8, 8), (ram, 0x4c77d8, 8) INDIRECT (ram, 0x4c77d8, 8) , (const, 0x171, 4)]
[(ram, 0x4c77e0, 4) COPY (ram, 0x4c77e0, 4), (ram, 0x4c77e0, 4) INDIRECT (ram, 0x4c77e0, 4) , (const, 0x171, 4), (ram, 0x4c77e0, 4) COPY (const, 0x6, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x4013d7, 1)]
