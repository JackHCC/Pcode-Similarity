[ ---  CBRANCH (ram, 0x426d04, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001bd, 8), (unique, 0x100001bd, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x1, 1), (unique, 0x4f00, 8) CAST (unique, 0x100001c5, 8), (unique, 0x100001c5, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffd0, 8)]
[(unique, 0x3200, 8) CAST (unique, 0x100001d5, 8), (unique, 0x100001d5, 8) INT_ADD (unique, 0x100001cd, 8) , (const, 0x80, 8), (unique, 0x100001cd, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x3200, 8) CAST (unique, 0x100001e5, 8), (unique, 0x100001e5, 8) INT_ADD (unique, 0x100001dd, 8) , (const, 0x280, 8), (unique, 0x100001dd, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x31, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x2a, 4)]
[(ram, 0x4c5710, 8) INDIRECT (ram, 0x4c5710, 8) , (const, 0x31, 4), (ram, 0x4c5710, 8) INDIRECT (ram, 0x4c5710, 8) , (const, 0x2a, 4)]
[(ram, 0x4c5734, 4) INDIRECT (ram, 0x4c5734, 4) , (const, 0x31, 4), (ram, 0x4c5734, 4) INDIRECT (ram, 0x4c5734, 4) , (const, 0x2a, 4)]
[(ram, 0x4c7c78, 8) INDIRECT (ram, 0x4c7c78, 8) , (const, 0x31, 4), (ram, 0x4c7c78, 8) INDIRECT (ram, 0x4c7c78, 8) , (const, 0x2a, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x31, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x2a, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x31, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x2a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x0, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ed, 8), (unique, 0x100001ed, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8)]
[(stack, 0x0, 8) MULTIEQUAL (stack, 0x0, 8) , (unique, 0x10000151, 8) , (stack, 0x0, 8) , (stack, 0x0, 8)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (unique, 0x1000014d, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (unique, 0x10000145, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7c78, 8) MULTIEQUAL (ram, 0x4c7c78, 8) , (unique, 0x1000013d, 8) , (ram, 0x4c7c78, 8) , (ram, 0x4c7c78, 8)]
[(ram, 0x4c5734, 4) MULTIEQUAL (ram, 0x4c5734, 4) , (unique, 0x10000139, 4) , (ram, 0x4c5734, 4) , (ram, 0x4c5734, 4)]
[(ram, 0x4c5710, 8) MULTIEQUAL (ram, 0x4c5710, 8) , (unique, 0x10000131, 8) , (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (unique, 0x10000129, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000121, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100001f5, 8), (unique, 0x100001f5, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3200, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000121, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000129, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(unique, 0x10000131, 8) MULTIEQUAL (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8)]
[(unique, 0x10000139, 4) MULTIEQUAL (ram, 0x4c5734, 4) , (ram, 0x4c5734, 4)]
[(unique, 0x1000013d, 8) MULTIEQUAL (ram, 0x4c7c78, 8) , (ram, 0x4c7c78, 8)]
[(unique, 0x10000145, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(unique, 0x1000014d, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(unique, 0x10000151, 8) MULTIEQUAL (stack, 0x0, 8) , (stack, 0x0, 8)]
[ ---  CBRANCH (ram, 0x426cf3, 1) , (unique, 0x10000120, 1), (unique, 0x10000120, 1) INT_NOTEQUAL (unique, 0x10000118, 8) , (const, 0x0, 8), (unique, 0x10000118, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c5700, 8) INDIRECT (unique, 0x10000129, 8) , (const, 0x42, 4)]
[(ram, 0x4c5710, 8) INDIRECT (unique, 0x10000131, 8) , (const, 0x42, 4)]
[(ram, 0x4c5734, 4) INDIRECT (unique, 0x10000139, 4) , (const, 0x42, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (unique, 0x10000145, 8) , (const, 0x42, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (unique, 0x1000014d, 4) , (const, 0x42, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000118, 8)]
[ ---  CBRANCH (ram, 0x426df0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7c78, 8) , (const, 0x0, 8), (ram, 0x4c7c78, 8) INDIRECT (unique, 0x1000013d, 8) , (const, 0x42, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000121, 8) , (const, 0x1e0, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x1e0, 4)]
[(ram, 0x4c5710, 8) INDIRECT (ram, 0x4c5710, 8) , (const, 0x1e0, 4)]
[(ram, 0x4c5734, 4) INDIRECT (ram, 0x4c5734, 4) , (const, 0x1e0, 4)]
[(ram, 0x4c7c78, 8) INDIRECT (ram, 0x4c7c78, 8) , (const, 0x1e0, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x1e0, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x1e0, 4)]
[(stack, 0x0, 8) INDIRECT (unique, 0x10000151, 8) , (const, 0x1e0, 4)]
[ ---  CALLIND (ram, 0x4c7c78, 8) , (unique, 0x10000118, 8) , (unique, 0x10000151, 8)]
[ ---  BRANCH (ram, 0x426c90, 1)]
[(unique, 0x3100, 8) PTRADD (unique, 0x10000118, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x426d80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000077, 8) , (const, 0x0, 8), (unique, 0x10000077, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000118, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x426da0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5734, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x426da0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (ram, 0x4c5710, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x426db0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x2000001, 8)]
[(unique, 0x10000108, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  BRANCH (ram, 0x426da0, 1)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000121, 8) , (const, 0x1c9, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x1c9, 4), (ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (unique, 0x10000108, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c5710, 8) INDIRECT (ram, 0x4c5710, 8) , (const, 0x1c9, 4), (ram, 0x4c5710, 8) MULTIEQUAL (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8) , (register, 0x0, 8) , (ram, 0x4c5710, 8)]
[(ram, 0x4c5734, 4) INDIRECT (ram, 0x4c5734, 4) , (const, 0x1c9, 4)]
[(ram, 0x4c7c78, 8) INDIRECT (ram, 0x4c7c78, 8) , (const, 0x1c9, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x1c9, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x1c9, 4)]
[(stack, 0x0, 8) INDIRECT (unique, 0x10000151, 8) , (const, 0x1c9, 4)]
[ ---  CALL (ram, 0x421a50, 8) , (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x426c90, 1)]
[ ---  CBRANCH (ram, 0x426dd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001fd, 8), (unique, 0x100001fd, 8) INT_ADD (unique, 0x10000121, 8) , (const, 0xffffffc8, 8)]
[ ---  CBRANCH (ram, 0x426cce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000205, 8), (unique, 0x10000205, 8) INT_ADD (unique, 0x10000121, 8) , (const, 0xffffffd0, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000121, 8) , (const, 0x19c, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x19c, 4)]
[(ram, 0x4c5710, 8) INDIRECT (ram, 0x4c5710, 8) , (const, 0x19c, 4)]
[(ram, 0x4c5734, 4) INDIRECT (ram, 0x4c5734, 4) , (const, 0x19c, 4)]
[(ram, 0x4c7c78, 8) INDIRECT (ram, 0x4c7c78, 8) , (const, 0x19c, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x19c, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x19c, 4)]
[(stack, 0x0, 8) INDIRECT (unique, 0x10000151, 8) , (const, 0x19c, 4)]
[ ---  CALL (ram, 0x424e50, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000118, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x426cce, 1)]
[(stack, 0x0, 8) MULTIEQUAL (unique, 0x10000151, 8) , (unique, 0x10000151, 8) , (stack, 0x0, 8)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7c78, 8) MULTIEQUAL (ram, 0x4c7c78, 8) , (ram, 0x4c7c78, 8) , (ram, 0x4c7c78, 8)]
[(ram, 0x4c5734, 4) MULTIEQUAL (ram, 0x4c5734, 4) , (ram, 0x4c5734, 4) , (ram, 0x4c5734, 4)]
[(ram, 0x4c5710, 8) MULTIEQUAL (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000121, 8) , (unique, 0x10000121, 8) , (register, 0x110, 8)]
[(register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x426ce1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000087, 8) , (const, 0x0, 8), (unique, 0x10000087, 8) INT_AND (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000215, 8), (unique, 0x10000215, 8) INT_AND (unique, 0x1000020d, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x1000020d, 8) CAST (unique, 0x3100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x91, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x91, 4)]
[(ram, 0x4c5710, 8) INDIRECT (ram, 0x4c5710, 8) , (const, 0x91, 4)]
[(ram, 0x4c5734, 4) INDIRECT (ram, 0x4c5734, 4) , (const, 0x91, 4)]
[(ram, 0x4c7c78, 8) INDIRECT (ram, 0x4c7c78, 8) , (const, 0x91, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x91, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x91, 4)]
[(stack, 0x0, 8) INDIRECT (stack, 0x0, 8) , (const, 0x91, 4)]
[ ---  CALL (ram, 0x422d80, 8) , (register, 0x38, 8) , (unique, 0x3100, 8) , (const, 0x0, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000021d, 8), (unique, 0x1000021d, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x426c90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3200, 8) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000121, 8) , (const, 0xb6, 4)]
[(ram, 0x4c5700, 8) INDIRECT (unique, 0x10000129, 8) , (const, 0xb6, 4)]
[(ram, 0x4c5710, 8) INDIRECT (unique, 0x10000131, 8) , (const, 0xb6, 4)]
[(ram, 0x4c5734, 4) INDIRECT (unique, 0x10000139, 4) , (const, 0xb6, 4)]
[(ram, 0x4c7c78, 8) INDIRECT (unique, 0x1000013d, 8) , (const, 0xb6, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (unique, 0x10000145, 8) , (const, 0xb6, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (unique, 0x1000014d, 4) , (const, 0xb6, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0xbd, 4), (ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c5710, 8) INDIRECT (ram, 0x4c5710, 8) , (const, 0xbd, 4), (ram, 0x4c5710, 8) MULTIEQUAL (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8)]
[(ram, 0x4c5734, 4) INDIRECT (ram, 0x4c5734, 4) , (const, 0xbd, 4), (ram, 0x4c5734, 4) MULTIEQUAL (ram, 0x4c5734, 4) , (ram, 0x4c5734, 4)]
[(ram, 0x4c7c78, 8) INDIRECT (ram, 0x4c7c78, 8) , (const, 0xbd, 4), (ram, 0x4c7c78, 8) MULTIEQUAL (ram, 0x4c7c78, 8) , (ram, 0x4c7c78, 8)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0xbd, 4), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0xbd, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000022d, 8) , (const, 0x0, 8), (unique, 0x1000022d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000181, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x10000181, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x426d70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000225, 8), (unique, 0x10000225, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000179, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x10000179, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x426e20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000235, 8), (unique, 0x10000235, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7cb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7cb0, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x189, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x189, 4)]
[(ram, 0x4c5710, 8) INDIRECT (ram, 0x4c5710, 8) , (const, 0x189, 4)]
[(ram, 0x4c5734, 4) INDIRECT (ram, 0x4c5734, 4) , (const, 0x189, 4)]
[(ram, 0x4c7c78, 8) INDIRECT (ram, 0x4c7c78, 8) , (const, 0x189, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x189, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x189, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000171, 8), (unique, 0x10000171, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7cb0, 8)]
[ ---  BRANCH (ram, 0x426d38, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7cb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7cb0, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7c78, 8) MULTIEQUAL (ram, 0x4c7c78, 8) , (ram, 0x4c7c78, 8) , (ram, 0x4c7c78, 8) , (ram, 0x4c7c78, 8)]
[(ram, 0x4c5734, 4) MULTIEQUAL (ram, 0x4c5734, 4) , (ram, 0x4c5734, 4) , (ram, 0x4c5734, 4) , (ram, 0x4c5734, 4)]
[(ram, 0x4c5710, 8) MULTIEQUAL (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x426e81, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000023d, 8), (unique, 0x1000023d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x880, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000161, 8) , (unique, 0x10000159, 8) , (const, 0x3c1, 8) , (unique, 0x10000169, 8), (unique, 0x10000169, 8) COPY (const, 0x49c340, 8), (unique, 0x10000161, 8) COPY (const, 0x49b38a, 8), (unique, 0x10000159, 8) COPY (const, 0x49b1a1, 8)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x167, 4)]
[(ram, 0x4c5710, 8) COPY (ram, 0x4c5710, 8), (ram, 0x4c5710, 8) INDIRECT (ram, 0x4c5710, 8) , (const, 0x167, 4)]
[(ram, 0x4c5734, 4) COPY (ram, 0x4c5734, 4), (ram, 0x4c5734, 4) INDIRECT (ram, 0x4c5734, 4) , (const, 0x167, 4)]
[(ram, 0x4c7c78, 8) COPY (ram, 0x4c7c78, 8), (ram, 0x4c7c78, 8) INDIRECT (ram, 0x4c7c78, 8) , (const, 0x167, 4)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x167, 4)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x167, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0xff, 4)]
[(ram, 0x4c5710, 8) INDIRECT (ram, 0x4c5710, 8) , (const, 0xff, 4)]
[(ram, 0x4c5734, 4) INDIRECT (ram, 0x4c5734, 4) , (const, 0xff, 4)]
[(ram, 0x4c7c78, 8) INDIRECT (ram, 0x4c7c78, 8) , (const, 0xff, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0xff, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0xff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000245, 8), (unique, 0x10000245, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x880, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x426e00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x15f, 4)]
[(ram, 0x4c5710, 8) INDIRECT (ram, 0x4c5710, 8) , (const, 0x15f, 4)]
[(ram, 0x4c5734, 4) INDIRECT (ram, 0x4c5734, 4) , (const, 0x15f, 4)]
[(ram, 0x4c7c78, 8) INDIRECT (ram, 0x4c7c78, 8) , (const, 0x15f, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x15f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (ram, 0x4c7ca8, 8), (unique, 0x3200, 8) CAST (unique, 0x1000024d, 8), (unique, 0x1000024d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x878, 8)]
[(ram, 0x4c7ca8, 8) COPY (unique, 0x100001b5, 8), (unique, 0x100001b5, 8) INDIRECT (unique, 0x100001ad, 8) , (const, 0x15f, 4), (unique, 0x100001ad, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x426d59, 1)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7c78, 8) MULTIEQUAL (ram, 0x4c7c78, 8) , (ram, 0x4c7c78, 8)]
[(ram, 0x4c5734, 4) MULTIEQUAL (ram, 0x4c5734, 4) , (ram, 0x4c5734, 4)]
[(ram, 0x4c5710, 8) MULTIEQUAL (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(unique, 0x100001a9, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000025d, 8), (unique, 0x1000025d, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000255, 8), (unique, 0x10000255, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x426e50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000255, 8), (unique, 0x10000255, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c7cb0, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000265, 8), (unique, 0x10000265, 8) INT_ZEXT (unique, 0x100001a9, 4)]
[ ---  CBRANCH (ram, 0x426d70, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x1000026d, 4), (unique, 0x1000026d, 4) CAST (unique, 0x100001a9, 4)]
[(register, 0x0, 8) COPY (const, 0xca, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x426d70, 1)]
[(ram, 0x4c7cb0, 4) INT_SUB (ram, 0x4c7cb0, 4) , (const, 0x1, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c5710, 8) COPY (ram, 0x4c5710, 8), (ram, 0x4c5710, 8) MULTIEQUAL (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8) , (ram, 0x4c5710, 8)]
[(ram, 0x4c5734, 4) COPY (ram, 0x4c5734, 4), (ram, 0x4c5734, 4) MULTIEQUAL (ram, 0x4c5734, 4) , (ram, 0x4c5734, 4) , (ram, 0x4c5734, 4) , (ram, 0x4c5734, 4)]
[(ram, 0x4c7c78, 8) COPY (ram, 0x4c7c78, 8), (ram, 0x4c7c78, 8) MULTIEQUAL (ram, 0x4c7c78, 8) , (ram, 0x4c7c78, 8) , (ram, 0x4c7c78, 8) , (ram, 0x4c7c78, 8)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
