[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed8, 8)]
[(ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x23, 4)]
[(ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x23, 4)]
[(stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0x23, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x23, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x23, 4)]
[(stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x23, 4)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x23, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x23, 4)]
[ ---  CBRANCH (ram, 0x2181a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x64, 8)]
[(ram, 0x4c2e48, 8) COPY (ram, 0x4c2e48, 8)]
[(ram, 0x4c2f98, 8) COPY (ram, 0x4c2f98, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CALL (ram, 0x17ba60, 8) , (register, 0x20, 8) , (const, 0x8000, 8) , (const, 0xffffffff, 8) , (const, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x57, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x4c, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x57, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x4c, 4)]
[(stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x57, 4), (stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x4c, 4)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x57, 4), (stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x4c, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x57, 4), (stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x4c, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x57, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x4c, 4), (stack, 0xffffffffffffff60, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x57, 4), (stack, 0xffffffffffffffb0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c27a0, 8)]
[ ---  CALL (ram, 0x17cf00, 8) , (register, 0x20, 8) , (register, 0x0, 8) , (const, 0x64, 8) , (register, 0x0, 8)]
[(unique, 0xbc80, 4) INT_AND (stack, 0xfffffffffffffed8, 4) , (const, 0xfffffffe, 4), (stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0x57, 4), (stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0x4c, 4)]
[(stack, 0xffffffffffffffb8, 8) COPY (ram, 0x4c2e48, 8), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x57, 4), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x4c, 4)]
[(stack, 0xffffffffffffffc0, 8) COPY (ram, 0x4c2f98, 8), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x57, 4), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x4c, 4)]
[ ---  CBRANCH (ram, 0x2180e7, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x30, 4)]
[(unique, 0xbd00, 4) INT_OR (stack, 0xffffffffffffff4c, 4) , (const, 0x4, 4)]
[(ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x8e, 4)]
[(ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x8e, 4)]
[(stack, 0xfffffffffffffed8, 4) INDIRECT (unique, 0xbc80, 4) , (const, 0x8e, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x8e, 4), (stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (unique, 0xbd00, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8e, 4)]
[ ---  CBRANCH (ram, 0x218190, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x14d130, 8) , (register, 0x20, 8) , (register, 0x10, 8) , (register, 0x8, 8)]
[(stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0x133, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x133, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x133, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (stack, 0xffffffffffffff10, 8)]
[(ram, 0x4c2e48, 8) COPY (ram, 0x4c2e48, 8), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x133, 4)]
[(ram, 0x4c2f98, 8) COPY (ram, 0x4c2f98, 8), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x133, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x218150, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000165, 8), (unique, 0x10000165, 8) INT_RIGHT (unique, 0x1000015d, 8) , (const, 0x1, 4), (unique, 0x1000015d, 8) CAST (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) PTRADD (stack, 0xffffffffffffff08, 8) , (unique, 0x100000c9, 8) , (const, 0x1, 8), (unique, 0x100000c9, 8) INT_2COMP (unique, 0x10000155, 8), (unique, 0x10000155, 8) CAST (stack, 0xfffffffffffffef8, 8), (register, 0x28, 8) PTRADD (stack, 0xffffffffffffff00, 8) , (unique, 0x100000c1, 8) , (const, 0x1, 8), (unique, 0x100000c1, 8) INT_2COMP (unique, 0x1000014d, 8), (unique, 0x1000014d, 8) CAST (stack, 0xfffffffffffffef8, 8)]
[(stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0x107, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x107, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x107, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x107, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x107, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x107, 4)]
[(unique, 0x10000135, 8) COPY (stack, 0xffffffffffffff10, 8), (stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x107, 4)]
[(ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x112, 4), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x107, 4)]
[(ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x112, 4), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x107, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000175, 8), (unique, 0x10000175, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x1000016d, 8), (unique, 0x1000016d, 8) CAST (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x218120, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000175, 8), (unique, 0x10000175, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x1000016d, 8), (unique, 0x1000016d, 8) CAST (unique, 0x3100, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffff10, 8) , (register, 0x28, 8)]
[(ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x120, 4), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x11c, 4)]
[(ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x120, 4), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x11c, 4)]
[(stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0x120, 4), (stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x120, 4), (stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x120, 4), (stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x120, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x120, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x120, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x120, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11c, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x10000135, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0xd3, 4), (stack, 0xfffffffffffffed8, 4) MULTIEQUAL (stack, 0xfffffffffffffed8, 4) , (stack, 0xfffffffffffffed8, 4)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0xd3, 4), (stack, 0xffffffffffffff10, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0xd3, 4), (stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xd3, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xd3, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xd3, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd3, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0xde, 4), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0xd3, 4), (ram, 0x4c2e48, 8) MULTIEQUAL (ram, 0x4c2e48, 8) , (ram, 0x4c2e48, 8)]
[(ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0xde, 4), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0xd3, 4), (ram, 0x4c2f98, 8) MULTIEQUAL (ram, 0x4c2f98, 8) , (ram, 0x4c2f98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000185, 8), (unique, 0x10000185, 8) CALL (ram, 0x11f7f0, 8) , (stack, 0xffffffffffffff10, 8) , (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffff10, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8)]
[(unique, 0x10000104, 8) MULTIEQUAL (ram, 0x4c2e48, 8) , (ram, 0x4c2e48, 8)]
[(unique, 0x1000010c, 8) MULTIEQUAL (ram, 0x4c2f98, 8) , (ram, 0x4c2f98, 8)]
[(unique, 0x10000114, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8)]
[(unique, 0x1000013d, 8) COPY (unique, 0x100000fb, 8), (unique, 0x100000fb, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x218136, 1) , (unique, 0x10000103, 1), (unique, 0x10000103, 1) INT_EQUAL (unique, 0x100000fb, 8) , (const, 0x0, 8), (unique, 0x100000fb, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4c2e48, 8) INDIRECT (unique, 0x10000104, 8) , (const, 0x102, 4)]
[(ram, 0x4c2f98, 8) INDIRECT (unique, 0x1000010c, 8) , (const, 0x102, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x10000114, 8)]
[(unique, 0x10000145, 8) COPY (unique, 0x10000114, 8)]
[ ---  BRANCH (ram, 0x218136, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (unique, 0x1000018d, 8) , (const, 0x1, 8), (unique, 0x1000018d, 8) CAST (register, 0x28, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000013d, 8) , (unique, 0x10000145, 8)]
[(ram, 0x4c2e48, 8) COPY (ram, 0x4c2e48, 8), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0xe3, 4), (ram, 0x4c2e48, 8) MULTIEQUAL (unique, 0x10000104, 8) , (ram, 0x4c2e48, 8)]
[(ram, 0x4c2f98, 8) COPY (ram, 0x4c2f98, 8), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0xe3, 4), (ram, 0x4c2f98, 8) MULTIEQUAL (unique, 0x1000010c, 8) , (ram, 0x4c2f98, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
