[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x33, 4)]
[(ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0x33, 4)]
[(ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0x33, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x33, 4)]
[(stack, 0xfffffffffffffee8, 8) INDIRECT (stack, 0xfffffffffffffee8, 8) , (const, 0x33, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x33, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffff3c, 4) INDIRECT (stack, 0xffffffffffffff3c, 4) , (const, 0x33, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x33, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001a7, 8), (unique, 0x100001a7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2344d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (const, 0x64, 8)]
[(register, 0x28, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x23445c, 1)]
[ ---  CALL (ram, 0x18eb50, 8) , (register, 0x20, 8) , (const, 0x8000, 8) , (const, 0xffffffff, 8) , (const, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x67, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5c, 4)]
[(stack, 0xfffffffffffffee8, 8) INDIRECT (stack, 0xfffffffffffffee8, 8) , (const, 0x67, 4), (stack, 0xfffffffffffffee8, 8) INDIRECT (stack, 0xfffffffffffffee8, 8) , (const, 0x5c, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x67, 4), (stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x5c, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x67, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x67, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffff3c, 4) INDIRECT (stack, 0xffffffffffffff3c, 4) , (const, 0x67, 4), (stack, 0xffffffffffffff3c, 4) INDIRECT (stack, 0xffffffffffffff3c, 4) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x67, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x5c, 4), (stack, 0xffffffffffffff50, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x67, 4), (stack, 0xffffffffffffffa0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e8360, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x67, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5c, 4)]
[ ---  CALL (ram, 0x190330, 8) , (register, 0x20, 8) , (register, 0x0, 8) , (const, 0x64, 8) , (register, 0x0, 8)]
[(unique, 0xbc80, 4) INT_AND (stack, 0xfffffffffffffec8, 4) , (const, 0xfffffffe, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x67, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffffa8, 8) COPY (ram, 0x4eae30, 8), (ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0x67, 4), (ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffffb0, 8) COPY (ram, 0x4eaf98, 8), (ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0x67, 4), (ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0x5c, 4)]
[ ---  CBRANCH (ram, 0x234403, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x30, 4)]
[(unique, 0xbd00, 4) INT_OR (stack, 0xffffffffffffff3c, 4) , (const, 0x4, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9b, 4)]
[(ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0x9b, 4)]
[(ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0x9b, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (unique, 0xbc80, 4) , (const, 0x9b, 4)]
[(stack, 0xfffffffffffffee8, 8) INDIRECT (stack, 0xfffffffffffffee8, 8) , (const, 0x9b, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x9b, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x9b, 4)]
[(stack, 0xffffffffffffff3c, 4) INDIRECT (stack, 0xffffffffffffff3c, 4) , (const, 0x9b, 4), (stack, 0xffffffffffffff3c, 4) MULTIEQUAL (stack, 0xffffffffffffff3c, 4) , (unique, 0xbd00, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x9b, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x9b, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x9b, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x9b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9b, 4)]
[(unique, 0x1000018f, 8) COPY (stack, 0xffffffffffffff00, 8), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x9b, 4)]
[ ---  CBRANCH (ram, 0x2344c8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x15b390, 8) , (register, 0x20, 8) , (register, 0x10, 8) , (register, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x156, 4)]
[(ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0x156, 4)]
[(ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0x156, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x156, 4)]
[(stack, 0xffffffffffffff3c, 4) INDIRECT (stack, 0xffffffffffffff3c, 4) , (const, 0x156, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x156, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x156, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x156, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x156, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x156, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffff00, 8)]
[ ---  BRANCH (ram, 0x23445c, 1)]
[ ---  CBRANCH (ram, 0x234488, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) INT_RIGHT (unique, 0x100001bf, 8) , (const, 0x1, 4), (unique, 0x100001bf, 8) CAST (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) PTRADD (stack, 0xfffffffffffffef8, 8) , (unique, 0x100000d2, 8) , (const, 0x1, 8), (unique, 0x100000d2, 8) INT_2COMP (unique, 0x100001b7, 8), (unique, 0x100001b7, 8) CAST (stack, 0xfffffffffffffee8, 8), (register, 0x18, 8) PTRADD (stack, 0xfffffffffffffef0, 8) , (unique, 0x100000ca, 8) , (const, 0x1, 8), (unique, 0x100000ca, 8) INT_2COMP (unique, 0x100001af, 8), (unique, 0x100001af, 8) CAST (stack, 0xfffffffffffffee8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12d, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x12d, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x12d, 4)]
[(stack, 0xffffffffffffff3c, 4) INDIRECT (stack, 0xffffffffffffff3c, 4) , (const, 0x12d, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x12d, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x12d, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x12d, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x12d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12d, 4)]
[(ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0x138, 4), (ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0x12d, 4)]
[(ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0x138, 4), (ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0x12d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001d7, 8), (unique, 0x100001d7, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x100001cf, 8), (unique, 0x100001cf, 8) CAST (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x234444, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001d7, 8), (unique, 0x100001d7, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x100001cf, 8), (unique, 0x100001cf, 8) CAST (unique, 0x3100, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (unique, 0x1000018f, 8) , (unique, 0x100001df, 8), (unique, 0x100001df, 8) CAST (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x143, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13f, 4)]
[(ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0x143, 4), (ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0x13f, 4)]
[(ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0x143, 4), (ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0x13f, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x143, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x143, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff3c, 4) INDIRECT (stack, 0xffffffffffffff3c, 4) , (const, 0x143, 4), (stack, 0xffffffffffffff3c, 4) INDIRECT (stack, 0xffffffffffffff3c, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x143, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x143, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x143, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x143, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x143, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x13f, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0x1000018f, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe4, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0xe4, 4), (stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0xe4, 4), (stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xffffffffffffff3c, 4) INDIRECT (stack, 0xffffffffffffff3c, 4) , (const, 0xe4, 4), (stack, 0xffffffffffffff3c, 4) MULTIEQUAL (stack, 0xffffffffffffff3c, 4) , (stack, 0xffffffffffffff3c, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xe4, 4), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xe4, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xe4, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe4, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe4, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0xef, 4), (ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0xe4, 4), (ram, 0x4eae30, 8) MULTIEQUAL (ram, 0x4eae30, 8) , (ram, 0x4eae30, 8)]
[(ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0xef, 4), (ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0xe4, 4), (ram, 0x4eaf98, 8) MULTIEQUAL (ram, 0x4eaf98, 8) , (ram, 0x4eaf98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001ef, 8), (unique, 0x100001ef, 8) CALL (ram, 0x121020, 8) , (unique, 0x1000018f, 8) , (unique, 0x100001e7, 8), (unique, 0x100001e7, 8) CAST (unique, 0x3100, 8)]
[(unique, 0x10000126, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000012e, 8) MULTIEQUAL (ram, 0x4eae30, 8) , (ram, 0x4eae30, 8)]
[(unique, 0x10000136, 8) MULTIEQUAL (ram, 0x4eaf98, 8) , (ram, 0x4eaf98, 8)]
[(unique, 0x1000013e, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(unique, 0x10000142, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(unique, 0x1000014a, 4) MULTIEQUAL (stack, 0xffffffffffffff3c, 4) , (stack, 0xffffffffffffff3c, 4)]
[(unique, 0x1000014e, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(unique, 0x10000156, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x1000015e, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000166, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x1000016e, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000197, 8) COPY (unique, 0x1000011d, 8), (unique, 0x1000011d, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x234458, 1) , (unique, 0x10000125, 1), (unique, 0x10000125, 1) INT_EQUAL (unique, 0x1000011d, 8) , (const, 0x0, 8), (unique, 0x1000011d, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4eae30, 8) INDIRECT (unique, 0x1000012e, 8) , (const, 0x128, 4)]
[(ram, 0x4eaf98, 8) INDIRECT (unique, 0x10000136, 8) , (const, 0x128, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x10000142, 8)]
[(unique, 0x1000019f, 8) COPY (unique, 0x10000142, 8)]
[ ---  BRANCH (ram, 0x234458, 1)]
[(ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0xf4, 4), (ram, 0x4eae30, 8) MULTIEQUAL (unique, 0x1000012e, 8) , (ram, 0x4eae30, 8)]
[(ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0xf4, 4), (ram, 0x4eaf98, 8) MULTIEQUAL (unique, 0x10000136, 8) , (ram, 0x4eaf98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (unique, 0x100001f7, 8) , (const, 0x1, 8), (unique, 0x100001f7, 8) CAST (register, 0x18, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000197, 8) , (unique, 0x1000019f, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000166, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x1000015e, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x10000156, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (unique, 0x1000014e, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff3c, 4) MULTIEQUAL (unique, 0x1000014a, 4) , (stack, 0xffffffffffffff3c, 4) , (stack, 0xffffffffffffff3c, 4)]
[(stack, 0xfffffffffffffec8, 4) MULTIEQUAL (unique, 0x1000013e, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(ram, 0x4eaf98, 8) MULTIEQUAL (ram, 0x4eaf98, 8) , (ram, 0x4eaf98, 8) , (ram, 0x4eaf98, 8)]
[(ram, 0x4eae30, 8) MULTIEQUAL (ram, 0x4eae30, 8) , (ram, 0x4eae30, 8) , (ram, 0x4eae30, 8)]
[(register, 0x0, 4) COPY (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x2344e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ff, 8), (unique, 0x100001ff, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (unique, 0x10000126, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000016e, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae30, 8) COPY (ram, 0x4eae30, 8)]
[(ram, 0x4eaf98, 8) COPY (ram, 0x4eaf98, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x121, 4)]
[(stack, 0xffffffffffffff3c, 4) INDIRECT (stack, 0xffffffffffffff3c, 4) , (const, 0x121, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x121, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x121, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x121, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x121, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x121, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae30, 8) COPY (ram, 0x4eae30, 8), (ram, 0x4eae30, 8) INDIRECT (ram, 0x4eae30, 8) , (const, 0x121, 4)]
[(ram, 0x4eaf98, 8) COPY (ram, 0x4eaf98, 8), (ram, 0x4eaf98, 8) INDIRECT (ram, 0x4eaf98, 8) , (const, 0x121, 4)]
[ ---  RETURN (const, 0x1, 4)]
