[(unique, 0xbd80, 8) CAST (unique, 0x10000284, 8), (unique, 0x10000284, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12972f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x0, 8) CAST (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000029c, 8), (unique, 0x1000029c, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x10000294, 8) , (const, 0x2f, 4), (unique, 0x10000294, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x1000028c, 8) , (const, 0x11, 4), (unique, 0x1000028c, 8) CAST (unique, 0xbd80, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x129890, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002b4, 8), (unique, 0x100002b4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x228, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002ac, 8), (unique, 0x100002ac, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2dd8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1298d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x260, 8)]
[ ---  CBRANCH (ram, 0x129aaa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002c4, 8), (unique, 0x100002c4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x250, 8)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x6, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x258, 8)]
[ ---  CBRANCH (ram, 0x129a37, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3880, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x1000014a, 8) , (const, 0x4, 8), (unique, 0x1000014a, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1299f4, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002d4, 8), (unique, 0x100002d4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x268, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1298ba, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1298bf, 1) , (unique, 0x10000198, 1), (unique, 0x10000198, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x4, 8)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x7, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x230, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002e4, 8), (unique, 0x100002e4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x248, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002ec, 8), (unique, 0x100002ec, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x238, 8)]
[(stack, 0xffffffffffffff68, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002f4, 8), (unique, 0x100002f4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x240, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(ram, 0x4c2dd8, 8) MULTIEQUAL (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x10000304, 8), (unique, 0x10000304, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002fc, 8), (unique, 0x100002fc, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4), (register, 0x0, 8) INT_ADD (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff68, 8), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff60, 8), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(unique, 0x10000244, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x12980a, 1)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x1297e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000244, 8) , (register, 0x0, 8), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x12990a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x1000030c, 8), (unique, 0x1000030c, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x28, 4) , (unique, 0xbc80, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1298bf, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x80, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x7, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x129906, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1298bf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x7, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000031c, 8), (unique, 0x1000031c, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000314, 8), (unique, 0x10000314, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000314, 8), (unique, 0x10000314, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[(ram, 0x4c2dd8, 8) MULTIEQUAL (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000324, 8), (unique, 0x10000324, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1299ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[(unique, 0x1000025c, 8) COPY (unique, 0x3400, 8)]
[ ---  BRANCH (ram, 0x12996c, 1)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[(unique, 0x1000022c, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000032c, 8), (unique, 0x1000032c, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x10000234, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) COPY (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) MULTIEQUAL (unique, 0x1000022c, 8) , (unique, 0x10000234, 8)]
[(unique, 0x10000254, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) MULTIEQUAL (unique, 0x1000022c, 8) , (unique, 0x10000234, 8)]
[ ---  CBRANCH (ram, 0x129958, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) MULTIEQUAL (unique, 0x1000022c, 8) , (unique, 0x10000234, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CALL (ram, 0x242d60, 8) , (register, 0xb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x37a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x35a, 4)]
[(ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x37a, 4), (ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x35a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x37a, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x3400, 8) , (const, 0x35a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x37a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x35a, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x129b06, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x6, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALLIND (register, 0xb8, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x3c80, 8) , (register, 0xb8, 8) , (unique, 0x3c80, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000254, 8) , (unique, 0x1000025c, 8)]
[ ---  CBRANCH (ram, 0x129b2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x0, 8) INT_SEXT (register, 0x28, 4)]
[(ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x438, 4), (ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x425, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (stack, 0x8, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x129b18, 1)]
[ ---  CBRANCH (ram, 0x1298c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x5, 4)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8), (ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x3f4, 4), (ram, 0x4c2dd8, 8) MULTIEQUAL (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x129940, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000338, 8), (unique, 0x10000338, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000334, 4), (unique, 0x10000334, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x100000ea, 4) , (register, 0x18, 4), (unique, 0x100000ea, 4) INT_ADD (unique, 0x100000f2, 4) , (const, 0x1, 4), (unique, 0x100000f2, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4)]
[(register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (const, 0x2, 4), (register, 0x0, 8) INT_SEXT (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x129818, 1)]
[(ram, 0x4c2dd8, 8) MULTIEQUAL (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1298f0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x80, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000348, 8), (unique, 0x10000348, 8) INT_ADD (register, 0x0, 8) , (unique, 0x10000340, 8), (unique, 0x10000340, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x1000026c, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1298f0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x10000350, 8), (unique, 0x10000350, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x28, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x10000264, 8) COPY (stack, 0xffffffffffffff60, 8)]
[ ---  BRANCH (ram, 0x129847, 1)]
[ ---  CBRANCH (ram, 0x1297b7, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff60, 8), (stack, 0xffffffffffffff60, 8) COPY (unique, 0x10000274, 8), (unique, 0x10000274, 8) MULTIEQUAL (unique, 0x10000264, 8) , (unique, 0x1000026c, 8), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff68, 8)]
[ ---  CBRANCH (ram, 0x129a1a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000360, 8), (unique, 0x10000360, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x260, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000358, 8), (unique, 0x10000358, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2dd8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000368, 8), (unique, 0x10000368, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x268, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x1299fe, 1)]
[(ram, 0x4c2dd8, 8) MULTIEQUAL (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x38, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x129a1a, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x3400, 8) PTRADD (register, 0x8, 8) , (unique, 0x3880, 8) , (const, 0x4, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x10000106, 8) , (const, 0x3, 8), (unique, 0x10000106, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x129ae0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x129af4, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x129b4c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_REM (register, 0x18, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x18, 4) INT_SUB (register, 0x38, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x88, 8), (register, 0x88, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (stack, 0x8, 8)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8), (ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x2ba, 4), (ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x2b0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x129a10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (unique, 0x3400, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(ram, 0x4c2dd8, 8) MULTIEQUAL (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8)]
[ ---  CBRANCH (ram, 0x1298e4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000370, 8), (unique, 0x10000370, 8) INT_ADD (register, 0x30, 8) , (const, 0x250, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x6, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000378, 8), (unique, 0x10000378, 8) INT_ADD (register, 0x30, 8) , (const, 0x258, 8)]
[ ---  CALL (ram, 0x242d60, 8) , (register, 0xb8, 8)]
[(ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x1df, 4), (ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x1bf, 4), (ram, 0x4c2dd8, 8) MULTIEQUAL (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1df, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x1000027c, 8) , (const, 0x1bf, 4), (unique, 0x1000027c, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1df, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1bf, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALLIND (register, 0xb8, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x3c80, 8) , (unique, 0x3b80, 8) , (unique, 0x3c80, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x3b80, 8) PTRADD (register, 0x28, 8) , (register, 0x18, 8) , (const, 0x4, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (register, 0x18, 8) INT_ZEXT (unique, 0xbc80, 4), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 8) COPY (const, 0x6, 8)]
[ ---  CBRANCH (ram, 0x1298c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x6, 4), (register, 0x0, 4) CALLIND (register, 0xb8, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x3c80, 8) , (unique, 0x3b80, 8) , (unique, 0x3c80, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x3b80, 8) PTRADD (register, 0x28, 8) , (register, 0x18, 8) , (const, 0x4, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (register, 0x18, 8) INT_ZEXT (unique, 0xbc80, 4), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x1000024c, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x129b6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (stack, 0x8, 8)]
[(ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x244, 4), (ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x231, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) PTRADD (unique, 0xbe00, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x129a93, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x1000024c, 8) , (register, 0x10, 8)]
[(ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x202, 4), (ram, 0x4c2dd8, 8) MULTIEQUAL (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  BRANCH (ram, 0x1298c4, 1)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8), (ram, 0x4c2dd8, 8) MULTIEQUAL (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
