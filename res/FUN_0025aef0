[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x14, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000470, 8), (unique, 0x10000470, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000478, 8), (unique, 0x10000478, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000488, 8), (unique, 0x10000488, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000490, 8), (unique, 0x10000490, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000480, 8), (unique, 0x10000480, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffbc, 4) COPY (const, 0x10, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004a0, 8), (unique, 0x100004a0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x25b100, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000498, 8), (unique, 0x10000498, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1e, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004a8, 8) , (unique, 0xbd80, 8), (unique, 0x100004a8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x14, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004b0, 8) , (register, 0x0, 8), (unique, 0x100004b0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x16, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004b8, 8) , (unique, 0x3100, 8), (unique, 0x100004b8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004c0, 8) , (const, 0x1, 8), (unique, 0x100004c0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1e, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004c8, 8) , (unique, 0x3100, 8), (unique, 0x100004c8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x10, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004d0, 8) , (unique, 0x3200, 8), (unique, 0x100004d0, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x20, 8) , (const, 0x4, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x26, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004d8, 8) , (const, 0xb8, 8), (unique, 0x100004d8, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x84, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x84, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x81, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x7e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x7b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x77, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x74, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x71, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x6c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5f, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x84, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x84, 4)]
[ ---  CBRANCH (ram, 0x25b113, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x222b90, 8) , (unique, 0xbc80, 4) , (unique, 0x3100, 8) , (const, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x25afe0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004e0, 8), (unique, 0x100004e0, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x25afe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004e8, 8), (unique, 0x100004e8, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x20, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x25b168, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x25b1e0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x38, 8) CAST (unique, 0x10000508, 8), (unique, 0x10000508, 8) INT_ADD (register, 0x38, 8) , (unique, 0x10000500, 8), (unique, 0x10000500, 8) CAST (unique, 0xbd80, 8), (register, 0x38, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x8, 8) CAST (unique, 0x100004f8, 8), (unique, 0x100004f8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x100004f0, 8), (unique, 0x100004f0, 8) CAST (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x7, 8)]
[ ---  CBRANCH (ram, 0x25afe0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x8, 8), (register, 0x38, 8) CAST (unique, 0x10000518, 8), (unique, 0x10000518, 8) INT_ADD (unique, 0x10000510, 8) , (register, 0x88, 8), (unique, 0x10000510, 8) CAST (register, 0x38, 8), (register, 0x88, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x7, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x25afe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x800000000, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x25afe0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x1c, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000520, 8) , (const, 0x0, 8), (unique, 0x10000520, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x20, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc8, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000528, 8) , (const, 0x0, 8), (unique, 0x10000528, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x298, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000530, 8) , (const, 0x0, 4), (unique, 0x10000530, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x25aff6, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xcb, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2fa, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2fa, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x2fa, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2fa, 4)]
[(unique, 0x100001ef, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x222ac0, 8) , (unique, 0xbc80, 4) , (unique, 0xbd80, 8) , (register, 0x10, 8) , (const, 0x0, 4) , (unique, 0x3100, 8) , (unique, 0x3800, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000538, 4), (unique, 0x10000538, 4) CAST (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2cb, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffbc, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[ ---  CBRANCH (ram, 0x25affa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0x100001ef, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (unique, 0xbc80, 4) , (stack, 0xffffffffffffffbc, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x25b160, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0xf, 4) , (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000544, 8), (unique, 0x10000544, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000053c, 8), (unique, 0x1000053c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf5, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf0, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xea, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0xf5, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0xf0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf0, 4)]
[ ---  CBRANCH (ram, 0x25b160, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24dcb0, 8) , (unique, 0x3100, 8) , (register, 0x30, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x111, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000554, 8) , (unique, 0xbd80, 8), (unique, 0x10000554, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002c7, 8), (unique, 0x100002c7, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x25b13c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000054c, 8), (unique, 0x1000054c, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x74, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x25b1b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000057c, 8), (unique, 0x1000057c, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_AND (unique, 0x10000154, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x10000154, 8) INT_REM (unique, 0xbd80, 8) , (unique, 0x10000574, 8), (unique, 0x10000574, 8) CAST (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000056c, 8), (unique, 0x1000056c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000564, 8), (unique, 0x10000564, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1d0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000055c, 8), (unique, 0x1000055c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x25b095, 1)]
[ ---  CBRANCH (ram, 0x25b088, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x25b088, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x25b088, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x25b088, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x25b088, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0x38, 8), (register, 0x80, 8) INT_XOR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x38, 8) INT_XOR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000058c, 8), (unique, 0x1000058c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x25b1f9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000584, 8), (unique, 0x10000584, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1e, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000594, 8) , (unique, 0xbd80, 8), (unique, 0x10000594, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x14, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000059c, 8) , (unique, 0xbd80, 8), (unique, 0x1000059c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x16, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x222, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x222, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x214, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x211, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x222, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x222, 4)]
[ ---  CALL (ram, 0x222cf0, 8) , (unique, 0xbc80, 4) , (unique, 0x3100, 8) , (const, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x25b13c, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1df, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1df, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x1df, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1df, 4)]
[ ---  CALL (ram, 0x222d90, 8) , (unique, 0xbc80, 4) , (unique, 0xbd80, 8) , (register, 0x10, 8) , (const, 0x0, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffbc, 4), (register, 0x10, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x25b13c, 1)]
[ ---  CBRANCH (ram, 0x25b1b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100005a4, 8), (unique, 0x100005a4, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005d4, 8) , (unique, 0x1000015c, 4), (unique, 0x100005d4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0x1000015c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005ac, 8), (unique, 0x100005ac, 8) PTRSUB (unique, 0x1000037f, 8) , (const, 0x8, 8), (unique, 0x1000037f, 8) PTRSUB (register, 0x30, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000184, 8) , (unique, 0x10000160, 4), (unique, 0x10000184, 8) CAST (unique, 0x100005e4, 8), (unique, 0x100005e4, 8) INT_ADD (unique, 0x100005dc, 8) , (const, 0x24, 8), (unique, 0x100005dc, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000160, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000164, 8), (unique, 0x10000164, 8) CAST (unique, 0x100005b4, 8), (unique, 0x100005b4, 8) PTRSUB (unique, 0x10000397, 8) , (const, 0xc, 8), (unique, 0x10000397, 8) PTRSUB (register, 0x30, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005ec, 8) , (unique, 0x1000016c, 4), (unique, 0x100005ec, 8) CAST (unique, 0x1000018c, 8), (unique, 0x1000018c, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0x1000016c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000170, 8), (unique, 0x10000170, 8) CAST (unique, 0x100005bc, 8), (unique, 0x100005bc, 8) PTRSUB (unique, 0x100003af, 8) , (const, 0x10, 8), (unique, 0x100003af, 8) PTRSUB (register, 0x30, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000194, 8) , (unique, 0x10000178, 4), (unique, 0x10000194, 8) CAST (unique, 0x100005fc, 8), (unique, 0x100005fc, 8) INT_ADD (unique, 0x100005f4, 8) , (const, 0x2c, 8), (unique, 0x100005f4, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000178, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000017c, 8), (unique, 0x1000017c, 8) CAST (unique, 0x100005c4, 8), (unique, 0x100005c4, 8) PTRSUB (unique, 0x100003c7, 8) , (const, 0x14, 8), (unique, 0x100003c7, 8) PTRSUB (register, 0x30, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005cc, 8), (unique, 0x100005cc, 8) PTRSUB (unique, 0x100003df, 8) , (const, 0x18, 8), (unique, 0x100003df, 8) PTRSUB (register, 0x30, 8) , (const, 0x10, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000604, 8) , (unique, 0x1000019c, 4), (unique, 0x10000604, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0x1000019c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c4, 8) , (unique, 0x100001a0, 4), (unique, 0x100001c4, 8) CAST (unique, 0x10000614, 8), (unique, 0x10000614, 8) INT_ADD (unique, 0x1000060c, 8) , (const, 0x3c, 8), (unique, 0x1000060c, 8) CAST (unique, 0xbd80, 8), (unique, 0x100001a0, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001a4, 8), (unique, 0x100001a4, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000061c, 8) , (unique, 0x100001ac, 4), (unique, 0x1000061c, 8) CAST (unique, 0x100001cc, 8), (unique, 0x100001cc, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0x100001ac, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5cb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5c9, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5c7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5c6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x23d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5bd, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5bb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5b9, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5b8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001d4, 8) , (unique, 0x100001b8, 4), (unique, 0x100001d4, 8) CAST (unique, 0x1000062c, 8), (unique, 0x1000062c, 8) INT_ADD (unique, 0x10000624, 8) , (const, 0x44, 8), (unique, 0x10000624, 8) CAST (unique, 0xbd80, 8), (unique, 0x100001b8, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001bc, 8), (unique, 0x100001bc, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x25b13c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x25b13c, 1)]
[ ---  CBRANCH (ram, 0x25af40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000634, 8), (unique, 0x10000634, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2df, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2df, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x2df, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2df, 4)]
[ ---  CALL (ram, 0x25a5d0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x25b215, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000063c, 8), (unique, 0x1000063c, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x20c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20c, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x20c, 4)]
[ ---  RETURN (const, 0x1, 4)]
