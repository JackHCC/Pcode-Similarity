[ ---  CBRANCH (ram, 0x21ee68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1210c0, 8) , (unique, 0xbd80, 8) , (const, 0xa, 4) , (unique, 0x1000018a, 8), (unique, 0x1000018a, 8) CAST (register, 0x28, 8), (register, 0x28, 8) CAST (unique, 0x10000182, 8), (unique, 0x10000182, 8) INT_SUB (unique, 0x10000172, 8) , (unique, 0x1000017a, 8), (unique, 0x1000017a, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000172, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0x1000015a, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x21ee72, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x21ee80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x80, 8)]
[ ---  CALL (ram, 0x1212b0, 8) , (register, 0x30, 8) , (unique, 0xbd80, 8) , (unique, 0x10000192, 8), (unique, 0x10000192, 8) CAST (register, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001b2, 8), (unique, 0x100001b2, 8) INT_SUB (register, 0x0, 8) , (unique, 0x100001aa, 8), (unique, 0x100001aa, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x0, 8) INT_ADD (unique, 0x1000019a, 8) , (unique, 0x100001a2, 8), (unique, 0x100001a2, 8) CAST (register, 0x30, 8), (unique, 0x1000019a, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x21ef5b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x210110, 8) , (register, 0x38, 4) , (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100001ca, 8), (unique, 0x100001ca, 8) INT_SUB (unique, 0x100001ba, 8) , (unique, 0x100001c2, 8), (unique, 0x100001c2, 8) CAST (unique, 0xbd80, 8), (unique, 0x100001ba, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001da, 8), (unique, 0x100001da, 8) INT_ADD (register, 0x0, 8) , (unique, 0x100001d2, 8), (unique, 0x100001d2, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x21ee34, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1210c0, 8) , (unique, 0xbd80, 8) , (const, 0xa, 4) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100001f2, 8), (unique, 0x100001f2, 8) INT_SUB (unique, 0x100001e2, 8) , (unique, 0x100001ea, 8), (unique, 0x100001ea, 8) CAST (unique, 0xbd80, 8), (unique, 0x100001e2, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x100001da, 8), (unique, 0x100001da, 8) INT_ADD (register, 0x0, 8) , (unique, 0x100001d2, 8), (unique, 0x100001d2, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x21ef78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0x1000014a, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x100000ef, 8) , (const, 0x3, 8), (unique, 0x100000ef, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) CAST (unique, 0x1000020a, 8), (unique, 0x1000020a, 8) INT_SUB (unique, 0x100001fa, 8) , (unique, 0x10000202, 8), (unique, 0x10000202, 8) CAST (register, 0x30, 8), (unique, 0x100001fa, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x21ef05, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x100000ef, 8), (unique, 0x100000ef, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) CAST (unique, 0x1000020a, 8), (unique, 0x1000020a, 8) INT_SUB (unique, 0x100001fa, 8) , (unique, 0x10000202, 8), (unique, 0x10000202, 8) CAST (register, 0x30, 8), (unique, 0x100001fa, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000152, 8) COPY (unique, 0x100000ef, 8)]
[(register, 0x8, 8) CAST (unique, 0x10000232, 8), (unique, 0x10000232, 8) INT_SUB (unique, 0x10000222, 8) , (unique, 0x1000022a, 8), (unique, 0x1000022a, 8) CAST (register, 0x28, 8), (unique, 0x10000222, 8) CAST (register, 0x0, 8), (register, 0x28, 8) CAST (unique, 0x1000021a, 8), (unique, 0x1000021a, 8) INT_ADD (register, 0x28, 8) , (unique, 0x10000212, 8), (unique, 0x10000212, 8) CAST (register, 0x30, 8), (register, 0x28, 8) INT_SRIGHT (register, 0x28, 8) , (const, 0x2, 4), (register, 0x28, 8) MULTIEQUAL (unique, 0x1000014a, 8) , (unique, 0x10000152, 8)]
[ ---  BRANCH (ram, 0x21ef41, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x21ef18, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000023a, 8) , (const, 0x0, 8), (unique, 0x1000023a, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x210110, 8) , (register, 0x38, 4) , (register, 0x28, 8) , (register, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0xa, 1), (unique, 0xbd80, 8) CAST (unique, 0x10000242, 8), (unique, 0x10000242, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0xa8, 8), (register, 0xa8, 8) CAST (unique, 0x10000252, 8), (unique, 0x10000252, 8) INT_ADD (register, 0x0, 8) , (unique, 0x1000024a, 8), (unique, 0x1000024a, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x21ef68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1210c0, 8) , (unique, 0xbd80, 8) , (const, 0xa, 4) , (register, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000242, 8), (unique, 0x10000242, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x21ee34, 1)]
[ ---  CBRANCH (ram, 0x21ef70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0xa8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x1000016a, 8) COPY (register, 0xa8, 8)]
[ ---  BRANCH (ram, 0x21ee72, 1)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000262, 8), (unique, 0x10000262, 8) INT_ADD (unique, 0x1000025a, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x1000025a, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000015a, 8) , (unique, 0x1000015a, 8) , (unique, 0x1000016a, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x21ee34, 1)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000272, 8), (unique, 0x10000272, 8) INT_ADD (unique, 0x1000026a, 8) , (const, 0x1, 8), (unique, 0x1000026a, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x21ef80, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000272, 8), (unique, 0x10000272, 8) INT_ADD (unique, 0x1000026a, 8) , (const, 0x1, 8), (unique, 0x1000026a, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x1000012d, 8) , (unique, 0x10000135, 8) , (const, 0x77, 4) , (unique, 0x1000013d, 8), (unique, 0x1000013d, 8) COPY (const, 0x2b9e58, 8), (unique, 0x10000135, 8) COPY (const, 0x2b9e08, 8), (unique, 0x1000012d, 8) COPY (const, 0x2b590b, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x21ef5b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
