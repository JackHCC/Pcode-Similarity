[ ---  CBRANCH (ram, 0x20146a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000280, 8) , (const, 0x16, 4), (unique, 0x10000280, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x293ab0, 8) COPY (ram, 0x293ab0, 8), (ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0x362, 4)]
[(ram, 0x293ac0, 8) COPY (ram, 0x293ac0, 8), (ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0x362, 4)]
[(ram, 0x293e70, 8) COPY (ram, 0x293e70, 8), (ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0x362, 4)]
[(ram, 0x293e78, 8) COPY (ram, 0x293e78, 8), (ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0x362, 4)]
[(ram, 0x293ed8, 8) COPY (ram, 0x293ed8, 8), (ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0x362, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x362, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x2012d8, 1) , (unique, 0x18500, 1), (unique, 0x18500, 1) FLOAT_LESSEQUAL (unique, 0x10000290, 8) , (ram, 0x293e70, 8), (unique, 0x10000290, 8) CAST (register, 0x1200, 8), (register, 0x1200, 8) INT_AND (ram, 0x293ac0, 8) , (unique, 0x10000288, 8), (unique, 0x10000288, 8) CAST (register, 0x1200, 8)]
[(ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0x2f1, 4)]
[(ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0x2f1, 4)]
[(ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0x2f1, 4)]
[(ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0x2f1, 4)]
[(ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0x2f1, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2f1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x1000019b, 4), (unique, 0x1000019b, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLOTHER (const, 0x72, 4) , (register, 0x0, 4) , (unique, 0x10000012, 16), (unique, 0x10000012, 16) INT_ADD (unique, 0x100001e8, 16) , (unique, 0x100002a0, 8), (unique, 0x100002a0, 8) CAST (register, 0x1200, 8), (unique, 0x100001e8, 16) INT_LEFT (unique, 0x100001d8, 16) , (const, 0x40, 16), (unique, 0x100001d8, 16) INT_SEXT (unique, 0x10000298, 8), (unique, 0x10000298, 8) CAST (register, 0x1208, 8)]
[ ---  CBRANCH (ram, 0x2012f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLOTHER (const, 0x72, 4) , (register, 0x0, 4) , (unique, 0x10000012, 16), (unique, 0x10000012, 16) INT_ADD (unique, 0x100001e8, 16) , (unique, 0x100002a0, 8), (unique, 0x100002a0, 8) CAST (register, 0x1200, 8), (unique, 0x100001e8, 16) INT_LEFT (unique, 0x100001d8, 16) , (const, 0x40, 16), (unique, 0x100001d8, 16) INT_SEXT (unique, 0x10000298, 8), (unique, 0x10000298, 8) CAST (register, 0x1208, 8)]
[(register, 0x1220, 8) CAST (unique, 0x100002b0, 8), (unique, 0x100002b0, 8) INT_XOR (unique, 0x100002a8, 8) , (ram, 0x293ab0, 8), (unique, 0x100002a8, 8) CAST (register, 0x1200, 8)]
[(register, 0x1220, 8) MULTIEQUAL (register, 0x1200, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x2011f8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)]
[(register, 0x38, 4) INT_2COMP (register, 0x38, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000250, 8) COPY (register, 0x1220, 8)]
[(unique, 0x10000240, 8) COPY (register, 0x1220, 8), (register, 0x1220, 8) MULTIEQUAL (unique, 0x10000250, 8) , (unique, 0x10000248, 8)]
[(unique, 0x10000264, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x201448, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) FLOAT_LESS (register, 0x1220, 8) , (ram, 0x293e78, 8), (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (ram, 0x293ed8, 8), (register, 0x1220, 8) MULTIEQUAL (unique, 0x10000250, 8) , (unique, 0x10000248, 8)]
[(unique, 0x10000248, 8) COPY (register, 0x1220, 8)]
[(unique, 0x10000268, 4) COPY (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x201320, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (register, 0x38, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)]
[(ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0x3d, 4)]
[(ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0x3d, 4)]
[(ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0x3d, 4)]
[(ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0x3d, 4)]
[(ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0x3d, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x293ed8, 8) MULTIEQUAL (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8)]
[(ram, 0x293e78, 8) MULTIEQUAL (ram, 0x293e78, 8) , (ram, 0x293e78, 8)]
[(ram, 0x293e70, 8) MULTIEQUAL (ram, 0x293e70, 8) , (ram, 0x293e70, 8)]
[(ram, 0x293ac0, 8) MULTIEQUAL (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8)]
[(ram, 0x293ab0, 8) MULTIEQUAL (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8)]
[(unique, 0x10000238, 8) COPY (register, 0x1220, 8), (register, 0x1220, 8) MULTIEQUAL (register, 0x1200, 8) , (register, 0x1220, 8)]
[(unique, 0x10000260, 4) COPY (register, 0xa8, 4), (register, 0xa8, 4) COPY (const, 0x0, 4)]
[(register, 0x1220, 8) MULTIEQUAL (unique, 0x10000238, 8) , (unique, 0x10000240, 8) , (unique, 0x10000248, 8)]
[(register, 0xa8, 4) MULTIEQUAL (unique, 0x10000260, 4) , (unique, 0x10000264, 4) , (unique, 0x10000268, 4)]
[(ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0x63, 4), (ram, 0x293ab0, 8) MULTIEQUAL (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8)]
[(ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0x63, 4), (ram, 0x293ac0, 8) MULTIEQUAL (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8)]
[(ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0x63, 4), (ram, 0x293e70, 8) MULTIEQUAL (ram, 0x293e70, 8) , (ram, 0x293e70, 8) , (ram, 0x293e70, 8)]
[(ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0x63, 4), (ram, 0x293e78, 8) MULTIEQUAL (ram, 0x293e78, 8) , (ram, 0x293e78, 8) , (ram, 0x293e78, 8)]
[(ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0x63, 4), (ram, 0x293ed8, 8) MULTIEQUAL (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x63, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x201460, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (unique, 0x100002b8, 8) , (register, 0x28, 8), (unique, 0x100002b8, 8) CAST (register, 0x80, 8), (register, 0x28, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x155860, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (unique, 0x100001c3, 8), (unique, 0x100001c3, 8) COPY (const, 0x28e0fb, 8)]
[ ---  CBRANCH (ram, 0x201341, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x28, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x201341, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x9, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0x2d6, 4)]
[(ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0x2d6, 4)]
[(ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0x2d6, 4)]
[(ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0x2d6, 4)]
[(ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0x2d6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2d6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x0, 4)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x201271, 1)]
[ ---  CBRANCH (ram, 0x201260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0xb9, 4)]
[(ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0xb9, 4)]
[(ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0xb9, 4)]
[(ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0xb9, 4)]
[(ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0xb9, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x201360, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x10, 4) , (const, 0xa, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x8, 8) , (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) INT_SEXT (register, 0x18, 4), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[(ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0x198, 4)]
[(ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0x198, 4)]
[(ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0x198, 4)]
[(ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0x198, 4)]
[(ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0x198, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x198, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x18, 4), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x20137d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x8, 8) , (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x201370, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESSEQUAL (register, 0x28, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x20138a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x8, 8) , (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2013cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x201456, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2013e9, 1) , (unique, 0x18400, 1), (unique, 0x18400, 1) FLOAT_NOTEQUAL (register, 0x1220, 8) , (const, 0x0, 8)]
[(unique, 0x10000220, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x20139a, 1)]
[(ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0x243, 4)]
[(ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0x243, 4)]
[(ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0x243, 4)]
[(ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0x243, 4)]
[(ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0x243, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x243, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x20148e, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x18, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x20148e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[(unique, 0x10000218, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x20139a, 1)]
[(unique, 0x1000026c, 4) COPY (register, 0x10, 4), (register, 0x10, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x20141e, 1)]
[(register, 0x0, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) COPY (unique, 0x10000274, 4), (unique, 0x10000274, 4) MULTIEQUAL (unique, 0x1000026c, 4) , (unique, 0x10000270, 4)]
[(ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0x262, 4), (ram, 0x293ab0, 8) MULTIEQUAL (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8)]
[(ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0x262, 4), (ram, 0x293ac0, 8) MULTIEQUAL (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8)]
[(ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0x262, 4), (ram, 0x293e70, 8) MULTIEQUAL (ram, 0x293e70, 8) , (ram, 0x293e70, 8)]
[(ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0x262, 4), (ram, 0x293e78, 8) MULTIEQUAL (ram, 0x293e78, 8) , (ram, 0x293e78, 8)]
[(ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0x262, 4), (ram, 0x293ed8, 8) MULTIEQUAL (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x262, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x10, 4), (register, 0x10, 4) COPY (unique, 0x10000274, 4), (unique, 0x10000274, 4) MULTIEQUAL (unique, 0x1000026c, 4) , (unique, 0x10000270, 4)]
[ ---  CBRANCH (ram, 0x201410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x8, 8) , (register, 0x28, 8) , (const, 0x1, 8)]
[(unique, 0x10000278, 4) COPY (register, 0x38, 4), (register, 0x38, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x20143b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x10, 4)]
[(unique, 0x1000027c, 4) COPY (register, 0x10, 4)]
[(unique, 0x10000210, 8) COPY (register, 0x38, 8), (register, 0x38, 8) INT_SEXT (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (unique, 0x10000278, 4) , (unique, 0x1000027c, 4)]
[ ---  BRANCH (ram, 0x20139a, 1)]
[(unique, 0x3400, 8) PTRADD (register, 0x8, 8) , (register, 0x18, 8) , (const, 0x1, 8)]
[(unique, 0x10000270, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x20147e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x8, 8) , (register, 0x18, 8) , (const, 0x1, 8)]
[(unique, 0x10000228, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x201489, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x10, 4)]
[(unique, 0x10000230, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000200, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x20139a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x18, 4)]
[(unique, 0x10000208, 8) COPY (register, 0x10, 8)]
[(ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0x1e2, 4), (ram, 0x293ab0, 8) MULTIEQUAL (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8)]
[(ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0x1e2, 4), (ram, 0x293ac0, 8) MULTIEQUAL (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8)]
[(ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0x1e2, 4), (ram, 0x293e70, 8) MULTIEQUAL (ram, 0x293e70, 8) , (ram, 0x293e70, 8) , (ram, 0x293e70, 8) , (ram, 0x293e70, 8) , (ram, 0x293e70, 8) , (ram, 0x293e70, 8) , (ram, 0x293e70, 8)]
[(ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0x1e2, 4), (ram, 0x293e78, 8) MULTIEQUAL (ram, 0x293e78, 8) , (ram, 0x293e78, 8) , (ram, 0x293e78, 8) , (ram, 0x293e78, 8) , (ram, 0x293e78, 8) , (ram, 0x293e78, 8) , (ram, 0x293e78, 8)]
[(ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0x1e2, 4), (ram, 0x293ed8, 8) MULTIEQUAL (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e2, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CALL (ram, 0x18e5c0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (register, 0x28, 8) , (register, 0x18, 8), (register, 0x38, 8) PTRADD (register, 0x8, 8) , (register, 0x38, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000200, 8) , (unique, 0x10000208, 8) , (unique, 0x10000210, 8) , (unique, 0x10000218, 8) , (unique, 0x10000220, 8) , (unique, 0x10000228, 8) , (unique, 0x10000230, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2013b6, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0x20d, 4)]
[(ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0x20d, 4)]
[(ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0x20d, 4)]
[(ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0x20d, 4)]
[(ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0x20d, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x20d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (register, 0x8, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SUB (register, 0x28, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x20127d, 1)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x293ed8, 8) MULTIEQUAL (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8)]
[(ram, 0x293e78, 8) MULTIEQUAL (ram, 0x293e78, 8) , (ram, 0x293e78, 8)]
[(ram, 0x293e70, 8) MULTIEQUAL (ram, 0x293e70, 8) , (ram, 0x293e70, 8)]
[(ram, 0x293ac0, 8) MULTIEQUAL (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8)]
[(ram, 0x293ab0, 8) MULTIEQUAL (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8)]
[ ---  CBRANCH (ram, 0x201348, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x0, 4)]
[(ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0xd3, 4)]
[(ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0xd3, 4)]
[(ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0xd3, 4)]
[(ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0xd3, 4)]
[(ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0xd3, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xd3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0xa8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x201348, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x28, 8) , (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) INT_SUB (register, 0x80, 8) , (const, 0x1, 8)]
[(ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0x110, 4), (ram, 0x293ab0, 8) MULTIEQUAL (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8)]
[(ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0x110, 4), (ram, 0x293ac0, 8) MULTIEQUAL (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8)]
[(ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0x110, 4), (ram, 0x293e70, 8) MULTIEQUAL (ram, 0x293e70, 8) , (ram, 0x293e70, 8)]
[(ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0x110, 4), (ram, 0x293e78, 8) MULTIEQUAL (ram, 0x293e78, 8) , (ram, 0x293e78, 8)]
[(ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0x110, 4), (ram, 0x293ed8, 8) MULTIEQUAL (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x110, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x30, 1), (unique, 0x3a00, 8) PTRADD (register, 0x8, 8) , (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100001f8, 8) , (register, 0x28, 8)]
[(unique, 0x100001f8, 8) COPY (register, 0x28, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100001f8, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2012a0, 1) , (unique, 0x10000185, 1), (unique, 0x10000185, 1) BOOL_AND (unique, 0xd080, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x28, 8) , (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) CAST (register, 0xb8, 8), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x100001a3, 4), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8), (unique, 0x100001a3, 4) INT_ADD (unique, 0x100001a7, 4) , (const, 0xffffffff, 4), (register, 0x28, 8) MULTIEQUAL (unique, 0x100001f8, 8) , (register, 0x28, 8), (unique, 0x100001a7, 4) MULTIEQUAL (unique, 0x100001a3, 4) , (register, 0xa8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (register, 0x8, 8) , (register, 0x28, 8) , (const, 0x1, 8)]
[(ram, 0x293ab0, 8) COPY (ram, 0x293ab0, 8), (ram, 0x293ab0, 8) INDIRECT (ram, 0x293ab0, 8) , (const, 0x12d, 4)]
[(ram, 0x293ac0, 8) COPY (ram, 0x293ac0, 8), (ram, 0x293ac0, 8) INDIRECT (ram, 0x293ac0, 8) , (const, 0x12d, 4)]
[(ram, 0x293e70, 8) COPY (ram, 0x293e70, 8), (ram, 0x293e70, 8) INDIRECT (ram, 0x293e70, 8) , (const, 0x12d, 4)]
[(ram, 0x293e78, 8) COPY (ram, 0x293e78, 8), (ram, 0x293e78, 8) INDIRECT (ram, 0x293e78, 8) , (const, 0x12d, 4)]
[(ram, 0x293ed8, 8) COPY (ram, 0x293ed8, 8), (ram, 0x293ed8, 8) INDIRECT (ram, 0x293ed8, 8) , (const, 0x12d, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x12d, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x293ab0, 8) COPY (ram, 0x293ab0, 8), (ram, 0x293ab0, 8) MULTIEQUAL (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8) , (ram, 0x293ab0, 8)]
[(ram, 0x293ac0, 8) COPY (ram, 0x293ac0, 8), (ram, 0x293ac0, 8) MULTIEQUAL (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8) , (ram, 0x293ac0, 8)]
[(ram, 0x293e70, 8) COPY (ram, 0x293e70, 8), (ram, 0x293e70, 8) MULTIEQUAL (ram, 0x293e70, 8) , (ram, 0x293e70, 8) , (ram, 0x293e70, 8) , (ram, 0x293e70, 8)]
[(ram, 0x293e78, 8) COPY (ram, 0x293e78, 8), (ram, 0x293e78, 8) MULTIEQUAL (ram, 0x293e78, 8) , (ram, 0x293e78, 8) , (ram, 0x293e78, 8) , (ram, 0x293e78, 8)]
[(ram, 0x293ed8, 8) COPY (ram, 0x293ed8, 8), (ram, 0x293ed8, 8) MULTIEQUAL (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8) , (ram, 0x293ed8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x293ab0, 8) COPY (ram, 0x293ab0, 8)]
[(ram, 0x293ac0, 8) COPY (ram, 0x293ac0, 8)]
[(ram, 0x293e70, 8) COPY (ram, 0x293e70, 8)]
[(ram, 0x293e78, 8) COPY (ram, 0x293e78, 8)]
[(ram, 0x293ed8, 8) COPY (ram, 0x293ed8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
