[ ---  CBRANCH (ram, 0x21c0ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000320, 8) , (const, 0x16, 4), (unique, 0x10000320, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x2bbe10, 8) COPY (ram, 0x2bbe10, 8), (ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x368, 4)]
[(ram, 0x2bbe20, 8) COPY (ram, 0x2bbe20, 8), (ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x368, 4)]
[(ram, 0x2bc3d0, 8) COPY (ram, 0x2bc3d0, 8), (ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x368, 4)]
[(ram, 0x2bc3f8, 8) COPY (ram, 0x2bc3f8, 8), (ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x368, 4)]
[(ram, 0x2bc458, 8) COPY (ram, 0x2bc458, 8), (ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x368, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x368, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x21bf38, 1) , (unique, 0x18500, 1), (unique, 0x18500, 1) FLOAT_LESSEQUAL (unique, 0x10000330, 8) , (ram, 0x2bc3f8, 8), (unique, 0x10000330, 8) CAST (register, 0x1200, 8), (register, 0x1200, 8) INT_AND (unique, 0x10000328, 8) , (ram, 0x2bbe20, 8), (unique, 0x10000328, 8) CAST (register, 0x1200, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x2f6, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x2f6, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x2f6, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x2f6, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x2f6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2f6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100001a5, 4), (unique, 0x100001a5, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLOTHER (const, 0x72, 4) , (register, 0x0, 4) , (unique, 0x10000012, 16), (unique, 0x10000012, 16) INT_ADD (unique, 0x1000021c, 16) , (unique, 0x10000340, 8), (unique, 0x10000340, 8) CAST (register, 0x1200, 8), (unique, 0x1000021c, 16) INT_LEFT (unique, 0x1000020c, 16) , (const, 0x40, 16), (unique, 0x1000020c, 16) INT_SEXT (unique, 0x10000338, 8), (unique, 0x10000338, 8) CAST (register, 0x1208, 8)]
[ ---  CBRANCH (ram, 0x21bf50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLOTHER (const, 0x72, 4) , (register, 0x0, 4) , (unique, 0x10000012, 16), (unique, 0x10000012, 16) INT_ADD (unique, 0x1000021c, 16) , (unique, 0x10000340, 8), (unique, 0x10000340, 8) CAST (register, 0x1200, 8), (unique, 0x1000021c, 16) INT_LEFT (unique, 0x1000020c, 16) , (const, 0x40, 16), (unique, 0x1000020c, 16) INT_SEXT (unique, 0x10000338, 8), (unique, 0x10000338, 8) CAST (register, 0x1208, 8)]
[(register, 0x1220, 8) CAST (unique, 0x10000350, 8), (unique, 0x10000350, 8) INT_XOR (unique, 0x10000348, 8) , (ram, 0x2bbe10, 8), (unique, 0x10000348, 8) CAST (register, 0x1200, 8)]
[(register, 0x1220, 8) MULTIEQUAL (register, 0x1200, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x21be64, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)]
[(register, 0x38, 4) INT_2COMP (register, 0x38, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x100002f4, 8) COPY (register, 0x1220, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21c060, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) FLOAT_LESS (register, 0x1220, 8) , (ram, 0x2bc3d0, 8), (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (ram, 0x2bc458, 8), (register, 0x1220, 8) MULTIEQUAL (unique, 0x100002f4, 8) , (unique, 0x100002fc, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x21be72, 1)]
[(unique, 0x100002fc, 8) COPY (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x21bf78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000308, 4) COPY (register, 0x38, 4)]
[ ---  BRANCH (ram, 0x21be72, 1)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x3e, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x3e, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x3e, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x3e, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x3e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(register, 0x1220, 8) MULTIEQUAL (register, 0x1200, 8) , (register, 0x1220, 8)]
[(register, 0x8, 8) COPY (const, 0x11, 8)]
[ ---  CBRANCH (ram, 0x21be6f, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (register, 0x38, 4) , (const, 0x12, 4)]
[(unique, 0x1000007c, 8) INT_ZEXT (unique, 0x10000358, 4), (unique, 0x10000358, 4) CAST (register, 0x38, 4)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x1000007c, 8)]
[(unique, 0x100002e4, 8) COPY (register, 0x1220, 8)]
[(unique, 0x10000304, 4) COPY (register, 0xa0, 4), (register, 0xa0, 4) COPY (const, 0x0, 4)]
[(register, 0xa0, 4) MULTIEQUAL (unique, 0x10000304, 4) , (unique, 0x10000308, 4) , (register, 0x0, 4)]
[(register, 0x1220, 8) MULTIEQUAL (unique, 0x100002e4, 8) , (unique, 0x100002fc, 8) , (register, 0x1220, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x64, 4), (ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x64, 4), (ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x64, 4), (ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x64, 4), (ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x64, 4), (ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x64, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x21c0c4, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x18, 8) , (unique, 0x1000035c, 8), (unique, 0x1000035c, 8) CAST (register, 0x80, 8), (register, 0x18, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x164f50, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (unique, 0x100001e0, 8) , (register, 0x8, 8), (unique, 0x100001e0, 8) COPY (const, 0x2b58f2, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x21c040, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x21c040, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x9, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x0, 4)]
[(ram, 0x2bbe10, 8) COPY (ram, 0x2bbe10, 8), (ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x2b9, 4)]
[(ram, 0x2bbe20, 8) COPY (ram, 0x2bbe20, 8), (ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x2b9, 4)]
[(ram, 0x2bc3d0, 8) COPY (ram, 0x2bc3d0, 8), (ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x2b9, 4)]
[(ram, 0x2bc3f8, 8) COPY (ram, 0x2bc3f8, 8), (ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x2b9, 4)]
[(ram, 0x2bc458, 8) COPY (ram, 0x2bc458, 8), (ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x2b9, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2b9, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000264, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x21bedc, 1)]
[ ---  CBRANCH (ram, 0x21bec8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) COPY (unique, 0x10000274, 8), (unique, 0x10000274, 8) MULTIEQUAL (unique, 0x10000264, 8) , (unique, 0x1000026c, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0xb4, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0xb4, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0xb4, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0xb4, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0xb4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 4)]
[(unique, 0x1000026c, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x21bfa0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x10, 4) , (const, 0xa, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x8, 8) , (unique, 0x100001e8, 8) , (const, 0x1, 8), (unique, 0x100001e8, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[(register, 0x8, 8) INT_SEXT (register, 0x88, 4), (register, 0x88, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x170, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x170, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x170, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x170, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x170, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x170, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x88, 4), (register, 0x88, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)]
[(unique, 0x10000244, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x8, 8) , (unique, 0x100001f8, 8) , (const, 0x1, 8), (unique, 0x100001f8, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)]
[(unique, 0x100002cc, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x21bfc2, 1)]
[(register, 0x10, 8) COPY (unique, 0x10000254, 8), (unique, 0x10000254, 8) MULTIEQUAL (unique, 0x10000244, 8) , (unique, 0x1000024c, 8)]
[ ---  CBRANCH (ram, 0x21bfb0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESSEQUAL (register, 0x18, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8), (register, 0x88, 8) COPY (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) MULTIEQUAL (unique, 0x100002cc, 8) , (unique, 0x100002d4, 8)]
[(unique, 0x1000024c, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100002d4, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x21bfce, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x21c018, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x21c035, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x21c031, 1) , (unique, 0x18400, 1), (unique, 0x18400, 1) FLOAT_NOTEQUAL (register, 0x1220, 8) , (const, 0x0, 8)]
[(unique, 0x10000284, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x21bfe1, 1)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x218, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x218, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x218, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x218, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x218, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x218, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x0, 4)]
[(unique, 0x1000029c, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x21c0f5, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x3100, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x21c0f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x1000022c, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x8, 8) , (unique, 0x10000200, 8) , (const, 0x1, 8), (unique, 0x10000200, 8) INT_ADD (register, 0x88, 8) , (const, 0x2, 8)]
[(unique, 0x1000030c, 4) COPY (register, 0x10, 4), (register, 0x10, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x21c09c, 1)]
[(register, 0x8, 8) COPY (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) MULTIEQUAL (unique, 0x1000022c, 8) , (unique, 0x10000234, 8)]
[(register, 0x0, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) COPY (unique, 0x10000314, 4), (unique, 0x10000314, 4) MULTIEQUAL (unique, 0x1000030c, 4) , (unique, 0x10000310, 4)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x23b, 4), (ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x23b, 4), (ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x23b, 4), (ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x23b, 4), (ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x23b, 4), (ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x23b, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x10, 4), (register, 0x10, 4) COPY (unique, 0x10000314, 4), (unique, 0x10000314, 4) MULTIEQUAL (unique, 0x1000030c, 4) , (unique, 0x10000310, 4)]
[ ---  CBRANCH (ram, 0x21c090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xb8, 8)]
[(unique, 0x10000318, 4) COPY (register, 0x38, 4), (register, 0x38, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21c0b9, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x10, 4)]
[(unique, 0x1000031c, 4) COPY (register, 0x10, 4)]
[(unique, 0x1000028c, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x8, 8) , (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_SEXT (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (unique, 0x10000318, 4) , (unique, 0x1000031c, 4)]
[ ---  BRANCH (ram, 0x21bfe1, 1)]
[(unique, 0x10000234, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000310, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x21c0e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0x100002ac, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x21c0ed, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x10, 4)]
[(unique, 0x100002b4, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000294, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x8, 8) , (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100002ac, 8) , (unique, 0x100002b4, 8)]
[ ---  BRANCH (ram, 0x21bfe1, 1)]
[(unique, 0x100002bc, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x21bfde, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x88, 4)]
[(unique, 0x100002c4, 8) COPY (register, 0x8, 8)]
[(unique, 0x1000027c, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x8, 8) , (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100002bc, 8) , (unique, 0x100002c4, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x1b3, 4), (ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x1b3, 4), (ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x1b3, 4), (ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x1b3, 4), (ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x1b3, 4), (ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b3, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CALL (ram, 0x1212b0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (register, 0x18, 8) , (register, 0xb8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x10, 8) , (register, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000027c, 8) , (unique, 0x10000284, 8) , (unique, 0x1000028c, 8) , (unique, 0x10000294, 8) , (unique, 0x1000029c, 8) , (unique, 0x1000029c, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21bffc, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x1de, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x1de, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x1de, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x1de, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x1de, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1de, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (const, 0x0, 1), (unique, 0x3b80, 8) PTRADD (register, 0x8, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SUB (register, 0x18, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_SUB (register, 0xb8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x21bee9, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[ ---  CBRANCH (ram, 0x21bf22, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (const, 0x0, 4)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0xce, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0xce, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0xce, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0xce, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0xce, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xce, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0xa0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x21bf22, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x18, 8) , (unique, 0x10000364, 8), (unique, 0x10000364, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) INT_SUB (register, 0x80, 8) , (const, 0x1, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x104, 4), (ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x104, 4), (ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x104, 4), (ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x104, 4), (ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x104, 4), (ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x104, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x30, 1), (unique, 0x3a00, 8) PTRADD (register, 0x8, 8) , (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000025c, 8) , (register, 0x18, 8)]
[(unique, 0x1000025c, 8) COPY (register, 0x18, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000025c, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x21bf00, 1) , (unique, 0x59000, 1), (unique, 0x59000, 1) BOOL_AND (unique, 0xd080, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (register, 0xa0, 4), (unique, 0xd080, 1) INT_SLESS (register, 0x18, 8) , (unique, 0x1000036c, 8), (unique, 0x1000036c, 8) CAST (register, 0xb0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0xffffffff, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000025c, 8) , (register, 0x18, 8), (register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x12e, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x12e, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x12e, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x12e, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x12e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (const, 0x0, 1), (unique, 0x3b80, 8) PTRADD (register, 0x8, 8) , (register, 0x18, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x21bf24, 1)]
[(ram, 0x2bbe10, 8) COPY (ram, 0x2bbe10, 8), (ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(ram, 0x2bbe20, 8) COPY (ram, 0x2bbe20, 8), (ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bc3d0, 8) COPY (ram, 0x2bc3d0, 8), (ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bc3f8, 8) COPY (ram, 0x2bc3f8, 8), (ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc458, 8) COPY (ram, 0x2bc458, 8), (ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
