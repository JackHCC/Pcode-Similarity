[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x41, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (register, 0x8, 8) , (const, 0x41, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (register, 0x80, 8) , (const, 0x41, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x41, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100006e1, 8), (unique, 0x100006e1, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x24c740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100006e9, 8), (unique, 0x100006e9, 8) INT_ADD (register, 0x0, 8) , (const, 0xc0, 8), (register, 0x0, 8) CALL (ram, 0x259600, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x183, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x183, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x183, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x183, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x24c64f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100006f1, 8), (unique, 0x100006f1, 8) CALL (ram, 0x1211e0, 8) , (const, 0x1, 8) , (const, 0x30, 8)]
[(unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000701, 8), (unique, 0x10000701, 8) INT_ADD (unique, 0x100006f9, 8) , (const, 0x10, 8), (unique, 0x100006f9, 8) CAST (unique, 0x10000691, 8), (unique, 0x10000691, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000709, 8), (unique, 0x10000709, 8) INT_ADD (register, 0x0, 8) , (const, 0xc0, 8)]
[(unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000719, 8), (unique, 0x10000719, 8) INT_ADD (unique, 0x10000711, 8) , (const, 0x10, 8), (unique, 0x10000711, 8) CAST (unique, 0x10000581, 8), (unique, 0x10000581, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[(unique, 0x100002d7, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100002df, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100002e7, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x100002ef, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x100002f7, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x24c5fa, 1) , (unique, 0x100002d6, 1), (unique, 0x100002d6, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) MULTIEQUAL (unique, 0xbe00, 8) , (unique, 0xbe00, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x100002df, 8) , (const, 0x174, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x100002e7, 8) , (const, 0x174, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x100002ef, 8) , (const, 0x174, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100002f7, 8) , (const, 0x174, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000731, 8), (unique, 0x10000731, 8) INT_ADD (unique, 0x10000729, 8) , (const, 0x10, 8), (unique, 0x10000729, 8) CAST (unique, 0x100006a1, 8), (unique, 0x100006a1, 8) PTRADD (unique, 0x100002d7, 8) , (const, 0x1, 8) , (const, 0x18, 8), (register, 0x0, 8) CAST (unique, 0x10000721, 8), (unique, 0x10000721, 8) CALL (ram, 0x1212c0, 8) , (const, 0x100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000739, 8) , (const, 0x0, 1), (unique, 0x10000739, 8) CAST (unique, 0x100006b1, 8), (unique, 0x100006b1, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000721, 8), (unique, 0x10000721, 8) CALL (ram, 0x1212c0, 8) , (const, 0x100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000741, 8) , (const, 0xffffffff, 4), (unique, 0x10000741, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100002d7, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x24c5fa, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x100002f7, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (unique, 0x100002ef, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x100002e7, 8) , (stack, 0xffffffffffffff88, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x100002df, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x24c60b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000751, 8), (unique, 0x10000751, 8) INT_ADD (unique, 0x10000749, 8) , (const, 0x8, 8), (unique, 0x10000749, 8) CAST (unique, 0x10000591, 8), (unique, 0x10000591, 8) PTRADD (unique, 0x100002d7, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x24c720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x10000761, 8), (unique, 0x10000761, 8) CAST (register, 0x30, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000759, 8), (unique, 0x10000759, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100002d7, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x24c60b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x10000771, 8), (unique, 0x10000771, 8) CAST (register, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000769, 8), (unique, 0x10000769, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000671, 8), (unique, 0x10000671, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002d7, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x165, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x165, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x165, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x165, 4)]
[ ---  CBRANCH (ram, 0x24c6df, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0x10000789, 8) , (register, 0x38, 8), (unique, 0x10000789, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000781, 8), (unique, 0x10000781, 8) INT_ADD (unique, 0x10000779, 8) , (const, 0x10, 8), (unique, 0x10000779, 8) CAST (unique, 0x10000681, 8), (unique, 0x10000681, 8) PTRADD (unique, 0x100002d7, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100007a1, 8), (unique, 0x100007a1, 8) INT_ADD (unique, 0x10000799, 8) , (const, 0x8, 8), (unique, 0x10000799, 8) CAST (unique, 0x100005b1, 8), (unique, 0x100005b1, 8) PTRADD (unique, 0x100002d7, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x24c678, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000791, 8), (unique, 0x10000791, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100002d7, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14b, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x14b, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x14b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x14b, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007a9, 8) , (const, 0xffffffff, 4), (unique, 0x100007a9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100002d7, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x24c61c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x24c634, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100007b1, 8), (unique, 0x100007b1, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005c1, 8), (unique, 0x100005c1, 8) PTRSUB (unique, 0x100002d7, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9e, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x9e, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x9e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9e, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005c9, 8) , (const, 0x0, 8), (unique, 0x100005c9, 8) PTRSUB (unique, 0x100002d7, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa7, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x24c690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x25e5d0, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf7, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xf7, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xf7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005d9, 8) , (unique, 0x100007d9, 8), (unique, 0x100007d9, 8) CAST (register, 0x0, 8), (unique, 0x100005d9, 8) PTRSUB (unique, 0x100002d7, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x257800, 8) , (unique, 0x3800, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (unique, 0x100007c1, 16) , (unique, 0x100007d1, 8), (unique, 0x100007d1, 8) CAST (unique, 0x1000016e, 8), (unique, 0x100007c1, 16) CAST (unique, 0x10000157, 16), (unique, 0x1000016e, 8) PTRSUB (const, 0x0, 8) , (const, 0x5, 8), (unique, 0x10000157, 16) INT_ADD (unique, 0x100006d1, 16) , (stack, 0xffffffffffffff88, 8), (unique, 0x100006d1, 16) INT_LEFT (unique, 0x100006c1, 16) , (const, 0x40, 16), (unique, 0x100006c1, 16) INT_SEXT (unique, 0x100007b9, 8), (unique, 0x100007b9, 8) CAST (stack, 0xffffffffffffff90, 8)]
[ ---  CBRANCH (ram, 0x24c648, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x257800, 8) , (unique, 0x3800, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (unique, 0x100007c1, 16) , (unique, 0x100007d1, 8), (unique, 0x100007d1, 8) CAST (unique, 0x1000016e, 8), (unique, 0x100007c1, 16) CAST (unique, 0x10000157, 16), (unique, 0x1000016e, 8) PTRSUB (const, 0x0, 8) , (const, 0x5, 8), (unique, 0x10000157, 16) INT_ADD (unique, 0x100006d1, 16) , (stack, 0xffffffffffffff88, 8), (unique, 0x100006d1, 16) INT_LEFT (unique, 0x100006c1, 16) , (const, 0x40, 16), (unique, 0x100006c1, 16) INT_SEXT (unique, 0x100007b9, 8), (unique, 0x100007b9, 8) CAST (stack, 0xffffffffffffff90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0x3100, 8) CAST (unique, 0x100007f9, 8), (unique, 0x100007f9, 8) INT_ADD (unique, 0x100007f1, 8) , (const, 0x8, 8), (unique, 0x100007f1, 8) CAST (unique, 0x100005f1, 8), (unique, 0x100005f1, 8) PTRADD (unique, 0x100002d7, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000801, 8), (unique, 0x10000801, 8) CAST (register, 0x30, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100002d7, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000609, 8) , (unique, 0x10000809, 8), (unique, 0x10000809, 8) CAST (register, 0x10, 8), (unique, 0x10000609, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002d7, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x114, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x114, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x114, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x114, 4)]
[ ---  CALL (ram, 0x1212a0, 8) , (unique, 0x10000811, 8) , (register, 0x38, 8) , (const, 0xff, 8), (unique, 0x10000811, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007e9, 8), (unique, 0x100007e9, 8) INT_ADD (unique, 0x100007e1, 8) , (const, 0x10, 8), (unique, 0x100007e1, 8) CAST (unique, 0x100005e1, 8), (unique, 0x100005e1, 8) PTRADD (unique, 0x100002d7, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x0, 1), (unique, 0x3200, 8) CAST (unique, 0x10000831, 8), (unique, 0x10000831, 8) INT_ADD (unique, 0x10000829, 8) , (const, 0xf, 8), (unique, 0x10000829, 8) CAST (unique, 0x10000631, 8), (unique, 0x10000631, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000821, 8), (unique, 0x10000821, 8) INT_ADD (unique, 0x10000819, 8) , (const, 0x10, 8), (unique, 0x10000819, 8) CAST (unique, 0x10000619, 8), (unique, 0x10000619, 8) PTRADD (unique, 0x100002d7, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb4, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb4, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001de, 8), (unique, 0x100001de, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x259750, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x136, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x136, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x24c64f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff90, 8) , (register, 0x88, 8) , (stack, 0x8, 8) , (stack, 0x10, 8) , (const, 0x19, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000659, 8), (unique, 0x10000659, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000839, 8), (unique, 0x10000839, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000649, 8), (unique, 0x10000649, 8) PTRSUB (unique, 0x100002d7, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000849, 8), (unique, 0x10000849, 8) INT_ADD (unique, 0x10000841, 8) , (const, 0x8, 8), (unique, 0x10000841, 8) CAST (unique, 0x10000661, 8), (unique, 0x10000661, 8) PTRADD (unique, 0x100002d7, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[ ---  BRANCH (ram, 0x24c64f, 1)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x24c796, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000851, 8), (unique, 0x10000851, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe2, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000859, 4), (unique, 0x10000859, 4) COPY (register, 0x0, 4)]
