[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x25, 4), (register, 0x20a, 1) COPY (const, 0x0, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x25, 4)]
[(ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x25, 4)]
[(ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x25, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x25, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x25, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x25, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x25, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x25, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x25, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x25, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x25, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x25, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x25, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x25, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x25, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000383, 8), (unique, 0x10000383, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x24653b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f760, 8) , (const, 0x1, 4) , (unique, 0x10000201, 8) , (register, 0x20, 8), (unique, 0x10000201, 8) COPY (const, 0x2b6e09, 8), (register, 0x20, 8) CAST (unique, 0x1000037b, 8), (unique, 0x1000037b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000038b, 8), (unique, 0x1000038b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x246720, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0x29, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000038b, 8), (unique, 0x1000038b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x246720, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0x1d680, 8) , (const, 0x0, 8), (unique, 0x1d680, 8) INT_AND (unique, 0x1d600, 8) , (const, 0x1, 8), (unique, 0x1d600, 8) INT_RIGHT (const, 0x10000302006, 8) , (unique, 0x1d580, 8), (unique, 0x1d580, 8) INT_AND (register, 0x0, 8) , (const, 0x3f, 8)]
[(unique, 0x10000353, 8) COPY (unique, 0x10000393, 8), (unique, 0x10000393, 8) CAST (register, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0x12, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000353, 8) , (unique, 0x1000035b, 8)]
[ ---  CBRANCH (ram, 0x24653b, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x5d, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x5d, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x5d, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x5d, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x5d, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x5d, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x5d, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x5d, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x5d, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x5d, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x5d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x1000035b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000269, 8) , (const, 0x8, 8), (unique, 0x10000269, 8) INT_ADD (unique, 0x10000261, 8) , (const, 0x1, 8), (unique, 0x10000261, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x246538, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[ ---  CBRANCH (ram, 0x246557, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4efdf8, 4) , (const, 0x0, 4)]
[(ram, 0x4efdf8, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4efdf8, 4) , (const, 0x0, 4)]
[(ram, 0x4efdf8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x24657a, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x22b, 4)]
[(ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x22b, 4)]
[(ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x22b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x22b, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x22b, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x22b, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x22b, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x22b, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x22b, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x22b, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x22b, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x22b, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x22b, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x22b, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x22b, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000241, 8), (unique, 0x10000241, 8) PTRSUB (const, 0x0, 8) , (const, 0x4efdf8, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efdf8, 4) MULTIEQUAL (ram, 0x4efdf8, 4) , (ram, 0x4efdf8, 4) , (ram, 0x4efdf8, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000034b, 8) COPY (ram, 0x4efe00, 8), (ram, 0x4efe00, 8) MULTIEQUAL (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8)]
[ ---  CBRANCH (ram, 0x2466d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4efe00, 8) , (const, 0x0, 8), (ram, 0x4efe00, 8) MULTIEQUAL (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1fe, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1fe, 4)]
[(ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x1fe, 4)]
[(ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x1fe, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1fe, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x1fe, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x1fe, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x1fe, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x1fe, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x1fe, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x1fe, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x1fe, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x1fe, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x1fe, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x1fe, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x1fe, 4)]
[ ---  CBRANCH (ram, 0x246720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000039b, 8), (unique, 0x1000039b, 8) CALL (ram, 0x1211e0, 8) , (const, 0x1, 8) , (const, 0x58, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efe00, 8) MULTIEQUAL (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000036b, 4) COPY (ram, 0x4efdf8, 4), (ram, 0x4efdf8, 4) MULTIEQUAL (ram, 0x4efdf8, 4) , (ram, 0x4efdf8, 4) , (ram, 0x4efdf8, 4)]
[ ---  BRANCH (ram, 0x246651, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x212, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x20f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x20c, 4)]
[(ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x212, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x20f, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x20c, 4)]
[(ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x212, 4), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x20f, 4), (ram, 0x4efe00, 8) INDIRECT (unique, 0x10000373, 8) , (const, 0x20c, 4), (unique, 0x10000373, 8) COPY (register, 0x0, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x212, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x20f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x20c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x24658a, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efe00, 8) MULTIEQUAL (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8)]
[(ram, 0x4efdf8, 4) MULTIEQUAL (ram, 0x4efdf8, 4) , (ram, 0x4efdf8, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x2465a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003a3, 8), (unique, 0x100003a3, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000034b, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x246678, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x100001d6, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0x100001d6, 8) INT_ADD (unique, 0x10000313, 8) , (stack, 0xffffffffffffffa0, 4), (unique, 0x10000313, 8) INT_LEFT (unique, 0x1000030b, 8) , (const, 0x20, 8), (unique, 0x1000030b, 8) INT_SEXT (unique, 0x100003ab, 4), (unique, 0x100003ab, 4) CAST (stack, 0xffffffffffffffa4, 4)]
[ ---  CBRANCH (ram, 0x2465a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x100001de, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0x100001de, 8) INT_ADD (unique, 0x10000323, 8) , (stack, 0xffffffffffffffa8, 4), (unique, 0x10000323, 8) INT_LEFT (unique, 0x1000031b, 8) , (const, 0x20, 8), (unique, 0x1000031b, 8) INT_SEXT (unique, 0x100003af, 4), (unique, 0x100003af, 4) CAST (stack, 0xffffffffffffffac, 4)]
[ ---  CBRANCH (ram, 0x2465a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x100001e6, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0x100001e6, 8) INT_ADD (unique, 0x10000333, 8) , (stack, 0xffffffffffffffb0, 4), (unique, 0x10000333, 8) INT_LEFT (unique, 0x1000032b, 8) , (const, 0x20, 8), (unique, 0x1000032b, 8) INT_SEXT (unique, 0x100003b3, 4), (unique, 0x100003b3, 4) CAST (stack, 0xffffffffffffffb4, 4)]
[ ---  CBRANCH (ram, 0x2465a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x100001ee, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0x100001ee, 8) INT_ADD (unique, 0x10000343, 8) , (stack, 0xffffffffffffffb8, 4), (unique, 0x10000343, 8) INT_LEFT (unique, 0x1000033b, 8) , (const, 0x20, 8), (unique, 0x1000033b, 8) INT_SEXT (unique, 0x100003b7, 4), (unique, 0x100003b7, 4) CAST (stack, 0xffffffffffffffbc, 4)]
[ ---  CBRANCH (ram, 0x2465a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff50, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2465a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff78, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x9, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbc, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xbc, 4)]
[(ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0xbc, 4)]
[(ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0xbc, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xbc, 4)]
[ ---  CBRANCH (ram, 0x24661b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003bb, 8), (unique, 0x100003bb, 8) CALL (ram, 0x243d40, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2465d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003c3, 8), (unique, 0x100003c3, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x24676a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x19c, 4)]
[ ---  CALL (ram, 0x12143e, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x19c, 4)]
[(ram, 0x4efdf8, 4) COPY (ram, 0x4efdf8, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x19c, 4)]
[(ram, 0x4efe00, 8) COPY (ram, 0x4efe00, 8), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x19c, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x19c, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x246710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x198, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x198, 4)]
[(ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x198, 4)]
[(ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x198, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x198, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x198, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x198, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x198, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x198, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x198, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x198, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x198, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x198, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x198, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x198, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x198, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x2465d3, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xec, 4)]
[(ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0xec, 4)]
[(ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0xec, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xec, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003cb, 8) , (stack, 0xffffffffffffffa0, 4), (unique, 0x100003cb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x5, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000017e, 8) , (stack, 0xffffffffffffffa4, 4), (unique, 0x1000017e, 8) CAST (unique, 0x100003db, 8), (unique, 0x100003db, 8) INT_ADD (unique, 0x100003d3, 8) , (const, 0x2c, 8), (unique, 0x100003d3, 8) CAST (register, 0x18, 8), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003e3, 8) , (stack, 0xffffffffffffffa8, 4), (unique, 0x100003e3, 8) CAST (unique, 0x10000186, 8), (unique, 0x10000186, 8) PTRADD (register, 0x18, 8) , (const, 0x6, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000018e, 8) , (stack, 0xffffffffffffffac, 4), (unique, 0x1000018e, 8) CAST (unique, 0x100003f3, 8), (unique, 0x100003f3, 8) INT_ADD (unique, 0x100003eb, 8) , (const, 0x34, 8), (unique, 0x100003eb, 8) CAST (register, 0x18, 8), (stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffff50, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xa, 8) , (const, 0x8, 8), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003fb, 8) , (stack, 0xffffffffffffffb0, 4), (unique, 0x100003fb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x7, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001be, 8) , (stack, 0xffffffffffffffb4, 4), (unique, 0x100001be, 8) CAST (unique, 0x1000040b, 8), (unique, 0x1000040b, 8) INT_ADD (unique, 0x10000403, 8) , (const, 0x3c, 8), (unique, 0x10000403, 8) CAST (register, 0x18, 8), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000413, 8) , (stack, 0xffffffffffffffb8, 4), (unique, 0x10000413, 8) CAST (unique, 0x100001c6, 8), (unique, 0x100001c6, 8) PTRADD (register, 0x18, 8) , (const, 0x8, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ce, 8) , (stack, 0xffffffffffffffbc, 4), (unique, 0x100001ce, 8) CAST (unique, 0x10000423, 8), (unique, 0x10000423, 8) INT_ADD (unique, 0x1000041b, 8) , (const, 0x44, 8), (unique, 0x1000041b, 8) CAST (register, 0x18, 8), (stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x107, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4ac, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4aa, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4a8, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4a7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xfe, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x49e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x49c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x49a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x499, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf5, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x107, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x4ac, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x4aa, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x4a8, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x4a7, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0xfe, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x49e, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x49c, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x49a, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x499, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0xf5, 4), (ram, 0x4efdf8, 4) MULTIEQUAL (ram, 0x4efdf8, 4) , (ram, 0x4efdf8, 4) , (ram, 0x4efdf8, 4)]
[(ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x107, 4), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x4ac, 4), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x4aa, 4), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x4a8, 4), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x4a7, 4), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0xfe, 4), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x49e, 4), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x49c, 4), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x49a, 4), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x499, 4), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0xf5, 4), (ram, 0x4efe00, 8) MULTIEQUAL (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x107, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4ac, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4aa, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4a8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4a7, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xfe, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x49e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x49c, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x49a, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x499, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf5, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffff78, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x9, 8) , (const, 0x8, 8), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efe00, 8) MULTIEQUAL (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8)]
[(ram, 0x4efdf8, 4) MULTIEQUAL (ram, 0x4efdf8, 4) , (ram, 0x4efdf8, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x24674b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x193, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000221, 8) , (unique, 0x10000211, 8) , (const, 0xb7, 4) , (unique, 0x10000231, 8), (unique, 0x10000231, 8) COPY (const, 0x2bb720, 8), (unique, 0x10000221, 8) COPY (const, 0x2b6f61, 8), (unique, 0x10000211, 8) COPY (const, 0x2b6f53, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x193, 4)]
[(ram, 0x4efdf8, 4) COPY (ram, 0x4efdf8, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x193, 4)]
[(ram, 0x4efe00, 8) COPY (ram, 0x4efe00, 8), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x193, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x193, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x127, 4)]
[(ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x127, 4)]
[(ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x127, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x127, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x24672c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x18a, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000219, 8) , (unique, 0x10000209, 8) , (const, 0xb9, 4) , (unique, 0x10000229, 8), (unique, 0x10000229, 8) COPY (const, 0x2bb720, 8), (unique, 0x10000219, 8) COPY (const, 0x2b6f61, 8), (unique, 0x10000209, 8) COPY (const, 0x2b6f53, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18a, 4)]
[(ram, 0x4efdf8, 4) COPY (ram, 0x4efdf8, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x18a, 4)]
[(ram, 0x4efe00, 8) COPY (ram, 0x4efe00, 8), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x18a, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x18a, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4efe00, 8) MULTIEQUAL (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8)]
[(ram, 0x4efdf8, 4) MULTIEQUAL (ram, 0x4efdf8, 4) , (ram, 0x4efdf8, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x24662f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000367, 4) COPY (unique, 0x10000301, 4), (unique, 0x10000301, 4) INT_ADD (ram, 0x4efdf8, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x246651, 1) , (unique, 0x10000305, 1), (unique, 0x10000305, 1) INT_NOTEQUAL (unique, 0x10000301, 4) , (const, 0x0, 4), (unique, 0x10000301, 4) INT_ADD (ram, 0x4efdf8, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x171, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x171, 4)]
[(ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x171, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x171, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x171, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000239, 8), (unique, 0x10000239, 8) PTRSUB (const, 0x0, 8) , (const, 0x4efdf8, 8)]
[(unique, 0x10000363, 4) COPY (ram, 0x4efdf8, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x171, 4), (ram, 0x4efdf8, 4) INT_ADD (ram, 0x4efdf8, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efe00, 8) MULTIEQUAL (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8) , (ram, 0x4efe00, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4efdf8, 4) COPY (unique, 0x1000036f, 4), (unique, 0x1000036f, 4) MULTIEQUAL (unique, 0x10000363, 4) , (unique, 0x10000367, 4) , (unique, 0x1000036b, 4)]
[(register, 0x0, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x246727, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000042b, 8), (unique, 0x1000042b, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x162, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x162, 4)]
[(ram, 0x4efdf8, 4) COPY (ram, 0x4efdf8, 4), (ram, 0x4efdf8, 4) INDIRECT (ram, 0x4efdf8, 4) , (const, 0x162, 4)]
[(ram, 0x4efe00, 8) COPY (ram, 0x4efe00, 8), (ram, 0x4efe00, 8) INDIRECT (ram, 0x4efe00, 8) , (const, 0x162, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x162, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4efdf8, 4) COPY (ram, 0x4efdf8, 4)]
[(ram, 0x4efe00, 8) COPY (ram, 0x4efe00, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
