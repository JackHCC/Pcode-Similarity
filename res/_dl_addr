[(unique, 0x10000252, 8) COPY (ram, 0x4c2e00, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x3200, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002ca, 8), (unique, 0x100002ca, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c2e00, 8) , (const, 0xf08, 8) , (const, 0x1, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c2e00, 8) , (const, 0x908, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x2e, 4), (ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x2a, 4)]
[(ram, 0x4c2fd8, 8) INDIRECT (ram, 0x4c2fd8, 8) , (const, 0x2e, 4), (ram, 0x4c2fd8, 8) INDIRECT (ram, 0x4c2fd8, 8) , (const, 0x2a, 4)]
[ ---  CBRANCH (ram, 0x242c9c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002d2, 8), (unique, 0x100002d2, 8) CALL (ram, 0x11f850, 8) , (register, 0x38, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x242bad, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002da, 8), (unique, 0x100002da, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x43, 4), (ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x40, 4)]
[(ram, 0x4c2fd8, 8) INDIRECT (ram, 0x4c2fd8, 8) , (const, 0x43, 4), (ram, 0x4c2fd8, 8) INDIRECT (ram, 0x4c2fd8, 8) , (const, 0x40, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002e2, 8), (unique, 0x100002e2, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x68, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x242ca3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002da, 8), (unique, 0x100002da, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x242a61, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) INT_ADD (unique, 0x100002ea, 8) , (const, 0x314, 8), (unique, 0x100002ea, 8) CAST (register, 0x0, 8)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x3a2, 4)]
[(ram, 0x4c2fd8, 8) INDIRECT (ram, 0x4c2fd8, 8) , (const, 0x3a2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002fa, 8), (unique, 0x100002fa, 8) CAST (ram, 0x4c2fd8, 8)]
[ ---  BRANCH (ram, 0x242a61, 1)]
[(ram, 0x4c2fd8, 8) MULTIEQUAL (ram, 0x4c2fd8, 8) , (ram, 0x4c2fd8, 8) , (ram, 0x4c2fd8, 8)]
[(ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000302, 8), (unique, 0x10000302, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000030a, 8), (unique, 0x1000030a, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000312, 8), (unique, 0x10000312, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x12, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x242bcc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x53, 8) , (const, 0x8, 8)]
[(unique, 0x100002c2, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x242ccd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xc, 8) , (const, 0x8, 8)]
[(unique, 0x100002ba, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100001f0, 8) , (const, 0x4, 8), (unique, 0x100001f0, 8) INT_MULT (register, 0x10, 8) , (const, 0x6, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000322, 8), (unique, 0x10000322, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000031a, 8), (unique, 0x1000031a, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100002ba, 8) , (unique, 0x100002c2, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000249, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x242c05, 1) , (unique, 0x10000248, 1), (unique, 0x10000248, 1) INT_LESS (unique, 0x10000240, 8) , (register, 0x38, 8), (unique, 0x10000240, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x98, 8)]
[(unique, 0x1000026a, 8) COPY (unique, 0x10000249, 8)]
[ ---  CBRANCH (ram, 0x242bf8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x10000332, 1) , (const, 0x2, 1), (unique, 0x10000332, 1) CAST (register, 0x10, 1), (register, 0x10, 1) INT_SUB (unique, 0x10000104, 1) , (const, 0x1, 1), (unique, 0x10000104, 1) INT_RIGHT (unique, 0xbb00, 1) , (const, 0x4, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000032a, 8), (unique, 0x1000032a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000240, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000272, 8) COPY (unique, 0x10000249, 8)]
[ ---  CBRANCH (ram, 0x242bf8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x6, 1), (register, 0x8, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xf, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000343, 8), (unique, 0x10000343, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000240, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x242c5d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000033b, 8), (unique, 0x1000033b, 8) INT_ADD (unique, 0x10000333, 8) , (const, 0x6, 8), (unique, 0x10000333, 8) CAST (unique, 0x10000240, 8)]
[(unique, 0x1000029a, 8) COPY (unique, 0x10000249, 8)]
[ ---  CBRANCH (ram, 0x242bf8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242c41, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000034b, 8), (unique, 0x1000034b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000240, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(unique, 0x100002a2, 8) COPY (unique, 0x10000249, 8)]
[ ---  CBRANCH (ram, 0x242bf8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0x8, 8)]
[(unique, 0x1000027a, 8) COPY (unique, 0x10000249, 8)]
[ ---  CBRANCH (ram, 0x242bf8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x10000282, 8) COPY (unique, 0x10000249, 8)]
[ ---  CBRANCH (ram, 0x242bf8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242c49, 1) , (register, 0x206, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000353, 8), (unique, 0x10000353, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000240, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(unique, 0x1000028a, 8) COPY (unique, 0x10000249, 8)]
[ ---  CBRANCH (ram, 0x242bf8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x80, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x242c54, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000249, 8) , (const, 0x0, 8)]
[(unique, 0x10000292, 8) COPY (unique, 0x10000249, 8)]
[ ---  CBRANCH (ram, 0x242bf8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000035b, 8), (unique, 0x1000035b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000249, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x100002aa, 8) COPY (unique, 0x10000249, 8)]
[ ---  CBRANCH (ram, 0x242c5b, 1) , (unique, 0x10000119, 1), (unique, 0x10000119, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000240, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x5200, 4) , (unique, 0xbc80, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000240, 8)]
[(unique, 0x100002b2, 8) COPY (unique, 0x10000240, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000026a, 8) , (unique, 0x10000272, 8) , (unique, 0x1000027a, 8) , (unique, 0x10000282, 8) , (unique, 0x1000028a, 8) , (unique, 0x10000292, 8) , (unique, 0x1000029a, 8) , (unique, 0x100002a2, 8) , (unique, 0x100002aa, 8) , (unique, 0x100002b2, 8)]
[(register, 0x98, 8) PTRADD (unique, 0x10000240, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x242cc6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000036b, 8), (unique, 0x1000036b, 8) INT_ADD (unique, 0x10000363, 8) , (const, 0x2ec, 8), (unique, 0x10000363, 8) CAST (register, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x242b6d, 1)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000170, 8) , (const, 0x4, 8), (unique, 0x10000170, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbd80, 8) CAST (unique, 0x10000373, 8), (unique, 0x10000373, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x60, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x242b60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x1000037b, 8), (unique, 0x1000037b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x61, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x242aef, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x10000120, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x242b09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000038b, 8), (unique, 0x1000038b, 8) INT_ADD (unique, 0x10000383, 8) , (const, 0x6, 8), (unique, 0x10000383, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000190, 8) , (const, 0x4, 8), (unique, 0x10000190, 8) INT_MULT (register, 0x10, 8) , (const, 0x6, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x242ae0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000393, 8), (unique, 0x10000393, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x242ae0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 1) , (const, 0x6, 1), (register, 0x80, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xf, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000039b, 8), (unique, 0x1000039b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x242ae0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003a3, 8), (unique, 0x100003a3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x242ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x0, 2)]
[ ---  CBRANCH (ram, 0x242b36, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003ab, 8), (unique, 0x100003ab, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x242b3e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x242b3e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x242ae0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x80, 8) , (register, 0x38, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x242b49, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242ae0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003c3, 8), (unique, 0x100003c3, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003bb, 8), (unique, 0x100003bb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1000025a, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x242b50, 1) , (unique, 0x1000010b, 1), (unique, 0x1000010b, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x5200, 4) , (unique, 0xbc80, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[(unique, 0x10000262, 8) COPY (unique, 0x3400, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000025a, 8) , (unique, 0x10000262, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x10000120, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x242b60, 1) , (unique, 0x1000011f, 1), (unique, 0x1000011f, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x10000120, 8)]
[ ---  CBRANCH (ram, 0x242ab0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3a00, 8) , (register, 0x28, 8), (register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (unique, 0x10000249, 8)]
[ ---  CBRANCH (ram, 0x242b7a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x1a0, 4)]
[(ram, 0x4c2fd8, 8) INDIRECT (ram, 0x4c2fd8, 8) , (const, 0x1a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8)]
[(ram, 0x4c2fd8, 8) MULTIEQUAL (ram, 0x4c2fd8, 8) , (ram, 0x4c2fd8, 8)]
[(ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[ ---  CBRANCH (ram, 0x242b87, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x1af, 4)]
[(ram, 0x4c2fd8, 8) INDIRECT (ram, 0x4c2fd8, 8) , (const, 0x1af, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x30, 8)]
[(ram, 0x4c2fd8, 8) MULTIEQUAL (ram, 0x4c2fd8, 8) , (ram, 0x4c2fd8, 8)]
[(ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[ ---  CBRANCH (ram, 0x242c80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x206, 4), (ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x203, 4)]
[(ram, 0x4c2fd8, 8) INDIRECT (ram, 0x4c2fd8, 8) , (const, 0x206, 4), (ram, 0x4c2fd8, 8) INDIRECT (ram, 0x4c2fd8, 8) , (const, 0x203, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x242bad, 1)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x10, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x10, 8) CAST (unique, 0x100003d3, 8), (unique, 0x100003d3, 8) INT_ADD (register, 0x10, 8) , (unique, 0x100003cb, 8), (unique, 0x100003cb, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x1df, 4), (ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x1cd, 4)]
[(ram, 0x4c2fd8, 8) INDIRECT (ram, 0x4c2fd8, 8) , (const, 0x1df, 4), (ram, 0x4c2fd8, 8) INDIRECT (ram, 0x4c2fd8, 8) , (const, 0x1cd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x10, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x10, 8) CAST (unique, 0x100003e3, 8), (unique, 0x100003e3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003db, 8), (unique, 0x100003db, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x3200, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003eb, 8), (unique, 0x100003eb, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x10000252, 8) , (const, 0xf10, 8) , (const, 0x1, 8), (unique, 0x3200, 8) PTRADD (unique, 0x10000252, 8) , (const, 0x908, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e00, 8) COPY (ram, 0x4c2e00, 8), (ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x1e6, 4), (ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[(ram, 0x4c2fd8, 8) COPY (ram, 0x4c2fd8, 8), (ram, 0x4c2fd8, 8) INDIRECT (ram, 0x4c2fd8, 8) , (const, 0x1e6, 4), (ram, 0x4c2fd8, 8) MULTIEQUAL (ram, 0x4c2fd8, 8) , (ram, 0x4c2fd8, 8) , (ram, 0x4c2fd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
