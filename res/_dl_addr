[ ---  CBRANCH (ram, 0x48f844, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4f08, 8) , (const, 0x0, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x2c, 4)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x2c, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x2c, 4)]
[ ---  CALL (ram, 0x0, 8) , (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c60e0, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x3a, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x3a, 4), (ram, 0x4c4f08, 8) MULTIEQUAL (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x3a, 4), (ram, 0x4c4f70, 8) MULTIEQUAL (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8)]
[ ---  CBRANCH (ram, 0x48f9bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000368, 8), (unique, 0x10000368, 8) CALL (ram, 0x48cba0, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000370, 8), (unique, 0x10000370, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x841, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x840, 4)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x841, 4), (ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x840, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x841, 4), (ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x840, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000123, 8) , (unique, 0x5280, 8), (unique, 0x10000123, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x5280, 8) CAST (unique, 0x10000378, 8), (unique, 0x10000378, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x6a, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48fb14, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000370, 8), (unique, 0x10000370, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48f874, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000388, 8), (unique, 0x10000388, 8) INT_ADD (unique, 0x10000380, 8) , (const, 0x31c, 8), (unique, 0x10000380, 8) CAST (register, 0x0, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x3fa, 4)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x3fa, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x3fa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000390, 8), (unique, 0x10000390, 8) CAST (ram, 0x4c4a68, 8)]
[ ---  BRANCH (ram, 0x48f874, 1)]
[(ram, 0x4c4f70, 8) MULTIEQUAL (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8)]
[(ram, 0x4c4f08, 8) MULTIEQUAL (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003a0, 8), (unique, 0x100003a0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003a8, 8), (unique, 0x100003a8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003b0, 8), (unique, 0x100003b0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x12, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48f9e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000398, 8), (unique, 0x10000398, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x54, 8) , (const, 0x8, 8)]
[(unique, 0x10000360, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x48fa04, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xc, 8) , (const, 0x8, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000020f, 8) , (const, 0x4, 8), (unique, 0x1000020f, 8) INT_MULT (register, 0x10, 8) , (const, 0x6, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003c0, 8), (unique, 0x100003c0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003b8, 8), (unique, 0x100003b8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(unique, 0x1000026f, 8) MULTIEQUAL (register, 0x98, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x48fa7d, 1) , (unique, 0x1000027f, 1), (unique, 0x1000027f, 1) INT_LESS (unique, 0x10000277, 8) , (register, 0x30, 8), (unique, 0x10000277, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000358, 8) , (unique, 0x10000360, 8) , (unique, 0x3400, 8)]
[(unique, 0x100002f8, 8) COPY (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x48fa70, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100003d0, 1) , (const, 0x2, 1), (unique, 0x100003d0, 1) CAST (register, 0x10, 1), (register, 0x10, 1) INT_SUB (unique, 0x10000122, 1) , (const, 0x1, 1), (unique, 0x10000122, 1) INT_RIGHT (unique, 0xbb00, 1) , (const, 0x4, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003c8, 8), (unique, 0x100003c8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000277, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000300, 8) COPY (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x48fa70, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003d9, 8), (unique, 0x100003d9, 8) INT_ADD (unique, 0x100003d1, 8) , (const, 0x5, 8), (unique, 0x100003d1, 8) CAST (unique, 0x10000277, 8)]
[(unique, 0x10000308, 8) COPY (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x48fa70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x6, 1), (register, 0x8, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xf, 1)]
[ ---  CBRANCH (ram, 0x48fae0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003e9, 8), (unique, 0x100003e9, 8) INT_ADD (unique, 0x100003e1, 8) , (const, 0x6, 8), (unique, 0x100003e1, 8) CAST (unique, 0x10000277, 8)]
[(unique, 0x10000330, 8) COPY (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x48fa70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0xfff1, 2)]
[(unique, 0x10000338, 8) COPY (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x48fa70, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003f1, 8), (unique, 0x100003f1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000277, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x48fa4e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003f9, 8), (unique, 0x100003f9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000277, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(unique, 0x10000340, 8) COPY (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x48fa70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0x8, 8)]
[(unique, 0x10000310, 8) COPY (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x48fa70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000401, 8), (unique, 0x10000401, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000277, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x10000318, 8) COPY (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x48fa70, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48fa56, 1) , (register, 0x206, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000409, 8), (unique, 0x10000409, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000277, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000320, 8) COPY (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x48fa70, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x80, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x48fa61, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000026f, 8) , (const, 0x0, 8)]
[(unique, 0x10000328, 8) COPY (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x48fa70, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000411, 8), (unique, 0x10000411, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000026f, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10000348, 8) COPY (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x48fa6b, 1) , (unique, 0x1000013e, 1), (unique, 0x1000013e, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000277, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x5200, 4) , (unique, 0xbc80, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000277, 8)]
[(unique, 0x10000350, 8) COPY (unique, 0x10000277, 8)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0x100002f8, 8) , (unique, 0x10000300, 8) , (unique, 0x10000308, 8) , (unique, 0x10000310, 8) , (unique, 0x10000318, 8) , (unique, 0x10000320, 8) , (unique, 0x10000328, 8) , (unique, 0x10000330, 8) , (unique, 0x10000338, 8) , (unique, 0x10000340, 8) , (unique, 0x10000348, 8) , (unique, 0x10000350, 8)]
[(unique, 0x10000358, 8) COPY (register, 0x30, 8)]
[(register, 0x38, 8) PTRADD (unique, 0x10000277, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x48f96f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000421, 8), (unique, 0x10000421, 8) INT_ADD (unique, 0x10000419, 8) , (const, 0x2f4, 8), (unique, 0x10000419, 8) CAST (register, 0x0, 8)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x8, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbd80, 8) CAST (unique, 0x10000429, 8), (unique, 0x10000429, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x61, 8) , (const, 0x8, 8)]
[(unique, 0x10000290, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000429, 8), (unique, 0x10000429, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x61, 8) , (const, 0x8, 8)]
[(unique, 0x100002a0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000429, 8), (unique, 0x10000429, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x61, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x48f8e0, 1)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x100002a0, 8) , (unique, 0x100002a8, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000290, 8) , (unique, 0x10000298, 8)]
[ ---  CBRANCH (ram, 0x48f8d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000290, 8) , (unique, 0x10000298, 8)]
[(unique, 0x10000280, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000431, 8), (unique, 0x10000431, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x62, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x48f94a, 1)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x48f8f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000449, 8), (unique, 0x10000449, 8) INT_ADD (unique, 0x10000441, 8) , (const, 0x6, 8), (unique, 0x10000441, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100001df, 8) , (const, 0x4, 8), (unique, 0x100001df, 8) INT_MULT (register, 0x8, 8) , (const, 0x6, 8), (register, 0x8, 8) INT_AND (register, 0x8, 8) , (const, 0xffffffff, 8), (register, 0x8, 8) INT_SRIGHT (unique, 0x10000439, 8) , (const, 0x2, 4), (unique, 0x10000439, 8) CAST (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000099, 8) , (const, 0x1, 8), (unique, 0x10000099, 8) INT_2COMP (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000280, 8) , (unique, 0x10000288, 8)]
[(unique, 0x100002e0, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x48f940, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000451, 8), (unique, 0x10000451, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x100002b0, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x48f940, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0xfff1, 2)]
[(unique, 0x100002b8, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x48f940, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 1) , (const, 0x6, 1), (register, 0x90, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xf, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000459, 8), (unique, 0x10000459, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100002c0, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x48f940, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x90, 8) , (register, 0x38, 8), (register, 0x90, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000461, 8), (unique, 0x10000461, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x48fa90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2)]
[ ---  CBRANCH (ram, 0x48faa5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x90, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000469, 8), (unique, 0x10000469, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x48fa99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000471, 8), (unique, 0x10000471, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(unique, 0x100002d8, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x48f940, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x90, 8), (register, 0x90, 8) INT_ADD (register, 0x90, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100002c8, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x48faa5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x48fab4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8)]
[(unique, 0x100002d0, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x48f940, 1) , (unique, 0x10000145, 1), (unique, 0x10000145, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000481, 8), (unique, 0x10000481, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000479, 8), (unique, 0x10000479, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x98, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x100002e8, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x48fabe, 1) , (unique, 0x10000148, 1), (unique, 0x10000148, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x5200, 4) , (unique, 0xbc80, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[(unique, 0x100002f0, 8) COPY (unique, 0x3400, 8)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0x100002b0, 8) , (unique, 0x100002b8, 8) , (unique, 0x100002c0, 8) , (unique, 0x100002c8, 8) , (unique, 0x100002d0, 8) , (unique, 0x100002d8, 8) , (unique, 0x100002e0, 8) , (unique, 0x100002e8, 8) , (unique, 0x100002f0, 8)]
[(unique, 0x10000288, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x48f8d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x48f978, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (unique, 0x3400, 8)]
[(unique, 0x10000298, 8) COPY (register, 0x80, 8)]
[(unique, 0x100002a8, 8) COPY (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8) , (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x48f981, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x193, 4)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x193, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x193, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8)]
[(ram, 0x4c4f70, 8) MULTIEQUAL (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8)]
[(ram, 0x4c4f08, 8) MULTIEQUAL (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[ ---  CBRANCH (ram, 0x48f98a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x19f, 4)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x19f, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x19f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x98, 8)]
[(ram, 0x4c4f70, 8) MULTIEQUAL (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8)]
[(ram, 0x4c4f08, 8) MULTIEQUAL (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[ ---  CBRANCH (ram, 0x48fac8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8)]
[(register, 0xb0, 8) COPY (const, 0x1, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x214, 4)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x214, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x214, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x10000489, 8), (unique, 0x10000489, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x48f9bb, 1)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x1c8, 4)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x1c8, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x1c8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x10, 8) CAST (unique, 0x10000499, 8), (unique, 0x10000499, 8) INT_ADD (register, 0x10, 8) , (unique, 0x10000491, 8), (unique, 0x10000491, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x48fb33, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0xfff1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004a9, 8), (unique, 0x100004a9, 8) INT_ADD (unique, 0x100004a1, 8) , (const, 0x6, 8), (unique, 0x100004a1, 8) CAST (register, 0x98, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x48f9ad, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0xb0, 8) COPY (const, 0x1, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x1dc, 4)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x1dc, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x1dc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100004b9, 8), (unique, 0x100004b9, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004b1, 8), (unique, 0x100004b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x98, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4c4f08, 8) MULTIEQUAL (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x48f9d1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4f70, 8) , (const, 0x0, 8), (ram, 0x4c4f70, 8) MULTIEQUAL (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x1ea, 4)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x1ea, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x1ea, 4)]
[ ---  CALL (ram, 0x0, 8) , (unique, 0x10000157, 8), (unique, 0x10000157, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c60e0, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c4f08, 8) COPY (ram, 0x4c4f08, 8), (ram, 0x4c4f08, 8) MULTIEQUAL (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8)]
[(ram, 0x4c4f70, 8) COPY (ram, 0x4c4f70, 8), (ram, 0x4c4f70, 8) MULTIEQUAL (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xb0, 8)]
