[ ---  CBRANCH (ram, 0x41dea0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000004e, 4) , (const, 0x0, 4), (unique, 0x1000004e, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000154, 8), (unique, 0x10000154, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000026c, 8) , (register, 0x0, 4), (unique, 0x1000026c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x20, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x9, 4), (unique, 0x4f00, 8) CAST (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x41dd00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000005a, 4) , (const, 0x0, 4), (unique, 0x1000005a, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[ ---  CBRANCH (ram, 0x41de38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x41de38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x41ee60, 8) , (register, 0x38, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000224, 8), (unique, 0x10000224, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  BRANCH (ram, 0x41dd0d, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x41de60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000076, 4) , (const, 0x0, 4), (unique, 0x10000076, 4) INT_AND (register, 0x0, 4) , (const, 0x100, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CALL (ram, 0x41e990, 8) , (register, 0x38, 8)]
[(unique, 0x1000028c, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000010a, 8) , (const, 0x1, 8), (unique, 0x1000010a, 8) INT_2COMP (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x41de8d, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000010a, 8) , (const, 0x1, 8), (unique, 0x1000010a, 8) INT_2COMP (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (register, 0xa0, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100000fa, 8) , (const, 0x1, 8), (unique, 0x100000fa, 8) INT_2COMP (unique, 0x100002c4, 8), (unique, 0x100002c4, 8) CAST (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[(unique, 0x10000294, 8) COPY (register, 0xa0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000025c, 8), (unique, 0x1000025c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (register, 0x10, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_2COMP (unique, 0x100002d4, 8), (unique, 0x100002d4, 8) CAST (unique, 0x1000011a, 8), (unique, 0x1000011a, 8) MULTIEQUAL (unique, 0x1000028c, 8) , (unique, 0x10000294, 8)]
[ ---  BRANCH (ram, 0x41dd16, 1)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x41de00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x40, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000132, 8) , (unique, 0xbd80, 8), (unique, 0x10000132, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[(unique, 0x10000284, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  BRANCH (ram, 0x41dd28, 1)]
[(unique, 0x1000027c, 8) COPY (unique, 0x5280, 8), (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000082, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x10000082, 8) MULTIEQUAL (unique, 0x1000027c, 8) , (unique, 0x10000284, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001a4, 8) , (register, 0x8, 4), (unique, 0x100001a4, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 4) INT_OR (register, 0x0, 4) , (const, 0x800, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000082, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (unique, 0x10000082, 8) MULTIEQUAL (unique, 0x1000027c, 8) , (unique, 0x10000284, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000122, 8) , (register, 0x10, 8), (unique, 0x10000122, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000012a, 8) , (unique, 0xbd80, 8), (unique, 0x1000012a, 8) PTRSUB (register, 0x38, 8) , (const, 0x30, 8)]
[(unique, 0x100002ac, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x41dcbd, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x41dcbd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x202, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[(unique, 0x100002a4, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x10000140, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000148, 8) MULTIEQUAL (unique, 0x100002ac, 8) , (unique, 0x100002a4, 8) , (unique, 0x100002ac, 8) , (unique, 0x100002ac, 8)]
[ ---  CBRANCH (ram, 0x41dcc6, 1) , (unique, 0x1000013f, 1), (unique, 0x1000013f, 1) INT_EQUAL (register, 0x30, 4) , (const, 0xffffffff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x41d200, 8) , (register, 0x38, 8) , (unique, 0x10000148, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (unique, 0x10000140, 8) , (unique, 0x100000ae, 8) , (const, 0x1, 8), (unique, 0x100000ae, 8) INT_2COMP (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) CAST (unique, 0x10000148, 8)]
[ ---  CBRANCH (ram, 0x41ddc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x10000140, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x41de20, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0xc0, 8)]
[(register, 0x0, 4) CALL (ram, 0x41d200, 8) , (register, 0x38, 8) , (unique, 0x10000148, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (unique, 0x10000140, 8) , (unique, 0x100000de, 8) , (const, 0x1, 8), (unique, 0x100000de, 8) INT_2COMP (unique, 0x100002e4, 8), (unique, 0x100002e4, 8) CAST (unique, 0x10000148, 8)]
[ ---  BRANCH (ram, 0x41ddee, 1)]
[(register, 0x0, 4) CALL (ram, 0x41a000, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SRIGHT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000304, 8), (unique, 0x10000304, 8) INT_ADD (unique, 0x100002fc, 8) , (const, 0x20, 8), (unique, 0x100002fc, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002f4, 8), (unique, 0x100002f4, 8) INT_ADD (unique, 0x100002ec, 8) , (const, 0x18, 8), (unique, 0x100002ec, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x41ddac, 1) , (register, 0x0, 1), (register, 0x0, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[ ---  BRANCH (ram, 0x41dcd0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000140, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x18, 1), (register, 0x18, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000140, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x41dd90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000006a, 4) , (const, 0x0, 4), (unique, 0x1000006a, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000017c, 8), (unique, 0x1000017c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41dcf3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000006e, 4) , (const, 0x0, 4), (unique, 0x1000006e, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x200, 4)]
[ ---  CBRANCH (ram, 0x41dd90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x41dcf3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x41d200, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100000b6, 8) , (const, 0x1, 8), (unique, 0x100000b6, 8) INT_2COMP (unique, 0x1000030c, 8), (unique, 0x1000030c, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
