[(unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000378, 8), (unique, 0x10000378, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000000, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x2c280, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000378, 8), (unique, 0x10000378, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000000, 4)]
[ ---  CBRANCH (ram, 0x453068, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x38, 4) , (const, 0xc5, 4)]
[ ---  CBRANCH (ram, 0x453070, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0xbe, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x453068, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x80000005, 4) , (unique, 0x2bf80, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x2c280, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) CAST (unique, 0x10000380, 8), (unique, 0x10000380, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0x8, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000006, 4)]
[(unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) CAST (unique, 0x10000388, 8), (unique, 0x10000388, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0xc, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000006, 4)]
[ ---  BRANCH (ram, 0x453043, 1)]
[ ---  CBRANCH (ram, 0x453068, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x2bf80, 4) , (const, 0x80000005, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x2c280, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) CAST (unique, 0x10000390, 8), (unique, 0x10000390, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0x8, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000005, 4)]
[(unique, 0x10000368, 4) COPY (unique, 0x2c400, 4), (unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) CAST (unique, 0x10000398, 8), (unique, 0x10000398, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0xc, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000005, 4)]
[ ---  CBRANCH (ram, 0x453043, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x38, 4) , (const, 0xbc, 4)]
[(register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x3, 4)]
[(unique, 0x1000036c, 4) COPY (unique, 0x2c280, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x10000368, 4) , (unique, 0x1000036c, 4) , (unique, 0x2c400, 4)]
[ ---  CBRANCH (ram, 0x4531c2, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x8, 4) , (register, 0x38, 4), (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (const, 0xbc, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000138, 8) , (unique, 0x10000130, 8) , (const, 0x1b1, 4) , (unique, 0x10000140, 8), (unique, 0x10000140, 8) COPY (const, 0x49dae0, 8), (unique, 0x10000138, 8) COPY (const, 0x49d75a, 8), (unique, 0x10000130, 8) COPY (const, 0x49d73f, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x1000009d, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  BRANCHIND (register, 0x38, 4)]
[(register, 0x0, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)]
[ ---  CBRANCH (ram, 0x4530b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000e5, 8) , (const, 0x0, 8), (unique, 0x100000e5, 8) INT_AND (register, 0x10, 8) , (const, 0xf000, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ZEXT (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x100000d5, 4) , (const, 0xf, 4), (unique, 0x100000d5, 4) SUBPIECE (unique, 0x1000003d, 8) , (const, 0x0, 4), (unique, 0x1000003d, 8) INT_RIGHT (register, 0x10, 8) , (const, 0xc, 4)]
[ ---  BRANCHIND (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x100000d5, 4) , (const, 0xf, 4), (unique, 0x100000d5, 4) SUBPIECE (unique, 0x1000003d, 8) , (const, 0x0, 4), (unique, 0x1000003d, 8) INT_RIGHT (register, 0x10, 8) , (const, 0xc, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_AND (unique, 0x100000f9, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x100000f9, 16) INT_ADD (unique, 0x10000328, 16) , (unique, 0x2e500, 8), (unique, 0x10000328, 16) INT_LEFT (unique, 0x10000318, 16) , (const, 0x40, 16), (unique, 0x10000318, 16) INT_SEXT (unique, 0x100003a0, 8), (unique, 0x100003a0, 8) CAST (unique, 0x2e680, 8), (unique, 0x2e680, 8) INT_REM (unique, 0x2e300, 8) , (register, 0x30, 8), (unique, 0x2e500, 8) INT_DIV (unique, 0x2e300, 8) , (register, 0x30, 8), (unique, 0x2e300, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x10000128, 4) , (const, 0x7ff80000, 4), (register, 0x30, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8), (unique, 0x10000128, 4) INT_MULT (unique, 0x1000009d, 4) , (const, 0x2, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x45306a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000095, 8) , (const, 0x0, 8), (unique, 0x10000095, 8) INT_AND (register, 0x10, 8) , (const, 0xf000, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x10000210, 16) , (register, 0x0, 8), (unique, 0x10000210, 16) INT_LEFT (unique, 0x10000200, 16) , (const, 0x40, 16), (unique, 0x10000200, 16) INT_SEXT (unique, 0x100003a8, 8), (unique, 0x100003a8, 8) CAST (register, 0x10, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x1000012c, 4) , (const, 0x7ff80000, 4), (unique, 0x1000012c, 4) INT_MULT (unique, 0x1000009d, 4) , (const, 0x2, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)]
[(unique, 0x10000358, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x453140, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000f5, 4) , (const, 0x0, 4), (unique, 0x100000f5, 4) INT_AND (register, 0x8, 4) , (const, 0xf000, 4)]
[(unique, 0x10000360, 8) COPY (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ZEXT (unique, 0x10000075, 12), (unique, 0x10000075, 12) INT_AND (unique, 0x10000081, 12) , (const, 0xffffffffffffffff, 12), (unique, 0x10000081, 12) INT_ADD (unique, 0x100001f4, 12) , (register, 0x0, 8), (unique, 0x100001f4, 12) INT_LEFT (unique, 0x100001e8, 12) , (const, 0x40, 12), (unique, 0x100001e8, 12) INT_SEXT (unique, 0x100003b0, 4), (unique, 0x100003b0, 4) CAST (register, 0x8, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000358, 8) , (unique, 0x10000360, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0xc, 4)]
[ ---  BRANCHIND (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0xc, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_AND (unique, 0x1000010d, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x1000010d, 16) INT_ADD (unique, 0x10000348, 16) , (unique, 0x2e500, 8), (unique, 0x10000348, 16) INT_LEFT (unique, 0x10000338, 16) , (const, 0x40, 16), (unique, 0x10000338, 16) INT_SEXT (unique, 0x100003b4, 8), (unique, 0x100003b4, 8) CAST (unique, 0x2e680, 8), (unique, 0x2e680, 8) INT_REM (unique, 0x2e400, 8) , (unique, 0x2e180, 8), (unique, 0x2e500, 8) INT_DIV (unique, 0x2e400, 8) , (unique, 0x2e180, 8), (unique, 0x2e400, 8) INT_AND (unique, 0x100000dd, 8) , (const, 0xffffffff03fffc00, 8), (unique, 0x100000dd, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x2e180, 8) INT_ZEXT (register, 0x8, 4), (register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x6, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x10000308, 16) , (const, 0x80, 8), (unique, 0x10000308, 16) INT_LEFT (unique, 0x100002f8, 16) , (const, 0x40, 16), (unique, 0x100002f8, 16) INT_SEXT (unique, 0x100003bc, 8), (unique, 0x100003bc, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x10000248, 16) , (const, 0x60, 8), (unique, 0x10000248, 16) INT_LEFT (unique, 0x10000238, 16) , (const, 0x40, 16), (unique, 0x10000238, 16) INT_SEXT (unique, 0x100003c4, 8), (unique, 0x100003c4, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x10000268, 16) , (const, 0x40, 8), (unique, 0x10000268, 16) INT_LEFT (unique, 0x10000258, 16) , (const, 0x40, 16), (unique, 0x10000258, 16) INT_SEXT (unique, 0x100003cc, 8), (unique, 0x100003cc, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x10000288, 16) , (const, 0x30, 8), (unique, 0x10000288, 16) INT_LEFT (unique, 0x10000278, 16) , (const, 0x40, 16), (unique, 0x10000278, 16) INT_SEXT (unique, 0x100003d4, 8), (unique, 0x100003d4, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x100002a8, 16) , (const, 0x20, 8), (unique, 0x100002a8, 16) INT_LEFT (unique, 0x10000298, 16) , (const, 0x40, 16), (unique, 0x10000298, 16) INT_SEXT (unique, 0x100003dc, 8), (unique, 0x100003dc, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x100002c8, 16) , (const, 0x10, 8), (unique, 0x100002c8, 16) INT_LEFT (unique, 0x100002b8, 16) , (const, 0x40, 16), (unique, 0x100002b8, 16) INT_SEXT (unique, 0x100003e4, 8), (unique, 0x100003e4, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x100002e8, 16) , (const, 0x8, 8), (unique, 0x100002e8, 16) INT_LEFT (unique, 0x100002d8, 16) , (const, 0x40, 16), (unique, 0x100002d8, 16) INT_SEXT (unique, 0x100003ec, 8), (unique, 0x100003ec, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ZEXT (unique, 0x100000a5, 12), (unique, 0x100000a5, 12) INT_AND (unique, 0x100000b1, 12) , (const, 0xffffffffffffffff, 12), (unique, 0x100000b1, 12) INT_ADD (unique, 0x1000022c, 12) , (register, 0x10, 8), (unique, 0x1000022c, 12) INT_LEFT (unique, 0x10000220, 12) , (const, 0x40, 12), (unique, 0x10000220, 12) INT_SEXT (unique, 0x100003f4, 4), (unique, 0x100003f4, 4) CAST (register, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x45306a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000006d, 4) , (const, 0x0, 4), (unique, 0x1000006d, 4) INT_AND (register, 0x8, 4) , (const, 0xf000, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x100001d8, 16) , (register, 0x0, 8), (unique, 0x100001d8, 16) INT_LEFT (unique, 0x100001c8, 16) , (const, 0x40, 16), (unique, 0x100001c8, 16) INT_SEXT (unique, 0x100003f8, 8), (unique, 0x100003f8, 8) CAST (register, 0x10, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3fffc00, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x6, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x10000160, 16) , (register, 0x0, 8), (unique, 0x10000160, 16) INT_LEFT (unique, 0x10000150, 16) , (const, 0x40, 16), (unique, 0x10000150, 16) INT_SEXT (unique, 0x10000400, 8), (unique, 0x10000400, 8) CAST (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x100001b8, 16) , (register, 0x0, 8), (unique, 0x100001b8, 16) INT_LEFT (unique, 0x100001a8, 16) , (const, 0x40, 16), (unique, 0x100001a8, 16) INT_SEXT (unique, 0x10000408, 8), (unique, 0x10000408, 8) CAST (register, 0x10, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)]
[(register, 0x8, 4) INT_LEFT (unique, 0x100000f1, 4) , (const, 0x2, 4), (unique, 0x100000f1, 4) INT_AND (register, 0x0, 4) , (const, 0xff00, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x10, 4)]
[(unique, 0x10000370, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x4530e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xff, 4), (register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x10, 4)]
[(unique, 0x10000374, 4) COPY (register, 0x8, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ZEXT (unique, 0x1000004d, 12), (unique, 0x1000004d, 12) INT_AND (unique, 0x10000059, 12) , (const, 0xffffffffffffffff, 12), (unique, 0x10000059, 12) INT_ADD (unique, 0x1000019c, 12) , (register, 0x0, 8), (unique, 0x1000019c, 12) INT_LEFT (unique, 0x10000190, 12) , (const, 0x40, 12), (unique, 0x10000190, 12) INT_SEXT (unique, 0x10000410, 4), (unique, 0x10000410, 4) CAST (register, 0x0, 4), (register, 0x0, 8) INT_ZEXT (unique, 0x1000011d, 4), (unique, 0x1000011d, 4) MULTIEQUAL (unique, 0x10000370, 4) , (unique, 0x10000374, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x10000180, 16) , (register, 0x0, 8), (unique, 0x10000180, 16) INT_LEFT (unique, 0x10000170, 16) , (const, 0x40, 16), (unique, 0x10000170, 16) INT_SEXT (unique, 0x10000414, 8), (unique, 0x10000414, 8) CAST (register, 0x10, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3fc00, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0xe, 4)]
