[(register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000383, 8), (unique, 0x10000383, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x1000037b, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x23a3b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x138, 4)]
[(ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0x138, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x138, 4), (stack, 0xffffffffffffff50, 8) COPY (const, 0x23a3be, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x138, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x138, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x1000037b, 8) , (const, 0x138, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x138, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x138, 4)]
[ ---  CBRANCH (ram, 0x23a3fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000038b, 8), (unique, 0x1000038b, 8) CALL (ram, 0x239b00, 8) , (unique, 0x1000017a, 8) , (const, 0x0, 8), (unique, 0x1000017a, 8) COPY (const, 0x2b6b64, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x150, 4), (stack, 0xffffffffffffff50, 8) COPY (const, 0x23a3e5, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x159, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x150, 4)]
[(ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0x159, 4), (ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0x150, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x159, 4), (stack, 0xffffffffffffff50, 8) COPY (const, 0x23a3f6, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x159, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x150, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x159, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (unique, 0x1000036b, 8) , (const, 0x150, 4), (unique, 0x1000036b, 8) COPY (register, 0x0, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x159, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x150, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x159, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x150, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x159, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x150, 4)]
[ ---  CALL (ram, 0x17e250, 8) , (stack, 0xffffffffffffff68, 8), (stack, 0xffffffffffffff68, 8) INDIRECT (unique, 0x1000036b, 8) , (const, 0x150, 4), (unique, 0x1000036b, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x23a2ba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x239d20, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffff70, 8) , (register, 0x30, 8) , (register, 0x80, 8) , (register, 0x8, 8) , (register, 0x88, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x0, 4)]
[(unique, 0x10000363, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x23a280, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000393, 8), (unique, 0x10000393, 8) CAST (ram, 0x4eafb8, 8), (ram, 0x4eafb8, 8) MULTIEQUAL (ram, 0x4eafb8, 8) , (ram, 0x4eafb8, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x100001d2, 8) , (unique, 0x100000be, 8) , (const, 0x1, 8), (unique, 0x100001d2, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8), (unique, 0x100000be, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) CALL (ram, 0x1e69f0, 8) , (const, 0x46, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003ab, 8) , (const, 0x23a2b1, 8), (unique, 0x100003ab, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100002c2, 8) , (unique, 0x100002ba, 8) , (const, 0x1, 8), (unique, 0x100002c2, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8), (unique, 0x100002ba, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100000be, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) CALL (ram, 0x1e69f0, 8) , (const, 0x46, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x69, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x41, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0x69, 4), (ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0x41, 4), (ram, 0x4eafb8, 8) MULTIEQUAL (ram, 0x4eafb8, 8) , (ram, 0x4eafb8, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x69, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x68, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x41, 4), (stack, 0xffffffffffffff50, 8) COPY (const, 0x23a28a, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x69, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x68, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x41, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x69, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x68, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x41, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x69, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x68, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x41, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (unique, 0x1000037b, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x69, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x68, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x41, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x69, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x68, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x41, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000353, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001ba, 8) , (unique, 0x100000be, 8) , (const, 0x1, 8), (unique, 0x100001ba, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8), (unique, 0x100000be, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) CALL (ram, 0x1e69f0, 8) , (const, 0x46, 4)]
[ ---  CBRANCH (ram, 0x23a2e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e3810, 8) , (register, 0x80, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (register, 0x0, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) CAST (unique, 0x100003a3, 8), (unique, 0x100003a3, 8) INT_ADD (unique, 0x1000039b, 8) , (unique, 0x100000be, 8), (unique, 0x1000039b, 8) CAST (unique, 0x100002aa, 8), (unique, 0x100002aa, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff60, 8), (unique, 0x100000be, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) CALL (ram, 0x1e69f0, 8) , (const, 0x46, 4)]
[(unique, 0x1000035b, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x23a2b5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003bb, 8) , (const, 0x23a2fc, 8), (unique, 0x100003bb, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100002da, 8) , (unique, 0x100002d2, 8) , (const, 0x1, 8), (unique, 0x100002da, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8), (unique, 0x100002d2, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x1000020a, 8) INT_ADD (unique, 0x100000d6, 8) , (unique, 0x100000be, 8), (unique, 0x100000d6, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x27, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[(unique, 0x10000212, 8) INT_ADD (unique, 0x100000d6, 8) , (unique, 0x100000be, 8), (unique, 0x100000d6, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x27, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[(unique, 0x1000021a, 8) INT_ADD (unique, 0x100000d6, 8) , (unique, 0x100000be, 8), (unique, 0x100000d6, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x27, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000222, 8) , (const, 0x1, 8), (unique, 0x10000222, 8) INT_ADD (unique, 0x100000d6, 8) , (unique, 0x100000be, 8), (unique, 0x100000d6, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x27, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003db, 8) , (const, 0x23a329, 8), (unique, 0x100003db, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000252, 8) , (const, 0x1, 8), (unique, 0x10000252, 8) INT_ADD (unique, 0x100001ea, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001ea, 8) INT_ADD (unique, 0x100000d6, 8) , (unique, 0x100000be, 8), (unique, 0x100000d6, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x27, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003eb, 8) , (const, 0x0, 1), (unique, 0x100003eb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100003e3, 8), (unique, 0x100003e3, 8) CALL (ram, 0x121230, 8) , (register, 0x8, 8) , (unique, 0x1000033b, 8) , (register, 0x0, 8), (register, 0x8, 8) CAST (unique, 0x100003d3, 8), (unique, 0x100003d3, 8) INT_AND (unique, 0x100003cb, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100003cb, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000024a, 8) , (const, 0x1, 8), (unique, 0x1000024a, 8) INT_ADD (unique, 0x100001e2, 8) , (const, 0xf, 8), (unique, 0x100001e2, 8) INT_ADD (unique, 0x100000d6, 8) , (unique, 0x100000be, 8), (unique, 0x100000d6, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x27, 8), (unique, 0x1000033b, 8) COPY (unique, 0x100003c3, 8), (unique, 0x100003c3, 8) CAST (stack, 0xffffffffffffff68, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xb3, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffff68, 8) COPY (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x7374736f68722e2f, 8), (register, 0x0, 8) CAST (unique, 0x100003e3, 8), (unique, 0x100003e3, 8) CALL (ram, 0x121230, 8) , (register, 0x8, 8) , (unique, 0x1000033b, 8) , (register, 0x0, 8), (register, 0x8, 8) CAST (unique, 0x100003d3, 8), (unique, 0x100003d3, 8) INT_AND (unique, 0x100003cb, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100003cb, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000024a, 8) , (const, 0x1, 8), (unique, 0x1000024a, 8) INT_ADD (unique, 0x100001e2, 8) , (const, 0xf, 8), (unique, 0x100001e2, 8) INT_ADD (unique, 0x100000d6, 8) , (unique, 0x100000be, 8), (unique, 0x100000d6, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x27, 8), (unique, 0x1000033b, 8) COPY (unique, 0x100003c3, 8), (unique, 0x100003c3, 8) CAST (stack, 0xffffffffffffff68, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xb3, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffff68, 8) COPY (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003f3, 8) , (const, 0x23a33f, 8), (unique, 0x100003f3, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000025a, 8) , (const, 0x1, 8), (unique, 0x1000025a, 8) INT_ADD (unique, 0x100001f2, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001f2, 8) INT_ADD (unique, 0x100000d6, 8) , (unique, 0x100000be, 8), (unique, 0x100000d6, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x27, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000040b, 8) , (const, 0x23a351, 8), (unique, 0x1000040b, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000262, 8) , (const, 0x1, 8), (unique, 0x10000262, 8) INT_ADD (unique, 0x100001fa, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001fa, 8) INT_ADD (unique, 0x100000d6, 8) , (unique, 0x100000be, 8), (unique, 0x100000d6, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x27, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[ ---  CALL (ram, 0x216c00, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x10, 8), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xdc, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xb3, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xb2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000413, 8) , (const, 0x23a367, 8), (unique, 0x10000413, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000026a, 8) , (const, 0x1, 8), (unique, 0x1000026a, 8) INT_ADD (unique, 0x10000202, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000202, 8) INT_ADD (unique, 0x100000d6, 8) , (unique, 0x100000be, 8), (unique, 0x100000d6, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x27, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x101, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf3, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe6, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xdd, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb3, 4)]
[(ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0x101, 4), (ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0xf3, 4), (ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0xe6, 4), (ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0xe3, 4), (ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0xe1, 4), (ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0xdd, 4), (ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0xb3, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x101, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x100, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xf3, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xdc, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xb3, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xb2, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x101, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x100, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xf3, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xdc, 4), (stack, 0xffffffffffffff60, 8) COPY (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100003d3, 8), (unique, 0x100003d3, 8) INT_AND (unique, 0x100003cb, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100003cb, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000024a, 8) , (const, 0x1, 8), (unique, 0x1000024a, 8) INT_ADD (unique, 0x100001e2, 8) , (const, 0xf, 8), (unique, 0x100001e2, 8) INT_ADD (unique, 0x100000d6, 8) , (unique, 0x100000be, 8), (unique, 0x100000d6, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x27, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x101, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x100, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xf3, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffff68, 8) CAST (unique, 0x10000403, 8), (unique, 0x10000403, 8) INT_OR (unique, 0x10000160, 8) , (unique, 0x10000168, 8), (unique, 0x10000168, 8) INT_ZEXT (register, 0x0, 4), (unique, 0x10000160, 8) INT_AND (unique, 0x100003fb, 8) , (const, 0xffffffff00000000, 8), (unique, 0x100003fb, 8) CAST (stack, 0xffffffffffffff68, 8), (register, 0x0, 4) CALL (ram, 0x1e5910, 8), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xdc, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xb3, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffff68, 8) COPY (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x101, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x100, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xdc, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb2, 4)]
[(unique, 0x10000343, 8) COPY (stack, 0xffffffffffffff70, 8), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x101, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x100, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xf3, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xdc, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xb3, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xb2, 4)]
[ ---  CBRANCH (ram, 0x23a39f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000041b, 8), (unique, 0x1000041b, 8) CALL (ram, 0x239b00, 8) , (unique, 0x10000333, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x10, 8), (unique, 0x10000333, 8) COPY (stack, 0xffffffffffffff60, 8), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xf3, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xf3, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xdc, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xdc, 4), (stack, 0xffffffffffffff60, 8) COPY (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100003d3, 8), (unique, 0x100003d3, 8) INT_AND (unique, 0x100003cb, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100003cb, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000024a, 8) , (const, 0x1, 8), (unique, 0x1000024a, 8) INT_ADD (unique, 0x100001e2, 8) , (const, 0xf, 8), (unique, 0x100001e2, 8) INT_ADD (unique, 0x100000d6, 8) , (unique, 0x100000be, 8), (unique, 0x100000d6, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x27, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xb3, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xb2, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff80, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000423, 8) , (const, 0x23a38e, 8), (unique, 0x10000423, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000272, 8) , (const, 0x1, 8), (unique, 0x10000272, 8) INT_ADD (unique, 0x1000020a, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x0, 4) CALL (ram, 0x239d20, 8) , (register, 0x0, 8) , (unique, 0x10000343, 8) , (register, 0x30, 8) , (register, 0x80, 8) , (register, 0x8, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000042b, 8) , (const, 0x23a39f, 8), (unique, 0x1000042b, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000027a, 8) , (const, 0x1, 8), (unique, 0x1000027a, 8) INT_ADD (unique, 0x10000212, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x122, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x119, 4)]
[(ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0x122, 4), (ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0x119, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x122, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x121, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x119, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x118, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x122, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x121, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x119, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x118, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x122, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x121, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x119, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x118, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x122, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x121, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x119, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x118, 4), (stack, 0xffffffffffffff70, 8) COPY (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x122, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x121, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x119, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x118, 4)]
[ ---  CALL (ram, 0x17e250, 8) , (unique, 0x1000034b, 8), (unique, 0x1000034b, 8) COPY (stack, 0xffffffffffffff70, 8), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x119, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x118, 4), (stack, 0xffffffffffffff70, 8) COPY (register, 0x0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000433, 8) , (const, 0x23a3aa, 8), (unique, 0x10000433, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000282, 8) , (const, 0x1, 8), (unique, 0x10000282, 8) INT_ADD (unique, 0x1000021a, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x129, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0x129, 4), (ram, 0x4eafb8, 8) MULTIEQUAL (ram, 0x4eafb8, 8) , (ram, 0x4eafb8, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x129, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x128, 4), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x129, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x128, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x129, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x128, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x129, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x128, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x129, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x128, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x216c00, 8) , (stack, 0xffffffffffffff68, 4), (stack, 0xffffffffffffff68, 4) SUBPIECE (stack, 0xffffffffffffff68, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[ ---  BRANCH (ram, 0x23a2ba, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(ram, 0x4eafb8, 8) MULTIEQUAL (ram, 0x4eafb8, 8) , (ram, 0x4eafb8, 8) , (ram, 0x4eafb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000353, 8) , (unique, 0x1000035b, 8) , (unique, 0x10000363, 8)]
[(register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(ram, 0x4eafb8, 8) MULTIEQUAL (ram, 0x4eafb8, 8) , (ram, 0x4eafb8, 8) , (ram, 0x4eafb8, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x0, 4) COPY (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x23a414, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000043b, 8), (unique, 0x1000043b, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eafb8, 8) COPY (ram, 0x4eafb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000443, 8) , (unique, 0x10000172, 8), (unique, 0x10000443, 8) CAST (register, 0x20, 8), (unique, 0x10000172, 8) PTRSUB (const, 0x0, 8) , (const, 0x23a419, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x9a, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x99, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x9a, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x99, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x9a, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x99, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x9a, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x99, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x99, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eafb8, 8) COPY (ram, 0x4eafb8, 8), (ram, 0x4eafb8, 8) INDIRECT (ram, 0x4eafb8, 8) , (const, 0x9a, 4)]
[ ---  RETURN (const, 0x1, 4)]
