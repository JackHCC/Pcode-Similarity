[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[(unique, 0x10000084, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x135db9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x1000008c, 8) COPY (unique, 0x3800, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000084, 8) , (unique, 0x1000008c, 8)]
[ ---  CBRANCH (ram, 0x135e08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x135ddb, 1)]
[(unique, 0x10000035, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[(unique, 0x10000094, 8) COPY (unique, 0x1000009c, 8), (unique, 0x1000009c, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000006c, 8), (unique, 0x1000006c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4d, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x4d, 4), (stack, 0xffffffffffffffc0, 4) MULTIEQUAL (unique, 0x10000035, 4) , (stack, 0xffffffffffffffc0, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x4d, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (unique, 0x10000094, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x4d, 4)]
[ ---  CBRANCH (ram, 0x135dfb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x135e10, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x135dfb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000074, 8) , (stack, 0xffffffffffffffd8, 8), (unique, 0x10000074, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 4), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_AND (stack, 0xffffffffffffffe0, 4) , (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
