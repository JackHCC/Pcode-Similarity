[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002cf, 8), (unique, 0x100002cf, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x100002b7, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4af420, 8)]
[ ---  CBRANCH (ram, 0x47856c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x20, 4)]
[(unique, 0x100002bf, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4af3e0, 8)]
[ ---  CBRANCH (ram, 0x47856c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x30, 4)]
[(unique, 0x1000002d, 16) INT_ADD (unique, 0x100001cf, 16) , (unique, 0x10000045, 12), (unique, 0x100001cf, 16) INT_LEFT (unique, 0x100001bf, 16) , (const, 0x60, 16), (unique, 0x100001bf, 16) INT_SEXT (register, 0x30, 4), (unique, 0x10000045, 12) INT_ADD (unique, 0x100001b3, 12) , (unique, 0x1000003d, 8), (unique, 0x100001b3, 12) INT_LEFT (unique, 0x100001a7, 12) , (const, 0x40, 12), (unique, 0x100001a7, 12) INT_SEXT (register, 0x30, 4), (unique, 0x1000003d, 8) INT_ADD (unique, 0x1000019f, 8) , (register, 0x30, 4), (unique, 0x1000019f, 8) INT_LEFT (unique, 0x10000197, 8) , (const, 0x20, 8), (unique, 0x10000197, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000051, 16) INT_ADD (unique, 0x10000217, 16) , (unique, 0x10000069, 12), (unique, 0x10000217, 16) INT_LEFT (unique, 0x10000207, 16) , (const, 0x60, 16), (unique, 0x10000207, 16) INT_SEXT (register, 0x30, 4), (unique, 0x10000069, 12) INT_ADD (unique, 0x100001fb, 12) , (unique, 0x10000061, 8), (unique, 0x100001fb, 12) INT_LEFT (unique, 0x100001ef, 12) , (const, 0x40, 12), (unique, 0x100001ef, 12) INT_SEXT (register, 0x30, 4), (unique, 0x10000061, 8) INT_ADD (unique, 0x100001e7, 8) , (register, 0x30, 4), (unique, 0x100001e7, 8) INT_LEFT (unique, 0x100001df, 8) , (const, 0x20, 8), (unique, 0x100001df, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000075, 16) INT_ADD (unique, 0x1000025f, 16) , (unique, 0x1000008d, 12), (unique, 0x1000025f, 16) INT_LEFT (unique, 0x1000024f, 16) , (const, 0x60, 16), (unique, 0x1000024f, 16) INT_SEXT (register, 0x30, 4), (unique, 0x1000008d, 12) INT_ADD (unique, 0x10000243, 12) , (unique, 0x10000085, 8), (unique, 0x10000243, 12) INT_LEFT (unique, 0x10000237, 12) , (const, 0x40, 12), (unique, 0x10000237, 12) INT_SEXT (register, 0x30, 4), (unique, 0x10000085, 8) INT_ADD (unique, 0x1000022f, 8) , (register, 0x30, 4), (unique, 0x1000022f, 8) INT_LEFT (unique, 0x10000227, 8) , (const, 0x20, 8), (unique, 0x10000227, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000099, 16) INT_ADD (unique, 0x100002a7, 16) , (unique, 0x100000b1, 12), (unique, 0x100002a7, 16) INT_LEFT (unique, 0x10000297, 16) , (const, 0x60, 16), (unique, 0x10000297, 16) INT_SEXT (register, 0x30, 4), (unique, 0x100000b1, 12) INT_ADD (unique, 0x1000028b, 12) , (unique, 0x100000a9, 8), (unique, 0x1000028b, 12) INT_LEFT (unique, 0x1000027f, 12) , (const, 0x40, 12), (unique, 0x1000027f, 12) INT_SEXT (register, 0x30, 4), (unique, 0x100000a9, 8) INT_ADD (unique, 0x10000277, 8) , (register, 0x30, 4), (unique, 0x10000277, 8) INT_LEFT (unique, 0x1000026f, 8) , (const, 0x20, 8), (unique, 0x1000026f, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x100002c7, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (unique, 0x1000002d, 16)]
[(stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16) , (unique, 0x10000051, 16)]
[(stack, 0xffffffffffffff88, 16) MULTIEQUAL (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16) , (unique, 0x10000075, 16)]
[(stack, 0xffffffffffffff78, 16) MULTIEQUAL (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16) , (unique, 0x10000099, 16)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100002b7, 8) , (unique, 0x100002bf, 8) , (unique, 0x100002c7, 8)]
[ ---  CBRANCH (ram, 0x4785cd, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x10, 4) , (const, 0x10, 4)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x4785b0, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16)]
[(stack, 0xffffffffffffff88, 16) MULTIEQUAL (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16)]
[(stack, 0xffffffffffffff78, 16) MULTIEQUAL (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x478590, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002d7, 8), (unique, 0x100002d7, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x96, 4)]
[(stack, 0xffffffffffffff78, 16) INDIRECT (stack, 0xffffffffffffff78, 16) , (const, 0x96, 4)]
[(stack, 0xffffffffffffff88, 16) INDIRECT (stack, 0xffffffffffffff88, 16) , (const, 0x96, 4)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x96, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x96, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x96, 4)]
[ ---  CALL (ram, 0x41b380, 8)]
[ ---  BRANCH (ram, 0x478590, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff78, 16) INDIRECT (stack, 0xffffffffffffff78, 16) , (const, 0x9f, 4), (stack, 0xffffffffffffff78, 16) MULTIEQUAL (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16)]
[(stack, 0xffffffffffffff88, 16) INDIRECT (stack, 0xffffffffffffff88, 16) , (const, 0x9f, 4), (stack, 0xffffffffffffff88, 16) MULTIEQUAL (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x9f, 4), (stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x9f, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xa8, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002df, 8), (unique, 0x100002df, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x478606, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xa8, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002df, 8), (unique, 0x100002df, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x4785d0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0xf, 4) , (register, 0x18, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffff0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16)]
[(stack, 0xffffffffffffff88, 16) MULTIEQUAL (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16)]
[(stack, 0xffffffffffffff78, 16) MULTIEQUAL (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x478606, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x478628, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002e7, 8), (unique, 0x100002e7, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13a, 4)]
[(stack, 0xffffffffffffff78, 16) INDIRECT (stack, 0xffffffffffffff78, 16) , (const, 0x13a, 4)]
[(stack, 0xffffffffffffff88, 16) INDIRECT (stack, 0xffffffffffffff88, 16) , (const, 0x13a, 4)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x13a, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x13a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x13a, 4)]
[ ---  CALL (ram, 0x41b380, 8)]
[ ---  BRANCH (ram, 0x4785f7, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x100, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff78, 16) INDIRECT (stack, 0xffffffffffffff78, 16) , (const, 0x100, 4), (stack, 0xffffffffffffff78, 16) MULTIEQUAL (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16)]
[(stack, 0xffffffffffffff88, 16) INDIRECT (stack, 0xffffffffffffff88, 16) , (const, 0x100, 4), (stack, 0xffffffffffffff88, 16) MULTIEQUAL (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x100, 4), (stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x100, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x100, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xa8, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002ef, 8), (unique, 0x100002ef, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (register, 0x10, 8) INT_SEXT (register, 0x18, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16)]
[(stack, 0xffffffffffffff88, 16) MULTIEQUAL (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16)]
[(stack, 0xffffffffffffff78, 16) MULTIEQUAL (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x47862f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002f7, 8), (unique, 0x100002f7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff78, 16) INDIRECT (stack, 0xffffffffffffff78, 16) , (const, 0x135, 4)]
[(stack, 0xffffffffffffff88, 16) INDIRECT (stack, 0xffffffffffffff88, 16) , (const, 0x135, 4)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x135, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x135, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x135, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8)]
