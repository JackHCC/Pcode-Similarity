[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000140, 8), (unique, 0x10000140, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffe0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffe8, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x10000118, 8) COPY (register, 0x38, 8)]
[(unique, 0x1000012c, 4) COPY (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x23118d, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x2311a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x23114f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ef270, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe8, 4)]
[(ram, 0x4ef270, 4) INDIRECT (ram, 0x4ef270, 4) , (const, 0xe8, 4)]
[(ram, 0x4ef278, 8) INDIRECT (ram, 0x4ef278, 8) , (const, 0xe8, 4)]
[(ram, 0x4ef280, 8) INDIRECT (ram, 0x4ef280, 8) , (const, 0xe8, 4)]
[(ram, 0x4ef288, 8) INDIRECT (ram, 0x4ef288, 8) , (const, 0xe8, 4)]
[(ram, 0x4ef290, 8) INDIRECT (ram, 0x4ef290, 8) , (const, 0xe8, 4)]
[(ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0xe8, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xe8, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (unique, 0x10000118, 8) , (const, 0xe8, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xe8, 4)]
[(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0xe8, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (unique, 0x1000012c, 4) , (const, 0xe8, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xe8, 4)]
[ ---  CBRANCH (ram, 0x23122c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x266450, 8) , (unique, 0x100000cf, 8) , (const, 0x80000001, 8), (unique, 0x100000cf, 8) COPY (const, 0x2b37e6, 8)]
[(ram, 0x4ef290, 8) INDIRECT (ram, 0x4ef290, 8) , (const, 0xf8, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xfe, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf8, 4)]
[(ram, 0x4ef270, 4) INDIRECT (ram, 0x4ef270, 4) , (const, 0xfe, 4), (ram, 0x4ef270, 4) INDIRECT (ram, 0x4ef270, 4) , (const, 0xf8, 4)]
[(ram, 0x4ef278, 8) INDIRECT (ram, 0x4ef278, 8) , (const, 0xfe, 4), (ram, 0x4ef278, 8) INDIRECT (register, 0x0, 8) , (const, 0xf8, 4)]
[(ram, 0x4ef280, 8) INDIRECT (ram, 0x4ef280, 8) , (const, 0xfe, 4), (ram, 0x4ef280, 8) INDIRECT (ram, 0x4ef280, 8) , (const, 0xf8, 4)]
[(ram, 0x4ef288, 8) INDIRECT (ram, 0x4ef288, 8) , (const, 0xfe, 4), (ram, 0x4ef288, 8) INDIRECT (ram, 0x4ef288, 8) , (const, 0xf8, 4)]
[(ram, 0x4ef290, 8) INDIRECT (register, 0x0, 8) , (const, 0xfe, 4), (register, 0x0, 8) CAST (unique, 0x10000148, 8), (unique, 0x10000148, 8) CALL (ram, 0x266520, 8) , (register, 0x0, 8) , (unique, 0x100000d7, 8), (unique, 0x100000d7, 8) COPY (const, 0x2b6899, 8)]
[(ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0xfe, 4), (ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0xf8, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xfe, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xf8, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xf8, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xf8, 4)]
[(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0xfe, 4), (stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0xf8, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0xfe, 4), (stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0xf8, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xfe, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xf8, 4)]
[ ---  CBRANCH (ram, 0x231238, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x266520, 8) , (ram, 0x4ef278, 8) , (unique, 0x100000df, 8), (unique, 0x100000df, 8) COPY (const, 0x2b68ab, 8), (ram, 0x4ef278, 8) INDIRECT (register, 0x0, 8) , (const, 0xf8, 4)]
[(ram, 0x4ef290, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x231204, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10e, 4)]
[(ram, 0x4ef270, 4) INDIRECT (ram, 0x4ef270, 4) , (const, 0x10e, 4)]
[(ram, 0x4ef278, 8) INDIRECT (ram, 0x4ef278, 8) , (const, 0x10e, 4)]
[(ram, 0x4ef280, 8) INDIRECT (ram, 0x4ef280, 8) , (const, 0x10e, 4)]
[(ram, 0x4ef288, 8) INDIRECT (register, 0x0, 8) , (const, 0x10e, 4)]
[(ram, 0x4ef290, 8) INDIRECT (ram, 0x4ef290, 8) , (const, 0x10e, 4), (ram, 0x4ef290, 8) MULTIEQUAL (ram, 0x4ef290, 8) , (ram, 0x4ef290, 8)]
[(ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0x10e, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x10e, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x10e, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x10e, 4)]
[(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x10e, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0x10e, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x10e, 4)]
[ ---  CBRANCH (ram, 0x231225, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000150, 8), (unique, 0x10000150, 8) CALL (ram, 0x266520, 8) , (ram, 0x4ef278, 8) , (unique, 0x100000e7, 8), (unique, 0x100000e7, 8) COPY (const, 0x2b68b9, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x230fe0, 8)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffffec, 4) MULTIEQUAL (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4)]
[(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffd8, 8) MULTIEQUAL (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0870, 8) MULTIEQUAL (ram, 0x4f0870, 8) , (ram, 0x4f0870, 8) , (ram, 0x4f0870, 8)]
[(ram, 0x4ef290, 8) MULTIEQUAL (ram, 0x4ef290, 8) , (ram, 0x4ef290, 8) , (ram, 0x4ef290, 8)]
[(ram, 0x4ef288, 8) MULTIEQUAL (ram, 0x4ef288, 8) , (ram, 0x4ef288, 8) , (ram, 0x4ef288, 8)]
[(ram, 0x4ef280, 8) MULTIEQUAL (ram, 0x4ef280, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4ef278, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4ef278, 8) , (ram, 0x4ef278, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ef270, 4) INT_OR (ram, 0x4ef270, 4) , (const, 0x2, 4), (ram, 0x4ef270, 4) MULTIEQUAL (ram, 0x4ef270, 4) , (ram, 0x4ef270, 4) , (ram, 0x4ef270, 4)]
[ ---  BRANCH (ram, 0x23114f, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x65, 4)]
[(ram, 0x4ef270, 4) INDIRECT (ram, 0x4ef270, 4) , (const, 0x65, 4)]
[(ram, 0x4ef278, 8) INDIRECT (ram, 0x4ef278, 8) , (const, 0x65, 4)]
[(ram, 0x4ef280, 8) INDIRECT (ram, 0x4ef280, 8) , (const, 0x65, 4)]
[(ram, 0x4ef288, 8) INDIRECT (ram, 0x4ef288, 8) , (const, 0x65, 4)]
[(ram, 0x4ef290, 8) INDIRECT (ram, 0x4ef290, 8) , (const, 0x65, 4)]
[(ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0x65, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x65, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (unique, 0x10000118, 8) , (const, 0x65, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x65, 4)]
[(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x65, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (unique, 0x1000012c, 4) , (const, 0x65, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x65, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x100000ef, 8) , (unique, 0x100000c7, 8), (unique, 0x100000ef, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef270, 8), (unique, 0x100000c7, 8) PTRSUB (const, 0x0, 8) , (const, 0x231060, 8), (register, 0x0, 8) CAST (unique, 0x10000160, 8), (unique, 0x10000160, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000158, 8), (unique, 0x10000158, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0870, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0870, 8) , (const, 0x11, 4)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffffec, 4) MULTIEQUAL (stack, 0xffffffffffffffec, 4) , (unique, 0x1000012c, 4) , (stack, 0xffffffffffffffec, 4)]
[(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffd8, 8) MULTIEQUAL (stack, 0xffffffffffffffd8, 8) , (unique, 0x10000118, 8) , (stack, 0xffffffffffffffd8, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0870, 8) MULTIEQUAL (ram, 0x4f0870, 8) , (ram, 0x4f0870, 8) , (ram, 0x4f0870, 8)]
[(ram, 0x4ef288, 8) MULTIEQUAL (ram, 0x4ef288, 8) , (ram, 0x4ef288, 8) , (ram, 0x4ef288, 8)]
[(ram, 0x4ef280, 8) MULTIEQUAL (ram, 0x4ef280, 8) , (ram, 0x4ef280, 8) , (ram, 0x4ef280, 8)]
[(ram, 0x4ef278, 8) MULTIEQUAL (ram, 0x4ef278, 8) , (ram, 0x4ef278, 8) , (ram, 0x4ef278, 8)]
[(ram, 0x4ef270, 4) MULTIEQUAL (ram, 0x4ef270, 4) , (ram, 0x4ef270, 4) , (ram, 0x4ef270, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x23118d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ef290, 8) , (const, 0x0, 8), (ram, 0x4ef290, 8) MULTIEQUAL (ram, 0x4ef290, 8) , (ram, 0x4ef290, 8) , (ram, 0x4ef290, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x76, 4)]
[(ram, 0x4ef270, 4) INDIRECT (ram, 0x4ef270, 4) , (const, 0x76, 4)]
[(ram, 0x4ef278, 8) INDIRECT (ram, 0x4ef278, 8) , (const, 0x76, 4)]
[(ram, 0x4ef280, 8) INDIRECT (ram, 0x4ef280, 8) , (const, 0x76, 4)]
[(ram, 0x4ef288, 8) INDIRECT (ram, 0x4ef288, 8) , (const, 0x76, 4)]
[(ram, 0x4ef290, 8) INDIRECT (ram, 0x4ef290, 8) , (const, 0x76, 4)]
[(ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0x76, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x76, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x76, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x76, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0x76, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x76, 4)]
[ ---  CALLIND (ram, 0x4ef290, 8) , (unique, 0x100000bf, 8) , (unique, 0x3100, 8), (unique, 0x100000bf, 8) PTRSUB (const, 0x0, 8) , (const, 0x230ff0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[(unique, 0x1000013c, 4) COPY (stack, 0xffffffffffffffe8, 4), (stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x76, 4)]
[ ---  CBRANCH (ram, 0x231188, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (stack, 0xffffffffffffffe8, 4), (stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x76, 4)]
[ ---  CBRANCH (ram, 0x23118f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000168, 8), (unique, 0x10000168, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffd8, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x10, 8) INT_SEXT (stack, 0xffffffffffffffe8, 4)]
[(unique, 0x10000134, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ADD (stack, 0xffffffffffffffe8, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x23118f, 1)]
[ ---  CBRANCH (ram, 0x23118f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe8, 4) , (const, 0xffffffff, 4)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffffec, 4) MULTIEQUAL (unique, 0x1000012c, 4) , (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4)]
[(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffd8, 8) MULTIEQUAL (unique, 0x10000118, 8) , (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0870, 8) MULTIEQUAL (ram, 0x4f0870, 8) , (ram, 0x4f0870, 8) , (ram, 0x4f0870, 8)]
[(ram, 0x4ef290, 8) MULTIEQUAL (ram, 0x4ef290, 8) , (ram, 0x4ef290, 8) , (ram, 0x4ef290, 8)]
[(ram, 0x4ef288, 8) MULTIEQUAL (ram, 0x4ef288, 8) , (ram, 0x4ef288, 8) , (ram, 0x4ef288, 8)]
[(ram, 0x4ef280, 8) MULTIEQUAL (ram, 0x4ef280, 8) , (ram, 0x4ef280, 8) , (ram, 0x4ef280, 8)]
[(ram, 0x4ef278, 8) MULTIEQUAL (ram, 0x4ef278, 8) , (ram, 0x4ef278, 8) , (ram, 0x4ef278, 8)]
[(ram, 0x4ef270, 4) MULTIEQUAL (ram, 0x4ef270, 4) , (ram, 0x4ef270, 4) , (ram, 0x4ef270, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffec, 4) MULTIEQUAL (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4)]
[(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffd8, 8) MULTIEQUAL (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0870, 8) MULTIEQUAL (ram, 0x4f0870, 8) , (ram, 0x4f0870, 8) , (ram, 0x4f0870, 8) , (ram, 0x4f0870, 8)]
[(ram, 0x4ef290, 8) MULTIEQUAL (ram, 0x4ef290, 8) , (ram, 0x4ef290, 8) , (ram, 0x4ef290, 8) , (ram, 0x4ef290, 8)]
[(ram, 0x4ef288, 8) MULTIEQUAL (ram, 0x4ef288, 8) , (ram, 0x4ef288, 8) , (ram, 0x4ef288, 8) , (ram, 0x4ef288, 8)]
[(ram, 0x4ef280, 8) MULTIEQUAL (ram, 0x4ef280, 8) , (ram, 0x4ef280, 8) , (ram, 0x4ef280, 8) , (ram, 0x4ef280, 8)]
[(ram, 0x4ef278, 8) MULTIEQUAL (ram, 0x4ef278, 8) , (ram, 0x4ef278, 8) , (ram, 0x4ef278, 8) , (ram, 0x4ef278, 8)]
[(ram, 0x4ef270, 4) MULTIEQUAL (ram, 0x4ef270, 4) , (ram, 0x4ef270, 4) , (ram, 0x4ef270, 4) , (ram, 0x4ef270, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x1000013c, 4) , (unique, 0x10000134, 4) , (unique, 0x1000013c, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x231245, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000170, 8), (unique, 0x10000170, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(ram, 0x4ef270, 4) COPY (ram, 0x4ef270, 4)]
[(ram, 0x4ef278, 8) COPY (ram, 0x4ef278, 8)]
[(ram, 0x4ef280, 8) COPY (ram, 0x4ef280, 8)]
[(ram, 0x4ef288, 8) COPY (ram, 0x4ef288, 8)]
[(ram, 0x4ef290, 8) COPY (ram, 0x4ef290, 8)]
[(ram, 0x4f0870, 8) COPY (ram, 0x4f0870, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xbf, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xbf, 4)]
[(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0xbf, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0xbf, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xbf, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ef270, 4) COPY (ram, 0x4ef270, 4), (ram, 0x4ef270, 4) INDIRECT (ram, 0x4ef270, 4) , (const, 0xbf, 4)]
[(ram, 0x4ef278, 8) COPY (ram, 0x4ef278, 8), (ram, 0x4ef278, 8) INDIRECT (ram, 0x4ef278, 8) , (const, 0xbf, 4)]
[(ram, 0x4ef280, 8) COPY (ram, 0x4ef280, 8), (ram, 0x4ef280, 8) INDIRECT (ram, 0x4ef280, 8) , (const, 0xbf, 4)]
[(ram, 0x4ef288, 8) COPY (ram, 0x4ef288, 8), (ram, 0x4ef288, 8) INDIRECT (ram, 0x4ef288, 8) , (const, 0xbf, 4)]
[(ram, 0x4ef290, 8) COPY (ram, 0x4ef290, 8), (ram, 0x4ef290, 8) INDIRECT (ram, 0x4ef290, 8) , (const, 0xbf, 4)]
[(ram, 0x4f0870, 8) COPY (ram, 0x4f0870, 8), (ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0xbf, 4)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xbf, 4)]
[ ---  RETURN (const, 0x1, 4)]
