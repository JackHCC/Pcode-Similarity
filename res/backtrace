[(stack, 0xffffffffffffffe0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffe8, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x2152b5, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x30, 4)]
[(unique, 0x10000107, 8) COPY (register, 0x38, 8)]
[(unique, 0x1000010f, 4) COPY (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x2152c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8790, 4) , (const, 0x0, 4)]
[(ram, 0x4c7170, 4) INDIRECT (ram, 0x4c7170, 4) , (const, 0x10c, 4)]
[(ram, 0x4c7178, 8) INDIRECT (ram, 0x4c7178, 8) , (const, 0x10c, 4)]
[(ram, 0x4c7180, 8) INDIRECT (ram, 0x4c7180, 8) , (const, 0x10c, 4)]
[(ram, 0x4c7188, 8) INDIRECT (ram, 0x4c7188, 8) , (const, 0x10c, 4)]
[(ram, 0x4c7190, 8) INDIRECT (ram, 0x4c7190, 8) , (const, 0x10c, 4)]
[(ram, 0x4c8718, 8) INDIRECT (ram, 0x4c8718, 8) , (const, 0x10c, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (unique, 0x10000107, 8) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (unique, 0x1000010f, 4) , (const, 0x10c, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x100000d3, 8) , (unique, 0x100000ab, 8), (unique, 0x100000d3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7170, 8), (unique, 0x100000ab, 8) PTRSUB (const, 0x0, 8) , (const, 0x2151b0, 8), (register, 0x0, 8) CAST (unique, 0x1000011b, 8), (unique, 0x1000011b, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000113, 8), (unique, 0x10000113, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8718, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8718, 8) , (const, 0x11, 4)]
[ ---  BRANCH (ram, 0x215276, 1)]
[ ---  CBRANCH (ram, 0x2152f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7170, 4) , (const, 0x0, 4)]
[(ram, 0x4c7170, 4) INDIRECT (ram, 0x4c7170, 4) , (const, 0xa7, 4)]
[(ram, 0x4c7178, 8) INDIRECT (ram, 0x4c7178, 8) , (const, 0xa7, 4)]
[(ram, 0x4c7180, 8) INDIRECT (ram, 0x4c7180, 8) , (const, 0xa7, 4)]
[(ram, 0x4c7188, 8) INDIRECT (ram, 0x4c7188, 8) , (const, 0xa7, 4)]
[(ram, 0x4c7190, 8) INDIRECT (ram, 0x4c7190, 8) , (const, 0xa7, 4)]
[(ram, 0x4c8718, 8) INDIRECT (ram, 0x4c8718, 8) , (const, 0xa7, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (unique, 0x10000107, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (unique, 0x1000010f, 4) , (const, 0xa7, 4)]
[ ---  CBRANCH (ram, 0x21536a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x242e40, 8) , (unique, 0x100000b3, 8) , (const, 0x80000001, 8), (unique, 0x100000b3, 8) COPY (const, 0x28bec6, 8)]
[(ram, 0x4c7190, 8) INDIRECT (ram, 0x4c7190, 8) , (const, 0xb7, 4)]
[(ram, 0x4c7170, 4) INDIRECT (ram, 0x4c7170, 4) , (const, 0xbd, 4), (ram, 0x4c7170, 4) INDIRECT (ram, 0x4c7170, 4) , (const, 0xb7, 4)]
[(ram, 0x4c7178, 8) INDIRECT (ram, 0x4c7178, 8) , (const, 0xbd, 4), (ram, 0x4c7178, 8) INDIRECT (register, 0x0, 8) , (const, 0xb7, 4)]
[(ram, 0x4c7180, 8) INDIRECT (ram, 0x4c7180, 8) , (const, 0xbd, 4), (ram, 0x4c7180, 8) INDIRECT (ram, 0x4c7180, 8) , (const, 0xb7, 4)]
[(ram, 0x4c7188, 8) INDIRECT (ram, 0x4c7188, 8) , (const, 0xbd, 4), (ram, 0x4c7188, 8) INDIRECT (ram, 0x4c7188, 8) , (const, 0xb7, 4)]
[(ram, 0x4c7190, 8) INDIRECT (register, 0x0, 8) , (const, 0xbd, 4), (register, 0x0, 8) CAST (unique, 0x10000123, 8), (unique, 0x10000123, 8) CALL (ram, 0x242ee0, 8) , (register, 0x0, 8) , (unique, 0x100000bb, 8), (unique, 0x100000bb, 8) COPY (const, 0x28ebac, 8)]
[(ram, 0x4c8718, 8) INDIRECT (ram, 0x4c8718, 8) , (const, 0xbd, 4), (ram, 0x4c8718, 8) INDIRECT (ram, 0x4c8718, 8) , (const, 0xb7, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xbd, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xb7, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xb7, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xb7, 4)]
[(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0xbd, 4), (stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0xb7, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0xbd, 4), (stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0xb7, 4)]
[ ---  CBRANCH (ram, 0x215380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x242ee0, 8) , (ram, 0x4c7178, 8) , (unique, 0x100000c3, 8), (unique, 0x100000c3, 8) COPY (const, 0x28ebbe, 8), (ram, 0x4c7178, 8) INDIRECT (register, 0x0, 8) , (const, 0xb7, 4)]
[(ram, 0x4c7190, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x215342, 1)]
[(ram, 0x4c7170, 4) INDIRECT (ram, 0x4c7170, 4) , (const, 0xcd, 4)]
[(ram, 0x4c7178, 8) INDIRECT (ram, 0x4c7178, 8) , (const, 0xcd, 4)]
[(ram, 0x4c7180, 8) INDIRECT (ram, 0x4c7180, 8) , (const, 0xcd, 4)]
[(ram, 0x4c7188, 8) INDIRECT (register, 0x0, 8) , (const, 0xcd, 4)]
[(ram, 0x4c7190, 8) INDIRECT (ram, 0x4c7190, 8) , (const, 0xcd, 4), (ram, 0x4c7190, 8) MULTIEQUAL (ram, 0x4c7190, 8) , (ram, 0x4c7190, 8)]
[(ram, 0x4c8718, 8) INDIRECT (ram, 0x4c8718, 8) , (const, 0xcd, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0xcd, 4)]
[ ---  CBRANCH (ram, 0x215363, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000012b, 8), (unique, 0x1000012b, 8) CALL (ram, 0x242ee0, 8) , (ram, 0x4c7178, 8) , (unique, 0x100000cb, 8), (unique, 0x100000cb, 8) COPY (const, 0x28ebcc, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x215110, 8)]
[(stack, 0xffffffffffffffec, 4) MULTIEQUAL (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4)]
[(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffd8, 8) MULTIEQUAL (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8718, 8) MULTIEQUAL (ram, 0x4c8718, 8) , (ram, 0x4c8718, 8) , (ram, 0x4c8718, 8)]
[(ram, 0x4c7190, 8) MULTIEQUAL (ram, 0x4c7190, 8) , (ram, 0x4c7190, 8) , (ram, 0x4c7190, 8)]
[(ram, 0x4c7188, 8) MULTIEQUAL (ram, 0x4c7188, 8) , (ram, 0x4c7188, 8) , (ram, 0x4c7188, 8)]
[(ram, 0x4c7180, 8) MULTIEQUAL (ram, 0x4c7180, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c7178, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4c7178, 8) , (ram, 0x4c7178, 8)]
[(ram, 0x4c7170, 4) INT_OR (ram, 0x4c7170, 4) , (const, 0x2, 4), (ram, 0x4c7170, 4) MULTIEQUAL (ram, 0x4c7170, 4) , (ram, 0x4c7170, 4) , (ram, 0x4c7170, 4)]
[ ---  BRANCH (ram, 0x215276, 1)]
[(stack, 0xffffffffffffffec, 4) MULTIEQUAL (unique, 0x1000010f, 4) , (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4)]
[(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffd8, 8) MULTIEQUAL (unique, 0x10000107, 8) , (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8718, 8) MULTIEQUAL (ram, 0x4c8718, 8) , (ram, 0x4c8718, 8) , (ram, 0x4c8718, 8)]
[(ram, 0x4c7188, 8) MULTIEQUAL (ram, 0x4c7188, 8) , (ram, 0x4c7188, 8) , (ram, 0x4c7188, 8)]
[(ram, 0x4c7180, 8) MULTIEQUAL (ram, 0x4c7180, 8) , (ram, 0x4c7180, 8) , (ram, 0x4c7180, 8)]
[(ram, 0x4c7178, 8) MULTIEQUAL (ram, 0x4c7178, 8) , (ram, 0x4c7178, 8) , (ram, 0x4c7178, 8)]
[(ram, 0x4c7170, 4) MULTIEQUAL (ram, 0x4c7170, 4) , (ram, 0x4c7170, 4) , (ram, 0x4c7170, 4)]
[ ---  CBRANCH (ram, 0x2152b5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7190, 8) , (const, 0x0, 8), (ram, 0x4c7190, 8) MULTIEQUAL (ram, 0x4c7190, 8) , (ram, 0x4c7190, 8) , (ram, 0x4c7190, 8)]
[(ram, 0x4c7170, 4) INDIRECT (ram, 0x4c7170, 4) , (const, 0x4e, 4)]
[(ram, 0x4c7178, 8) INDIRECT (ram, 0x4c7178, 8) , (const, 0x4e, 4)]
[(ram, 0x4c7180, 8) INDIRECT (ram, 0x4c7180, 8) , (const, 0x4e, 4)]
[(ram, 0x4c7188, 8) INDIRECT (ram, 0x4c7188, 8) , (const, 0x4e, 4)]
[(ram, 0x4c7190, 8) INDIRECT (ram, 0x4c7190, 8) , (const, 0x4e, 4)]
[(ram, 0x4c8718, 8) INDIRECT (ram, 0x4c8718, 8) , (const, 0x4e, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x4e, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x4e, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x4e, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0x4e, 4)]
[ ---  CALLIND (ram, 0x4c7190, 8) , (unique, 0x100000a3, 8) , (unique, 0x3100, 8), (unique, 0x100000a3, 8) PTRSUB (const, 0x0, 8) , (const, 0x215120, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[ ---  CBRANCH (ram, 0x2152b0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (stack, 0xffffffffffffffe8, 4) , (const, 0x2, 4), (stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x4e, 4)]
[ ---  CBRANCH (ram, 0x2152a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe8, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7170, 4) COPY (ram, 0x4c7170, 4)]
[(ram, 0x4c7178, 8) COPY (ram, 0x4c7178, 8)]
[(ram, 0x4c7180, 8) COPY (ram, 0x4c7180, 8)]
[(ram, 0x4c7188, 8) COPY (ram, 0x4c7188, 8)]
[(ram, 0x4c7190, 8) COPY (ram, 0x4c7190, 8)]
[(ram, 0x4c8718, 8) COPY (ram, 0x4c8718, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 4) INT_SUB (stack, 0xffffffffffffffe8, 4) , (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000133, 8), (unique, 0x10000133, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffd8, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x8, 8) INT_SEXT (stack, 0xffffffffffffffe8, 4)]
[(ram, 0x4c7170, 4) COPY (ram, 0x4c7170, 4)]
[(ram, 0x4c7178, 8) COPY (ram, 0x4c7178, 8)]
[(ram, 0x4c7180, 8) COPY (ram, 0x4c7180, 8)]
[(ram, 0x4c7188, 8) COPY (ram, 0x4c7188, 8)]
[(ram, 0x4c7190, 8) COPY (ram, 0x4c7190, 8)]
[(ram, 0x4c8718, 8) COPY (ram, 0x4c8718, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x1000009a, 4), (unique, 0x1000009a, 4) MULTIEQUAL (register, 0x0, 4) , (stack, 0xffffffffffffffe8, 4)]
[(ram, 0x4c7170, 4) COPY (ram, 0x4c7170, 4), (ram, 0x4c7170, 4) MULTIEQUAL (ram, 0x4c7170, 4) , (ram, 0x4c7170, 4)]
[(ram, 0x4c7178, 8) COPY (ram, 0x4c7178, 8), (ram, 0x4c7178, 8) MULTIEQUAL (ram, 0x4c7178, 8) , (ram, 0x4c7178, 8)]
[(ram, 0x4c7180, 8) COPY (ram, 0x4c7180, 8), (ram, 0x4c7180, 8) MULTIEQUAL (ram, 0x4c7180, 8) , (ram, 0x4c7180, 8)]
[(ram, 0x4c7188, 8) COPY (ram, 0x4c7188, 8), (ram, 0x4c7188, 8) MULTIEQUAL (ram, 0x4c7188, 8) , (ram, 0x4c7188, 8)]
[(ram, 0x4c7190, 8) COPY (ram, 0x4c7190, 8), (ram, 0x4c7190, 8) MULTIEQUAL (ram, 0x4c7190, 8) , (ram, 0x4c7190, 8)]
[(ram, 0x4c8718, 8) COPY (ram, 0x4c8718, 8), (ram, 0x4c8718, 8) MULTIEQUAL (ram, 0x4c8718, 8) , (ram, 0x4c8718, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
