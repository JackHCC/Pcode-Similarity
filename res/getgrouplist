[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(register, 0x38, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1c8aba, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (register, 0x38, 8) , (const, 0x5d, 4), (register, 0x38, 8) INT_SEXT (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100000a4, 4) COPY (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x1c8b26, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_LEFT (register, 0x38, 8) , (const, 0x2, 4), (register, 0x38, 8) INT_SEXT (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x74, 4)]
[(unique, 0x10000098, 8) COPY (stack, 0xffffffffffffffd0, 8), (stack, 0xffffffffffffffd0, 8) INDIRECT (register, 0x0, 8) , (const, 0x74, 4)]
[(unique, 0x100000a0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1c87a0, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x20, 8) , (unique, 0x3800, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x1c8afe, 1) , (unique, 0x10000084, 1), (unique, 0x10000084, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x0, 4) CALL (ram, 0x1c87a0, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x20, 8) , (unique, 0x3800, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (register, 0x10, 8) , (stack, 0xffffffffffffffd0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x100000a0, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xb9, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb9, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x10000098, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 4)]
[(unique, 0x100000a8, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1c8b26, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESSEQUAL (register, 0x0, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0x100000ac, 4) COPY (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) MULTIEQUAL (unique, 0x100000a4, 4) , (unique, 0x100000a8, 4) , (unique, 0x100000ac, 4)]
