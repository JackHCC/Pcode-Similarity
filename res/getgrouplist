[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c0, 8), (unique, 0x100000c0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x38, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1e0caa, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (register, 0x38, 8) , (const, 0x6e, 4), (register, 0x38, 8) INT_SEXT (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x6e, 4)]
[(unique, 0x100000b4, 4) COPY (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x1e0d19, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_LEFT (register, 0x38, 8) , (const, 0x2, 4), (register, 0x38, 8) INT_SEXT (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x86, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x86, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x86, 4)]
[(unique, 0x100000a8, 8) COPY (stack, 0xffffffffffffffc8, 8), (stack, 0xffffffffffffffc8, 8) INDIRECT (register, 0x0, 8) , (const, 0x86, 4)]
[(unique, 0x100000b0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e0970, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x1e0cf1, 1) , (unique, 0x10000093, 1), (unique, 0x10000093, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x0, 4) CALL (ram, 0x1e0970, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x10, 8) , (stack, 0xffffffffffffffc8, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x100000b0, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcf, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xcb, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0x100000a8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 4)]
[(unique, 0x100000b8, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1e0d19, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0x100000bc, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0xb0, 4) MULTIEQUAL (unique, 0x100000b4, 4) , (unique, 0x100000b8, 4) , (unique, 0x100000bc, 4)]
[ ---  CBRANCH (ram, 0x1e0d39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c8, 8), (unique, 0x100000c8, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10d, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x10d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x10d, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xb0, 4)]
