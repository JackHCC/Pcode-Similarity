[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0x100000ec, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x224990, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100000f4, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x224990, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2d, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x2d, 4)]
[(ram, 0x4c2f28, 8) INDIRECT (ram, 0x4c2f28, 8) , (const, 0x2d, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x100000fc, 8) , (const, 0x2d, 4), (unique, 0x100000fc, 8) COPY (register, 0x38, 8)]
[(register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (const, 0x2, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x28c5c1, 8)]
[(unique, 0x100000e4, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c2f28, 8) MULTIEQUAL (ram, 0x4c2f28, 8) , (ram, 0x4c2f28, 8) , (ram, 0x4c2f28, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100000e4, 8) , (unique, 0x100000ec, 8) , (unique, 0x100000f4, 8)]
[(register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000104, 8), (unique, 0x10000104, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[ ---  CBRANCH (ram, 0x2249c8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000104, 8), (unique, 0x10000104, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xc3, 4)]
[(ram, 0x4c2f28, 8) INDIRECT (ram, 0x4c2f28, 8) , (const, 0xc3, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xc3, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xc3, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xc3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc3, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000010c, 8), (unique, 0x1000010c, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000092, 8) , (unique, 0x100000a2, 8) , (const, 0x5, 8), (unique, 0x100000a2, 8) COPY (const, 0x28f069, 8), (unique, 0x10000092, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  BRANCH (ram, 0x224946, 1)]
[ ---  CBRANCH (ram, 0x2249a0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x5, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xbb, 4)]
[(ram, 0x4c2f28, 8) INDIRECT (ram, 0x4c2f28, 8) , (const, 0xbb, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xbb, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xbb, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xbb, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xbb, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000011c, 8), (unique, 0x1000011c, 8) CALL (ram, 0x12e620, 8) , (unique, 0x1000008a, 8) , (unique, 0xbd80, 8) , (const, 0x5, 8), (unique, 0x1000008a, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000114, 8), (unique, 0x10000114, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (ram, 0x4c2f28, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x224946, 1)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x57, 4)]
[(ram, 0x4c2f28, 8) INDIRECT (ram, 0x4c2f28, 8) , (const, 0x57, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x57, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x57, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x57, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x57, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000124, 8), (unique, 0x10000124, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000082, 8) , (unique, 0x100000aa, 8) , (const, 0x5, 8), (unique, 0x100000aa, 8) COPY (const, 0x28f081, 8), (unique, 0x10000082, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x1000012c, 8), (unique, 0x1000012c, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000007a, 8), (unique, 0x1000007a, 8) COPY (const, 0x28bea9, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(ram, 0x4c2e68, 8) COPY (ram, 0x4c2e68, 8), (ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x5d, 4), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(ram, 0x4c2f28, 8) COPY (ram, 0x4c2f28, 8), (ram, 0x4c2f28, 8) INDIRECT (ram, 0x4c2f28, 8) , (const, 0x5d, 4), (ram, 0x4c2f28, 8) MULTIEQUAL (ram, 0x4c2f28, 8) , (ram, 0x4c2f28, 8) , (ram, 0x4c2f28, 8)]
[ ---  RETURN (const, 0x0, 8)]
