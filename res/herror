[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000163, 8), (unique, 0x10000163, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2426e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2426e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000016b, 8), (unique, 0x1000016b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae50, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eaf18, 8) INDIRECT (ram, 0x4eaf18, 8) , (const, 0x3b, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x1000015b, 8) , (const, 0x3b, 4), (unique, 0x1000015b, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3b, 4)]
[(register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x2, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (const, 0x2b3ed0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000173, 8), (unique, 0x10000173, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae50, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x3b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3b, 4)]
[(unique, 0x1000008d, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8)]
[(unique, 0x1000009a, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100000a2, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(unique, 0x100000aa, 8) MULTIEQUAL (ram, 0x4eaf18, 8) , (ram, 0x4eaf18, 8)]
[(unique, 0x100000b2, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (register, 0x0, 8)]
[(unique, 0x100000ba, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x100000c2, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x100000ca, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(unique, 0x100000d2, 8) MULTIEQUAL (register, 0x20, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x2426b9, 1) , (unique, 0x10000099, 1), (unique, 0x10000099, 1) INT_SLESS (unique, 0x10000095, 4) , (const, 0x0, 4), (unique, 0x10000095, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 8) INT_SEXT (unique, 0x10000095, 4)]
[ ---  CBRANCH (ram, 0x242770, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000095, 4) , (const, 0x5, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x1000009a, 8) , (const, 0xea, 4)]
[(ram, 0x4eae50, 8) INDIRECT (unique, 0x100000a2, 8) , (const, 0xea, 4)]
[(ram, 0x4eaf18, 8) INDIRECT (unique, 0x100000aa, 8) , (const, 0xea, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x100000ca, 8) , (const, 0xea, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100000b2, 8) , (const, 0xea, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x100000ba, 8) , (const, 0xea, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100000c2, 8) , (const, 0xea, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0x1000008d, 8) , (const, 0xea, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000183, 8), (unique, 0x10000183, 8) CALL (ram, 0x130d70, 8) , (unique, 0x100000f3, 8) , (unique, 0xbd80, 8) , (const, 0x5, 8), (unique, 0x100000f3, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000017b, 8), (unique, 0x1000017b, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000aa, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x242715, 1)]
[(register, 0x110, 8) INDIRECT (unique, 0x1000009a, 8) , (const, 0xdf, 4)]
[(ram, 0x4eae50, 8) INDIRECT (unique, 0x100000a2, 8) , (const, 0xdf, 4)]
[(ram, 0x4eaf18, 8) INDIRECT (unique, 0x100000aa, 8) , (const, 0xdf, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x100000ca, 8) , (const, 0xdf, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100000b2, 8) , (const, 0xdf, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x100000ba, 8) , (const, 0xdf, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100000c2, 8) , (const, 0xdf, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0x1000008d, 8) , (const, 0xdf, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000018b, 8), (unique, 0x1000018b, 8) CALL (ram, 0x130d70, 8) , (unique, 0x100000eb, 8) , (unique, 0x10000113, 8) , (const, 0x5, 8), (unique, 0x10000113, 8) COPY (const, 0x2b6d81, 8), (unique, 0x100000eb, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x1000009a, 8) , (const, 0x5c, 4)]
[(ram, 0x4eae50, 8) INDIRECT (unique, 0x100000a2, 8) , (const, 0x5c, 4)]
[(ram, 0x4eaf18, 8) INDIRECT (unique, 0x100000aa, 8) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x100000ca, 8) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100000b2, 8) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x100000ba, 8) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100000c2, 8) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0x1000008d, 8) , (const, 0x5c, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000193, 8), (unique, 0x10000193, 8) CALL (ram, 0x130d70, 8) , (unique, 0x100000e3, 8) , (unique, 0x1000010b, 8) , (const, 0x5, 8), (unique, 0x1000010b, 8) COPY (const, 0x2b6d69, 8), (unique, 0x100000e3, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[ ---  BRANCH (ram, 0x242715, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000d2, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x63, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eaf18, 8) INDIRECT (ram, 0x4eaf18, 8) , (const, 0x63, 4), (ram, 0x4eaf18, 8) MULTIEQUAL (ram, 0x4eaf18, 8) , (ram, 0x4eaf18, 8) , (ram, 0x4eaf18, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x63, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x60, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x68, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x63, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x60, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000d2, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x1000019b, 8), (unique, 0x1000019b, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000d2, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x7a, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x68, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x63, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x60, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x7a, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x6c, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x68, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x63, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x60, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100000fb, 8), (unique, 0x100000fb, 8) COPY (const, 0x2b3d39, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000d2, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_SRIGHT (register, 0x10, 8) , (const, 0x4, 4), (register, 0x10, 8) INT_ADD (unique, 0x100001ab, 8) , (unique, 0x1000013b, 8), (unique, 0x100001ab, 8) CAST (unique, 0x100000d2, 8), (unique, 0x1000013b, 8) INT_SUB (const, 0x10, 8) , (unique, 0x100001a3, 8), (unique, 0x100001a3, 8) CAST (register, 0x20, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x242791, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001b3, 8), (unique, 0x100001b3, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x7a, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x6c, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x63, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x63, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8)]
[(ram, 0x4eaf18, 8) COPY (ram, 0x4eaf18, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xcb, 4)]
[ ---  CALL (ram, 0x234c80, 8) , (const, 0x2, 8) , (register, 0x20, 8) , (register, 0x10, 4)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xcb, 4)]
[(ram, 0x4eaf18, 8) COPY (ram, 0x4eaf18, 8), (ram, 0x4eaf18, 8) INDIRECT (ram, 0x4eaf18, 8) , (const, 0xcb, 4)]
[ ---  RETURN (const, 0x1, 4)]
