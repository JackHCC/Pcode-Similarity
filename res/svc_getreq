[(register, 0x10, 8) INT_SEXT (register, 0x38, 4)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(unique, 0x100000cd, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100000cd, 8) , (unique, 0x100000d5, 8)]
[ ---  CBRANCH (ram, 0x238662, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (register, 0x10, 8) , (const, 0x39, 4)]
[(unique, 0x100000ed, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) COPY (const, 0x400, 4)]
[ ---  CBRANCH (ram, 0x23867a, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (register, 0x0, 4) , (const, 0x401, 4), (register, 0x0, 4) CALL (ram, 0x22bdb0, 8)]
[(unique, 0x100000f1, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2386cf, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0xb0, 4), (register, 0xb0, 4) MULTIEQUAL (unique, 0x100000ed, 4) , (unique, 0x100000f1, 4)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(unique, 0x100000dd, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x100000dd, 8) , (unique, 0x100000e5, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x100000dd, 8) , (unique, 0x100000e5, 8)]
[ ---  BRANCH (ram, 0x2386b7, 1)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(unique, 0x1aa00, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1ac80, 1), (unique, 0x1ac80, 1) INT_EQUAL (unique, 0x1ac00, 8) , (const, 0x0, 8), (unique, 0x1ac00, 8) INT_AND (unique, 0x1ab80, 8) , (const, 0x1, 8), (unique, 0x1ab80, 8) INT_RIGHT (register, 0xb8, 8) , (unique, 0x1aa00, 8), (unique, 0x1aa00, 8) MULTIEQUAL (unique, 0x1aa00, 8) , (unique, 0x1aa00, 8)]
[(unique, 0x1aa00, 4) SUBPIECE (unique, 0x1aa00, 8) , (const, 0x0, 4), (unique, 0x1aa00, 8) MULTIEQUAL (unique, 0x1aa00, 8) , (unique, 0x1aa00, 8)]
[ ---  CBRANCH (ram, 0x2386bf, 1) , (unique, 0x100000a3, 1), (unique, 0x100000a3, 1) BOOL_NEGATE (register, 0x206, 1)]
[(register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x2386a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x1aa00, 4) , (register, 0x18, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0xc6, 4)]
[ ---  CALL (ram, 0x2381a0, 8) , (register, 0x38, 4), (register, 0x38, 4) INT_ADD (unique, 0x10000078, 4) , (register, 0x18, 4), (unique, 0x10000078, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[(register, 0xb8, 8) INT_XOR (register, 0xb8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (unique, 0x1000009c, 1) , (const, 0x3f, 1), (unique, 0x1000009c, 1) SUBPIECE (register, 0x18, 4) , (const, 0x0, 4)]
[(unique, 0x100000e5, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x238690, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x28, 4) , (register, 0xb0, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x40, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(unique, 0x1aa00, 8) INT_ADD (unique, 0x1aa00, 8) , (const, 0x1, 8)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100000d5, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x23865f, 1)]
