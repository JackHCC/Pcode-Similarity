[ ---  CBRANCH (ram, 0x1a80b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x1a805a, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000001a, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1a8074, 1) , (unique, 0x10000019, 1), (unique, 0x10000019, 1) INT_EQUAL (unique, 0x10000018, 1) , (register, 0x30, 1), (unique, 0x10000018, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x1000001a, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (unique, 0x1000001a, 8)]
[ ---  CBRANCH (ram, 0x1a80b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000018, 1) , (const, 0x0, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000004a, 8) COPY (unique, 0x1000001a, 8)]
[ ---  BRANCH (ram, 0x1a8094, 1)]
[(unique, 0x1000002a, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000001a, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1a808c, 1)]
[(unique, 0x10000022, 8) COPY (unique, 0x1000001a, 8)]
[(unique, 0x10000042, 8) COPY (register, 0x8, 8), (register, 0x8, 8) COPY (unique, 0x1000003a, 8), (unique, 0x1000003a, 8) MULTIEQUAL (unique, 0x1000002a, 8) , (unique, 0x10000032, 8)]
[ ---  CBRANCH (ram, 0x1a8080, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) COPY (unique, 0x1000003a, 8), (unique, 0x1000003a, 8) MULTIEQUAL (unique, 0x1000002a, 8) , (unique, 0x10000032, 8)]
[(unique, 0x10000032, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1a80a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (register, 0x30, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000042, 8) , (unique, 0x1000004a, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000022, 8) , (register, 0x0, 8)]
