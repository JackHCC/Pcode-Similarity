[(unique, 0x10000181, 8) COPY (ram, 0x4c5738, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000189, 8), (unique, 0x10000189, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0xb8, 8) INT_AND (ram, 0x4c5738, 8) , (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x428918, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4c56e4, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f9, 4)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x1f9, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1f9, 4)]
[(ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x1f9, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x1f9, 4)]
[(ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x1f9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1f9, 4)]
[ ---  CALL (ram, 0x425560, 8)]
[ ---  BRANCH (ram, 0x42871a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x5d, 4), (ram, 0x4c56c8, 8) MULTIEQUAL (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x5d, 4), (ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x5d, 4), (ram, 0x4c5730, 4) MULTIEQUAL (ram, 0x4c5730, 4) , (ram, 0x4c5730, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x5d, 4), (ram, 0x4c5738, 8) MULTIEQUAL (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8)]
[(ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x5d, 4), (ram, 0x4c5740, 8) MULTIEQUAL (ram, 0x4c5740, 8) , (ram, 0x4c5740, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000199, 8) , (register, 0x10, 4), (unique, 0x10000199, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c56c8, 8) , (const, 0x74, 8) , (const, 0x1, 8), (register, 0x10, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000191, 8), (unique, 0x10000191, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c56c8, 8) , (const, 0x74, 8) , (const, 0x1, 8), (ram, 0x4c56c8, 8) MULTIEQUAL (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8)]
[ ---  BRANCH (ram, 0x42874c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c5740, 8) MULTIEQUAL (ram, 0x4c5740, 8) , (ram, 0x4c5740, 8)]
[(ram, 0x4c5738, 8) MULTIEQUAL (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8)]
[(ram, 0x4c5730, 4) MULTIEQUAL (ram, 0x4c5730, 4) , (ram, 0x4c5730, 4)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(ram, 0x4c56c8, 8) MULTIEQUAL (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000181, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff98, 16) COPY (const, 0x0, 16)]
[(stack, 0xffffffffffffffa8, 16) COPY (const, 0x0, 16)]
[ ---  CBRANCH (ram, 0x4288f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) CAST (register, 0x18, 8)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x1f0, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1f0, 4)]
[(ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x1f0, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x1f0, 4)]
[(ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x1f0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001b1, 8) , (const, 0x1, 4), (unique, 0x100001b1, 8) CAST (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1f5, 4)]
[(ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x1f5, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x1f5, 4)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x1f5, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x1f5, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f5, 4)]
[ ---  CALL (ram, 0x421390, 8) , (const, 0x0, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x428778, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001b9, 8), (unique, 0x100001b9, 8) CAST (register, 0x18, 8)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x8b, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x8b, 4)]
[(ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x8b, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x8b, 4)]
[(ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x8b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c1, 8) , (const, 0x1, 4), (unique, 0x100001c1, 8) CAST (register, 0x18, 8)]
[ ---  CALL (ram, 0x421660, 8) , (register, 0x18, 8) , (unique, 0x3800, 8)]
[ ---  CALL (ram, 0x470c30, 8) , (unique, 0x100001c9, 8) , (unique, 0x10000128, 8) , (register, 0x10, 8), (unique, 0x100001c9, 8) CAST (ram, 0x4c56c8, 8), (unique, 0x10000128, 8) COPY (const, 0x49b3af, 8), (register, 0x10, 8) INT_ZEXT (register, 0xa0, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x90, 4), (ram, 0x4c56c8, 8) MULTIEQUAL (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8)]
[ ---  CALL (ram, 0x470c30, 8) , (unique, 0x100001d1, 8) , (unique, 0x10000130, 8) , (register, 0x10, 8), (unique, 0x100001d1, 8) CAST (ram, 0x4c56c8, 8), (unique, 0x10000130, 8) COPY (const, 0x49b3ba, 8), (register, 0x10, 8) INT_ZEXT (stack, 0xffffffffffffff98, 4), (stack, 0xffffffffffffff98, 4) SUBPIECE (stack, 0xffffffffffffff98, 16) , (const, 0x0, 8), (stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0xa1, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x90, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x90, 4), (ram, 0x4c56c8, 8) MULTIEQUAL (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8), (stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0xc7, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0xb4, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0xa1, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x90, 4), (ram, 0x4c56c8, 8) MULTIEQUAL (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xc7, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xb4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xa1, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x90, 4), (ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0xc7, 4), (ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0xb4, 4), (ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0xa1, 4), (ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x90, 4), (ram, 0x4c5730, 4) MULTIEQUAL (ram, 0x4c5730, 4) , (ram, 0x4c5730, 4) , (ram, 0x4c5730, 4) , (ram, 0x4c5730, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0xc7, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0xb4, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0xa1, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x90, 4), (ram, 0x4c5738, 8) MULTIEQUAL (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8)]
[(ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0xc7, 4), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0xb4, 4), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0xa1, 4), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x90, 4), (ram, 0x4c5740, 8) MULTIEQUAL (ram, 0x4c5740, 8) , (ram, 0x4c5740, 8) , (ram, 0x4c5740, 8) , (ram, 0x4c5740, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb4, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb4, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x470c30, 8) , (unique, 0x100001d9, 8) , (unique, 0x10000140, 8) , (register, 0x10, 8), (unique, 0x100001d9, 8) CAST (ram, 0x4c56c8, 8), (unique, 0x10000140, 8) COPY (const, 0x49b3d3, 8), (register, 0x10, 8) INT_ZEXT (stack, 0xffffffffffffffb4, 4), (stack, 0xffffffffffffffb4, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0xc, 8), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xb4, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0xb4, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xa1, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x90, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x90, 4), (ram, 0x4c56c8, 8) MULTIEQUAL (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4), (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (stack, 0xffffffffffffff98, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff98, 4) SUBPIECE (stack, 0xffffffffffffff98, 16) , (const, 0x0, 8), (stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0xc7, 4), (stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0xb4, 4), (stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0xa1, 4), (stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x90, 4), (stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16)]
[(register, 0xa8, 8) INT_ZEXT (register, 0xb0, 4), (register, 0xb0, 4) INT_ADD (stack, 0xffffffffffffffb4, 4) , (register, 0xa8, 4), (register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (stack, 0xffffffffffffffb4, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0xc, 8), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xc7, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xb4, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xa1, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x90, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[ ---  CBRANCH (ram, 0x4288c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001e1, 8), (unique, 0x100001e1, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc7, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb4, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa1, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x90, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x1b3, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1b3, 4)]
[(ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x1b3, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x1b3, 4)]
[(ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x1b3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001f1, 8) , (const, 0x0, 4), (unique, 0x100001f1, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x4287f3, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e9, 8), (unique, 0x100001e9, 8) CAST (register, 0x18, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x4287f3, 1)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0xfd, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xfd, 4)]
[(ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0xfd, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0xfd, 4)]
[(ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0xfd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000201, 8) , (unique, 0xbd00, 4), (unique, 0x10000201, 8) CAST (register, 0x18, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f9, 8), (unique, 0x100001f9, 8) CAST (register, 0x18, 8)]
[(ram, 0x4c5740, 8) MULTIEQUAL (ram, 0x4c5740, 8) , (ram, 0x4c5740, 8) , (ram, 0x4c5740, 8)]
[(ram, 0x4c5738, 8) MULTIEQUAL (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8)]
[(ram, 0x4c5730, 4) MULTIEQUAL (ram, 0x4c5730, 4) , (ram, 0x4c5730, 4) , (ram, 0x4c5730, 4)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(ram, 0x4c56c8, 8) MULTIEQUAL (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8) , (ram, 0x4c56c8, 8)]
[ ---  CBRANCH (ram, 0x428748, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x10000168, 8), (unique, 0x10000168, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000211, 8), (unique, 0x10000211, 8) INT_ADD (unique, 0x10000209, 8) , (const, 0x870, 8), (unique, 0x10000209, 8) CAST (register, 0x18, 8)]
[ ---  CALL (ram, 0x477d30, 8) , (unique, 0x10000150, 8) , (const, 0x1, 8) , (const, 0x14, 8) , (unique, 0x10000219, 8), (unique, 0x10000219, 8) CAST (ram, 0x4c56c8, 8), (unique, 0x10000150, 8) COPY (const, 0x49b3ec, 8)]
[ ---  CALL (ram, 0x470c30, 8) , (unique, 0x10000221, 8) , (unique, 0x10000138, 8) , (register, 0x80, 8), (unique, 0x10000221, 8) CAST (ram, 0x4c56c8, 8), (unique, 0x10000138, 8) COPY (const, 0x49b3ba, 8), (register, 0x80, 8) INT_ZEXT (register, 0xb8, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x11f, 4)]
[ ---  CALL (ram, 0x470c30, 8) , (unique, 0x10000229, 8) , (unique, 0x10000148, 8) , (register, 0x10, 8), (unique, 0x10000229, 8) CAST (ram, 0x4c56c8, 8), (unique, 0x10000148, 8) COPY (const, 0x49b3d3, 8), (register, 0x10, 8) INT_ZEXT (register, 0xb0, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x134, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x11f, 4)]
[ ---  CALL (ram, 0x470c30, 8) , (unique, 0x10000231, 8) , (unique, 0x10000158, 8) , (register, 0x10, 8), (unique, 0x10000231, 8) CAST (ram, 0x4c56c8, 8), (unique, 0x10000158, 8) COPY (const, 0x49b401, 8), (register, 0x10, 8) INT_ZEXT (ram, 0x4c5730, 4), (ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x145, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x145, 4), (ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x134, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x134, 4), (ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x11f, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x11f, 4)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x166, 4), (stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x156, 4), (stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x145, 4), (stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x134, 4), (stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x11f, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x166, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x156, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x145, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x134, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x11f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x166, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x156, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x11f, 4)]
[ ---  CALL (ram, 0x470c30, 8) , (unique, 0x10000239, 8) , (unique, 0x10000160, 8) , (ram, 0x4c5740, 8), (unique, 0x10000239, 8) CAST (ram, 0x4c56c8, 8), (unique, 0x10000160, 8) COPY (const, 0x49b41a, 8), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x156, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x156, 4), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x145, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x145, 4), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x134, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x134, 4), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x11f, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x11f, 4)]
[(ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x16e, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x166, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x156, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x145, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x134, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x11f, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x16e, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x166, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x156, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x145, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x134, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x11f, 4)]
[(ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x16e, 4), (ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x166, 4), (ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x156, 4), (ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x145, 4), (ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x134, 4), (ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x11f, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x16e, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x166, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x156, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x145, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x134, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x11f, 4)]
[(ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x16e, 4), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x166, 4), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x156, 4), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x145, 4), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x134, 4), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x11f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000241, 8) , (unique, 0xbc80, 4), (unique, 0x10000241, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c56c8, 8) , (const, 0x74, 8) , (const, 0x1, 8), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x166, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x156, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x145, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x134, 4), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x11f, 4)]
[ ---  CBRANCH (ram, 0x428922, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000249, 8), (unique, 0x10000249, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x166, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x166, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x156, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x156, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x145, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x134, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11f, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11f, 4)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x199, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x199, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x199, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x199, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c56c8, 8) COPY (ram, 0x4c56c8, 8), (ram, 0x4c56c8, 8) INDIRECT (ram, 0x4c56c8, 8) , (const, 0x199, 4)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x199, 4)]
[(ram, 0x4c5730, 4) COPY (ram, 0x4c5730, 4), (ram, 0x4c5730, 4) INDIRECT (ram, 0x4c5730, 4) , (const, 0x199, 4)]
[(ram, 0x4c5738, 8) COPY (ram, 0x4c5738, 8), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x199, 4)]
[(ram, 0x4c5740, 8) COPY (ram, 0x4c5740, 8), (ram, 0x4c5740, 8) INDIRECT (ram, 0x4c5740, 8) , (const, 0x199, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c56c8, 8) COPY (ram, 0x4c56c8, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5730, 4) COPY (ram, 0x4c5730, 4)]
[(ram, 0x4c5738, 8) COPY (ram, 0x4c5738, 8)]
[(ram, 0x4c5740, 8) COPY (ram, 0x4c5740, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)]
