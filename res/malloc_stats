[(unique, 0x100001d4, 8) COPY (ram, 0x4c3198, 8)]
[(register, 0xa8, 8) INT_AND (ram, 0x4c3198, 8) , (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x186730, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4c3144, 4) , (const, 0x0, 4)]
[(ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x1ea, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x1ea, 4)]
[(ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x1ea, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x1ea, 4)]
[(ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x1ea, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ea, 4)]
[ ---  CALL (ram, 0x1849e0, 8)]
[ ---  BRANCH (ram, 0x186586, 1)]
[(unique, 0x100001cc, 8) COPY (ram, 0x4c2db8, 8), (ram, 0x4c2db8, 8) MULTIEQUAL (ram, 0x4c2db8, 8) , (ram, 0x4c2db8, 8)]
[(register, 0xb0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x4f, 4), (ram, 0x4c2db8, 8) MULTIEQUAL (ram, 0x4c2db8, 8) , (ram, 0x4c2db8, 8)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x4f, 4), (ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x4f, 4), (ram, 0x4c3190, 4) MULTIEQUAL (ram, 0x4c3190, 4) , (ram, 0x4c3190, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x4f, 4), (ram, 0x4c3198, 8) MULTIEQUAL (ram, 0x4c3198, 8) , (ram, 0x4c3198, 8)]
[(ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x4f, 4), (ram, 0x4c31a0, 8) MULTIEQUAL (ram, 0x4c31a0, 8) , (ram, 0x4c31a0, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x4f, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 4), (unique, 0x3100, 8) CAST (unique, 0x100001ec, 8), (unique, 0x100001ec, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x74, 8), (register, 0x10, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001e4, 8), (unique, 0x100001e4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x74, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001dc, 8), (unique, 0x100001dc, 8) CAST (ram, 0x4c2db8, 8), (ram, 0x4c2db8, 8) MULTIEQUAL (ram, 0x4c2db8, 8) , (ram, 0x4c2db8, 8)]
[ ---  BRANCH (ram, 0x1865b3, 1)]
[(ram, 0x4c31a0, 8) MULTIEQUAL (ram, 0x4c31a0, 8) , (ram, 0x4c31a0, 8)]
[(ram, 0x4c3198, 8) MULTIEQUAL (ram, 0x4c3198, 8) , (ram, 0x4c3198, 8)]
[(ram, 0x4c3190, 4) MULTIEQUAL (ram, 0x4c3190, 4) , (ram, 0x4c3190, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2db8, 8) MULTIEQUAL (ram, 0x4c2db8, 8) , (ram, 0x4c2db8, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0xbd80, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100001d4, 8) , (register, 0xa0, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(stack, 0xffffffffffffff98, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1865f3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x1e6, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x1e6, 4)]
[(ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x1e6, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x1e6, 4)]
[(ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x1e6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1e6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x88, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x88, 4)]
[(ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x88, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x88, 4)]
[(ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x88, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x88, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x18660f, 1)]
[(ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x1c9, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x1c9, 4)]
[(ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x1c9, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x1c9, 4)]
[(ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x1c9, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1c9, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1c9, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1c9, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1c9, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1c9, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1c9, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (register, 0xb0, 8)]
[ ---  CALL (ram, 0x17ec80, 8) , (register, 0xb0, 8) , (unique, 0x3800, 8)]
[ ---  CALL (ram, 0x155720, 8) , (unique, 0xbd80, 8) , (unique, 0x1000014f, 8) , (register, 0x10, 8), (unique, 0x1000014f, 8) COPY (const, 0x28d642, 8), (register, 0x10, 8) INT_ZEXT (register, 0x28, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001f4, 8), (unique, 0x100001f4, 8) CAST (unique, 0x100001cc, 8)]
[ ---  CALL (ram, 0x155720, 8) , (unique, 0xbd80, 8) , (unique, 0x10000157, 8) , (register, 0x10, 8), (unique, 0x10000157, 8) COPY (const, 0x28d64d, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001fc, 8), (unique, 0x100001fc, 8) CAST (unique, 0x100001cc, 8), (register, 0x10, 8) INT_AND (stack, 0xffffffffffffff98, 8) , (const, 0xffffffff, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xa2, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x90, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0xca, 4), (ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0xb6, 4), (ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0xa2, 4), (ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x90, 4), (ram, 0x4c2db8, 8) MULTIEQUAL (ram, 0x4c2db8, 8) , (ram, 0x4c2db8, 8) , (ram, 0x4c2db8, 8)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0xca, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0xb6, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0xa2, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x90, 4), (ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0xca, 4), (ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0xb6, 4), (ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0xa2, 4), (ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x90, 4), (ram, 0x4c3190, 4) MULTIEQUAL (ram, 0x4c3190, 4) , (ram, 0x4c3190, 4) , (ram, 0x4c3190, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0xca, 4), (ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0xb6, 4), (ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0xa2, 4), (ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x90, 4), (ram, 0x4c3198, 8) MULTIEQUAL (ram, 0x4c3198, 8) , (ram, 0x4c3198, 8) , (ram, 0x4c3198, 8)]
[(ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0xca, 4), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0xb6, 4), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0xa2, 4), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x90, 4), (ram, 0x4c31a0, 8) MULTIEQUAL (ram, 0x4c31a0, 8) , (ram, 0x4c31a0, 8) , (ram, 0x4c31a0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xca, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xa2, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xca, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xa2, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xca, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xa2, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CALL (ram, 0x155720, 8) , (unique, 0xbd80, 8) , (unique, 0x10000167, 8) , (unique, 0x10000146, 8), (unique, 0x10000167, 8) COPY (const, 0x28d666, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000204, 8), (unique, 0x10000204, 8) CAST (unique, 0x100001cc, 8), (unique, 0x10000146, 8) INT_RIGHT (stack, 0xffffffffffffffb0, 8) , (const, 0x20, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa2, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa0, 8) INT_ZEXT (unique, 0x1000020c, 4), (unique, 0x1000020c, 4) CAST (register, 0xa0, 4), (register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (stack, 0xffffffffffffff98, 4), (register, 0xa0, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff98, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xca, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xa2, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x90, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0xa8, 8) INT_ZEXT (unique, 0x10000210, 4), (unique, 0x10000210, 4) CAST (register, 0xa8, 4), (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (stack, 0xffffffffffffffb4, 4), (register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (stack, 0xffffffffffffffb4, 4) SUBPIECE (stack, 0xffffffffffffffb0, 8) , (const, 0x4, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xca, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa2, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x186672, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xca, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xb6, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xa2, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x90, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x1b2, 4)]
[(ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x1b2, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1b2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0xf6, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0xf6, 4)]
[(ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0xf6, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0xf6, 4)]
[(ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0xf6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xf6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(unique, 0x100001a8, 8) MULTIEQUAL (ram, 0x4c2db8, 8) , (ram, 0x4c2db8, 8)]
[(unique, 0x100001b0, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(unique, 0x100001b4, 4) MULTIEQUAL (ram, 0x4c3190, 4) , (ram, 0x4c3190, 4)]
[(unique, 0x100001b8, 8) MULTIEQUAL (ram, 0x4c3198, 8) , (ram, 0x4c3198, 8)]
[(unique, 0x100001c0, 8) MULTIEQUAL (ram, 0x4c31a0, 8) , (ram, 0x4c31a0, 8)]
[(unique, 0x100001c8, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x18668d, 1) , (unique, 0x100001a7, 1), (unique, 0x100001a7, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c2db8, 8) INDIRECT (unique, 0x100001a8, 8) , (const, 0x1a4, 4)]
[(ram, 0x4c3144, 4) INDIRECT (unique, 0x100001b0, 4) , (const, 0x1a4, 4)]
[(ram, 0x4c3190, 4) INDIRECT (unique, 0x100001b4, 4) , (const, 0x1a4, 4)]
[(ram, 0x4c3198, 8) INDIRECT (unique, 0x100001b8, 8) , (const, 0x1a4, 4)]
[(ram, 0x4c31a0, 8) INDIRECT (unique, 0x100001c0, 8) , (const, 0x1a4, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x100001c8, 4) , (const, 0x1a4, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1a4, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1a4, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1a4, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1a4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1a4, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (register, 0xb0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x100001c8, 4)]
[(ram, 0x4c31a0, 8) MULTIEQUAL (ram, 0x4c31a0, 8) , (unique, 0x100001c0, 8)]
[(ram, 0x4c3198, 8) MULTIEQUAL (ram, 0x4c3198, 8) , (unique, 0x100001b8, 8)]
[(ram, 0x4c3190, 4) MULTIEQUAL (ram, 0x4c3190, 4) , (unique, 0x100001b4, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (unique, 0x100001b0, 4)]
[(ram, 0x4c2db8, 8) MULTIEQUAL (ram, 0x4c2db8, 8) , (unique, 0x100001a8, 8)]
[ ---  CBRANCH (ram, 0x1865b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x1000018f, 8), (unique, 0x1000018f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000214, 8), (unique, 0x10000214, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0xb0, 8) , (const, 0x21a, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x16e620, 8) , (unique, 0x10000177, 8) , (const, 0x1, 8) , (const, 0x14, 8) , (unique, 0xbd80, 8), (unique, 0x10000177, 8) COPY (const, 0x28d67f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000021c, 8), (unique, 0x1000021c, 8) CAST (unique, 0x100001cc, 8)]
[ ---  CALL (ram, 0x155720, 8) , (unique, 0xbd80, 8) , (unique, 0x1000015f, 8) , (register, 0xa0, 8), (unique, 0x1000015f, 8) COPY (const, 0x28d64d, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000224, 8), (unique, 0x10000224, 8) CAST (unique, 0x100001cc, 8)]
[ ---  CALL (ram, 0x155720, 8) , (unique, 0xbd80, 8) , (unique, 0x1000016f, 8) , (register, 0xa8, 8), (unique, 0x1000016f, 8) COPY (const, 0x28d666, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000022c, 8), (unique, 0x1000022c, 8) CAST (unique, 0x100001cc, 8)]
[ ---  CALL (ram, 0x155720, 8) , (unique, 0xbd80, 8) , (unique, 0x1000017f, 8) , (register, 0x10, 8), (unique, 0x1000017f, 8) COPY (const, 0x28d694, 8), (register, 0x10, 8) INT_ZEXT (ram, 0x4c3190, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000234, 8), (unique, 0x10000234, 8) CAST (unique, 0x100001cc, 8), (ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x13d, 4), (ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x12b, 4), (ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x119, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x160, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x14f, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x13d, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x119, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x160, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x14f, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x13d, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x119, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x160, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x14f, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x13d, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x119, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x160, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x14f, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x13d, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x119, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x160, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x14f, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x13d, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x119, 4)]
[ ---  CALL (ram, 0x155720, 8) , (unique, 0xbd80, 8) , (unique, 0x10000187, 8) , (ram, 0x4c31a0, 8), (unique, 0x10000187, 8) COPY (const, 0x28d6ad, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) CAST (unique, 0x100001cc, 8), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x14f, 4), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x13d, 4), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x12b, 4), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x119, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_OR (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000024c, 8), (unique, 0x1000024c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x74, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000244, 8), (unique, 0x10000244, 8) CAST (unique, 0x100001cc, 8)]
[(ram, 0x4c2db8, 8) COPY (ram, 0x4c2db8, 8), (ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x16c, 4), (ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x160, 4), (ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x14f, 4), (ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x13d, 4), (ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x12b, 4), (ram, 0x4c2db8, 8) INDIRECT (ram, 0x4c2db8, 8) , (const, 0x119, 4)]
[(ram, 0x4c3144, 4) COPY (ram, 0x4c3144, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x16c, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x160, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x14f, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x13d, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x12b, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x119, 4)]
[(ram, 0x4c3190, 4) COPY (ram, 0x4c3190, 4), (ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x16c, 4), (ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x160, 4), (ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x14f, 4), (ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x13d, 4), (ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x12b, 4), (ram, 0x4c3190, 4) INDIRECT (ram, 0x4c3190, 4) , (const, 0x119, 4)]
[(ram, 0x4c3198, 8) COPY (ram, 0x4c3198, 8), (ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x16c, 4), (ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x160, 4), (ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x14f, 4), (ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x13d, 4), (ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x12b, 4), (ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x119, 4)]
[(ram, 0x4c31a0, 8) COPY (ram, 0x4c31a0, 8), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x16c, 4), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x160, 4), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x14f, 4), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x13d, 4), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x12b, 4), (ram, 0x4c31a0, 8) INDIRECT (ram, 0x4c31a0, 8) , (const, 0x119, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x16c, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x160, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x14f, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x13d, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x12b, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x119, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)]
