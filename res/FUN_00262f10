[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a, 4)]
[(ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0x3a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3a, 4)]
[(ram, 0x4f0ad8, 4) INDIRECT (ram, 0x4f0ad8, 4) , (const, 0x3a, 4)]
[(stack, 0xfffffffffffffac0, 8) INDIRECT (stack, 0xfffffffffffffac0, 8) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3a, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000173, 8), (unique, 0x10000173, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x262f80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x211810, 8) , (const, 0x0, 4) , (unique, 0x3c80, 8) , (const, 0x200, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffac8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x7d, 4)]
[(ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0x7d, 4)]
[(ram, 0x4f0ad8, 4) INDIRECT (ram, 0x4f0ad8, 4) , (const, 0x7d, 4)]
[(stack, 0xfffffffffffffac0, 8) INDIRECT (stack, 0xfffffffffffffac0, 8) , (const, 0x7d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x7d, 4)]
[ ---  CALL (ram, 0x1212a0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (const, 0x20, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffad0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdcd, 8)]
[ ---  CBRANCH (ram, 0x262fb3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x7d, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f0ad8, 4) , (const, 0x0, 4)]
[(ram, 0x4f0ad8, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0ad8, 4) , (const, 0x0, 4)]
[(ram, 0x4f0ad8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x262fd6, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x14b, 4)]
[(ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0x14b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x14b, 4)]
[(ram, 0x4f0ad8, 4) INDIRECT (ram, 0x4f0ad8, 4) , (const, 0x14b, 4)]
[(stack, 0xfffffffffffffac0, 8) INDIRECT (stack, 0xfffffffffffffac0, 8) , (const, 0x14b, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x14b, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000126, 8), (unique, 0x10000126, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f0ad8, 8)]
[ ---  CALLIND (unique, 0x1000017b, 8), (unique, 0x1000017b, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (ram, 0x4ec550, 8), (ram, 0x4ec550, 8) MULTIEQUAL (ram, 0x4ec550, 8) , (ram, 0x4ec550, 8) , (ram, 0x4ec550, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xad, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa2, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xad, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa2, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0xad, 4), (ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0xa2, 4), (ram, 0x4ec550, 8) MULTIEQUAL (ram, 0x4ec550, 8) , (ram, 0x4ec550, 8) , (ram, 0x4ec550, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xad, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xa2, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0ad8, 4) INDIRECT (ram, 0x4f0ad8, 4) , (const, 0xad, 4), (ram, 0x4f0ad8, 4) INDIRECT (ram, 0x4f0ad8, 4) , (const, 0xa2, 4), (ram, 0x4f0ad8, 4) MULTIEQUAL (ram, 0x4f0ad8, 4) , (ram, 0x4f0ad8, 4) , (ram, 0x4f0ad8, 4)]
[(stack, 0xfffffffffffffac0, 8) INDIRECT (stack, 0xfffffffffffffac0, 8) , (const, 0xad, 4), (stack, 0xfffffffffffffac0, 8) INDIRECT (stack, 0xfffffffffffffac0, 8) , (const, 0xa2, 4), (stack, 0xfffffffffffffac0, 8) MULTIEQUAL (stack, 0xfffffffffffffac0, 8) , (stack, 0xfffffffffffffac0, 8) , (stack, 0xfffffffffffffac0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xad, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xa2, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x263014, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x3800, 8) , (unique, 0x3c80, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000018b, 8), (unique, 0x1000018b, 8) INT_ADD (unique, 0x10000183, 8) , (const, 0x18, 8), (unique, 0x10000183, 8) CAST (ram, 0x4ec550, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc48, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffac0, 8), (ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0xa2, 4), (ram, 0x4ec550, 8) MULTIEQUAL (ram, 0x4ec550, 8) , (ram, 0x4ec550, 8) , (ram, 0x4ec550, 8)]
[ ---  CBRANCH (ram, 0x263014, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x3, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000193, 8), (unique, 0x10000193, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x18, 4) COPY (const, 0x2, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4) , (register, 0x18, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd3, 4)]
[(ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0xd3, 4)]
[(ram, 0x4f0ad8, 4) INDIRECT (ram, 0x4f0ad8, 4) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffac0, 8) INDIRECT (stack, 0xfffffffffffffac0, 8) , (const, 0xd3, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xd3, 4)]
[ ---  CALLIND (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001a3, 8), (unique, 0x100001a3, 8) INT_ADD (unique, 0x1000019b, 8) , (const, 0x28, 8), (unique, 0x1000019b, 8) CAST (ram, 0x4ec550, 8)]
[(ram, 0x4ec550, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea6e0, 8)]
[ ---  CBRANCH (ram, 0x263040, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd3, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000016b, 4) COPY (unique, 0x1000015e, 4), (unique, 0x1000015e, 4) INT_ADD (ram, 0x4f0ad8, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x263062, 1) , (unique, 0x10000162, 1), (unique, 0x10000162, 1) INT_NOTEQUAL (unique, 0x1000015e, 4) , (const, 0x0, 4), (unique, 0x1000015e, 4) INT_ADD (ram, 0x4f0ad8, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12c, 4)]
[(ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0x12c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x12c, 4)]
[(stack, 0xfffffffffffffac0, 8) INDIRECT (stack, 0xfffffffffffffac0, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x12c, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x1000011e, 8), (unique, 0x1000011e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f0ad8, 8)]
[(unique, 0x10000167, 4) COPY (ram, 0x4f0ad8, 4), (ram, 0x4f0ad8, 4) INDIRECT (ram, 0x4f0ad8, 4) , (const, 0x12c, 4), (ram, 0x4f0ad8, 4) INT_ADD (ram, 0x4f0ad8, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xfffffffffffffac0, 8) MULTIEQUAL (stack, 0xfffffffffffffac0, 8) , (stack, 0xfffffffffffffac0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec550, 8) MULTIEQUAL (ram, 0x4ec550, 8) , (ram, 0x4ec550, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f0ad8, 4) COPY (unique, 0x1000016f, 4), (unique, 0x1000016f, 4) MULTIEQUAL (unique, 0x10000167, 4) , (unique, 0x1000016b, 4)]
[ ---  CBRANCH (ram, 0x262f55, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x100, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x100, 4)]
[(ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0x100, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x100, 4)]
[(ram, 0x4f0ad8, 4) INDIRECT (ram, 0x4f0ad8, 4) , (const, 0x100, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x100, 4)]
[ ---  CBRANCH (ram, 0x2630a8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121000, 8) , (unique, 0x3100, 8) , (const, 0x20, 8), (unique, 0x3100, 8) CAST (unique, 0x100001ab, 8), (unique, 0x100001ab, 8) INT_ADD (stack, 0xfffffffffffffac0, 8) , (const, 0x2c, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11a, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x11a, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (unique, 0x3100, 8) , (register, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x11e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x11a, 4)]
[(ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0x11e, 4), (ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0x11a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x11e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x11a, 4)]
[(ram, 0x4f0ad8, 4) INDIRECT (ram, 0x4f0ad8, 4) , (const, 0x11e, 4), (ram, 0x4f0ad8, 4) INDIRECT (ram, 0x4f0ad8, 4) , (const, 0x11a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) CAST (unique, 0x100001bb, 8), (unique, 0x100001bb, 8) INT_ADD (unique, 0x100001b3, 8) , (register, 0x0, 8), (unique, 0x100001b3, 8) CAST (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x262f55, 1)]
[(register, 0x18, 4) COPY (const, 0x22, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x113, 4)]
[(ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0x113, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x113, 4)]
[(ram, 0x4f0ad8, 4) INDIRECT (ram, 0x4f0ad8, 4) , (const, 0x113, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c3, 8) , (const, 0x22, 4), (unique, 0x100001c3, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x262f55, 1)]
[(ram, 0x4f0ad8, 4) MULTIEQUAL (ram, 0x4f0ad8, 4) , (ram, 0x4f0ad8, 4) , (ram, 0x4f0ad8, 4) , (ram, 0x4f0ad8, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec550, 8) MULTIEQUAL (ram, 0x4ec550, 8) , (ram, 0x4ec550, 8) , (ram, 0x4ec550, 8) , (ram, 0x4ec550, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) COPY (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x2630c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001cb, 8), (unique, 0x100001cb, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x71, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x71, 4)]
[(ram, 0x4ec550, 8) COPY (ram, 0x4ec550, 8), (ram, 0x4ec550, 8) INDIRECT (ram, 0x4ec550, 8) , (const, 0x71, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x71, 4)]
[(ram, 0x4f0ad8, 4) COPY (ram, 0x4f0ad8, 4), (ram, 0x4f0ad8, 4) INDIRECT (ram, 0x4f0ad8, 4) , (const, 0x71, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ec550, 8) COPY (ram, 0x4ec550, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[(ram, 0x4f0ad8, 4) COPY (ram, 0x4f0ad8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
