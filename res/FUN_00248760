[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004f9, 8), (unique, 0x100004f9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2487c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004f1, 8), (unique, 0x100004f1, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000501, 8), (unique, 0x10000501, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[(unique, 0x100004d1, 8) COPY (ram, 0x4efea8, 8)]
[ ---  CBRANCH (ram, 0x2487d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4efea8, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4efe80, 8)]
[(unique, 0x100004d9, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000509, 8), (unique, 0x10000509, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100004d1, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x248800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000509, 8), (unique, 0x10000509, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100004d1, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000511, 8), (unique, 0x10000511, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x2488b4, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1fd, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1fd, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x1fd, 4), (ram, 0x4efe90, 8) MULTIEQUAL (ram, 0x4efe90, 8) , (ram, 0x4efe90, 8)]
[(ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x1fd, 4), (ram, 0x4efe98, 1) MULTIEQUAL (ram, 0x4efe98, 1) , (ram, 0x4efe98, 1)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1fd, 4), (ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1fd, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x24880b, 8)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x1fd, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1fd, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2487f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) COPY (unique, 0x100004e9, 8), (unique, 0x100004e9, 8) MULTIEQUAL (unique, 0x100004d9, 8) , (unique, 0x100004e1, 8)]
[(unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x222, 4)]
[(ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x222, 4)]
[(ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x222, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x222, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) CAST (unique, 0x10000519, 8), (unique, 0x10000519, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(unique, 0x100004e1, 8) COPY (unique, 0x10000529, 8), (unique, 0x10000529, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2488b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000521, 8) , (const, 0x0, 8), (unique, 0x10000521, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c1, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1c1, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x2488be, 8)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x1c1, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c1, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1cc, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c1, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x1cc, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x1c1, 4), (ram, 0x4efe90, 8) MULTIEQUAL (ram, 0x4efe90, 8) , (ram, 0x4efe90, 8)]
[(ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x1cc, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x1c1, 4), (ram, 0x4efe98, 1) MULTIEQUAL (ram, 0x4efe98, 1) , (ram, 0x4efe98, 1)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1cc, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1c1, 4), (ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb8, 8) , (unique, 0x10000539, 8), (unique, 0x10000539, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000531, 8), (unique, 0x10000531, 8) CALL (ram, 0x1212c0, 8) , (const, 0x18, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x2489f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000531, 8), (unique, 0x10000531, 8) CALL (ram, 0x1212c0, 8) , (const, 0x18, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f5, 4)]
[(ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x1f5, 4)]
[(ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x1f5, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1f5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000541, 8), (unique, 0x10000541, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x248799, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000549, 8) , (const, 0x0, 8), (unique, 0x10000549, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e5, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d2, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d0, 4)]
[(ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x1e5, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x1d7, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x1d2, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x1d0, 4)]
[(ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x1e5, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x1d7, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x1d2, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x1d0, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1e5, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1d7, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1d2, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1d0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000559, 8), (unique, 0x10000559, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000551, 8), (unique, 0x10000551, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x24878c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000551, 8), (unique, 0x10000551, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x248799, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efe98, 1) MULTIEQUAL (ram, 0x4efe98, 1) , (ram, 0x4efe98, 1)]
[(ram, 0x4efe90, 8) MULTIEQUAL (ram, 0x4efe90, 8) , (ram, 0x4efe90, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000191, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0x10000199, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001a1, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100001a9, 8) MULTIEQUAL (ram, 0x4efe90, 8) , (ram, 0x4efe90, 8)]
[(unique, 0x100001b1, 1) MULTIEQUAL (ram, 0x4efe98, 1) , (ram, 0x4efe98, 1)]
[(unique, 0x100001b2, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(unique, 0x100001ba, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(unique, 0x100001be, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000189, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x248799, 1) , (unique, 0x10000188, 1), (unique, 0x10000188, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) MULTIEQUAL (unique, 0xbe00, 8) , (unique, 0xbe00, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xd, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000561, 8), (unique, 0x10000561, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[(register, 0x20, 8) CAST (unique, 0x10000591, 8), (unique, 0x10000591, 8) INT_ADD (unique, 0x10000589, 8) , (unique, 0x100000d4, 8), (unique, 0x10000589, 8) CAST (unique, 0x1000024f, 8), (unique, 0x1000024f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100000d4, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000561, 8), (unique, 0x10000561, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[(register, 0x20, 8) CAST (unique, 0x100005a1, 8), (unique, 0x100005a1, 8) INT_ADD (unique, 0x10000599, 8) , (unique, 0x100000d4, 8), (unique, 0x10000599, 8) CAST (unique, 0x10000267, 8), (unique, 0x10000267, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100000d4, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000561, 8), (unique, 0x10000561, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x5f73736e62696c, 8), (register, 0x20, 8) CAST (unique, 0x10000571, 8), (unique, 0x10000571, 8) INT_ADD (unique, 0x10000569, 8) , (unique, 0x100000d4, 8), (unique, 0x10000569, 8) CAST (unique, 0x1000021f, 8), (unique, 0x1000021f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100000d4, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000561, 8), (unique, 0x10000561, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x248866, 8), (register, 0x20, 8) CAST (unique, 0x100005c1, 8), (unique, 0x100005c1, 8) INT_ADD (unique, 0x100005b9, 8) , (unique, 0x100003f7, 8), (unique, 0x100005b9, 8) CAST (unique, 0x100003ff, 8), (unique, 0x100003ff, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100003f7, 8) INT_ADD (unique, 0x100000d4, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100000d4, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000561, 8), (unique, 0x10000561, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x6f732e, 4), (register, 0x0, 8) CAST (unique, 0x100005c9, 8), (unique, 0x100005c9, 8) CALL (ram, 0x121050, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000479, 8) , (unique, 0x100005b1, 8) , (const, 0x1, 8), (unique, 0x100005b1, 8) CAST (unique, 0x100004c1, 8), (unique, 0x100004c1, 8) PTRADD (unique, 0x10000481, 8) , (unique, 0x100000d4, 8) , (const, 0x1, 8), (unique, 0x10000481, 8) PTRSUB (register, 0x20, 8) , (const, 0x0, 8), (unique, 0x10000479, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffaf, 8), (unique, 0x100000d4, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000561, 8), (unique, 0x10000561, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x100005d9, 8), (unique, 0x100005d9, 8) INT_ADD (unique, 0x100005d1, 8) , (const, 0x5, 8), (unique, 0x100005d1, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100005c9, 8), (unique, 0x100005c9, 8) CALL (ram, 0x121050, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000479, 8) , (unique, 0x100005b1, 8) , (const, 0x1, 8), (unique, 0x100005b1, 8) CAST (unique, 0x100004c1, 8), (unique, 0x100004c1, 8) PTRADD (unique, 0x10000481, 8) , (unique, 0x100000d4, 8) , (const, 0x1, 8), (unique, 0x10000481, 8) PTRSUB (register, 0x20, 8) , (const, 0x0, 8), (unique, 0x10000479, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffaf, 8), (unique, 0x100000d4, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000561, 8), (unique, 0x10000561, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x322e, 2), (unique, 0x3100, 8) CAST (unique, 0x100005e9, 8), (unique, 0x100005e9, 8) INT_ADD (unique, 0x100005e1, 8) , (const, 0x3, 8), (unique, 0x100005e1, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100005c9, 8), (unique, 0x100005c9, 8) CALL (ram, 0x121050, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000479, 8) , (unique, 0x100005b1, 8) , (const, 0x1, 8), (unique, 0x100005b1, 8) CAST (unique, 0x100004c1, 8), (unique, 0x100004c1, 8) PTRADD (unique, 0x10000481, 8) , (unique, 0x100000d4, 8) , (const, 0x1, 8), (unique, 0x10000481, 8) PTRSUB (register, 0x20, 8) , (const, 0x0, 8), (unique, 0x10000479, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffaf, 8), (unique, 0x100000d4, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000561, 8), (unique, 0x10000561, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x248886, 8), (register, 0x20, 8) CAST (unique, 0x100005f9, 8), (unique, 0x100005f9, 8) INT_ADD (unique, 0x100005f1, 8) , (unique, 0x1000040f, 8), (unique, 0x100005f1, 8) CAST (unique, 0x10000417, 8), (unique, 0x10000417, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x1000040f, 8) INT_ADD (unique, 0x100000d4, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100000d4, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000561, 8), (unique, 0x10000561, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xba, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xac, 4), (register, 0x110, 8) INDIRECT (unique, 0x10000199, 8) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xba, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xac, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xab, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x7e, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x24882f, 8)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xba, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xac, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xab, 4), (stack, 0xffffffffffffffb4, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005a9, 8), (unique, 0x100005a9, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (unique, 0x100001a1, 8) , (const, 0x7e, 4), (register, 0x110, 8) INDIRECT (unique, 0x10000199, 8) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xba, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xac, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xab, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa6, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100001be, 8) , (const, 0x7e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xbd, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xba, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb5, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb2, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xaf, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xac, 4), (ram, 0x4eae68, 8) INDIRECT (unique, 0x100001a1, 8) , (const, 0x7e, 4)]
[(ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0xbd, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0xba, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0xb5, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0xb2, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0xaf, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0xac, 4), (ram, 0x4efe90, 8) INDIRECT (unique, 0x100001a9, 8) , (const, 0x7e, 4)]
[(ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0xbd, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0xba, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0xb5, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0xb2, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0xaf, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0xac, 4), (ram, 0x4efe98, 1) INDIRECT (unique, 0x100001b1, 1) , (const, 0x7e, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0xbd, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0xba, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0xb5, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0xb2, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0xaf, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0xac, 4), (ram, 0x4efea8, 8) INDIRECT (unique, 0x100001b2, 8) , (const, 0x7e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000191, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000601, 8), (unique, 0x10000601, 8) CALL (ram, 0x266450, 8) , (register, 0x20, 8) , (const, 0x80000001, 8), (register, 0x20, 8) CAST (unique, 0x10000581, 8), (unique, 0x10000581, 8) INT_ADD (unique, 0x10000579, 8) , (unique, 0x100000d4, 8), (unique, 0x10000579, 8) CAST (unique, 0x10000237, 8), (unique, 0x10000237, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100000d4, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000561, 8), (unique, 0x10000561, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  CBRANCH (ram, 0x248970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000609, 8), (unique, 0x10000609, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x248993, 8), (register, 0x20, 8) CAST (unique, 0x10000619, 8), (unique, 0x10000619, 8) INT_ADD (unique, 0x10000611, 8) , (unique, 0x1000043f, 8), (unique, 0x10000611, 8) CAST (unique, 0x10000447, 8), (unique, 0x10000447, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x1000043f, 8) INT_ADD (unique, 0x100000d4, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x160, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x160, 4)]
[(ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x160, 4)]
[(ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x160, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x160, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x160, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x160, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x160, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15f, 4)]
[ ---  CBRANCH (ram, 0x2489c9, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x10000621, 8) , (unique, 0x3100, 8), (unique, 0x10000621, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x164f50, 8) , (register, 0x20, 8) , (unique, 0x3100, 8) , (unique, 0x100001c7, 8) , (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1b, 8), (unique, 0x100001c7, 8) COPY (const, 0x2b6fba, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2489da, 8), (register, 0x20, 8) CAST (unique, 0x10000639, 8), (unique, 0x10000639, 8) INT_ADD (unique, 0x10000631, 8) , (unique, 0x10000457, 8), (unique, 0x10000631, 8) CAST (unique, 0x1000045f, 8), (unique, 0x1000045f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x10000457, 8) INT_ADD (unique, 0x100000d4, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x185, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x185, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x185, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x185, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x184, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x188, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x185, 4)]
[(ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x188, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x185, 4)]
[(ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x188, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x185, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x188, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x185, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) CAST (unique, 0x10000641, 8), (unique, 0x10000641, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x266450, 8) , (register, 0x20, 8) , (const, 0x80000001, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000629, 8), (unique, 0x10000629, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x2488a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000651, 8), (unique, 0x10000651, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000649, 8), (unique, 0x10000649, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x171, 4)]
[(ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x171, 4)]
[(ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x171, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x171, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000661, 8), (unique, 0x10000661, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000659, 8), (unique, 0x10000659, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) CAST (unique, 0x10000669, 8), (unique, 0x10000669, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x174, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x17c, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x174, 4), (ram, 0x4efe90, 8) MULTIEQUAL (ram, 0x4efe90, 8) , (ram, 0x4efe90, 8)]
[(ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x17c, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x174, 4), (ram, 0x4efe98, 1) MULTIEQUAL (ram, 0x4efe98, 1) , (ram, 0x4efe98, 1)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x17c, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x174, 4), (ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000671, 8) , (stack, 0xffffffffffffffb4, 4), (unique, 0x10000671, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x174, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[ ---  BRANCH (ram, 0x2488a2, 1)]
[ ---  CBRANCH (ram, 0x248900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4efe98, 1) , (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x24890b, 8), (register, 0x20, 8) CAST (unique, 0x10000681, 8), (unique, 0x10000681, 8) INT_ADD (unique, 0x10000679, 8) , (unique, 0x10000427, 8), (unique, 0x10000679, 8) CAST (unique, 0x1000042f, 8), (unique, 0x1000042f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x10000427, 8) INT_ADD (unique, 0x100000d4, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x1000029f, 8) INT_ADD (unique, 0x1000010d, 8) , (unique, 0x100000d4, 8), (unique, 0x1000010d, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x73736e5f, 4), (register, 0x20, 8) CAST (unique, 0x10000691, 8), (unique, 0x10000691, 8) INT_ADD (unique, 0x10000689, 8) , (unique, 0x1000027f, 8), (unique, 0x10000689, 8) CAST (unique, 0x100002ff, 8), (unique, 0x100002ff, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x1000027f, 8) INT_ADD (unique, 0x1000010d, 8) , (unique, 0x100000d4, 8), (unique, 0x1000010d, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x5f, 1), (unique, 0x3800, 8) CAST (unique, 0x100006b1, 8), (unique, 0x100006b1, 8) INT_ADD (unique, 0x100006a9, 8) , (unique, 0x100004a9, 8), (unique, 0x100006a9, 8) CAST (unique, 0x100004b1, 8), (unique, 0x100004b1, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100004a9, 8) INT_ADD (unique, 0x10000287, 8) , (const, 0x4, 8), (unique, 0x10000287, 8) INT_ADD (unique, 0x1000010d, 8) , (unique, 0x100000d4, 8), (unique, 0x1000010d, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x24892f, 8), (register, 0x20, 8) CAST (unique, 0x100006c1, 8), (unique, 0x100006c1, 8) INT_ADD (unique, 0x100006b9, 8) , (unique, 0x10000377, 8), (unique, 0x100006b9, 8) CAST (unique, 0x1000037f, 8), (unique, 0x1000037f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x10000377, 8) INT_ADD (unique, 0x1000028f, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000028f, 8) INT_ADD (unique, 0x1000010d, 8) , (unique, 0x100000d4, 8), (unique, 0x1000010d, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x696e695f, 4), (register, 0x0, 8) CAST (unique, 0x100006c9, 8), (unique, 0x100006c9, 8) CALL (ram, 0x121050, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000471, 8) , (unique, 0x100006a1, 8) , (const, 0x1, 8), (unique, 0x100006a1, 8) CAST (unique, 0x100004c9, 8), (unique, 0x100004c9, 8) PTRADD (unique, 0x10000491, 8) , (unique, 0x10000277, 8) , (const, 0x1, 8), (unique, 0x10000491, 8) PTRSUB (register, 0x20, 8) , (const, 0x0, 8), (unique, 0x10000471, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffad, 8), (unique, 0x10000277, 8) INT_ADD (unique, 0x1000010d, 8) , (unique, 0x100000d4, 8), (unique, 0x1000010d, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006d1, 8) , (const, 0x74, 2), (unique, 0x100006d1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) CAST (unique, 0x100006c9, 8), (unique, 0x100006c9, 8) CALL (ram, 0x121050, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000471, 8) , (unique, 0x100006a1, 8) , (const, 0x1, 8), (unique, 0x100006a1, 8) CAST (unique, 0x100004c9, 8), (unique, 0x100004c9, 8) PTRADD (unique, 0x10000491, 8) , (unique, 0x10000277, 8) , (const, 0x1, 8), (unique, 0x10000491, 8) PTRSUB (register, 0x20, 8) , (const, 0x0, 8), (unique, 0x10000471, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffad, 8), (unique, 0x10000277, 8) INT_ADD (unique, 0x1000010d, 8) , (unique, 0x100000d4, 8), (unique, 0x1000010d, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x24894a, 8), (register, 0x20, 8) CAST (unique, 0x100006e1, 8), (unique, 0x100006e1, 8) INT_ADD (unique, 0x100006d9, 8) , (unique, 0x1000039f, 8), (unique, 0x100006d9, 8) CAST (unique, 0x100003a7, 8), (unique, 0x100003a7, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x1000039f, 8) INT_ADD (unique, 0x10000297, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000297, 8) INT_ADD (unique, 0x1000010d, 8) , (unique, 0x100000d4, 8), (unique, 0x1000010d, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11d, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x110, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xea, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x11d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x117, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x113, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x110, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xea, 4)]
[(ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x11d, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x117, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x113, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x110, 4), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0xea, 4)]
[(ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x11d, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x117, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x113, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x110, 4), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0xea, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x11d, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x117, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x113, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x110, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0xea, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x11d, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x11c, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x110, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x10f, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xea, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xe9, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x11d, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x11c, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x110, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x10f, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x10d, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x10a, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xea, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xe9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x110, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xea, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe9, 4)]
[ ---  CBRANCH (ram, 0x248965, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100006e9, 8), (unique, 0x100006e9, 8) CALL (ram, 0x266520, 8) , (unique, 0xbd80, 8) , (register, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x20, 8) INT_ADD (unique, 0x10000699, 8) , (unique, 0x100002a7, 8), (unique, 0x10000699, 8) CAST (unique, 0x10000337, 8), (unique, 0x10000337, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100002a7, 8) INT_ADD (unique, 0x1000010d, 8) , (unique, 0x100000d4, 8), (unique, 0x1000010d, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x248965, 8), (register, 0x20, 8) CAST (unique, 0x10000701, 8), (unique, 0x10000701, 8) INT_ADD (unique, 0x100006f9, 8) , (unique, 0x100003b7, 8), (unique, 0x100006f9, 8) CAST (unique, 0x100003bf, 8), (unique, 0x100003bf, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100003b7, 8) INT_ADD (unique, 0x1000029f, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x14a, 4)]
[(ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x14a, 4)]
[(ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x14a, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x14a, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x149, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x14a, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x149, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x149, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_XOR (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100006f1, 8), (unique, 0x100006f1, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x38, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4efe90, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4efe90, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efe98, 1) MULTIEQUAL (ram, 0x4efe98, 1) , (ram, 0x4efe98, 1) , (ram, 0x4efe98, 1) , (ram, 0x4efe98, 1) , (ram, 0x4efe98, 1)]
[(ram, 0x4efe90, 8) MULTIEQUAL (ram, 0x4efe90, 8) , (ram, 0x4efe90, 8) , (ram, 0x4efe90, 8) , (ram, 0x4efe90, 8) , (ram, 0x4efe90, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x248799, 1)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (unique, 0x100001ba, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4efea8, 8) MULTIEQUAL (unique, 0x100001b2, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efe98, 1) MULTIEQUAL (unique, 0x100001b1, 1) , (ram, 0x4efe98, 1) , (ram, 0x4efe98, 1) , (ram, 0x4efe98, 1)]
[(ram, 0x4efe90, 8) MULTIEQUAL (unique, 0x100001a9, 8) , (ram, 0x4efe90, 8) , (ram, 0x4efe90, 8) , (ram, 0x4efe90, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x100001a1, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000189, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x248a02, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000709, 8), (unique, 0x10000709, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (unique, 0x10000199, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x100001be, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x75, 4), (stack, 0xffffffffffffffa0, 8) PTRSUB (const, 0x0, 8) , (const, 0x248a07, 8)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x75, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x75, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x75, 4)]
[(ram, 0x4efe90, 8) COPY (ram, 0x4efe90, 8), (ram, 0x4efe90, 8) INDIRECT (ram, 0x4efe90, 8) , (const, 0x75, 4)]
[(ram, 0x4efe98, 1) COPY (ram, 0x4efe98, 1), (ram, 0x4efe98, 1) INDIRECT (ram, 0x4efe98, 1) , (const, 0x75, 4)]
[(ram, 0x4efea8, 8) COPY (ram, 0x4efea8, 8), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x75, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4efe90, 8) COPY (ram, 0x4efe90, 8)]
[(ram, 0x4efe98, 1) COPY (ram, 0x4efe98, 1)]
[(ram, 0x4efea8, 8) COPY (ram, 0x4efea8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
