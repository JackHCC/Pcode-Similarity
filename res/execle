[(stack, 0xffffffffffffffc8, 8) COPY (unique, 0x1000019d, 8), (unique, 0x1000019d, 8) CAST (register, 0x10, 8)]
[(stack, 0xffffffffffffffd8, 8) COPY (register, 0x80, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001a5, 8), (unique, 0x100001a5, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffd0, 8) COPY (unique, 0x100001ad, 8), (unique, 0x100001ad, 8) CAST (register, 0x8, 8)]
[(stack, 0xffffffffffffffe0, 8) COPY (register, 0x88, 8)]
[(stack, 0xffffffffffffff98, 4) COPY (const, 0x10, 4)]
[(register, 0x10, 4) COPY (const, 0x10, 4)]
[(stack, 0xffffffffffffffa0, 8) COPY (unique, 0x100001b5, 8), (unique, 0x100001b5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[(unique, 0x1000015c, 8) COPY (unique, 0x100001bd, 8), (unique, 0x100001bd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000015c, 8) , (unique, 0x10000164, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1e5135, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x1000014c, 8) COPY (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x1e5019, 1)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)]
[(unique, 0x10000144, 8) COPY (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100001cd, 8), (unique, 0x100001cd, 8) INT_ADD (unique, 0x100001c5, 8) , (register, 0x8, 8), (unique, 0x100001c5, 8) CAST (unique, 0x3100, 8), (register, 0x8, 8) INT_ZEXT (register, 0x10, 4)]
[(unique, 0x10000154, 8) COPY (register, 0x30, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000154, 8) , (register, 0x30, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1e5038, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000144, 8) , (unique, 0x1000014c, 8)]
[(stack, 0xffffffffffffff98, 4) COPY (const, 0x10, 4)]
[(unique, 0x10000097, 1) COPY (const, 0x0, 1)]
[(unique, 0x10000094, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffa0, 8) COPY (unique, 0x100001d5, 8), (unique, 0x100001d5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x10, 4) COPY (const, 0x10, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3680, 8) , (register, 0x30, 8), (unique, 0x3680, 8) CAST (unique, 0x100001f5, 8), (unique, 0x100001f5, 8) INT_AND (unique, 0x100001ed, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001ed, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000007e, 8) , (unique, 0x1000004e, 8) , (const, 0x1, 8), (unique, 0x1000007e, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff9f, 8), (unique, 0x1000004e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x80, 8) PTRADD (unique, 0x3680, 8) , (unique, 0x100000d9, 8) , (const, 0x8, 8), (unique, 0x100000d9, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x3680, 8) CAST (unique, 0x100001e5, 8), (unique, 0x100001e5, 8) INT_AND (unique, 0x100001dd, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001dd, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000007e, 8) , (unique, 0x1000004e, 8) , (const, 0x1, 8), (unique, 0x1000007e, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff9f, 8), (unique, 0x1000004e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0x1000012c, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3680, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3680, 8) CAST (unique, 0x100001e5, 8), (unique, 0x100001e5, 8) INT_AND (unique, 0x100001dd, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001dd, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000007e, 8) , (unique, 0x1000004e, 8) , (const, 0x1, 8), (unique, 0x1000007e, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff9f, 8), (unique, 0x1000004e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0x10000184, 8) COPY (unique, 0x100001fd, 8), (unique, 0x100001fd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1e50a5, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000095, 1) MULTIEQUAL (unique, 0x10000097, 1) , (unique, 0x10000095, 1) , (unique, 0x10000096, 1)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x10000184, 8) , (unique, 0x1000018c, 8) , (unique, 0x10000194, 8)]
[(unique, 0x10000091, 1) MULTIEQUAL (unique, 0x10000094, 1) , (unique, 0x10000093, 1) , (unique, 0x10000091, 1)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x1000012c, 8) , (unique, 0x10000134, 8) , (unique, 0x1000013c, 8)]
[ ---  CBRANCH (ram, 0x1e510d, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x144, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000020d, 8), (unique, 0x1000020d, 8) INT_ADD (unique, 0x10000205, 8) , (register, 0x8, 8), (unique, 0x10000205, 8) CAST (unique, 0x3100, 8), (register, 0x8, 8) INT_ZEXT (register, 0x10, 4)]
[(unique, 0x1000017c, 8) COPY (register, 0x90, 8)]
[(unique, 0x1000019c, 1) COPY (unique, 0x10000095, 1)]
[ ---  CBRANCH (ram, 0x1e50a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x80, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000093, 1) COPY (const, 0x1, 1)]
[(unique, 0x10000134, 8) COPY (register, 0x0, 8)]
[(unique, 0x1000018c, 8) COPY (register, 0x90, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x196, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x1e514f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1e5146, 1) , (unique, 0x10000092, 1), (unique, 0x10000092, 1) BOOL_NEGATE (unique, 0x10000091, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x1000017c, 8) , (unique, 0x3100, 8)]
[(stack, 0xffffffffffffff98, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1e5146, 1) , (unique, 0x10000090, 1), (unique, 0x10000090, 1) MULTIEQUAL (unique, 0x1000019c, 1) , (unique, 0x10000091, 1)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffa0, 8) COPY (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x1e50c8, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) INT_ZEXT (stack, 0xffffffffffffff98, 4), (stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(unique, 0x10000174, 8) COPY (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[ ---  CBRANCH (ram, 0x1e512f, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (stack, 0xffffffffffffff98, 4) , (const, 0x30, 4), (stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(unique, 0x1000016c, 8) COPY (register, 0x88, 8), (register, 0x88, 8) CAST (unique, 0x1000021d, 8), (unique, 0x1000021d, 8) INT_ADD (unique, 0x10000215, 8) , (register, 0x0, 8), (unique, 0x10000215, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1e50db, 8), (register, 0x20, 8) CAST (unique, 0x10000235, 8), (unique, 0x10000235, 8) INT_ADD (unique, 0x1000022d, 8) , (unique, 0x1000004e, 8), (unique, 0x1000022d, 8) CAST (unique, 0x10000119, 8), (unique, 0x10000119, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff90, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x17b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17b, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x17b, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x17a, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x17b, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x17a, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x17b, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x17a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x17b, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x17a, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x17b, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x17a, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x17b, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x17a, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x17b, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x17a, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x17b, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x17a, 4)]
[(register, 0x0, 4) CALL (ram, 0x1e4e30, 8) , (register, 0x38, 8) , (unique, 0x3680, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000225, 8), (unique, 0x10000225, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x1000016c, 8) , (unique, 0x10000174, 8)]
[ ---  BRANCH (ram, 0x1e50f8, 1)]
[(unique, 0x10000096, 1) COPY (const, 0x1, 1)]
[(unique, 0x1000013c, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000194, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x1e50a5, 1)]
[ ---  CBRANCH (ram, 0x1e50e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x7fffffff, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x86, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000023d, 8) , (const, 0x7, 4), (unique, 0x1000023d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffd8, 8) MULTIEQUAL (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1e5141, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000245, 8), (unique, 0x10000245, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xa5, 4), (stack, 0xffffffffffffff90, 8) COPY (const, 0x1e5146, 8)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xa5, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xa5, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xa5, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa5, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xa5, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xa5, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xa5, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xa5, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa5, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x10000164, 8) COPY (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x1e5008, 1)]
