[(register, 0x18, 8) COPY (const, 0x10, 8)]
[(unique, 0x3c80, 8) CAST (unique, 0x1000023b, 8), (unique, 0x1000023b, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffdf98, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(unique, 0x100001c3, 8) COPY (register, 0x30, 8)]
[(unique, 0x100001d3, 8) COPY (unique, 0x10000243, 8), (unique, 0x10000243, 8) CAST (register, 0x10, 8)]
[(unique, 0x100001e3, 8) COPY (unique, 0x1000024b, 8), (unique, 0x1000024b, 8) CAST (register, 0x8, 8)]
[(unique, 0x100001f3, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000203, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1cbf13, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0xb0, 4) COPY (const, 0x1, 4)]
[(register, 0xb8, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000193, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffdf98, 8)]
[(unique, 0x100001ab, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) COPY (const, 0x400, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000203, 8) , (unique, 0x10000137, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x100001f3, 8) , (unique, 0x1000012f, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100001e3, 8) , (unique, 0x10000127, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x100001d3, 8) , (unique, 0x1000011f, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffdf98, 8) MULTIEQUAL (unique, 0x100001c3, 8) , (unique, 0x10000117, 8) , (stack, 0xffffffffffffdf98, 8)]
[(stack, 0xffffffffffffdf88, 8) MULTIEQUAL (unique, 0x3c80, 8) , (unique, 0x1000010f, 8) , (unique, 0x1000010f, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100001ab, 8) , (unique, 0x100001b3, 8) , (unique, 0x100000c1, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10000193, 8) , (unique, 0x100000f3, 8) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0x1000019b, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10000193, 8) , (unique, 0x100000f3, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1cbef1, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x2f, 4) , (register, 0x18, 4), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100000eb, 8) , (unique, 0x100000eb, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x18, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x8, 4), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100000eb, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (stack, 0xffffffffffffdf98, 8) , (const, 0x8f, 4), (stack, 0xffffffffffffdf98, 8) MULTIEQUAL (stack, 0xffffffffffffdf98, 8) , (stack, 0xffffffffffffdf98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) INT_ADD (unique, 0x10000253, 8) , (register, 0x18, 8), (unique, 0x10000253, 8) CAST (unique, 0x3c80, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100000eb, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x1000020b, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x1000019b, 8) , (register, 0x0, 8)]
[(unique, 0x1000021b, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (unique, 0x100000c1, 8)]
[(unique, 0x1000022b, 8) COPY (stack, 0xffffffffffffdf88, 8), (stack, 0xffffffffffffdf88, 8) MULTIEQUAL (stack, 0xffffffffffffdf88, 8) , (unique, 0x1000010f, 8)]
[(unique, 0x100000f3, 8) MULTIEQUAL (unique, 0x1000020b, 8) , (unique, 0x10000213, 8)]
[(unique, 0x100000fb, 8) MULTIEQUAL (unique, 0x1000021b, 8) , (unique, 0x10000223, 8)]
[(unique, 0x10000103, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(unique, 0x1000010f, 8) MULTIEQUAL (unique, 0x1000022b, 8) , (unique, 0x10000233, 8)]
[(unique, 0x10000117, 8) MULTIEQUAL (stack, 0xffffffffffffdf98, 8) , (stack, 0xffffffffffffdf98, 8)]
[(unique, 0x1000011f, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000127, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x1000012f, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x10000137, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x18, 4) SUBPIECE (unique, 0x100000eb, 8) , (const, 0x0, 4), (unique, 0x100000eb, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1cbf0e, 1) , (unique, 0x100000ea, 1), (unique, 0x100000ea, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1cbf50, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 4) , (const, 0x30, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000203, 8) , (unique, 0x10000137, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x100001f3, 8) , (unique, 0x1000012f, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100001e3, 8) , (unique, 0x10000127, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x100001d3, 8) , (unique, 0x1000011f, 8)]
[(stack, 0xffffffffffffdf98, 8) MULTIEQUAL (unique, 0x100001c3, 8) , (unique, 0x10000117, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x3800, 8) , (unique, 0x100000f3, 8)]
[(register, 0x18, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) INT_ADD (unique, 0x10000263, 8) , (register, 0x18, 8), (unique, 0x10000263, 8) CAST (unique, 0x3c80, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100000eb, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (stack, 0xffffffffffffdf98, 8) , (const, 0x141, 4), (stack, 0xffffffffffffdf98, 8) MULTIEQUAL (stack, 0xffffffffffffdf98, 8) , (unique, 0x10000117, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x141, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x1000011f, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x141, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x10000127, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x141, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (unique, 0x1000012f, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x141, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000137, 8)]
[(register, 0x0, 4) CALL (ram, 0x1cbcf0, 8) , (register, 0x38, 8) , (register, 0xa0, 8) , (unique, 0x10000273, 8), (unique, 0x10000273, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x1000010f, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0x100000f3, 8)]
[ ---  CBRANCH (ram, 0x1cbf3b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (register, 0x28, 8), (register, 0x28, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffdf98, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0x100000f3, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (stack, 0xffffffffffffdf98, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x151, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0xa0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(unique, 0x100001b3, 8) COPY (unique, 0x100000fb, 8)]
[ ---  CBRANCH (ram, 0x1cbe80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000fb, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_ZEXT (register, 0xb0, 4), (register, 0xb0, 4) INT_ADD (unique, 0x10000103, 4) , (const, 0x1, 4)]
[(unique, 0x100000c1, 8) INT_MULT (unique, 0x100000fb, 8) , (const, 0x2, 8)]
[(register, 0x30, 8) INT_LEFT (unique, 0x100000fb, 8) , (const, 0x4, 4)]
[(unique, 0x10000183, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1cbec6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000f3, 8) , (unique, 0x3800, 8)]
[(unique, 0x1000018b, 8) COPY (unique, 0x100000f3, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (unique, 0x10000117, 8) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x1000011f, 8) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000127, 8) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x1000012f, 8) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000137, 8) , (const, 0xd9, 4)]
[ ---  CBRANCH (ram, 0x1cbf80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000027b, 8), (unique, 0x1000027b, 8) CALL (ram, 0x11f7f0, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000183, 8) , (unique, 0x1000018b, 8)]
[ ---  CBRANCH (ram, 0x1cbf8d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000f3, 8) , (unique, 0x3800, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (stack, 0xffffffffffffdf98, 8) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x189, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x100000f3, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1cbf60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000f3, 8) , (unique, 0x3800, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (stack, 0xffffffffffffdf98, 8) , (const, 0x177, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x177, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x177, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x177, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x177, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000283, 8), (unique, 0x10000283, 8) CALL (ram, 0x193a40, 8) , (register, 0x0, 8) , (unique, 0x100000f3, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (unique, 0x100000fb, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1cbe80, 1)]
[(unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (register, 0xb8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1cbe89, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x18, 4) , (const, 0x30, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100000eb, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (stack, 0xffffffffffffdf98, 8) , (const, 0x11d, 4), (stack, 0xffffffffffffdf98, 8) MULTIEQUAL (stack, 0xffffffffffffdf98, 8) , (stack, 0xffffffffffffdf98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffdf88, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8), (stack, 0xffffffffffffdf88, 8) MULTIEQUAL (stack, 0xffffffffffffdf88, 8) , (unique, 0x1000010f, 8)]
[(unique, 0x10000213, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x1000019b, 8) , (register, 0x0, 8)]
[(unique, 0x10000223, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (unique, 0x100000c1, 8)]
[(unique, 0x10000233, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffdf88, 8) , (const, 0x1, 8) , (const, 0x8, 8), (stack, 0xffffffffffffdf88, 8) MULTIEQUAL (stack, 0xffffffffffffdf88, 8) , (unique, 0x1000010f, 8)]
