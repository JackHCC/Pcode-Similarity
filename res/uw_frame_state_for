[(unique, 0x10000425, 8) COPY (register, 0x30, 8)]
[(register, 0x8, 8) COPY (const, 0x30, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000425, 8) , (unique, 0x1000042d, 8)]
[ ---  CBRANCH (ram, 0x4932de, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x1000042d, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x4932db, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x1000048d, 8), (unique, 0x1000048d, 8) INT_ADD (register, 0x38, 8) , (const, 0xd0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000495, 8), (unique, 0x10000495, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x493628, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000049d, 8), (unique, 0x1000049d, 8) INT_ADD (register, 0x38, 8) , (const, 0x98, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x5, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x77, 4)]
[ ---  CBRANCH (ram, 0x493728, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004ad, 8), (unique, 0x100004ad, 8) CALL (ram, 0x496e80, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_SUB (unique, 0x3880, 8) , (unique, 0x1000020f, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x1000020f, 8) INT_SRIGHT (unique, 0xbd80, 8) , (const, 0x3f, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004a5, 8), (unique, 0x100004a5, 8) INT_ADD (register, 0x38, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x493628, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x48, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004b5, 8), (unique, 0x100004b5, 8) INT_ADD (register, 0x38, 8) , (const, 0x98, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x5, 8)]
[ ---  CBRANCH (ram, 0x493628, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x50f0000000fc0c7, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004bd, 8), (unique, 0x100004bd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x5, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004d5, 8) , (const, 0x1, 4), (unique, 0x100004d5, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x28, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x7, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x26, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004dd, 8) , (const, 0x1, 4), (unique, 0x100004dd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SUB (unique, 0x3200, 8) , (unique, 0xbd80, 8), (unique, 0x3200, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x90, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x8, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x25, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_SUB (unique, 0x3200, 8) , (unique, 0xbd80, 8), (unique, 0x3200, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x88, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x8, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x10, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_SUB (unique, 0x3200, 8) , (unique, 0xbd80, 8), (unique, 0x3200, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x98, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x8, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x12, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_SUB (unique, 0x3200, 8) , (unique, 0xbd80, 8), (unique, 0x3200, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x8, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x14, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x70, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x8, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x16, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xa, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x68, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x8, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x18, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x48, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004e5, 8) , (const, 0x1, 4), (unique, 0x100004e5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x8, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x1a, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x50, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004ed, 8) , (const, 0x1, 4), (unique, 0x100004ed, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004f5, 8) , (const, 0x1, 4), (unique, 0x100004f5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004fd, 8) , (const, 0x1, 4), (unique, 0x100004fd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000505, 8) , (const, 0x1, 4), (unique, 0x10000505, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000050d, 8) , (const, 0x1, 4), (unique, 0x1000050d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xc, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x78, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000515, 8) , (const, 0x1, 4), (unique, 0x10000515, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x11, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000051d, 8) , (const, 0x1, 4), (unique, 0x1000051d, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x13, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000525, 8) , (const, 0x1, 4), (unique, 0x10000525, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x15, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000052d, 8) , (const, 0x1, 4), (unique, 0x1000052d, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x17, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000535, 8) , (const, 0x1, 4), (unique, 0x10000535, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x19, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000053d, 8) , (const, 0x1, 4), (unique, 0x1000053d, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x1b, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000545, 8) , (const, 0x1, 4), (unique, 0x10000545, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x1d, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x8, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x1c, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x58, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000054d, 8) , (const, 0x1, 4), (unique, 0x1000054d, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x1f, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x20, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x8, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x1e, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000555, 8) , (const, 0x1, 4), (unique, 0x10000555, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x21, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x10, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x2d, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x1, 1), (unique, 0x3200, 8) CAST (unique, 0x10000565, 8), (unique, 0x10000565, 8) INT_ADD (unique, 0x1000055d, 8) , (const, 0x173, 8), (unique, 0x1000055d, 8) CAST (register, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd80, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x29, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000056d, 8), (unique, 0x1000056d, 8) INT_ADD (register, 0x38, 8) , (const, 0xb8, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000591, 8), (unique, 0x10000591, 8) INT_ADD (unique, 0x10000589, 8) , (const, 0x9, 8), (unique, 0x10000589, 8) CAST (register, 0x80, 8), (register, 0x80, 8) CAST (unique, 0x10000581, 8), (unique, 0x10000581, 8) INT_ADD (unique, 0x10000579, 8) , (unique, 0x1000022d, 8), (unique, 0x10000579, 8) CAST (register, 0x0, 8), (unique, 0x1000022d, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000575, 4), (unique, 0x10000575, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9d, 4)]
[(unique, 0x3a00, 8) CAST (unique, 0x100005b1, 8), (unique, 0x100005b1, 8) INT_ADD (unique, 0x100005a9, 8) , (unique, 0x10000245, 8), (unique, 0x100005a9, 8) CAST (register, 0x80, 8), (unique, 0x10000245, 8) INT_ADD (register, 0x0, 8) , (const, 0xa, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8), (register, 0x80, 8) CAST (unique, 0x10000581, 8), (unique, 0x10000581, 8) INT_ADD (unique, 0x10000579, 8) , (unique, 0x1000022d, 8), (unique, 0x10000579, 8) CAST (register, 0x0, 8), (unique, 0x1000022d, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000575, 4), (unique, 0x10000575, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x493560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x65, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005a1, 8), (unique, 0x100005a1, 8) INT_ADD (unique, 0x10000599, 8) , (const, 0x9, 8), (unique, 0x10000599, 8) CAST (register, 0x80, 8), (register, 0x80, 8) CAST (unique, 0x10000581, 8), (unique, 0x10000581, 8) INT_ADD (unique, 0x10000579, 8) , (unique, 0x1000022d, 8), (unique, 0x10000579, 8) CAST (register, 0x0, 8), (unique, 0x1000022d, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000575, 4), (unique, 0x10000575, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x493367, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x68, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005c1, 8), (unique, 0x100005c1, 8) INT_ADD (unique, 0x100005b9, 8) , (const, 0xa, 8), (unique, 0x100005b9, 8) CAST (register, 0x80, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100005d1, 8), (unique, 0x100005d1, 8) INT_ADD (unique, 0x100005c9, 8) , (const, 0xb, 8), (unique, 0x100005c9, 8) CAST (register, 0x80, 8)]
[(register, 0x18, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd80, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x2f, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[ ---  BRANCH (ram, 0x493367, 1)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005e1, 8), (unique, 0x100005e1, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3a00, 8) , (unique, 0x3a00, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x493920, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x3, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005d9, 8), (unique, 0x100005d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x49364c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x8, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x49364c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005f1, 8), (unique, 0x100005f1, 8) INT_ADD (unique, 0x100005e9, 8) , (const, 0x1, 8), (unique, 0x100005e9, 8) CAST (register, 0x18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x3, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000601, 8), (unique, 0x10000601, 8) INT_ADD (unique, 0x100005f9, 8) , (const, 0x2, 8), (unique, 0x100005f9, 8) CAST (register, 0x18, 8)]
[(register, 0x18, 8) CAST (unique, 0x10000611, 8), (unique, 0x10000611, 8) INT_ADD (unique, 0x10000609, 8) , (const, 0x2, 8), (unique, 0x10000609, 8) CAST (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x493379, 1)]
[(unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x493383, 1)]
[(register, 0x18, 8) CAST (unique, 0x10000621, 8), (unique, 0x10000621, 8) INT_ADD (unique, 0x10000619, 8) , (const, 0x1, 8), (unique, 0x10000619, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x38, 8) INT_OR (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x493380, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xff, 1) , (unique, 0x10000629, 1), (unique, 0x10000629, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x38, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x2c, 8) , (const, 0x8, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000040d, 8) COPY (register, 0x18, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x38, 8) INT_OR (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000062a, 8), (unique, 0x1000062a, 8) CAST (register, 0x18, 8), (register, 0x18, 8) COPY (unique, 0x1000041d, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4), (unique, 0x1000041d, 8) MULTIEQUAL (unique, 0x1000040d, 8) , (unique, 0x10000415, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000415, 8) COPY (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x1000063a, 8), (unique, 0x1000063a, 8) INT_ADD (unique, 0x10000632, 8) , (const, 0x1, 8), (unique, 0x10000632, 8) CAST (register, 0x18, 8), (register, 0x18, 8) COPY (unique, 0x1000041d, 8), (unique, 0x1000041d, 8) MULTIEQUAL (unique, 0x1000040d, 8) , (unique, 0x10000415, 8)]
[ ---  CBRANCH (ram, 0x4933a8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000642, 1) , (const, 0x0, 1), (unique, 0x10000642, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000062a, 8), (unique, 0x1000062a, 8) CAST (register, 0x18, 8), (register, 0x18, 8) COPY (unique, 0x1000041d, 8), (unique, 0x1000041d, 8) MULTIEQUAL (unique, 0x1000040d, 8) , (unique, 0x10000415, 8)]
[ ---  CBRANCH (ram, 0x4933dc, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (const, 0x40, 4)]
[ ---  CBRANCH (ram, 0x4933dc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000217, 1) , (const, 0x0, 1), (unique, 0x10000217, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1)]
[(register, 0x38, 8) INT_OR (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x38, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x2b, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x493588, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x1, 1)]
[(unique, 0x3100, 8) CAST (unique, 0x10000653, 8), (unique, 0x10000653, 8) INT_ADD (unique, 0x1000064b, 8) , (const, 0x2, 8), (unique, 0x1000064b, 8) CAST (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x2d, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000643, 8), (unique, 0x10000643, 8) CAST (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x493419, 1)]
[(register, 0x18, 8) CAST (unique, 0x1000066b, 8), (unique, 0x1000066b, 8) INT_ADD (unique, 0x10000663, 8) , (const, 0x1, 8), (unique, 0x10000663, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x38, 8) INT_OR (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000065b, 8), (unique, 0x1000065b, 8) CAST (register, 0x18, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x4933f8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000673, 1) , (const, 0x0, 1), (unique, 0x10000673, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000065b, 8), (unique, 0x1000065b, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x38, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x2d, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0xff, 1), (unique, 0x3200, 8) CAST (unique, 0x1000067c, 8), (unique, 0x1000067c, 8) INT_ADD (unique, 0x10000674, 8) , (const, 0x171, 8), (unique, 0x10000674, 8) CAST (register, 0x30, 8)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000485, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x4936a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x7a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0x18, 8) CAST (unique, 0x10000694, 8), (unique, 0x10000694, 8) INT_ADD (unique, 0x1000068c, 8) , (const, 0x1, 8), (unique, 0x1000068c, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x88, 8) CAST (unique, 0x100006a4, 8), (unique, 0x100006a4, 8) INT_OR (unique, 0x1000069c, 8) , (register, 0x0, 8), (unique, 0x1000069c, 8) CAST (register, 0x88, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000684, 8), (unique, 0x10000684, 8) CAST (register, 0x18, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x4936b0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100006ac, 1) , (const, 0x0, 1), (unique, 0x100006ac, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000684, 8), (unique, 0x10000684, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x1, 1), (unique, 0x3200, 8) CAST (unique, 0x100006b5, 8), (unique, 0x100006b5, 8) INT_ADD (unique, 0x100006ad, 8) , (const, 0x172, 8), (unique, 0x100006ad, 8) CAST (register, 0x30, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000047d, 8) COPY (register, 0x88, 8), (register, 0x88, 8) CAST (unique, 0x100006cd, 8), (unique, 0x100006cd, 8) INT_ADD (unique, 0x100006bd, 8) , (unique, 0x100006c5, 8), (unique, 0x100006c5, 8) CAST (register, 0x18, 8), (unique, 0x100006bd, 8) CAST (register, 0x88, 8)]
[(unique, 0x100003e1, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x100003ea, 8) MULTIEQUAL (unique, 0x1000047d, 8) , (unique, 0x10000485, 8)]
[(unique, 0x100003f2, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(unique, 0x100003fa, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x4934a4, 1) , (unique, 0x10000402, 1), (unique, 0x10000402, 1) INT_NOTEQUAL (unique, 0x100003e9, 1) , (const, 0x0, 1), (unique, 0x100003e9, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(unique, 0x10000455, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (unique, 0x100003fa, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x49347c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000455, 8) , (unique, 0x1000045d, 8) , (register, 0xa0, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100003e1, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x493450, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x4c, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0x100003e9, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x4935a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x52, 1)]
[(register, 0x18, 8) CAST (unique, 0x100006e5, 8), (unique, 0x100006e5, 8) INT_ADD (unique, 0x100006dd, 8) , (const, 0x1, 8), (unique, 0x100006dd, 8) CAST (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006ed, 8) , (unique, 0xbb00, 1), (unique, 0x100006ed, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x2e, 8) , (const, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100006d5, 8), (unique, 0x100006d5, 8) CAST (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x49346f, 1)]
[ ---  CBRANCH (ram, 0x4935b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x50, 1)]
[(register, 0x0, 8) CAST (unique, 0x1000070d, 8), (unique, 0x1000070d, 8) CALL (ram, 0x4927f0, 8) , (unique, 0xbb00, 1) , (register, 0x0, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8), (unique, 0x3100, 8) CAST (unique, 0x10000705, 8), (unique, 0x10000705, 8) INT_ADD (unique, 0x100006fd, 8) , (const, 0x1, 8), (unique, 0x100006fd, 8) CAST (register, 0x18, 8), (register, 0x0, 8) CALL (ram, 0x492940, 8) , (unique, 0xbb00, 1) , (register, 0x38, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100006f5, 8), (unique, 0x100006f5, 8) CAST (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (stack, 0xffffffffffffffc0, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x2a, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4aa, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x49d, 4)]
[ ---  BRANCH (ram, 0x49346f, 1)]
[(unique, 0x10000435, 8) COPY (unique, 0x100003f2, 8)]
[ ---  CBRANCH (ram, 0x493643, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x53, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x1, 1), (unique, 0x3200, 8) CAST (unique, 0x1000071d, 8), (unique, 0x1000071d, 8) INT_ADD (unique, 0x10000715, 8) , (const, 0x173, 8), (unique, 0x10000715, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8) , (register, 0x18, 8)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x49349b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(register, 0x18, 8) CAST (unique, 0x10000735, 8), (unique, 0x10000735, 8) INT_ADD (unique, 0x1000072d, 8) , (const, 0x1, 8), (unique, 0x1000072d, 8) CAST (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbb00, 1), (unique, 0x3200, 8) CAST (unique, 0x10000745, 8), (unique, 0x10000745, 8) INT_ADD (unique, 0x1000073d, 8) , (const, 0x171, 8), (unique, 0x1000073d, 8) CAST (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000725, 8), (unique, 0x10000725, 8) CAST (register, 0x18, 8)]
[(unique, 0x1000045d, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x49347c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000043d, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000445, 8) COPY (unique, 0x100003f2, 8)]
[ ---  CBRANCH (ram, 0x493640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100003f2, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000044d, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10000435, 8) , (unique, 0x1000043d, 8)]
[ ---  CBRANCH (ram, 0x4934a4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10000435, 8) , (unique, 0x1000043d, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x3, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2dd, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x4929d0, 8) , (register, 0x88, 8) , (unique, 0x3a00, 8) , (register, 0x38, 8) , (register, 0x30, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x1000074d, 8) , (unique, 0x10000275, 8), (unique, 0x1000074d, 8) CAST (register, 0x80, 8), (unique, 0x10000275, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10000445, 8) , (unique, 0x1000044d, 8) , (unique, 0x100003ea, 8)]
[ ---  CBRANCH (ram, 0x493910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0xff, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000755, 8), (unique, 0x10000755, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x2e, 8) , (const, 0x8, 8)]
[(register, 0xa0, 8) COPY (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x4934e8, 1)]
[ ---  CBRANCH (ram, 0x493900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x2, 1), (register, 0x0, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x7, 1)]
[(register, 0xa0, 8) COPY (const, 0xc, 8)]
[ ---  BRANCH (ram, 0x4934e8, 1)]
[ ---  CBRANCH (ram, 0x493618, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 1) , (const, 0x3, 1)]
[ ---  CBRANCH (ram, 0x493608, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x0, 1)]
[ ---  CALL (ram, 0x401780, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xa0, 8) COPY (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x493600, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x3, 1)]
[ ---  CBRANCH (ram, 0x401780, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x4, 1)]
[ ---  CALL (ram, 0x4011c4, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xa0, 8) COPY (const, 0x18, 8)]
[ ---  BRANCH (ram, 0x4934e8, 1)]
[(register, 0xa0, 8) CAST (unique, 0x10000765, 8), (unique, 0x10000765, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x1000075d, 8), (unique, 0x1000075d, 8) CAST (register, 0x0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000785, 8), (unique, 0x10000785, 8) INT_ADD (unique, 0x1000077d, 8) , (const, 0x171, 8), (unique, 0x1000077d, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x493660, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000775, 8), (unique, 0x10000775, 8) INT_ADD (unique, 0x1000076d, 8) , (const, 0x172, 8), (unique, 0x1000076d, 8) CAST (register, 0x30, 8)]
[(unique, 0x10000475, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x493532, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xff, 1)]
[(register, 0x0, 8) CAST (unique, 0x1000078d, 8), (unique, 0x1000078d, 8) CALL (ram, 0x4927f0, 8) , (unique, 0xbb00, 1) , (register, 0x0, 8) , (register, 0xa0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x492940, 8) , (unique, 0xbb00, 1) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (stack, 0xffffffffffffffc0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000795, 8), (unique, 0x10000795, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x408, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ff, 4)]
[ ---  BRANCH (ram, 0x493532, 1)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x493508, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000079d, 1) , (const, 0x0, 1), (unique, 0x1000079d, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0x10000465, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4936f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xff, 1)]
[ ---  CALL (ram, 0x4927f0, 8) , (unique, 0xbb00, 1) , (register, 0x0, 8) , (register, 0xa0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x492940, 8) , (unique, 0xbb00, 1) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (stack, 0xffffffffffffffc0, 8), (unique, 0x3200, 8) CAST (unique, 0x1000079e, 8), (unique, 0x1000079e, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3dc, 4)]
[ ---  BRANCH (ram, 0x493532, 1)]
[ ---  CALL (ram, 0x4929d0, 8) , (register, 0xb8, 8) , (unique, 0x3a00, 8) , (register, 0x38, 8) , (register, 0x30, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x100007a6, 8) , (unique, 0x10000285, 8), (unique, 0x100007a6, 8) CAST (register, 0x0, 8), (unique, 0x10000285, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000465, 8) , (unique, 0x10000465, 8) , (unique, 0x10000475, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100007ae, 8), (unique, 0x100007ae, 8) CAST (register, 0x18, 8)]
