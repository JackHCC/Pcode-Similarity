[(unique, 0x10000311, 8) COPY (ram, 0x4eae68, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003e9, 8), (unique, 0x100003e9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1e6228, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x6, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30a, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x30a, 4)]
[ ---  CBRANCH (ram, 0x1e6128, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f970, 8) , (register, 0x38, 8) , (unique, 0x100003f1, 8), (unique, 0x100003f1, 8) CAST (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1e61c8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x6, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1e6150, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0xd, 4)]
[ ---  CBRANCH (ram, 0x1e6200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x14, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x48, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x48, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x48, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x48, 4)]
[ ---  CBRANCH (ram, 0x1e6238, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f970, 8) , (register, 0x38, 8) , (unique, 0x100003f9, 8), (unique, 0x100003f9, 8) CAST (register, 0x20, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CBRANCH (ram, 0x1e6128, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x26, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000401, 8), (unique, 0x10000401, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x1e6310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff48, 8) , (const, 0xadf5, 8)]
[ ---  CBRANCH (ram, 0x1e62e8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000409, 8) , (const, 0xadf6, 8), (unique, 0x10000409, 8) CAST (stack, 0xffffffffffffff48, 8)]
[ ---  CBRANCH (ram, 0x1e6310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x1badface, 8)]
[ ---  CBRANCH (ram, 0x1e6370, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000411, 8) , (const, 0x1badfacf, 8), (unique, 0x10000411, 8) CAST (stack, 0xffffffffffffff48, 8)]
[ ---  CBRANCH (ram, 0x1e6310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x72959, 8)]
[ ---  CBRANCH (ram, 0x1e6128, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x414a53, 8)]
[(unique, 0x10000341, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[ ---  CBRANCH (ram, 0x1e6310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x28cd3d45, 8)]
[ ---  CBRANCH (ram, 0x1e6128, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x5346544e, 8)]
[ ---  CBRANCH (ram, 0x1e6310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x1cd1, 8)]
[ ---  CBRANCH (ram, 0x1e63d0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000419, 8) , (const, 0x1cd2, 8), (unique, 0x10000419, 8) CAST (stack, 0xffffffffffffff48, 8)]
[ ---  CBRANCH (ram, 0x1e6128, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x2f, 8)]
[(unique, 0x10000339, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[ ---  CBRANCH (ram, 0x1e6310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x4d44, 8)]
[ ---  CBRANCH (ram, 0x1e6310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x7275, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15e, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x15e, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x15e, 4)]
[ ---  CBRANCH (ram, 0x1e62a0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f970, 8) , (register, 0x38, 8) , (unique, 0x10000421, 8), (unique, 0x10000421, 8) CAST (register, 0x20, 8)]
[(register, 0x0, 8) COPY (const, 0x20, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000429, 8), (unique, 0x10000429, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1e64f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x3153464a, 8)]
[ ---  CBRANCH (ram, 0x1e64c0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000431, 8) , (const, 0x3153464b, 8), (unique, 0x10000431, 8) CAST (stack, 0xffffffffffffff48, 8)]
[ ---  CBRANCH (ram, 0x1e64f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x11954, 8)]
[ ---  CBRANCH (ram, 0x1e6568, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000439, 8) , (const, 0x11955, 8), (unique, 0x10000439, 8) CAST (stack, 0xffffffffffffff48, 8)]
[ ---  CBRANCH (ram, 0x1e64f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x517b, 8)]
[ ---  CBRANCH (ram, 0x1e61b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0xef53, 8)]
[ ---  CBRANCH (ram, 0x1e64f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0xbd00bd0, 8)]
[ ---  CBRANCH (ram, 0x1e64f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x15013346, 8)]
[ ---  CBRANCH (ram, 0x1e61b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x27e0eb, 8)]
[ ---  CBRANCH (ram, 0x1e64f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x58465342, 8)]
[ ---  CBRANCH (ram, 0x1e6508, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000441, 8) , (const, 0x58465343, 8), (unique, 0x10000441, 8) CAST (stack, 0xffffffffffffff48, 8)]
[ ---  CBRANCH (ram, 0x1e64f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x5346544e, 8)]
[ ---  CBRANCH (ram, 0x1e64f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x54190100, 8)]
[ ---  CBRANCH (ram, 0x1e61b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x52654973, 8)]
[ ---  CBRANCH (ram, 0x1e64f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff48, 8) , (const, 0xa501fcf5, 8)]
[(unique, 0x10000361, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x100, 8)]
[ ---  CBRANCH (ram, 0x1e612d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0xf2f52010, 8)]
[ ---  CBRANCH (ram, 0x1e62d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x9123683e, 8)]
[(unique, 0x10000379, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x40, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[ ---  CBRANCH (ram, 0x1e6200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x22e, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x22e, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x22e, 4)]
[ ---  CBRANCH (ram, 0x1e6250, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f970, 8) , (register, 0x38, 8) , (unique, 0x10000449, 8), (unique, 0x10000449, 8) CAST (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1e6320, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000451, 8) , (const, 0x12ff7b7, 8), (unique, 0x10000451, 8) CAST (stack, 0xffffffffffffff48, 8)]
[ ---  CBRANCH (ram, 0x1e65d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x52654973, 8)]
[(unique, 0x100003d1, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xfc17, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[ ---  CBRANCH (ram, 0x1e6530, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000459, 8) , (const, 0x52654974, 8), (unique, 0x10000459, 8) CAST (stack, 0xffffffffffffff48, 8)]
[(unique, 0x100003c9, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x7fffffff, 8)]
[ ---  CBRANCH (ram, 0x1e612d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x58465342, 8)]
[ ---  CBRANCH (ram, 0x1e655a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0xf2f52010, 8)]
[ ---  CBRANCH (ram, 0x1e6360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x54190100, 8)]
[(unique, 0x100003b9, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x2710, 8)]
[ ---  CBRANCH (ram, 0x1e612d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x12ff7b7, 8)]
[(unique, 0x100003c1, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xfde8, 8)]
[ ---  CBRANCH (ram, 0x1e612d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0xbd00bd0, 8)]
[ ---  CBRANCH (ram, 0x1e64fa, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (const, 0x12ff7b3, 8) , (unique, 0x10000461, 8), (unique, 0x10000461, 8) CAST (stack, 0xffffffffffffff48, 8)]
[(unique, 0x100003b1, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x7e, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[ ---  CBRANCH (ram, 0x1e65c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x2468, 8)]
[ ---  CBRANCH (ram, 0x1e6590, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000469, 8) , (const, 0x2469, 8), (unique, 0x10000469, 8) CAST (stack, 0xffffffffffffff48, 8)]
[ ---  CBRANCH (ram, 0x1e65a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x137f, 8)]
[ ---  CBRANCH (ram, 0x1e6360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x138f, 8)]
[(unique, 0x100003a9, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xfa, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[ ---  CBRANCH (ram, 0x1e65b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0xef53, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x280, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x280, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x280, 4)]
[(unique, 0x10000389, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1e5dd0, 8) , (register, 0x38, 8) , (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[ ---  CBRANCH (ram, 0x1e655a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x11954, 8)]
[(unique, 0x100003a1, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x7d00, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[ ---  CBRANCH (ram, 0x1e6360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 8) , (const, 0x2478, 8)]
[(unique, 0x10000391, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xfffa, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[(unique, 0x10000399, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x7f, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[(register, 0x0, 8) COPY (const, 0x7f, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000471, 8), (unique, 0x10000471, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x100002ec, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100002f4, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100002fc, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(unique, 0x10000381, 8) COPY (unique, 0x100002e3, 8), (unique, 0x100002e3, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1e612d, 1) , (unique, 0x100002eb, 1), (unique, 0x100002eb, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x26, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[ ---  CBRANCH (ram, 0x1e64a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x158, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000479, 8) , (const, 0x2, 4), (unique, 0x10000479, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x10000359, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[ ---  BRANCHIND (register, 0x30, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x31a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x31a, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x31a, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x31a, 4)]
[(unique, 0x100003d9, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1e612d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f9d0, 8) , (register, 0x38, 8) , (unique, 0x10000481, 8), (unique, 0x10000481, 8) CAST (register, 0x20, 8)]
[(unique, 0x100003e1, 8) COPY (stack, 0xffffffffffffff50, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x330, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x330, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x330, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x330, 4)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1e612d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f9d0, 8) , (register, 0x38, 8) , (unique, 0x10000489, 8), (unique, 0x10000489, 8) CAST (register, 0x20, 8)]
[(unique, 0x10000319, 8) COPY (stack, 0xffffffffffffff48, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000369, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x346, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x346, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x346, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x346, 4)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1e612d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f760, 8) , (const, 0x1, 4) , (register, 0x38, 8) , (register, 0x20, 8)]
[(register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x100001d3, 4) , (const, 0x2, 4), (unique, 0x100001d3, 4) INT_2COMP (unique, 0x100001d7, 4), (unique, 0x100001d7, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffffdfff, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x6000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff60, 4) , (const, 0xf000, 4)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000331, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000329, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x152, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000491, 8) , (const, 0x16, 4), (unique, 0x10000491, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x10000351, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[(register, 0x0, 8) COPY (const, 0x1000, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000499, 8), (unique, 0x10000499, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3ac, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3ac, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3ac, 4)]
[(unique, 0x10000321, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x3ac, 4)]
[ ---  CBRANCH (ram, 0x1e62bb, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f9d0, 8) , (register, 0x38, 8) , (unique, 0x100004a1, 8), (unique, 0x100004a1, 8) CAST (register, 0x20, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1e612d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x26, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004a9, 8), (unique, 0x100004a9, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000311, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3cd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004b1, 8) , (unique, 0xbc80, 4), (unique, 0x100004b1, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000311, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000371, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xff, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x100002fc, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x100002f4, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x100002ec, 8) , (register, 0x110, 8)]
[(unique, 0x10000349, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1e612d, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x100002f4, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000329, 8) , (unique, 0x10000331, 8) , (unique, 0x10000339, 8) , (unique, 0x10000341, 8) , (unique, 0x10000349, 8) , (unique, 0x10000351, 8) , (unique, 0x10000359, 8) , (unique, 0x10000361, 8) , (unique, 0x10000369, 8) , (unique, 0x10000371, 8) , (unique, 0x10000379, 8) , (unique, 0x10000381, 8) , (unique, 0x10000389, 8) , (unique, 0x10000391, 8) , (unique, 0x10000399, 8) , (unique, 0x100003a1, 8) , (unique, 0x100003a9, 8) , (unique, 0x100003b1, 8) , (unique, 0x100003b9, 8) , (unique, 0x100003c1, 8) , (unique, 0x100003c9, 8) , (unique, 0x100003d1, 8) , (unique, 0x100003d9, 8) , (unique, 0x100003e1, 8) , (register, 0x0, 8) , (unique, 0x10000319, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0x10000321, 8)]
[ ---  CBRANCH (ram, 0x1e65da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004b9, 8), (unique, 0x100004b9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x100002ec, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0x100002fc, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xab, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xab, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
