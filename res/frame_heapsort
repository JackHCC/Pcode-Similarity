[(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[(register, 0xb8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000008d, 8), (unique, 0x1000008d, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x495613, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x18, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x1, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000008d, 8), (unique, 0x1000008d, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x4954f0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x3100, 8) , (register, 0x18, 4) , (register, 0xb8, 8), (register, 0x18, 4) MULTIEQUAL (unique, 0x10000089, 4) , (register, 0x18, 4)]
[(unique, 0x10000089, 4) COPY (register, 0x18, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x10000089, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x4955f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0xffffffff, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x10000089, 4) , (register, 0x18, 4)]
[(register, 0x18, 8) INT_SEXT (register, 0xb8, 4), (register, 0xb8, 4) INT_ADD (stack, 0xffffffffffffffc0, 4) , (const, 0xffffffff, 4), (stack, 0xffffffffffffffc0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0x1000007c, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x495655, 1) , (unique, 0x10000084, 1), (unique, 0x10000084, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x10000085, 4), (unique, 0x10000085, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100000a5, 8), (unique, 0x100000a5, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000095, 8), (unique, 0x10000095, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (unique, 0x1000007c, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) CAST (unique, 0x100000ad, 8), (unique, 0x100000ad, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (unique, 0x1000007c, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000009d, 8), (unique, 0x1000009d, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[ ---  CALL (ram, 0x4954f0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x3100, 8) , (const, 0x0, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_AND (unique, 0x1000007c, 8) , (const, 0xffffffff, 8)]
[(register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) INT_SUB (unique, 0x1000007c, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8)]
