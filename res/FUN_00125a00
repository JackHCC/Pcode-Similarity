[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000035c, 8), (unique, 0x1000035c, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(stack, 0xffffffffffffff90, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x125a7d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000364, 8), (unique, 0x10000364, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000374, 8), (unique, 0x10000374, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x125a7d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000036c, 8), (unique, 0x1000036c, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000394, 8), (unique, 0x10000394, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000038c, 8), (unique, 0x1000038c, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x10000384, 8) , (const, 0x2f, 4), (unique, 0x10000384, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x1000037c, 8) , (const, 0x11, 4), (unique, 0x1000037c, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x125d00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x125e1e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x4f8, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x1000024b, 8) , (unique, 0x10000233, 8) , (const, 0x19f, 4) , (unique, 0x10000263, 8), (unique, 0x10000263, 8) COPY (const, 0x2bbc00, 8), (unique, 0x1000024b, 8) COPY (const, 0x2b39f4, 8), (unique, 0x10000233, 8) COPY (const, 0x2b39e0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000039c, 8), (unique, 0x1000039c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x125be3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003a4, 8), (unique, 0x100003a4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffff90, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4ea, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4b6, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4ea, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4b6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4ea, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x4b6, 4)]
[(register, 0x0, 4) CALLIND (stack, 0xffffffffffffff90, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (stack, 0x8, 4) , (stack, 0x10, 4)]
[ ---  BRANCH (ram, 0x125be3, 1)]
[(unique, 0x1000030c, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x125a97, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(unique, 0x10000314, 8) COPY (register, 0x30, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100003b4, 8), (unique, 0x100003b4, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x1000031c, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003ac, 8), (unique, 0x100003ac, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000030c, 8) , (unique, 0x10000314, 8)]
[ ---  CBRANCH (ram, 0x125c10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x125aab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x7, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003bc, 8), (unique, 0x100003bc, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x125e63, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x486, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000253, 8) , (unique, 0x10000243, 8) , (const, 0x22f, 4) , (unique, 0x10000273, 8), (unique, 0x10000273, 8) COPY (const, 0x2bbc00, 8), (unique, 0x10000253, 8) COPY (const, 0x2b39f4, 8), (unique, 0x10000243, 8) COPY (const, 0x2b39e0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x1000034c, 8) COPY (register, 0x38, 8), (register, 0x38, 8) INT_SEXT (unique, 0x100003cc, 4), (unique, 0x100003cc, 4) CAST (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x125ce1, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003c4, 8), (unique, 0x100003c4, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x125c92, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_LESS (register, 0x80, 4) , (const, 0x4, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x100003d8, 8), (unique, 0x100003d8, 8) INT_ADD (unique, 0x100003d0, 8) , (unique, 0x100002ab, 8), (unique, 0x100003d0, 8) CAST (unique, 0xbd80, 8), (unique, 0x100002ab, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x125cde, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125c92, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x100003e8, 8), (unique, 0x100003e8, 8) INT_ADD (unique, 0x100003e0, 8) , (unique, 0x100002b3, 8), (unique, 0x100003e0, 8) CAST (unique, 0xbd80, 8), (unique, 0x100002b3, 8) INT_ADD (register, 0x38, 8) , (const, 0x5, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125ce1, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125c92, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000034c, 8) , (register, 0x38, 8) , (unique, 0x3100, 8)]
[(register, 0x28, 4) COPY (const, 0x7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x38, 4), (register, 0x38, 4) INT_OR (register, 0x38, 4) , (register, 0x10, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4)]
[ ---  BRANCH (ram, 0x125be3, 1)]
[ ---  CBRANCH (ram, 0x125c92, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x100003f8, 8), (unique, 0x100003f8, 8) INT_ADD (unique, 0x100003f0, 8) , (const, 0x7, 8), (unique, 0x100003f0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x8, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000400, 8), (unique, 0x10000400, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000410, 8), (unique, 0x10000410, 8) INT_ADD (unique, 0x10000408, 8) , (const, 0x5, 8), (unique, 0x10000408, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000420, 8), (unique, 0x10000420, 8) INT_ADD (unique, 0x10000418, 8) , (const, 0x6, 8), (unique, 0x10000418, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000430, 8), (unique, 0x10000430, 8) INT_ADD (unique, 0x10000428, 8) , (const, 0x7, 8), (unique, 0x10000428, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x125aab, 1)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x1000031c, 8) , (unique, 0x1000031c, 8) , (register, 0x8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100002fc, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x10000095, 8) , (const, 0x1, 8), (unique, 0x10000095, 8) INT_2COMP (unique, 0x10000438, 8), (unique, 0x10000438, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x125adb, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESSEQUAL (unique, 0x10000448, 8) , (unique, 0x10000450, 8), (unique, 0x10000450, 8) CAST (register, 0x0, 8), (unique, 0x10000448, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000009d, 8) , (const, 0x1, 8), (unique, 0x1000009d, 8) INT_2COMP (unique, 0x10000440, 8), (unique, 0x10000440, 8) CAST (register, 0xb0, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x10000095, 8) , (const, 0x1, 8), (unique, 0x10000095, 8) INT_2COMP (unique, 0x10000438, 8), (unique, 0x10000438, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000304, 8) COPY (register, 0x10, 8)]
[(unique, 0x1000032c, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002fc, 8) , (unique, 0x10000304, 8)]
[ ---  CBRANCH (ram, 0x125ae6, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x10000458, 8), (unique, 0x10000458, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002fc, 8) , (unique, 0x10000304, 8)]
[(unique, 0x10000334, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000470, 8), (unique, 0x10000470, 8) INT_ADD (unique, 0x10000468, 8) , (register, 0x10, 8), (unique, 0x10000468, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 8) INT_AND (unique, 0x10000460, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x10000460, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000032c, 8) , (unique, 0x10000334, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x105, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x105, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x105, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000478, 8), (unique, 0x10000478, 8) CALL (ram, 0x121230, 8) , (register, 0xb0, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x10000460, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x10000460, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000032c, 8) , (unique, 0x10000334, 8)]
[ ---  CBRANCH (ram, 0x125ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (unique, 0x10000480, 8), (unique, 0x10000480, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x10000220, 1) COPY (const, 0x0, 1)]
[(register, 0x28, 4) COPY (const, 0x4, 4)]
[(register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x7, 4), (register, 0x28, 4) INT_AND (unique, 0x100000cb, 4) , (const, 0xfffffffe, 4), (unique, 0x100000cb, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(unique, 0x1000022d, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0x10000231, 1) MULTIEQUAL (unique, 0x10000220, 1) , (register, 0x200, 1)]
[ ---  CBRANCH (ram, 0x125b25, 1) , (unique, 0x1000022c, 1), (unique, 0x1000022c, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x125be3, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000490, 8), (unique, 0x10000490, 8) INT_ADD (unique, 0x10000488, 8) , (const, 0x14, 8), (unique, 0x10000488, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x125cc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000498, 8), (unique, 0x10000498, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x125bd0, 1)]
[ ---  CBRANCH (ram, 0x125bd0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0xb0, 8)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffff90, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1cd, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a9, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1cd, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1a9, 4), (unique, 0xbd80, 8) CAST (unique, 0x100004a0, 8), (unique, 0x100004a0, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cd, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a9, 4)]
[ ---  CBRANCH (ram, 0x125bc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffff90, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (register, 0x0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (const, 0x0, 8) , (stack, 0x10, 4)]
[(unique, 0x10000354, 4) COPY (unique, 0x1000022d, 4)]
[ ---  CBRANCH (ram, 0x125b95, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000022d, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x125cd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100004c0, 8), (unique, 0x100004c0, 8) INT_SUB (unique, 0x100004b0, 8) , (unique, 0x100004b8, 8), (unique, 0x100004b8, 8) CAST (register, 0x90, 8), (unique, 0x100004b0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x90, 8) PTRADD (register, 0x0, 8) , (unique, 0x1000014f, 8) , (const, 0x1, 8), (unique, 0x1000014f, 8) INT_2COMP (unique, 0x100004a8, 8), (unique, 0x100004a8, 8) CAST (stack, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x125b8d, 1)]
[(unique, 0x10000358, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x125e5c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x7, 4), (register, 0x28, 4) MULTIEQUAL (unique, 0x10000354, 4) , (unique, 0x10000358, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x1000021d, 1) MULTIEQUAL (unique, 0x10000231, 1) , (register, 0x206, 1) , (unique, 0x10000231, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0x1000022d, 4) , (register, 0x28, 4) , (unique, 0x1000022d, 4)]
[ ---  CBRANCH (ram, 0x125be3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x125d5a, 1) , (unique, 0x1000021d, 1)]
[ ---  CBRANCH (ram, 0x125e3d, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x3, 8) , (unique, 0x100004d8, 8), (unique, 0x100004d8, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x8, 8) , (unique, 0x1000019f, 8) , (const, 0x1, 8), (unique, 0x1000019f, 8) INT_2COMP (unique, 0x100004d0, 8), (unique, 0x100004d0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100004c8, 8), (unique, 0x100004c8, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x34a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x34a, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x1000025b, 8) , (unique, 0x1000023b, 8) , (const, 0x309, 4) , (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) COPY (const, 0x2bbc00, 8), (unique, 0x1000025b, 8) COPY (const, 0x2b3a08, 8), (unique, 0x1000023b, 8) COPY (const, 0x2b39e0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x100004e0, 8), (unique, 0x100004e0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x125e14, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x125dff, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004e8, 8) , (unique, 0xbb00, 1), (unique, 0x100004e8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x125df8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x100004f8, 8), (unique, 0x100004f8, 8) INT_ADD (unique, 0x100004f0, 8) , (const, 0x5, 8), (unique, 0x100004f0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125df8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000508, 8), (unique, 0x10000508, 8) INT_ADD (unique, 0x10000500, 8) , (const, 0x6, 8), (unique, 0x10000500, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125df8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000518, 8), (unique, 0x10000518, 8) INT_ADD (unique, 0x10000510, 8) , (const, 0x7, 8), (unique, 0x10000510, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125df8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000520, 8) , (unique, 0xbb00, 1), (unique, 0x10000520, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125df8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(unique, 0x100002ec, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000530, 8), (unique, 0x10000530, 8) INT_ADD (unique, 0x10000528, 8) , (const, 0x9, 8), (unique, 0x10000528, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000033c, 8) COPY (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000033c, 8) , (unique, 0x10000344, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002ec, 8) , (unique, 0x100002f4, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000033c, 8) , (unique, 0x10000344, 8)]
[(unique, 0x100002f4, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002ec, 8) , (unique, 0x100002f4, 8)]
[(unique, 0x10000344, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000033c, 8) , (unique, 0x10000344, 8)]
[ ---  CBRANCH (ram, 0x125de0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000033c, 8) , (unique, 0x10000344, 8)]
[(register, 0xa8, 4) INT_SUB (register, 0xa8, 4) , (register, 0x8, 4), (register, 0x8, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (register, 0xa8, 4) INT_ADD (unique, 0x100001eb, 4) , (const, 0x1, 4), (unique, 0x100001eb, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[(register, 0x28, 4) COPY (const, 0x7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0xa8, 4), (register, 0xa8, 4) INT_OR (register, 0xa8, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[ ---  BRANCH (ram, 0x125be3, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x0, 4) COPY (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (unique, 0x1000022d, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x125e19, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000538, 8), (unique, 0x10000538, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x24c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x24c, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000540, 8), (unique, 0x10000540, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x125abd, 1)]
