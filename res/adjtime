[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c5, 8), (unique, 0x100000c5, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1d2c68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff18, 4) COPY (const, 0xa001, 4)]
[ ---  BRANCH (ram, 0x1d2bc2, 1)]
[(register, 0x30, 8) INT_SREM (unique, 0xbd80, 8) , (const, 0xf4240, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1d2c78, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x10c2, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (register, 0x8, 8) , (const, 0x861, 8), (register, 0x8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x10000022, 8), (unique, 0x10000022, 8) INT_SDIV (unique, 0xbd80, 8) , (const, 0xf4240, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000009d, 8), (unique, 0x1000009d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[(register, 0x80, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1dc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000cd, 8) , (const, 0x16, 4), (unique, 0x100000cd, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1d2c18, 1)]
[(stack, 0xffffffffffffff18, 4) COPY (const, 0x8001, 4)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0xf4240, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0xc7, 4), (stack, 0xffffffffffffff18, 4) MULTIEQUAL (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (register, 0x8, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xc7, 4)]
[(register, 0x80, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1d2c18, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2220c0, 8) , (register, 0x20, 8)]
[(register, 0x80, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1d2c18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x1000005a, 8) INT_SDIV (stack, 0xffffffffffffff20, 8) , (const, 0xf4240, 8)]
[ ---  CBRANCH (ram, 0x1d2c40, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (stack, 0xffffffffffffff20, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000b5, 8) , (unique, 0x1000005a, 8), (unique, 0x100000b5, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x193, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x8, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (stack, 0xffffffffffffff20, 8), (register, 0x38, 8) INT_MULT (register, 0x38, 8) , (const, 0xf4240, 8), (register, 0x38, 8) INT_DIV (unique, 0x100000d5, 8) , (const, 0xf4240, 8), (unique, 0x100000d5, 8) CAST (register, 0x8, 8), (register, 0x8, 8) INT_2COMP (stack, 0xffffffffffffff20, 8)]
[ ---  BRANCH (ram, 0x1d2c18, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000a5, 8) , (unique, 0x1000005a, 8), (unique, 0x100000a5, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x163, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x157, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_SREM (stack, 0xffffffffffffff20, 8) , (const, 0xf4240, 8)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 4) MULTIEQUAL (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x1d2c8e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000dd, 8), (unique, 0x100000dd, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0x186, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x186, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x186, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x186, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x80, 4)]
