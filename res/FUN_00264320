[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe68, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe68, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3a, 4), (register, 0x20a, 1) COPY (const, 0x0, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x3a, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3a, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000246, 8), (unique, 0x10000246, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 4) CALL (ram, 0x1e4840, 8) , (const, 0x0, 4)]
[(unique, 0x3800, 8) CAST (unique, 0x1000024e, 8), (unique, 0x1000024e, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(unique, 0x3c80, 8) CAST (unique, 0x10000256, 8), (unique, 0x10000256, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff10, 4) COPY (const, 0x0, 4)]
[(stack, 0xfffffffffffffe88, 8) PTRSUB (const, 0x0, 8) , (const, 0x263ac0, 8)]
[(unique, 0x10000236, 8) COPY (unique, 0x1000025e, 8), (unique, 0x1000025e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000206, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000206, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000236, 8) , (unique, 0x1000023e, 8)]
[ ---  CBRANCH (ram, 0x264392, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x61, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x61, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x1000023e, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100001bd, 8) , (const, 0x8, 8), (unique, 0x100001bd, 8) INT_ADD (unique, 0x100001b5, 8) , (const, 0x1, 8), (unique, 0x100001b5, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x26438f, 1)]
[ ---  CALL (ram, 0x13f110, 8) , (const, 0xe, 4) , (unique, 0x3800, 8) , (unique, 0x3c80, 8)]
[ ---  CALL (ram, 0x1e4840, 8) , (const, 0xa, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x81, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x66, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x81, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x6a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x66, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x81, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x6a, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x66, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x81, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x6a, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x66, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x81, 4), (stack, 0xfffffffffffffe68, 16) COPY (const, 0x0, 16)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x81, 4), (stack, 0xfffffffffffffe78, 16) COPY (const, 0x0, 16)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x81, 4), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x6a, 4), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x81, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x6a, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x81, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x66, 4)]
[ ---  CBRANCH (ram, 0x264547, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2106c0, 8) , (const, 0x0, 8) , (ram, 0x4eb430, 4) , (const, 0x7, 8) , (register, 0x20, 8), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x6a, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x66, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e4, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1e4, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1e4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x1, 1)]
[(register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x26445d, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x264408, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x10000266, 2) , (const, 0x4, 2), (unique, 0x10000266, 2) CAST (register, 0x0, 2), (register, 0x0, 2) INT_SUB (unique, 0xbc00, 2) , (const, 0x1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1bf, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1bf, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1bf, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1bf, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x1bf, 4), (stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x1bf, 4), (stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x1bf, 4), (stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x1bf, 4), (stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1bf, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2643f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x180, 8), (register, 0x0, 8) CALL (ram, 0x210110, 8) , (ram, 0x4eb430, 4) , (register, 0x30, 8) , (const, 0x180, 8), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4f0460, 8) INT_ADD (ram, 0x4f0460, 8) , (const, 0x180, 8)]
[ ---  CBRANCH (ram, 0x264540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb80, 2) , (unique, 0xbc00, 2), (unique, 0xbb80, 2) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xad, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xad, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xad, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xad, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0xad, 4), (stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0xad, 4), (stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0xad, 4), (stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xad, 4), (stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xad, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x264423, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x180, 8), (register, 0x0, 8) CALL (ram, 0x210110, 8) , (ram, 0x4eb430, 4) , (register, 0x30, 8) , (const, 0x180, 8), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe6a, 14) SUBPIECE (stack, 0xfffffffffffffe68, 16) , (const, 0x2, 4), (stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b8, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1b8, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1b8, 4), (ram, 0x4f0460, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000268, 8) , (const, 0x3, 4), (unique, 0x10000268, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0460, 8) INT_ADD (ram, 0x4f0460, 8) , (const, 0x180, 8)]
[ ---  CBRANCH (ram, 0x2644d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3, 2) , (unique, 0x10000270, 2), (unique, 0x10000270, 2) CAST (register, 0x0, 2), (register, 0x0, 2) INT_SUB (unique, 0xbc00, 2) , (const, 0x5, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2644d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3, 2) , (unique, 0x10000272, 2), (unique, 0x10000272, 2) CAST (register, 0x0, 2), (register, 0x0, 2) INT_SUB (unique, 0xbc00, 2) , (const, 0x5, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2644b6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000274, 8), (unique, 0x10000274, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x14, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x264520, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000027c, 8), (unique, 0x1000027c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x14, 8) , (const, 0x2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a5, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a5, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1a5, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1a5, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x1a5, 4)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x1a5, 4)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x1a5, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x1a5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a5, 4)]
[ ---  CBRANCH (ram, 0x2644d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x10000284, 8) , (unique, 0x1000028c, 8) , (const, 0x4, 8), (unique, 0x1000028c, 8) CAST (unique, 0x3100, 8), (unique, 0x10000284, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x14, 8) , (const, 0x2, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x14, 8) , (const, 0x2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x118, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x118, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x118, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x118, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x118, 4)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x118, 4)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x118, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x118, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x118, 4)]
[ ---  CBRANCH (ram, 0x264540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x10000294, 8) , (unique, 0x1000029c, 8) , (const, 0x20, 8), (unique, 0x1000029c, 8) CAST (unique, 0x3100, 8), (unique, 0x10000294, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x2, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffe6a, 14) SUBPIECE (stack, 0xfffffffffffffe68, 16) , (const, 0x2, 4), (stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x26443f, 1)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x143, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x143, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x143, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x143, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x143, 4), (stack, 0xfffffffffffffe68, 16) INT_ADD (unique, 0x10000226, 16) , (const, 0x2, 2), (unique, 0x10000226, 16) INT_LEFT (unique, 0x10000216, 16) , (const, 0x10, 16), (unique, 0x10000216, 16) INT_SEXT (stack, 0xfffffffffffffe6a, 14), (stack, 0xfffffffffffffe6a, 14) MULTIEQUAL (stack, 0xfffffffffffffe6a, 14) , (stack, 0xfffffffffffffe6a, 14)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x143, 4), (stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x143, 4), (stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x143, 4), (stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x143, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x2106c0, 8) , (ram, 0x4eb430, 4) , (const, 0x7, 8) , (register, 0x20, 8), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CALL (ram, 0x1e4840, 8) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15f, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x150, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x150, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x15f, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x150, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x15f, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x150, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x15f, 4), (stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x150, 4), (stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x15f, 4), (stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x150, 4), (stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x15f, 4), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x150, 4), (stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x15f, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x150, 4), (stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x150, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x13f110, 8) , (const, 0xe, 4) , (unique, 0x3c80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x264480, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x16e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x16e, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x16e, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x16e, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x16e, 4)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x16e, 4)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x16e, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x16e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x16e, 4)]
[ ---  CALL (ram, 0x1e4840, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) COPY (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x264555, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x19b, 4)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x19b, 4)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x19b, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x19b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x19b, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x19b, 4)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x19b, 4)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x19b, 4)]
[ ---  RETURN (const, 0x1, 4)]
