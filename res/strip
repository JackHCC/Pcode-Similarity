[(unique, 0x1000007a, 8) COPY (ram, 0x4c4e38, 8)]
[(unique, 0x10000072, 8) COPY (ram, 0x4c4e28, 8)]
[ ---  CBRANCH (ram, 0x467c9b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x467c66, 1)]
[(unique, 0x10000096, 4) COPY (register, 0x88, 4), (register, 0x88, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x467c07, 1)]
[(ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(register, 0x88, 4) MULTIEQUAL (unique, 0x10000096, 4) , (unique, 0x1000009a, 4) , (register, 0x88, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x0, 1) INT_AND (unique, 0x10000068, 1) , (const, 0x1, 1), (unique, 0x10000068, 1) SUBPIECE (register, 0x0, 2) , (const, 0x0, 4), (register, 0x0, 2) INT_RIGHT (unique, 0xbc00, 2) , (const, 0x3, 4), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100000a2, 8), (unique, 0x100000a2, 8) INT_ADD (unique, 0x10000072, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x2, 8), (register, 0x80, 8) INT_SEXT (register, 0x10, 1), (register, 0x10, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x467c2d, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x100000aa, 1) , (const, 0x34, 1), (unique, 0x100000aa, 1) CAST (unique, 0x3100, 1), (unique, 0x3100, 1) INT_SUB (register, 0x10, 1) , (const, 0x2c, 1), (register, 0x10, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x0, 1) INT_OR (register, 0x0, 1) , (unique, 0x10000064, 1), (unique, 0x10000064, 1) INT_AND (unique, 0x10000065, 1) , (const, 0x1, 1), (unique, 0x10000065, 1) SUBPIECE (register, 0xb0, 8) , (const, 0x0, 4), (register, 0xb0, 8) INT_RIGHT (const, 0x8000000004007, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x3100, 1) , (const, 0x3f, 1)]
[(register, 0x8, 4) INT_ADD (register, 0x88, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x467bf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (register, 0x0, 1)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x170, 4)]
[(ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x170, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100000ab, 8), (unique, 0x100000ab, 8) INT_ADD (unique, 0x1000007a, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8)]
[(unique, 0x1000008a, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000082, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x467bfb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x2f, 1)]
[ ---  CBRANCH (ram, 0x467c90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x3, 4)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0xd6, 4)]
[(ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0xd6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x2f, 1)]
[(register, 0x0, 4) INT_ADD (register, 0x88, 4) , (const, 0x2, 4)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000009a, 4) COPY (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x467c07, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000082, 8) , (unique, 0x1000008a, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000092, 4) COPY (register, 0x8, 4)]
[(unique, 0x1000009e, 4) COPY (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x467c60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(unique, 0x1000005f, 4) MULTIEQUAL (unique, 0x10000092, 4) , (register, 0x0, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x467c90, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x1, 4) , (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x1000009e, 4) , (register, 0x8, 4)]
[(ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) INT_SUB (const, 0x2, 4) , (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x1000005f, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x467c82, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (const, 0x2, 4) , (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x1000005f, 4) , (register, 0x8, 4)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x12c, 4)]
[(ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x12c, 4)]
[(register, 0x38, 8) CAST (unique, 0x100000b3, 8), (unique, 0x100000b3, 8) INT_ADD (register, 0x0, 8) , (register, 0x18, 8), (register, 0x0, 8) CALL (ram, 0x401120, 8) , (register, 0x38, 8) , (const, 0x2f, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 1), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8), (ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x138, 4), (ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8), (ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x138, 4), (ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[ ---  RETURN (const, 0x0, 8)]
