[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x28, 4) INT_ZEXT (register, 0x28, 1), (register, 0x28, 1) SUBPIECE (register, 0x28, 2) , (const, 0x0, 4), (register, 0x28, 2) INT_RIGHT (unique, 0xbc00, 2) , (const, 0x3, 4), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001aa, 8), (unique, 0x100001aa, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x50, 4)]
[(register, 0x0, 8) CALL (ram, 0x4956e0, 8) , (register, 0x28, 1) , (register, 0x38, 8), (register, 0x28, 1) SUBPIECE (register, 0x28, 2) , (const, 0x0, 4), (register, 0x28, 2) INT_RIGHT (unique, 0xbc00, 2) , (const, 0x3, 4), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001aa, 8), (unique, 0x100001aa, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000155, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8)]
[(unique, 0x1000015d, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x10000165, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3a00, 8)]
[(unique, 0x1000016d, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000175, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x1000017d, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000185, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x495b2f, 1) , (unique, 0x10000154, 1), (unique, 0x10000154, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) INT_SEXT (unique, 0x100001b2, 4), (unique, 0x100001b2, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000165, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x495b1e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000165, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000192, 8) COPY (unique, 0x1000016d, 8)]
[ ---  CBRANCH (ram, 0x495b6d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b6, 8), (unique, 0x100001b6, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(unique, 0x1000019a, 8) COPY (unique, 0x1000016d, 8)]
[ ---  CBRANCH (ram, 0x495b6d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (unique, 0x1000015d, 8), (register, 0x10, 8) INT_ADD (unique, 0x100001be, 8) , (unique, 0x10000144, 8), (unique, 0x100001be, 8) CAST (unique, 0x10000165, 8), (unique, 0x10000144, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000175, 8) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x1000017d, 8) , (const, 0xc0, 4)]
[(register, 0x0, 8) CALL (ram, 0x4956e0, 8) , (register, 0x0, 1) , (register, 0x38, 8), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x495980, 8) , (register, 0x10, 8)]
[(unique, 0x100001a2, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x1000018a, 8) , (const, 0xc8, 4), (unique, 0x1000018a, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (register, 0x10, 8) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000017d, 8) , (unique, 0x1000017d, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x10000175, 8) , (unique, 0x10000175, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x10000192, 8) , (unique, 0x1000019a, 8) , (unique, 0x100001a2, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x10000155, 8) , (unique, 0x10000155, 8) , (register, 0x0, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x1000015d, 8) , (unique, 0x1000015d, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x495af8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4), (register, 0x28, 4) MULTIEQUAL (unique, 0x10000185, 4) , (unique, 0x10000185, 4) , (register, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001ce, 8), (unique, 0x100001ce, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000165, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x495b1e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001c6, 8), (unique, 0x100001c6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000165, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x495bf6, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) INT_SUB (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x10000165, 8)]
[ ---  CALL (ram, 0x4957a0, 8) , (register, 0x38, 4) , (const, 0x0, 8) , (register, 0x0, 8), (register, 0x38, 4) INT_AND (register, 0x28, 4) , (const, 0xf, 4), (register, 0x0, 8) CALL (ram, 0x4957a0, 8) , (register, 0x88, 4) , (register, 0xb8, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (register, 0x80, 8) , (register, 0x88, 4) , (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INT_OR (unique, 0x100000f9, 8) , (unique, 0x10000114, 8), (unique, 0x10000114, 8) INT_AND (unique, 0x10000101, 8) , (const, 0xffffffff000000ff, 8), (unique, 0x10000101, 8) INT_ZEXT (register, 0x28, 4), (unique, 0x100000f9, 8) INT_AND (stack, 0xffffffffffffffa8, 8) , (const, 0xffffffff00000000, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000165, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x88, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x10a, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x102, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xe6, 4), (stack, 0xffffffffffffffa8, 8) INT_OR (unique, 0x100000f9, 8) , (unique, 0x10000114, 8), (unique, 0x10000114, 8) INT_AND (unique, 0x10000101, 8) , (const, 0xffffffff000000ff, 8), (unique, 0x10000101, 8) INT_ZEXT (register, 0x28, 4), (unique, 0x100000f9, 8) INT_AND (stack, 0xffffffffffffffa8, 8) , (const, 0xffffffff00000000, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x10a, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x102, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x102, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe6, 4)]
[(register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x495bd4, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 4) , (const, 0x8, 4), (register, 0x0, 4) CALL (ram, 0x495670, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_MULT (unique, 0x100000ea, 1) , (const, 0x8, 1), (unique, 0x100000ea, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x495b1e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (stack, 0xffffffffffffffb8, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x495b1e, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (stack, 0xffffffffffffffc0, 8), (register, 0x30, 8) INT_SUB (register, 0x10, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x10000165, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000017d, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x10000175, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x1000016d, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x10000155, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x1000015d, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0x10000185, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001de, 8), (unique, 0x100001de, 8) INT_ADD (unique, 0x100001d6, 8) , (unique, 0x10000134, 8), (unique, 0x100001d6, 8) CAST (unique, 0x10000165, 8), (unique, 0x10000134, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000165, 8)]
