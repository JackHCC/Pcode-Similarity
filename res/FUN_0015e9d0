[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb78, 8)]
[(register, 0x0, 4) CALL (ram, 0x225810, 8) , (const, 0x2e, 4) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x225780, 8) , (unique, 0x10000188, 8), (unique, 0x10000188, 8) COPY (const, 0x2b3f28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x41, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x34, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x41, 4), (ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x3a, 4), (ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x34, 4)]
[(stack, 0xffffffffffffff88, 2) INDIRECT (stack, 0xffffffffffffff88, 2) , (const, 0x41, 4), (stack, 0xffffffffffffff88, 2) INDIRECT (stack, 0xffffffffffffff88, 2) , (const, 0x3a, 4), (stack, 0xffffffffffffff88, 2) INDIRECT (stack, 0xffffffffffffff88, 2) , (const, 0x34, 4)]
[(stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0x41, 4), (stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0x3a, 4), (stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0x34, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x41, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x34, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000289, 8), (unique, 0x10000289, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 4) CALL (ram, 0x225810, 8) , (const, 0x2c, 4) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x225780, 8) , (unique, 0x10000188, 8), (unique, 0x10000188, 8) COPY (const, 0x2b3f28, 8)]
[ ---  CBRANCH (ram, 0x15ebd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x225780, 8) , (unique, 0x10000188, 8), (unique, 0x10000188, 8) COPY (const, 0x2b3f28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x23a, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x23a, 4)]
[(stack, 0xfffffffffffffb78, 8) INDIRECT (stack, 0xfffffffffffffb78, 8) , (const, 0x23a, 4), (stack, 0xfffffffffffffb78, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff88, 2) INDIRECT (stack, 0xffffffffffffff88, 2) , (const, 0x23a, 4)]
[(stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0x23a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x23a, 4)]
[ ---  CBRANCH (ram, 0x15ec39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x1bdc20, 8) , (unique, 0x10000291, 8) , (register, 0x0, 4) , (unique, 0x3800, 8), (unique, 0x10000291, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff88, 2) COPY (const, 0x2e, 2)]
[ ---  BRANCH (ram, 0x15ebfd, 1)]
[(stack, 0xffffffffffffff88, 2) INDIRECT (stack, 0xffffffffffffff88, 2) , (const, 0x249, 4)]
[(stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0x249, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x249, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (const, 0x0, 1), (unique, 0x3e80, 8) CAST (unique, 0x100002a1, 8), (unique, 0x100002a1, 8) INT_ADD (unique, 0x10000299, 8) , (register, 0x0, 8), (unique, 0x10000299, 8) CAST (unique, 0x100001e8, 8), (unique, 0x100001e8, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x254, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x254, 4)]
[(stack, 0xfffffffffffffb78, 8) INDIRECT (stack, 0xfffffffffffffb78, 8) , (const, 0x254, 4), (stack, 0xfffffffffffffb78, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff88, 2) INDIRECT (stack, 0xffffffffffffff88, 2) , (const, 0x254, 4), (stack, 0xffffffffffffff88, 2) MULTIEQUAL (stack, 0xffffffffffffff88, 2) , (stack, 0xffffffffffffff88, 2)]
[(stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0x254, 4), (stack, 0xffffffffffffffa8, 2) MULTIEQUAL (stack, 0xffffffffffffffa8, 2) , (stack, 0xffffffffffffffa8, 2)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x254, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x15ec48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x1bdc20, 8) , (unique, 0x100002a9, 8) , (register, 0x0, 4) , (unique, 0x3800, 8), (unique, 0x100002a9, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa8, 2) COPY (const, 0x2c, 2)]
[ ---  BRANCH (ram, 0x15ea38, 1)]
[(stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0x263, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x263, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (const, 0x0, 1), (unique, 0x3e80, 8) CAST (unique, 0x100002b9, 8), (unique, 0x100002b9, 8) INT_ADD (unique, 0x100002b1, 8) , (register, 0x0, 8), (unique, 0x100002b1, 8) CAST (unique, 0x10000210, 8), (unique, 0x10000210, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[ ---  BRANCH (ram, 0x15ea38, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x65, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x65, 4), (ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(stack, 0xfffffffffffffb80, 8) INDIRECT (stack, 0xfffffffffffffb80, 8) , (const, 0x65, 4), (stack, 0xfffffffffffffb80, 8) COPY (const, 0x400, 8)]
[(stack, 0xffffffffffffff88, 2) INDIRECT (stack, 0xffffffffffffff88, 2) , (const, 0x65, 4), (stack, 0xffffffffffffff88, 2) MULTIEQUAL (stack, 0xffffffffffffff88, 2) , (stack, 0xffffffffffffff88, 2) , (stack, 0xffffffffffffff88, 2)]
[(stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0x65, 4), (stack, 0xffffffffffffffa8, 2) MULTIEQUAL (stack, 0xffffffffffffffa8, 2) , (stack, 0xffffffffffffffa8, 2) , (stack, 0xffffffffffffffa8, 2)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x65, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000221, 8) COPY (stack, 0xfffffffffffffb78, 8), (stack, 0xfffffffffffffb78, 8) INDIRECT (unique, 0x3800, 8) , (const, 0x65, 4), (unique, 0x3800, 8) CAST (unique, 0x100002c1, 8), (unique, 0x100002c1, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb88, 8)]
[ ---  CBRANCH (ram, 0x15ec30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x19d1f0, 8) , (unique, 0x3800, 8) , (register, 0xa8, 8) , (const, 0x1, 8), (register, 0xa8, 8) INT_SUB (register, 0x30, 8) , (unique, 0x100002c9, 8), (unique, 0x100002c9, 8) CAST (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x78, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x78, 4)]
[(stack, 0xfffffffffffffb78, 8) INDIRECT (stack, 0xfffffffffffffb78, 8) , (const, 0x78, 4)]
[(stack, 0xfffffffffffffb80, 8) INDIRECT (stack, 0xfffffffffffffb80, 8) , (const, 0x78, 4)]
[(stack, 0xffffffffffffff88, 2) INDIRECT (stack, 0xffffffffffffff88, 2) , (const, 0x78, 4)]
[(stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0x78, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x78, 4)]
[(register, 0x0, 8) CAST (unique, 0x100002d9, 8), (unique, 0x100002d9, 8) CALL (ram, 0x121230, 8) , (unique, 0x100002d1, 8) , (register, 0x38, 8) , (register, 0xa8, 8), (unique, 0x100002d1, 8) CAST (stack, 0xfffffffffffffb78, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 2) MULTIEQUAL (stack, 0xffffffffffffffa8, 2) , (stack, 0xffffffffffffffa8, 2) , (stack, 0xffffffffffffffa8, 2) , (stack, 0xffffffffffffffa8, 2) , (stack, 0xffffffffffffffa8, 2)]
[(stack, 0xffffffffffffff88, 2) MULTIEQUAL (stack, 0xffffffffffffff88, 2) , (stack, 0xffffffffffffff88, 2) , (stack, 0xffffffffffffff88, 2) , (stack, 0xffffffffffffff88, 2) , (stack, 0xffffffffffffff88, 2)]
[(stack, 0xfffffffffffffb80, 8) MULTIEQUAL (stack, 0xfffffffffffffb80, 8) , (stack, 0xfffffffffffffb80, 8) , (stack, 0xfffffffffffffb80, 8) , (stack, 0xfffffffffffffb80, 8) , (stack, 0xfffffffffffffb80, 8)]
[(stack, 0xfffffffffffffb78, 8) MULTIEQUAL (stack, 0xfffffffffffffb78, 8) , (stack, 0xfffffffffffffb78, 8) , (stack, 0xfffffffffffffb78, 8) , (stack, 0xfffffffffffffb78, 8) , (stack, 0xfffffffffffffb78, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x15eac7, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x100002f1, 8) , (unique, 0x100002f9, 8), (unique, 0x100002f9, 8) CAST (register, 0xb8, 8), (unique, 0x100002f1, 8) CAST (unique, 0x10000221, 8), (register, 0xb8, 8) CAST (unique, 0x100002e9, 8), (unique, 0x100002e9, 8) INT_ADD (unique, 0x100002e1, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x100002e1, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x0, 4) INT_SEXT (unique, 0x10000309, 1), (unique, 0x10000309, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000301, 8), (unique, 0x10000301, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x15eb10, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x1000030a, 1) , (const, 0xa, 1), (unique, 0x1000030a, 1) CAST (register, 0x10, 1), (register, 0x10, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000301, 8), (unique, 0x10000301, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f7, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x1f7, 4)]
[(stack, 0xfffffffffffffb78, 8) INDIRECT (stack, 0xfffffffffffffb78, 8) , (const, 0x1f7, 4)]
[(stack, 0xfffffffffffffb80, 8) INDIRECT (stack, 0xfffffffffffffb80, 8) , (const, 0x1f7, 4)]
[(stack, 0xffffffffffffff88, 2) INDIRECT (stack, 0xffffffffffffff88, 2) , (const, 0x1f7, 4)]
[(stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0x1f7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f7, 4)]
[(register, 0x18, 8) CAST (unique, 0x10000323, 8), (unique, 0x10000323, 8) INT_SUB (unique, 0x1000031b, 8) , (register, 0x0, 8), (unique, 0x1000031b, 8) CAST (register, 0x18, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000313, 8), (unique, 0x10000313, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eadc8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xfffffff9, 4)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000313, 8), (unique, 0x10000313, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eadc8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xfffffff9, 4)]
[ ---  CBRANCH (ram, 0x15ea99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000313, 8), (unique, 0x10000313, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eadc8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xfffffff9, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x215, 4), (ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0x3400, 8) CAST (unique, 0x10000333, 8), (unique, 0x10000333, 8) INT_ADD (unique, 0x1000032b, 8) , (register, 0x8, 8), (unique, 0x1000032b, 8) CAST (register, 0x18, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x15eb40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x15eb60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x15eab7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x2c, 1), (register, 0x10, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xfd, 1)]
[(unique, 0x10000241, 8) COPY (unique, 0x1000033b, 8), (unique, 0x1000033b, 8) CAST (unique, 0x3c80, 8)]
[(unique, 0x10000279, 8) COPY (unique, 0x10000343, 8), (unique, 0x10000343, 8) CAST (unique, 0x3c80, 8)]
[ ---  CBRANCH (ram, 0x15eb7a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(unique, 0x10000249, 8) COPY (unique, 0x1000034b, 8), (unique, 0x1000034b, 8) CAST (unique, 0x3c80, 8)]
[(unique, 0x10000281, 8) COPY (unique, 0x10000353, 8), (unique, 0x10000353, 8) CAST (unique, 0x3c80, 8)]
[(unique, 0x10000239, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x10000251, 8), (unique, 0x10000251, 8) MULTIEQUAL (unique, 0x10000239, 8) , (unique, 0x10000241, 8) , (unique, 0x10000249, 8)]
[(unique, 0x10000271, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000271, 8) , (unique, 0x10000279, 8) , (unique, 0x10000281, 8)]
[ ---  CBRANCH (ram, 0x15eb7d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x10000251, 8), (unique, 0x10000251, 8) MULTIEQUAL (unique, 0x10000239, 8) , (unique, 0x10000241, 8) , (unique, 0x10000249, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x10000269, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x15eba1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x1000026d, 4) COPY (register, 0x8, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000269, 4) , (unique, 0x1000026d, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000363, 8), (unique, 0x10000363, 8) INT_ADD (unique, 0x1000035b, 8) , (const, 0x6, 8), (unique, 0x1000035b, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000229, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x15ebab, 1) , (register, 0x206, 1)]
[(unique, 0x10000231, 8) COPY (unique, 0x3100, 8)]
[(register, 0x18, 8) CAST (unique, 0x10000383, 8), (unique, 0x10000383, 8) INT_SUB (unique, 0x1000037b, 8) , (register, 0x10, 8), (unique, 0x1000037b, 8) CAST (register, 0x18, 8), (register, 0x10, 8) INT_ADD (unique, 0x10000373, 8) , (unique, 0x100001c8, 8), (unique, 0x10000373, 8) CAST (register, 0x10, 8), (unique, 0x100001c8, 8) INT_SUB (unique, 0x100001c0, 8) , (unique, 0x1000036b, 8), (unique, 0x1000036b, 8) CAST (register, 0x30, 8), (unique, 0x100001c0, 8) INT_SUB (const, 0xfffffffffffffffd, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000229, 8) , (unique, 0x10000231, 8)]
[ ---  CBRANCH (ram, 0x15ea99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ADD (unique, 0x10000373, 8) , (unique, 0x100001c8, 8), (unique, 0x10000373, 8) CAST (register, 0x10, 8), (unique, 0x100001c8, 8) INT_SUB (unique, 0x100001c0, 8) , (unique, 0x1000036b, 8), (unique, 0x1000036b, 8) CAST (register, 0x30, 8), (unique, 0x100001c0, 8) INT_SUB (const, 0xfffffffffffffffd, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000229, 8) , (unique, 0x10000231, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1dc, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x1dc, 4)]
[(stack, 0xfffffffffffffb78, 8) INDIRECT (stack, 0xfffffffffffffb78, 8) , (const, 0x1dc, 4)]
[(stack, 0xfffffffffffffb80, 8) INDIRECT (stack, 0xfffffffffffffb80, 8) , (const, 0x1dc, 4)]
[(stack, 0xffffffffffffff88, 2) INDIRECT (stack, 0xffffffffffffff88, 2) , (const, 0x1dc, 4)]
[(stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0x1dc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1dc, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x18, 8) , (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x15ea99, 1)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0xbf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x100003a3, 8), (unique, 0x100003a3, 8) INT_ADD (unique, 0x1000039b, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x1000039b, 8) CAST (register, 0x18, 8)]
[(register, 0x18, 8) CAST (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) INT_ADD (unique, 0x100003ab, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x100003ab, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x15eaa2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100003bb, 8) , (unique, 0x100003c3, 8), (unique, 0x100003c3, 8) CAST (unique, 0x10000221, 8), (unique, 0x100003bb, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) CAST (unique, 0x10000393, 8), (unique, 0x10000393, 8) INT_ADD (unique, 0x1000038b, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x1000038b, 8) CAST (register, 0xb8, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(unique, 0x10000259, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x15eada, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffb78, 8) , (unique, 0x100003cb, 8), (unique, 0x100003cb, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb88, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xec, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0xec, 4)]
[(stack, 0xfffffffffffffb78, 8) INDIRECT (stack, 0xfffffffffffffb78, 8) , (const, 0xec, 4)]
[(stack, 0xfffffffffffffb80, 8) INDIRECT (stack, 0xfffffffffffffb80, 8) , (const, 0xec, 4)]
[(stack, 0xffffffffffffff88, 2) INDIRECT (stack, 0xffffffffffffff88, 2) , (const, 0xec, 4)]
[(stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0xec, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xec, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0x100003d3, 8), (unique, 0x100003d3, 8) CAST (stack, 0xfffffffffffffb78, 8)]
[(stack, 0xffffffffffffffa8, 2) MULTIEQUAL (stack, 0xffffffffffffffa8, 2) , (stack, 0xffffffffffffffa8, 2) , (stack, 0xffffffffffffffa8, 2)]
[(stack, 0xffffffffffffff88, 2) MULTIEQUAL (stack, 0xffffffffffffff88, 2) , (stack, 0xffffffffffffff88, 2) , (stack, 0xffffffffffffff88, 2)]
[(stack, 0xfffffffffffffb80, 8) MULTIEQUAL (stack, 0xfffffffffffffb80, 8) , (stack, 0xfffffffffffffb80, 8) , (stack, 0xfffffffffffffb80, 8)]
[(stack, 0xfffffffffffffb78, 8) MULTIEQUAL (stack, 0xfffffffffffffb78, 8) , (stack, 0xfffffffffffffb78, 8) , (stack, 0xfffffffffffffb78, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000259, 8) , (unique, 0x10000259, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x15ec5a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003db, 8), (unique, 0x100003db, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xfffffffffffffb78, 8) INDIRECT (stack, 0xfffffffffffffb78, 8) , (const, 0x118, 4)]
[(stack, 0xfffffffffffffb80, 8) INDIRECT (stack, 0xfffffffffffffb80, 8) , (const, 0x118, 4)]
[(stack, 0xffffffffffffff88, 2) INDIRECT (stack, 0xffffffffffffff88, 2) , (const, 0x118, 4)]
[(stack, 0xffffffffffffffa8, 2) INDIRECT (stack, 0xffffffffffffffa8, 2) , (const, 0x118, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x118, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8), (ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x118, 4)]
[ ---  RETURN (const, 0x1, 4)]
