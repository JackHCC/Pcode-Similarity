[(unique, 0x100000e3, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x4707f2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100000db, 8) , (unique, 0x100000e3, 8)]
[ ---  CBRANCH (ram, 0x4707e0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xff, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x100000ef, 8), (unique, 0x100000ef, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c7f28, 4) COPY (ram, 0x4c7f28, 4), (ram, 0x4c7f28, 4) INDIRECT (ram, 0x4c7f28, 4) , (const, 0x34, 4)]
[(ram, 0x4c7f2c, 4) COPY (ram, 0x4c7f2c, 4), (ram, 0x4c7f2c, 4) INDIRECT (ram, 0x4c7f2c, 4) , (const, 0x34, 4)]
[(ram, 0x4c8950, 8) COPY (ram, 0x4c8950, 8), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x34, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x100000db, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x470818, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x470961, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4), (register, 0x10, 4) INT_SUB (ram, 0x4c7f28, 4) , (const, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x1c, 4), (unique, 0x4f00, 8) CAST (unique, 0x100000f7, 8), (unique, 0x100000f7, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c7f28, 4) COPY (ram, 0x4c7f28, 4), (ram, 0x4c7f28, 4) INDIRECT (ram, 0x4c7f28, 4) , (const, 0x1b3, 4)]
[(ram, 0x4c7f2c, 4) COPY (ram, 0x4c7f2c, 4), (ram, 0x4c7f2c, 4) INDIRECT (ram, 0x4c7f2c, 4) , (const, 0x1b3, 4)]
[(ram, 0x4c8950, 8) COPY (ram, 0x4c8950, 8), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x1b3, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x4708e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000ff, 8), (unique, 0x100000ff, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7f2c, 4) , (const, 0x0, 4)]
[(ram, 0x4c7f2c, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ad, 4)]
[(ram, 0x4c7f28, 4) INDIRECT (ram, 0x4c7f28, 4) , (const, 0x1ad, 4)]
[(ram, 0x4c7f2c, 4) INDIRECT (ram, 0x4c7f2c, 4) , (const, 0x1ad, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x1ad, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000099, 8), (unique, 0x10000099, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7f2c, 8)]
[ ---  BRANCH (ram, 0x470846, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7f2c, 4) , (const, 0x0, 4)]
[(ram, 0x4c7f2c, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c7f2c, 4) MULTIEQUAL (ram, 0x4c7f2c, 4) , (ram, 0x4c7f2c, 4) , (ram, 0x4c7f2c, 4) , (ram, 0x4c7f2c, 4)]
[(ram, 0x4c7f28, 4) MULTIEQUAL (ram, 0x4c7f28, 4) , (ram, 0x4c7f28, 4) , (ram, 0x4c7f28, 4) , (ram, 0x4c7f28, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x470900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8950, 8) , (const, 0x0, 8), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18b, 4)]
[(ram, 0x4c7f28, 4) INDIRECT (ram, 0x4c7f28, 4) , (const, 0x18b, 4)]
[(ram, 0x4c7f2c, 4) INDIRECT (ram, 0x4c7f2c, 4) , (const, 0x18b, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x18b, 4)]
[ ---  CBRANCH (ram, 0x470856, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x427e50, 8) , (const, 0xff, 8) , (const, 0x8, 8)]
[(unique, 0x100000d3, 8) COPY (ram, 0x4c8950, 8), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa9, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7f28, 4) INDIRECT (ram, 0x4c7f28, 4) , (const, 0xa9, 4), (ram, 0x4c7f28, 4) MULTIEQUAL (ram, 0x4c7f28, 4) , (ram, 0x4c7f28, 4)]
[(ram, 0x4c7f2c, 4) INDIRECT (ram, 0x4c7f2c, 4) , (const, 0xa9, 4), (ram, 0x4c7f2c, 4) MULTIEQUAL (ram, 0x4c7f2c, 4) , (ram, 0x4c7f2c, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0xa9, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x470922, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000127, 8), (unique, 0x10000127, 8) CALL (ram, 0x426550, 8) , (unique, 0x1000011f, 8), (unique, 0x1000011f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x18, 8) CAST (unique, 0x10000117, 8), (unique, 0x10000117, 8) INT_SUB (unique, 0x10000107, 8) , (unique, 0x1000010f, 8), (unique, 0x1000010f, 8) CAST (register, 0x38, 8), (unique, 0x10000107, 8) CAST (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x10000157, 8), (unique, 0x10000157, 8) INT_ADD (unique, 0x1000014f, 8) , (unique, 0x3a80, 8), (unique, 0x1000014f, 8) CAST (unique, 0x100000d3, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000012f, 8), (unique, 0x1000012f, 8) CAST (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000015f, 8) , (register, 0x0, 4), (unique, 0x1000015f, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_LEFT (const, 0x1, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x8, 1) SUBPIECE (ram, 0x4c7f28, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x117, 4)]
[ ---  CALL (ram, 0x47afd0, 8) , (unique, 0x3800, 8) , (unique, 0x10000167, 8) , (register, 0x10, 8), (unique, 0x10000167, 8) CAST (unique, 0x3100, 8), (register, 0x10, 8) INT_SRIGHT (unique, 0x10000147, 8) , (const, 0x2, 4), (unique, 0x10000147, 8) CAST (register, 0x18, 8), (unique, 0x3800, 8) CAST (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) INT_ADD (unique, 0x10000137, 8) , (const, 0xc, 8), (unique, 0x10000137, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000177, 8), (unique, 0x10000177, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c7f28, 4) INDIRECT (ram, 0x4c7f28, 4) , (const, 0x123, 4), (ram, 0x4c7f28, 4) INDIRECT (ram, 0x4c7f28, 4) , (const, 0x117, 4), (ram, 0x4c7f28, 4) INDIRECT (unique, 0x100000eb, 4) , (const, 0x114, 4), (unique, 0x100000eb, 4) COPY (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (ram, 0x4c7f28, 4) , (const, 0x1, 4)]
[(ram, 0x4c7f2c, 4) INDIRECT (ram, 0x4c7f2c, 4) , (const, 0x123, 4), (ram, 0x4c7f2c, 4) INDIRECT (ram, 0x4c7f2c, 4) , (const, 0x117, 4), (ram, 0x4c7f2c, 4) INDIRECT (ram, 0x4c7f2c, 4) , (const, 0x114, 4), (ram, 0x4c7f2c, 4) INDIRECT (ram, 0x4c7f2c, 4) , (const, 0xe6, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x123, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x117, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x114, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0xe6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x10000187, 8), (unique, 0x10000187, 8) INT_ADD (unique, 0x1000017f, 8) , (unique, 0x3300, 8), (unique, 0x1000017f, 8) CAST (ram, 0x4c8950, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000016f, 8), (unique, 0x1000016f, 8) CAST (register, 0x38, 8), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x117, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x114, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0xe6, 4)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (register, 0x0, 8)]
[(ram, 0x4c7f2c, 4) MULTIEQUAL (ram, 0x4c7f2c, 4) , (ram, 0x4c7f2c, 4)]
[(ram, 0x4c7f28, 4) MULTIEQUAL (ram, 0x4c7f28, 4) , (ram, 0x4c7f28, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x4708bf, 1)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c7f2c, 4) MULTIEQUAL (ram, 0x4c7f2c, 4) , (ram, 0x4c7f2c, 4)]
[(ram, 0x4c7f28, 4) MULTIEQUAL (ram, 0x4c7f28, 4) , (ram, 0x4c7f28, 4)]
[(register, 0x80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x470930, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000018f, 8), (unique, 0x1000018f, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7f28, 4) COPY (ram, 0x4c7f28, 4)]
[(ram, 0x4c7f2c, 4) COPY (ram, 0x4c7f2c, 4), (ram, 0x4c7f2c, 4) INT_ADD (ram, 0x4c7f2c, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c8950, 8) COPY (ram, 0x4c8950, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x470806, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (ram, 0x4c7f2c, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x470806, 1)]
[(ram, 0x4c7f28, 4) COPY (ram, 0x4c7f28, 4)]
[(ram, 0x4c7f2c, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c8950, 8) COPY (ram, 0x4c8950, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x80, 4)]
