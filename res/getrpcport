[(register, 0xb8, 8) COPY (const, 0x400, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff8c, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff90, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffff78, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffff80, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffff74, 4) COPY (register, 0x8, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb67, 8)]
[(unique, 0x10000119, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb58, 8)]
[ ---  BRANCH (ram, 0x22be54, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000139, 8) , (const, 0x22be68, 8), (unique, 0x10000139, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000119, 8) , (unique, 0x10000121, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x49, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x49, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x49, 4), (stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x48, 4), (stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x49, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x48, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x49, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x48, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff8c, 4) INDIRECT (stack, 0xffffffffffffff8c, 4) , (const, 0x49, 4), (stack, 0xffffffffffffff8c, 4) INDIRECT (stack, 0xffffffffffffff8c, 4) , (const, 0x48, 4), (stack, 0xffffffffffffff8c, 4) MULTIEQUAL (stack, 0xffffffffffffff8c, 4) , (stack, 0xffffffffffffff8c, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x49, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x48, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[ ---  CBRANCH (ram, 0x22be75, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x219b60, 8) , (register, 0x38, 8) , (unique, 0x3100, 8) , (register, 0x10, 8) , (register, 0xb8, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (register, 0x10, 8) CAST (unique, 0x10000131, 8), (unique, 0x10000131, 8) INT_AND (unique, 0x10000129, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000129, 8) CAST (unique, 0x3800, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (unique, 0x1000005f, 8), (unique, 0x3800, 8) MULTIEQUAL (unique, 0x3800, 8) , (unique, 0x3800, 8)]
[ ---  CBRANCH (ram, 0x22be90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff90, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000149, 8) , (const, 0x22bea8, 8), (unique, 0x10000149, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (unique, 0x3100, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000f5, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x100000f5, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff90, 8) , (const, 0x18, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff90, 8) , (const, 0x14, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000151, 8) , (const, 0x22becd, 8), (unique, 0x10000151, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0xf1, 4), (stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0xf0, 4), (stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0xd2, 4), (stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0xd1, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xf1, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xf0, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xd2, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xd1, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xf1, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xf0, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xd2, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xd1, 4)]
[(stack, 0xffffffffffffff98, 2) INDIRECT (stack, 0xffffffffffffff98, 2) , (const, 0xf1, 4), (stack, 0xffffffffffffff98, 2) INDIRECT (stack, 0xffffffffffffff98, 2) , (const, 0xf0, 4), (stack, 0xffffffffffffff98, 2) COPY (const, 0x2, 2)]
[(stack, 0xffffffffffffff9a, 2) INDIRECT (stack, 0xffffffffffffff9a, 2) , (const, 0xf1, 4), (stack, 0xffffffffffffff9a, 2) INDIRECT (stack, 0xffffffffffffff9a, 2) , (const, 0xf0, 4), (stack, 0xffffffffffffff9a, 2) COPY (const, 0x0, 2)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf1, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xd2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000159, 4), (unique, 0x10000159, 4) INT_ZEXT (register, 0x0, 2), (register, 0x0, 2) CALL (ram, 0x237810, 8) , (unique, 0x3100, 8) , (unique, 0x10000111, 8) , (unique, 0x10000109, 8) , (unique, 0x10000105, 4), (unique, 0x10000105, 4) COPY (stack, 0xffffffffffffff74, 4), (unique, 0x10000109, 8) COPY (stack, 0xffffffffffffff78, 8), (unique, 0x10000111, 8) COPY (stack, 0xffffffffffffff80, 8), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xd2, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xd2, 4), (stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0xd2, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0xd1, 4), (unique, 0x3100, 8) CAST (unique, 0x10000141, 8), (unique, 0x10000141, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[ ---  CBRANCH (ram, 0x22be30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff8c, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x22be7b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x22, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000015d, 8), (unique, 0x1000015d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x100000c5, 8) , (const, 0x1, 8), (unique, 0x100000c5, 8) INT_ADD (unique, 0x10000067, 8) , (const, 0xf, 8), (unique, 0x10000067, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x1000005f, 8) , (const, 0x10, 8), (unique, 0x1000005f, 8) INT_MULT (register, 0xb8, 8) , (const, 0x2, 8)]
[(unique, 0x10000121, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000067, 8) , (const, 0x1, 8), (unique, 0x10000067, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x1000005f, 8) , (const, 0x10, 8), (unique, 0x1000005f, 8) INT_MULT (register, 0xb8, 8) , (const, 0x2, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
