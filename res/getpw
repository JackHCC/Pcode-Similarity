[ ---  CBRANCH (ram, 0x1ca2c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001dc, 8) , (const, 0x16, 4), (unique, 0x100001dc, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xd5, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1ca26b, 8), (register, 0x20, 8) CAST (unique, 0x100001fc, 8), (unique, 0x100001fc, 8) INT_ADD (unique, 0x100001f4, 8) , (unique, 0x10000164, 8), (unique, 0x100001f4, 8) CAST (unique, 0x1000016c, 8), (unique, 0x1000016c, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x10000164, 8) INT_ADD (unique, 0x10000043, 8) , (const, 0x20, 8), (unique, 0x10000043, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) CALL (ram, 0x1cd4f0, 8) , (const, 0x46, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4c, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x23, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x4c, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x4b, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x23, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x1ca244, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x4c, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x4b, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x23, 4)]
[ ---  CBRANCH (ram, 0x1ca2b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1cad10, 8) , (register, 0x38, 4) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (register, 0x0, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) CAST (unique, 0x100001ec, 8), (unique, 0x100001ec, 8) INT_ADD (unique, 0x100001e4, 8) , (unique, 0x1000012c, 8), (unique, 0x100001e4, 8) CAST (unique, 0x10000134, 8), (unique, 0x10000134, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x1000012c, 8) INT_ADD (unique, 0x10000043, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000043, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) CALL (ram, 0x1cd4f0, 8) , (const, 0x46, 4)]
[ ---  CBRANCH (ram, 0x1ca2b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb0, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x1ca2ac, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8), (register, 0x20, 8) CAST (unique, 0x1000020c, 8), (unique, 0x1000020c, 8) INT_ADD (unique, 0x10000204, 8) , (unique, 0x10000194, 8), (unique, 0x10000204, 8) CAST (unique, 0x1000019c, 8), (unique, 0x1000019c, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x10000194, 8) INT_ADD (unique, 0x10000043, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffffb0, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8), (register, 0x20, 8) CAST (unique, 0x1000021c, 8), (unique, 0x1000021c, 8) INT_ADD (unique, 0x10000214, 8) , (unique, 0x100001ac, 8), (unique, 0x10000214, 8) CAST (unique, 0x100001b4, 8), (unique, 0x100001b4, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x100001ac, 8) INT_ADD (unique, 0x10000043, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffffb0, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8), (register, 0x20, 8) CAST (unique, 0x1000022c, 8), (unique, 0x1000022c, 8) INT_ADD (unique, 0x10000224, 8) , (unique, 0x100001c4, 8), (unique, 0x10000224, 8) CAST (unique, 0x100001cc, 8), (unique, 0x100001cc, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x100001c4, 8) INT_ADD (unique, 0x10000043, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffffb0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1ca2a5, 8), (register, 0x20, 8) CAST (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) INT_ADD (unique, 0x10000234, 8) , (unique, 0x10000043, 8), (unique, 0x10000234, 8) CAST (unique, 0x100000a3, 8), (unique, 0x100000a3, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x98, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x98, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x97, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x88, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x83, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x7d, 4)]
[(register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (const, 0x1f, 4), (register, 0x0, 4) CALL (ram, 0x1558f0, 8) , (register, 0x30, 8) , (unique, 0x100000ac, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x80, 8) , (register, 0x88, 8), (unique, 0x100000ac, 8) COPY (const, 0x28da62, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000011c, 8), (unique, 0x1000011c, 8) PTRSUB (stack, 0xffffffffffffffb0, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffffb0, 8) , (const, 0x8, 8), (register, 0x80, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffffb0, 8) , (const, 0x10, 8), (register, 0x88, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffffb0, 8) , (const, 0x14, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
