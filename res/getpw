[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffe0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000235, 8), (unique, 0x10000235, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1e2ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xfa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000023d, 8) , (const, 0x16, 4), (unique, 0x1000023d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x1e2fc9, 1)]
[(register, 0x20, 8) PTRADD (unique, 0x1000010d, 8) , (unique, 0x10000054, 8) , (const, 0x1, 8), (unique, 0x1000010d, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (unique, 0x10000054, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) CALL (ram, 0x1e69f0, 8) , (const, 0x46, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x10000125, 8) , (unique, 0x10000054, 8) , (const, 0x1, 8), (unique, 0x10000125, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (unique, 0x10000054, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) CALL (ram, 0x1e69f0, 8) , (const, 0x46, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000255, 8) , (const, 0x1e2f88, 8), (unique, 0x10000255, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001bd, 8) , (unique, 0x100001b5, 8) , (const, 0x1, 8), (unique, 0x100001bd, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (unique, 0x100001b5, 8) INT_ADD (unique, 0x10000054, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000054, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) CALL (ram, 0x1e69f0, 8) , (const, 0x46, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x33, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x5c, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x5b, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x33, 4), (stack, 0xffffffffffffff90, 8) COPY (const, 0x1e2f62, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5c, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5b, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x5c, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x5b, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x33, 4)]
[ ---  CBRANCH (ram, 0x1e2fe8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e3bf0, 8) , (register, 0x38, 4) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (register, 0x0, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) CAST (unique, 0x1000024d, 8), (unique, 0x1000024d, 8) INT_ADD (unique, 0x10000245, 8) , (unique, 0x1000019d, 8), (unique, 0x10000245, 8) CAST (unique, 0x100001a5, 8), (unique, 0x100001a5, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x1000019d, 8) INT_ADD (unique, 0x10000054, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000054, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) CALL (ram, 0x1e69f0, 8) , (const, 0x46, 4)]
[ ---  CBRANCH (ram, 0x1e2fe8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffa0, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x1e2fc9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8), (register, 0x20, 8) CAST (unique, 0x10000265, 8), (unique, 0x10000265, 8) INT_ADD (unique, 0x1000025d, 8) , (unique, 0x100001e5, 8), (unique, 0x1000025d, 8) CAST (unique, 0x100001ed, 8), (unique, 0x100001ed, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff70, 8), (unique, 0x100001e5, 8) INT_ADD (unique, 0x10000054, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffffa0, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8), (register, 0x20, 8) CAST (unique, 0x10000275, 8), (unique, 0x10000275, 8) INT_ADD (unique, 0x1000026d, 8) , (unique, 0x100001fd, 8), (unique, 0x1000026d, 8) CAST (unique, 0x10000205, 8), (unique, 0x10000205, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff70, 8), (unique, 0x100001fd, 8) INT_ADD (unique, 0x10000054, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffffa0, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0xbd80, 8), (register, 0x20, 8) CAST (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_ADD (unique, 0x1000027d, 8) , (unique, 0x10000215, 8), (unique, 0x1000027d, 8) CAST (unique, 0x1000021d, 8), (unique, 0x1000021d, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff70, 8), (unique, 0x10000215, 8) INT_ADD (unique, 0x10000054, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffffa0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1e2fc2, 8), (register, 0x20, 8) CAST (unique, 0x10000295, 8), (unique, 0x10000295, 8) INT_ADD (unique, 0x1000028d, 8) , (unique, 0x10000054, 8), (unique, 0x1000028d, 8) CAST (unique, 0x100000c4, 8), (unique, 0x100000c4, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa8, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa8, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xa8, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x98, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x93, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x8d, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xa8, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x98, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x93, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x8d, 4)]
[(register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (const, 0x1f, 4), (register, 0x0, 4) CALL (ram, 0x165000, 8) , (register, 0x30, 8) , (unique, 0x100000d5, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x80, 8) , (register, 0x88, 8), (unique, 0x100000d5, 8) COPY (const, 0x2b5319, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000018d, 8), (unique, 0x1000018d, 8) PTRSUB (stack, 0xffffffffffffffa0, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffffa0, 8) , (const, 0x8, 8), (register, 0x80, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffffa0, 8) , (const, 0x10, 8), (register, 0x88, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffffa0, 8) , (const, 0x14, 8)]
[(unique, 0x1000022d, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x1000022d, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1e3005, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000029d, 8), (unique, 0x1000029d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002a5, 8) , (unique, 0x100000cd, 8), (unique, 0x100002a5, 8) CAST (register, 0x20, 8), (unique, 0x100000cd, 8) PTRSUB (const, 0x0, 8) , (const, 0x1e300a, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xf1, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xf1, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf2, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
