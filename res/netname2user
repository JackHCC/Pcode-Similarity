[ ---  CBRANCH (ram, 0x237464, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7fc0, 8) , (const, 0x0, 8)]
[(ram, 0x4c7fb8, 8) INDIRECT (ram, 0x4c7fb8, 8) , (const, 0xc0, 4)]
[(ram, 0x4c7fc0, 8) INDIRECT (ram, 0x4c7fc0, 8) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc0, 4)]
[ ---  CBRANCH (ram, 0x237499, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x244440, 8) , (unique, 0x3800, 8) , (unique, 0x100000c1, 8), (unique, 0x100000c1, 8) COPY (const, 0x28f529, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c7fb8, 8) COPY (ram, 0x4c7fb8, 8)]
[(ram, 0x4c7fc0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffffc0, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x237415, 1)]
[(stack, 0xffffffffffffffc0, 8) COPY (ram, 0x4c7fc0, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (ram, 0x4c7fb8, 8)]
[ ---  CBRANCH (ram, 0x237460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7fc0, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c7fb8, 8) COPY (ram, 0x4c7fb8, 8)]
[(ram, 0x4c7fc0, 8) COPY (ram, 0x4c7fc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c7fb8, 8) INDIRECT (ram, 0x4c7fb8, 8) , (const, 0x6e, 4), (ram, 0x4c7fb8, 8) INDIRECT (ram, 0x4c7fb8, 8) , (const, 0x4d, 4), (ram, 0x4c7fb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (ram, 0x4c7fb8, 8) , (ram, 0x4c7fb8, 8)]
[(ram, 0x4c7fc0, 8) INDIRECT (ram, 0x4c7fc0, 8) , (const, 0x6e, 4), (ram, 0x4c7fc0, 8) INDIRECT (ram, 0x4c7fc0, 8) , (const, 0x4d, 4), (ram, 0x4c7fc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (ram, 0x4c7fc0, 8) , (ram, 0x4c7fc0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x6e, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4d, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4d, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x237410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229330, 8) , (stack, 0xffffffffffffffb0, 8) , (unique, 0x100000c9, 8) , (const, 0x0, 8) , (stack, 0xffffffffffffffa8, 8) , (register, 0x0, 4) , (const, 0x0, 8), (unique, 0x100000c9, 8) COPY (const, 0x28f529, 8), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8), (stack, 0xffffffffffffffa8, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c7fb8, 8) COPY (ram, 0x4c7fb8, 8)]
[(ram, 0x4c7fc0, 8) COPY (ram, 0x4c7fc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100000ea, 4), (unique, 0x100000ea, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
