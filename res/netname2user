[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000fd, 8), (unique, 0x100000fd, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x258fa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0100, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe5, 4)]
[(ram, 0x4f00f8, 8) INDIRECT (ram, 0x4f00f8, 8) , (const, 0xe5, 4)]
[(ram, 0x4f0100, 8) INDIRECT (ram, 0x4f0100, 8) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xe5, 4)]
[ ---  CBRANCH (ram, 0x258fe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24b7a0, 8) , (unique, 0x3800, 8) , (unique, 0x100000d3, 8), (unique, 0x100000d3, 8) COPY (const, 0x2b72b4, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(ram, 0x4f0100, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x258f81, 1)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffffb0, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x258f45, 1)]
[(stack, 0xffffffffffffffb0, 8) COPY (ram, 0x4f0100, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (ram, 0x4f00f8, 8)]
[ ---  CBRANCH (ram, 0x258fd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0100, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x258f81, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f00f8, 8) INDIRECT (ram, 0x4f00f8, 8) , (const, 0x7e, 4), (ram, 0x4f00f8, 8) INDIRECT (ram, 0x4f00f8, 8) , (const, 0x5d, 4), (ram, 0x4f00f8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (ram, 0x4f00f8, 8) , (ram, 0x4f00f8, 8)]
[(ram, 0x4f0100, 8) INDIRECT (ram, 0x4f0100, 8) , (const, 0x7e, 4), (ram, 0x4f0100, 8) INDIRECT (ram, 0x4f0100, 8) , (const, 0x5d, 4), (ram, 0x4f0100, 8) MULTIEQUAL (unique, 0xbd80, 8) , (ram, 0x4f0100, 8) , (ram, 0x4f0100, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x7e, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x7e, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x258f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249490, 8) , (stack, 0xffffffffffffff98, 8) , (unique, 0x100000db, 8) , (const, 0x0, 8) , (stack, 0xffffffffffffffa0, 8) , (register, 0x0, 4) , (const, 0x0, 8), (unique, 0x100000db, 8) COPY (const, 0x2b72b4, 8), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8), (stack, 0xffffffffffffff98, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffa0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f0100, 8) MULTIEQUAL (ram, 0x4f0100, 8) , (ram, 0x4f0100, 8) , (ram, 0x4f0100, 8)]
[(ram, 0x4f00f8, 8) MULTIEQUAL (ram, 0x4f00f8, 8) , (ram, 0x4f00f8, 8) , (ram, 0x4f00f8, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x258ffd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000105, 8), (unique, 0x10000105, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f00f8, 8) COPY (ram, 0x4f00f8, 8)]
[(ram, 0x4f0100, 8) COPY (ram, 0x4f0100, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x1000010d, 4), (unique, 0x1000010d, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc7, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4f00f8, 8) COPY (ram, 0x4f00f8, 8), (ram, 0x4f00f8, 8) INDIRECT (ram, 0x4f00f8, 8) , (const, 0xc7, 4)]
[(ram, 0x4f0100, 8) COPY (ram, 0x4f0100, 8), (ram, 0x4f0100, 8) INDIRECT (ram, 0x4f0100, 8) , (const, 0xc7, 4)]
[ ---  RETURN (const, 0x1, 4)]
