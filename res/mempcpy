[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x451e20, 8)]
[ ---  CBRANCH (ram, 0x429ec3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000000, 4) , (const, 0x0, 4), (unique, 0x10000000, 4) INT_AND (ram, 0x4c7d84, 4) , (const, 0x3000, 4)]
[ ---  CBRANCH (ram, 0x429ec8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_AND (unique, 0x1000001c, 8) , (const, 0x400000000004, 8), (unique, 0x1000001c, 8) INT_ADD (unique, 0x10000033, 8) , (ram, 0x4c7d80, 4), (unique, 0x10000033, 8) INT_LEFT (unique, 0x1000002b, 8) , (const, 0x20, 8), (unique, 0x1000002b, 8) INT_SEXT (unique, 0x1000003b, 4), (unique, 0x1000003b, 4) CAST (ram, 0x4c7d84, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x43e140, 8)]
[ ---  CBRANCH (ram, 0x429ec3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000018, 4) , (const, 0x0, 4), (unique, 0x10000018, 4) INT_AND (ram, 0x4c7d84, 4) , (const, 0x800, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x452630, 8)]
[ ---  CBRANCH (ram, 0x429eed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (ram, 0x4c7d35, 1) , (const, 0x2, 1)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4525e0, 8)]
[(ram, 0x4c7d29, 1) COPY (ram, 0x4c7d29, 1)]
[(ram, 0x4c7d35, 1) COPY (ram, 0x4c7d35, 1)]
[(ram, 0x4c7d80, 4) COPY (ram, 0x4c7d80, 4)]
[(ram, 0x4c7d84, 4) COPY (ram, 0x4c7d84, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x429ea0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000000c, 4) , (const, 0x0, 4), (unique, 0x1000000c, 4) INT_AND (ram, 0x4c7d84, 4) , (const, 0x100, 4)]
[ ---  CBRANCH (ram, 0x429ef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (ram, 0x4c7d29, 1) , (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x429ef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000010, 4) , (const, 0x0, 4), (unique, 0x10000010, 4) INT_AND (ram, 0x4c7d84, 4) , (const, 0x20, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x451e90, 8)]
[ ---  CBRANCH (ram, 0x429f09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (ram, 0x4c7d35, 1) , (const, 0x2, 1)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x451dd0, 8)]
[(ram, 0x4c7d29, 1) COPY (ram, 0x4c7d29, 1)]
[(ram, 0x4c7d35, 1) COPY (ram, 0x4c7d35, 1)]
[(ram, 0x4c7d80, 4) COPY (ram, 0x4c7d80, 4)]
[(ram, 0x4c7d84, 4) COPY (ram, 0x4c7d84, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x433570, 8)]
[ ---  CBRANCH (ram, 0x429ec3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (ram, 0x4c7d84, 4) , (const, 0x8, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x438b00, 8)]
[(ram, 0x4c7d29, 1) COPY (ram, 0x4c7d29, 1)]
[(ram, 0x4c7d35, 1) COPY (ram, 0x4c7d35, 1)]
[(ram, 0x4c7d80, 4) COPY (ram, 0x4c7d80, 4)]
[(ram, 0x4c7d84, 4) COPY (ram, 0x4c7d84, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4521f0, 8)]
[ ---  CBRANCH (ram, 0x429e9b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (ram, 0x4c7d35, 1) , (const, 0x2, 1)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4521a0, 8)]
[(ram, 0x4c7d29, 1) COPY (ram, 0x4c7d29, 1)]
[(ram, 0x4c7d35, 1) COPY (ram, 0x4c7d35, 1)]
[(ram, 0x4c7d80, 4) COPY (ram, 0x4c7d80, 4)]
[(ram, 0x4c7d84, 4) COPY (ram, 0x4c7d84, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
