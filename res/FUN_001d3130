[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000042b, 8), (unique, 0x1000042b, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1d32f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x4a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000006d, 8) , (const, 0x1, 8), (unique, 0x1000006d, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2c, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x41c, 4)]
[(ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x41c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x1, 4), (unique, 0x3a00, 8) PTRADD (unique, 0x1000025c, 8) , (unique, 0x10000394, 8) , (const, 0x4, 8), (unique, 0x10000394, 8) INT_MULT (register, 0x28, 8) , (const, 0xc, 8), (unique, 0x1000025c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbc8, 8), (register, 0x28, 8) INT_SEXT (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1d318f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1d31f0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x10, 4) , (const, 0xa, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) INT_SEXT (unique, 0xbb00, 1)]
[(ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x9e, 4)]
[(ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x9e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 4), (unique, 0x3a00, 8) PTRADD (unique, 0x1000023c, 8) , (unique, 0x100002c4, 8) , (const, 0x4, 8), (unique, 0x100002c4, 8) INT_MULT (register, 0x28, 8) , (const, 0xc, 8), (unique, 0x1000023c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbc8, 8), (register, 0x28, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000423, 8) COPY (register, 0x18, 8)]
[(register, 0x28, 8) INT_SEXT (register, 0x30, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa5, 4)]
[(ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0xa5, 4), (ram, 0x4edbcc, 4) MULTIEQUAL (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4)]
[(ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0xa5, 4), (ram, 0x4edbd0, 2) MULTIEQUAL (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2)]
[(stack, 0xffffffffffffffc2, 2) INDIRECT (stack, 0xffffffffffffffc2, 2) , (const, 0xa5, 4)]
[(stack, 0xffffffffffffffc4, 2) INDIRECT (stack, 0xffffffffffffffc4, 2) , (const, 0xa5, 4)]
[(stack, 0xffffffffffffffc6, 2) INDIRECT (stack, 0xffffffffffffffc6, 2) , (const, 0xa5, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xa5, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000043b, 8), (unique, 0x1000043b, 8) CALL (ram, 0x145140, 8) , (register, 0x18, 8) , (unique, 0x10000433, 8) , (const, 0xa, 4), (unique, 0x10000433, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000423, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1d32d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000200, 8) , (register, 0x18, 8), (unique, 0x10000200, 8) CAST (unique, 0x10000447, 8), (unique, 0x10000447, 8) INT_ADD (unique, 0x1000041b, 8) , (stack, 0xffffffffffffffc8, 4), (unique, 0x1000041b, 8) INT_LEFT (unique, 0x10000413, 8) , (const, 0x20, 8), (unique, 0x10000413, 8) INT_SEXT (unique, 0x10000443, 4), (unique, 0x10000443, 4) CAST (stack, 0xffffffffffffffcc, 4), (stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0xa5, 4), (stack, 0xffffffffffffffc8, 4) INDIRECT (stack, 0xffffffffffffffc8, 4) , (const, 0xa5, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000423, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1d32d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x16e, 8)]
[ ---  CBRANCH (ram, 0x1d31d5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000244, 8) , (unique, 0x100002dc, 8) , (const, 0x4, 8), (unique, 0x100002dc, 8) INT_MULT (register, 0x28, 8) , (const, 0xc, 8), (unique, 0x10000244, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbc8, 8)]
[ ---  CBRANCH (ram, 0x1d32d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x12e, 4)]
[(ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x12e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x0, 2), (register, 0x0, 2) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3a00, 8) PTRADD (unique, 0x1000028c, 8) , (unique, 0x100002ec, 8) , (const, 0x2, 8), (unique, 0x100002ec, 8) INT_MULT (register, 0x28, 8) , (const, 0x18, 8), (unique, 0x1000028c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbd0, 8)]
[ ---  BRANCH (ram, 0x1d3239, 1)]
[(register, 0x30, 8) INT_MULT (register, 0x28, 8) , (const, 0x30, 8), (register, 0x28, 8) INT_SEXT (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1d3288, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x4d, 1)]
[ ---  CBRANCH (ram, 0x1d32d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0x3400, 8) PTRADD (unique, 0x10000234, 8) , (unique, 0x100002fc, 8) , (const, 0x8, 8), (unique, 0x100002fc, 8) INT_MULT (register, 0x28, 8) , (const, 0x6, 8), (unique, 0x10000234, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbc0, 8)]
[(ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x341, 4)]
[(ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x341, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) PTRADD (unique, 0x1000024c, 8) , (unique, 0x1000030c, 8) , (const, 0x4, 8), (unique, 0x1000030c, 8) INT_MULT (register, 0x28, 8) , (const, 0xc, 8), (unique, 0x1000024c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbc8, 8)]
[ ---  CBRANCH (ram, 0x1d3428, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4edbcc, 4) COPY (const, 0x20003, 4)]
[(ram, 0x4edbd0, 2) COPY (const, 0x0, 2)]
[ ---  BRANCH (ram, 0x1d3239, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000044f, 8) , (const, 0x1000b, 4), (unique, 0x1000044f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000264, 8) , (unique, 0x1000031c, 8) , (const, 0x2, 8), (unique, 0x1000031c, 8) INT_MULT (register, 0x28, 8) , (const, 0x18, 8), (unique, 0x10000264, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbcc, 8)]
[(ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x353, 4), (ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x34f, 4)]
[(ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x353, 4), (ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x34f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) PTRADD (unique, 0x10000294, 8) , (unique, 0x1000032c, 8) , (const, 0x2, 8), (unique, 0x1000032c, 8) INT_MULT (register, 0x28, 8) , (const, 0x18, 8), (unique, 0x10000294, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbd0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) PTRADD (unique, 0x10000254, 8) , (unique, 0x10000384, 8) , (const, 0x4, 8), (unique, 0x10000384, 8) INT_MULT (register, 0x28, 8) , (const, 0xc, 8), (unique, 0x10000254, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbc8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x389, 4)]
[(ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x389, 4), (ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x386, 4)]
[(ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x389, 4), (ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x386, 4)]
[(stack, 0xffffffffffffffc2, 2) INDIRECT (stack, 0xffffffffffffffc2, 2) , (const, 0x389, 4)]
[(stack, 0xffffffffffffffc4, 2) INDIRECT (stack, 0xffffffffffffffc4, 2) , (const, 0x389, 4)]
[(stack, 0xffffffffffffffc6, 2) INDIRECT (stack, 0xffffffffffffffc6, 2) , (const, 0x389, 4)]
[(stack, 0xffffffffffffffc8, 4) INDIRECT (stack, 0xffffffffffffffc8, 4) , (const, 0x389, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x389, 4)]
[ ---  CBRANCH (ram, 0x1d33e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) CALL (ram, 0x17b110, 8) , (register, 0x18, 8) , (unique, 0x10000224, 8) , (unique, 0x3a00, 8) , (unique, 0x3a00, 8) , (unique, 0x3a00, 8) , (unique, 0x3800, 8), (unique, 0x10000224, 8) COPY (const, 0x2b51f5, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000029c, 8) , (unique, 0x10000374, 8) , (const, 0x2, 8), (unique, 0x10000374, 8) INT_MULT (register, 0x28, 8) , (const, 0x18, 8), (unique, 0x1000029c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbd0, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000026c, 8) , (unique, 0x10000364, 8) , (const, 0x2, 8), (unique, 0x10000364, 8) INT_MULT (register, 0x28, 8) , (const, 0x18, 8), (unique, 0x1000026c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbcc, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000027c, 8) , (unique, 0x10000354, 8) , (const, 0x2, 8), (unique, 0x10000354, 8) INT_MULT (register, 0x28, 8) , (const, 0x18, 8), (unique, 0x1000027c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbce, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x1d32d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xb, 2) , (unique, 0x10000457, 2), (unique, 0x10000457, 2) CAST (register, 0x0, 2), (register, 0x0, 2) INT_SUB (unique, 0xbc00, 2) , (const, 0x1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000274, 8) , (unique, 0x100003dc, 8) , (const, 0x2, 8), (unique, 0x100003dc, 8) INT_MULT (register, 0x28, 8) , (const, 0x18, 8), (unique, 0x10000274, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbcc, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000045b, 8), (unique, 0x1000045b, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ZEXT (unique, 0x10000459, 2), (unique, 0x10000459, 2) CAST (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000284, 8) , (unique, 0x100003ec, 8) , (const, 0x2, 8), (unique, 0x100003ec, 8) INT_MULT (register, 0x28, 8) , (const, 0x18, 8), (unique, 0x10000284, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbce, 8)]
[ ---  CBRANCH (ram, 0x1d32d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x4, 2) , (register, 0x0, 2), (register, 0x0, 2) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ZEXT (unique, 0x10000459, 2), (unique, 0x10000459, 2) CAST (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000284, 8) , (unique, 0x100003ec, 8) , (const, 0x2, 8), (unique, 0x100003ec, 8) INT_MULT (register, 0x28, 8) , (const, 0x18, 8), (unique, 0x10000284, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbce, 8)]
[ ---  CBRANCH (ram, 0x1d32d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x6, 2) , (unique, 0x10000463, 2), (unique, 0x10000463, 2) CAST (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002a4, 8) , (unique, 0x100003fc, 8) , (const, 0x2, 8), (unique, 0x100003fc, 8) INT_MULT (register, 0x28, 8) , (const, 0x18, 8), (unique, 0x100002a4, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbd0, 8)]
[(register, 0x10, 8) PTRADD (register, 0x18, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (stack, 0xffffffffffffffc8, 4)]
[ ---  BRANCH (ram, 0x1d3239, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 4) MULTIEQUAL (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4)]
[(stack, 0xffffffffffffffc6, 2) MULTIEQUAL (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2)]
[(stack, 0xffffffffffffffc4, 2) MULTIEQUAL (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2)]
[(stack, 0xffffffffffffffc2, 2) MULTIEQUAL (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2)]
[(ram, 0x4edbd0, 2) MULTIEQUAL (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2)]
[(ram, 0x4edbcc, 4) MULTIEQUAL (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) INT_SEXT (register, 0x30, 4)]
[(register, 0x0, 8) INT_OR (unique, 0x100000cd, 8) , (unique, 0x100000e6, 8), (unique, 0x100000e6, 8) INT_ZEXT (register, 0x0, 1), (register, 0x0, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0x100000cd, 8) INT_AND (unique, 0x10000465, 8) , (const, 0xffffffffffffff00, 8), (unique, 0x10000465, 8) CAST (register, 0x0, 8), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000200, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1d3330, 1) , (register, 0x206, 1), (register, 0x206, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000200, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1d3256, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1)]
[ ---  CBRANCH (ram, 0x1d32d2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x260, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x260, 4)]
[ ---  CALL (ram, 0x17b110, 8) , (unique, 0x3a00, 8) , (unique, 0x1000022c, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x1000022c, 8) COPY (const, 0x2b5204, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc6, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc2, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100003ac, 8) , (const, 0x1, 8), (unique, 0x100003ac, 8) INT_ADD (unique, 0x10000135, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8), (unique, 0x10000135, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2d, 1)]
[(register, 0x10, 8) PTRADD (unique, 0x3a00, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (stack, 0xffffffffffffffc8, 4), (stack, 0xffffffffffffffc8, 4) INDIRECT (stack, 0xffffffffffffffc8, 4) , (const, 0x260, 4), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100003ac, 8) , (const, 0x1, 8), (unique, 0x100003ac, 8) INT_ADD (unique, 0x10000135, 8) , (const, 0x1, 8), (unique, 0x10000135, 8) INT_ZEXT (register, 0x206, 1), (stack, 0xffffffffffffffc8, 4) COPY (const, 0x0, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2d, 1)]
[(ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x2f2, 4), (ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x260, 4)]
[(ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x2f2, 4), (ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x260, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x0, 4), (unique, 0x3a00, 8) PTRADD (unique, 0x100002b4, 8) , (unique, 0x100003cc, 8) , (const, 0x4, 8), (unique, 0x100003cc, 8) INT_MULT (register, 0x28, 8) , (const, 0xc, 8), (unique, 0x100002b4, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbd4, 8), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (register, 0x38, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) INT_ZEXT (stack, 0xffffffffffffffc6, 2), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) INT_MULT (register, 0x8, 4) , (const, 0xe10, 4), (register, 0x8, 4) INT_ZEXT (stack, 0xffffffffffffffc2, 2), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (const, 0x3c, 4), (register, 0x0, 4) INT_ZEXT (stack, 0xffffffffffffffc4, 2), (register, 0x38, 4) INT_ADD (unique, 0x10000186, 4) , (unique, 0x1000018a, 4), (unique, 0x1000018a, 4) INT_ZEXT (register, 0x206, 1), (unique, 0x10000186, 4) INT_SUB (unique, 0x1000018e, 4) , (const, 0x1, 4), (unique, 0x1000018e, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2d, 1), (stack, 0xffffffffffffffc6, 2) INDIRECT (stack, 0xffffffffffffffc6, 2) , (const, 0x260, 4), (stack, 0xffffffffffffffc4, 2) INDIRECT (stack, 0xffffffffffffffc4, 2) , (const, 0x260, 4), (stack, 0xffffffffffffffc2, 2) INDIRECT (stack, 0xffffffffffffffc2, 2) , (const, 0x260, 4), (stack, 0xffffffffffffffc4, 2) COPY (const, 0x0, 2), (stack, 0xffffffffffffffc2, 2) COPY (const, 0x2, 2), (stack, 0xffffffffffffffc6, 2) COPY (const, 0x0, 2)]
[ ---  BRANCH (ram, 0x1d3268, 1)]
[ ---  CBRANCH (ram, 0x1d32d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2c, 1)]
[(ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x18a, 4)]
[(ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x18a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x1c20, 4), (unique, 0x3a00, 8) PTRADD (unique, 0x100002ac, 8) , (unique, 0x1000033c, 8) , (const, 0x4, 8), (unique, 0x1000033c, 8) INT_MULT (register, 0x28, 8) , (const, 0xc, 8), (unique, 0x100002ac, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbd4, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 4) MULTIEQUAL (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4)]
[(stack, 0xffffffffffffffc6, 2) MULTIEQUAL (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2)]
[(stack, 0xffffffffffffffc4, 2) MULTIEQUAL (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2)]
[(stack, 0xffffffffffffffc2, 2) MULTIEQUAL (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000046d, 8) , (const, 0xffffffff, 4), (unique, 0x1000046d, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100002bc, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100002bc, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbe8, 8), (register, 0x0, 8) INT_MULT (register, 0x28, 8) , (const, 0x30, 8)]
[(ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x1b9, 4), (ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x1b7, 4), (ram, 0x4edbcc, 4) MULTIEQUAL (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4)]
[(ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x1b9, 4), (ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x1b7, 4), (ram, 0x4edbd0, 2) MULTIEQUAL (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1d32d2, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc8, 4) MULTIEQUAL (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4)]
[(stack, 0xffffffffffffffc6, 2) MULTIEQUAL (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2)]
[(stack, 0xffffffffffffffc4, 2) MULTIEQUAL (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2)]
[(stack, 0xffffffffffffffc2, 2) MULTIEQUAL (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2)]
[(ram, 0x4edbd0, 2) MULTIEQUAL (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2)]
[(ram, 0x4edbcc, 4) MULTIEQUAL (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc8, 4) MULTIEQUAL (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4)]
[(stack, 0xffffffffffffffc6, 2) MULTIEQUAL (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2) , (stack, 0xffffffffffffffc6, 2)]
[(stack, 0xffffffffffffffc4, 2) MULTIEQUAL (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2) , (stack, 0xffffffffffffffc4, 2)]
[(stack, 0xffffffffffffffc2, 2) MULTIEQUAL (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2) , (stack, 0xffffffffffffffc2, 2)]
[(ram, 0x4edbd0, 2) MULTIEQUAL (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2) , (ram, 0x4edbd0, 2)]
[(ram, 0x4edbcc, 4) MULTIEQUAL (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4) , (ram, 0x4edbcc, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d3442, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000475, 8), (unique, 0x10000475, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4edbcc, 4) COPY (ram, 0x4edbcc, 4)]
[(ram, 0x4edbd0, 2) COPY (ram, 0x4edbd0, 2)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc2, 2) INDIRECT (stack, 0xffffffffffffffc2, 2) , (const, 0x1e4, 4)]
[(stack, 0xffffffffffffffc4, 2) INDIRECT (stack, 0xffffffffffffffc4, 2) , (const, 0x1e4, 4)]
[(stack, 0xffffffffffffffc6, 2) INDIRECT (stack, 0xffffffffffffffc6, 2) , (const, 0x1e4, 4)]
[(stack, 0xffffffffffffffc8, 4) INDIRECT (stack, 0xffffffffffffffc8, 4) , (const, 0x1e4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1e4, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4edbcc, 4) COPY (ram, 0x4edbcc, 4), (ram, 0x4edbcc, 4) INDIRECT (ram, 0x4edbcc, 4) , (const, 0x1e4, 4)]
[(ram, 0x4edbd0, 2) COPY (ram, 0x4edbd0, 2), (ram, 0x4edbd0, 2) INDIRECT (ram, 0x4edbd0, 2) , (const, 0x1e4, 4)]
[ ---  RETURN (const, 0x1, 4)]
