[(register, 0x1200, 16) SUBPIECE (register, 0x1200, 32) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1bc020, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000202, 8), (unique, 0x10000202, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x278, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1bc04f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(unique, 0x100001e2, 8) COPY (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x1bc039, 1)]
[(register, 0x30, 8) CAST (unique, 0x1000020a, 8), (unique, 0x1000020a, 8) PTRADD (unique, 0x100000bd, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x100000bd, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100001e2, 8) , (unique, 0x100001ea, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000021b, 8), (unique, 0x1000021b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000213, 8), (unique, 0x10000213, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000212, 1), (unique, 0x10000212, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100000d5, 8), (unique, 0x100000d5, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100000cd, 8), (unique, 0x100000cd, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100001e2, 8) , (unique, 0x100001ea, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1bc030, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000021b, 8), (unique, 0x1000021b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000213, 8), (unique, 0x10000213, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000212, 1), (unique, 0x10000212, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100000d5, 8), (unique, 0x100000d5, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100000cd, 8), (unique, 0x100000cd, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100001e2, 8) , (unique, 0x100001ea, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000223, 8), (unique, 0x10000223, 8) PTRADD (unique, 0x100000ad, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x100000ad, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100001ea, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1bc04f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 4) INT_AND (unique, 0x10000059, 4) , (const, 0x3f, 4), (unique, 0x10000059, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (ram, 0x2bc0b0, 16)]
[(unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (ram, 0x2bc0d0, 16)]
[(unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (ram, 0x2bc040, 16)]
[ ---  CBRANCH (ram, 0x28b030, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 4) , (const, 0x31, 4), (register, 0x8, 4) INT_AND (unique, 0x10000051, 4) , (const, 0x3f, 4), (unique, 0x10000051, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x28b030, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 4) , (const, 0x31, 4)]
[ ---  CBRANCH (ram, 0x28c5b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xffff, 4), (register, 0x10, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc7280, 16), (unique, 0xc7280, 16) CALLOTHER (const, 0x1c9, 4) , (unique, 0xc0300, 16) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc8a80, 16) , (unique, 0xc5400, 16), (unique, 0xc8a80, 16) CALLOTHER (const, 0x1da, 4) , (register, 0x1200, 16) , (register, 0x1200, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb300, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb300, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb300, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb300, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb300, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb300, 16) , (unique, 0xbb000, 16), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10000233, 8), (unique, 0x10000233, 8) INT_AND (unique, 0x1000022b, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000022b, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000243, 8), (unique, 0x10000243, 8) INT_AND (unique, 0x1000023b, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000023b, 8) CAST (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000051, 4) , (const, 0xf, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x10000059, 4) , (const, 0xf, 4)]
[(unique, 0xc8a80, 16) CALLOTHER (const, 0x1da, 4) , (register, 0x1200, 16) , (register, 0x1200, 16), (register, 0x1200, 16) MULTIEQUAL (register, 0x1200, 16) , (register, 0x1200, 16) , (unique, 0xc0300, 16)]
[ ---  CBRANCH (ram, 0x28b080, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x10000059, 4) , (const, 0xf, 4), (register, 0x8, 4) INT_AND (unique, 0x10000051, 4) , (const, 0xf, 4)]
[(unique, 0x100001a2, 8) COPY (register, 0x0, 8)]
[(unique, 0x100001b2, 8) COPY (register, 0x8, 8)]
[(unique, 0x100001d2, 8) COPY (register, 0x30, 8)]
[(unique, 0x100001f2, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28b057, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x8, 4) , (register, 0x0, 4)]
[(unique, 0x100001aa, 8) COPY (register, 0x8, 8)]
[(unique, 0x100001ba, 8) COPY (register, 0x0, 8)]
[(unique, 0x100001da, 8) COPY (register, 0x38, 8)]
[(unique, 0x100001fa, 8) COPY (register, 0x30, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16), (ram, 0x2bc040, 16) INDIRECT (ram, 0x2bc040, 16) , (const, 0xeb, 4)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16), (ram, 0x2bc0b0, 16) INDIRECT (ram, 0x2bc0b0, 16) , (const, 0xeb, 4)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16), (ram, 0x2bc0d0, 16) INDIRECT (ram, 0x2bc0d0, 16) , (const, 0xeb, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0x10000253, 8) , (register, 0x1200, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x1260, 8) , (register, 0x1280, 8) , (register, 0x12a0, 8) , (register, 0x12c0, 8), (unique, 0x10000253, 8) CAST (unique, 0x3400, 8), (register, 0x12c0, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x12a0, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x1280, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x1240, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x1220, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x1200, 8) SUBPIECE (unique, 0xc0300, 16) , (const, 0x0, 4), (unique, 0x3400, 8) PTRADD (unique, 0x1000009d, 8) , (register, 0x88, 8) , (const, 0x1, 8), (unique, 0x1000009d, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bdc40, 8), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc8a80, 16) , (unique, 0xbb000, 16), (register, 0x88, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000024b, 8), (unique, 0x1000024b, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000095, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000095, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bdc40, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (register, 0x88, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xf, 8), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100001a2, 8) , (unique, 0x100001aa, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100001b2, 8) , (unique, 0x100001ba, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100001d2, 8) , (unique, 0x100001da, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100001f2, 8) , (unique, 0x100001fa, 8)]
[(register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x88, 4), (register, 0x88, 4) INT_RIGHT (register, 0x88, 4) , (register, 0x8, 1), (register, 0x10, 4) INT_RIGHT (const, 0xffff, 4) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x88, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc7280, 16), (unique, 0xc7280, 16) CALLOTHER (const, 0x1c9, 4) , (unique, 0xc0300, 16) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc8a80, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x28c598, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x88, 4), (register, 0x88, 4) INT_RIGHT (register, 0x88, 4) , (register, 0x8, 1), (register, 0x10, 4) INT_RIGHT (const, 0xffff, 4) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x88, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc7280, 16), (unique, 0xc7280, 16) CALLOTHER (const, 0x1c9, 4) , (unique, 0xc0300, 16) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc8a80, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100001c2, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x10, 8)]
[ ---  CALLOTHER (const, 0x183, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16) , (const, 0x1a, 1), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000263, 8), (unique, 0x10000263, 8) PTRADD (unique, 0x100000fd, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100000fd, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) PTRADD (unique, 0x100000ed, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100000ed, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001c2, 8) , (unique, 0x100001ca, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001c2, 8) , (unique, 0x100001ca, 8)]
[ ---  CBRANCH (ram, 0x28b160, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)]
[ ---  CALLOTHER (const, 0x183, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16) , (const, 0x1a, 1), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000273, 8), (unique, 0x10000273, 8) PTRADD (unique, 0x1000012d, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000012d, 8) PTRSUB (unique, 0x10000125, 8) , (const, 0x0, 8), (unique, 0x10000125, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) PTRADD (unique, 0x10000115, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000115, 8) PTRSUB (unique, 0x1000010d, 8) , (const, 0x0, 8), (unique, 0x1000010d, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x100001ca, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28b160, 1) , (unique, 0x1000019d, 1), (unique, 0x1000019d, 1) BOOL_AND (unique, 0x1000019e, 1) , (unique, 0x1000019f, 1), (unique, 0x1000019f, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x1000019e, 1) BOOL_NEGATE (register, 0x200, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x28c5cc, 1) , (unique, 0x100001a1, 1), (unique, 0x100001a1, 1) BOOL_NEGATE (register, 0x200, 1)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1000028d, 4), (unique, 0x1000028d, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000285, 8), (unique, 0x10000285, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000007d, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x1000007d, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ddc0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000075, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000075, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ddc0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1000027c, 1), (unique, 0x1000027c, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000014d, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000014d, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1000027b, 1), (unique, 0x1000027b, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000013d, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000013d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000291, 8), (unique, 0x10000291, 8) PTRADD (unique, 0x1000015d, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000015d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000299, 8), (unique, 0x10000299, 8) PTRADD (unique, 0x1000016d, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000016d, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3400, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8)]
[(unique, 0x1aa00, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1ac80, 1), (unique, 0x1ac80, 1) INT_EQUAL (unique, 0x10000070, 4) , (const, 0x0, 4), (unique, 0x10000070, 4) INT_AND (unique, 0x1000006c, 4) , (const, 0x1, 4), (unique, 0x1000006c, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1aa00, 8), (unique, 0x1aa00, 8) MULTIEQUAL (unique, 0x1aa00, 8) , (unique, 0x1aa00, 8)]
[(unique, 0x1aa00, 8) INT_ADD (unique, 0x1aa00, 8) , (const, 0x1, 8)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100002b3, 4), (unique, 0x100002b3, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002ab, 8), (unique, 0x100002ab, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000008d, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x1000008d, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ddc0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002a3, 8), (unique, 0x100002a3, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000085, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000085, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ddc0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100002a2, 1), (unique, 0x100002a2, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000018d, 8) , (unique, 0x1aa00, 8) , (const, 0x1, 8), (unique, 0x1000018d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x100002a1, 1), (unique, 0x100002a1, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000017d, 8) , (unique, 0x1aa00, 8) , (const, 0x1, 8), (unique, 0x1000017d, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0x1aa00, 8) MULTIEQUAL (unique, 0x1aa00, 8) , (unique, 0x1aa00, 8)]
