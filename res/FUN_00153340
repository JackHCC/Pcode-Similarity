[(register, 0x0, 4) INT_AND (unique, 0x10000047, 4) , (const, 0x3, 4), (unique, 0x10000047, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x153369, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000004f, 8) , (const, 0x0, 8), (unique, 0x1000004f, 8) INT_AND (register, 0x10, 8) , (const, 0x3, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x153396, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)]
[(register, 0x0, 8) INT_OR (unique, 0x56280, 8) , (unique, 0x56380, 8), (unique, 0x56380, 8) INT_LEFT (unique, 0xbd80, 8) , (unique, 0x56300, 1), (unique, 0x56300, 1) INT_SUB (const, 0x40, 1) , (unique, 0x56180, 1), (unique, 0x56280, 8) INT_ZEXT (unique, 0x10000011, 4), (unique, 0x10000011, 4) INT_RIGHT (const, 0x0, 4) , (unique, 0x56180, 1), (unique, 0x56180, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x15338f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x2, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x153406, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x88, 8), (register, 0x88, 8) INT_RIGHT (unique, 0xbd80, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1533d0, 1) , (register, 0x206, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) INT_OR (unique, 0x56280, 8) , (unique, 0x56380, 8), (unique, 0x56380, 8) INT_LEFT (unique, 0xbd80, 8) , (unique, 0x56300, 1), (unique, 0x56300, 1) INT_SUB (const, 0x40, 1) , (unique, 0x56180, 1), (unique, 0x56280, 8) INT_ZEXT (unique, 0x1000001e, 4), (unique, 0x1000001e, 4) INT_RIGHT (const, 0x0, 4) , (unique, 0x56180, 1), (unique, 0x56180, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x1533b9, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x3, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1533fb, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_OR (unique, 0x56280, 8) , (unique, 0x56380, 8), (unique, 0x56380, 8) INT_LEFT (unique, 0xbd80, 8) , (unique, 0x56300, 1), (unique, 0x56300, 1) INT_SUB (const, 0x40, 1) , (unique, 0x56180, 1), (unique, 0x56280, 8) INT_RIGHT (unique, 0xbd80, 8) , (unique, 0x56180, 1), (unique, 0x56180, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x88, 8) INT_RIGHT (unique, 0xbd80, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) INT_OR (unique, 0x56280, 8) , (unique, 0x56380, 8), (unique, 0x56380, 8) INT_LEFT (unique, 0xbd80, 8) , (unique, 0x56300, 1), (unique, 0x56300, 1) INT_SUB (const, 0x40, 1) , (unique, 0x56180, 1), (unique, 0x56280, 8) INT_ZEXT (unique, 0x1000002c, 4), (unique, 0x1000002c, 4) INT_RIGHT (const, 0x0, 4) , (unique, 0x56180, 1), (unique, 0x56180, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x15342c, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3, 8) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) INT_OR (unique, 0x56280, 8) , (unique, 0x56380, 8), (unique, 0x56380, 8) INT_LEFT (unique, 0xbd80, 8) , (unique, 0x56300, 1), (unique, 0x56300, 1) INT_SUB (const, 0x40, 1) , (unique, 0x56180, 1), (unique, 0x56280, 8) INT_ZEXT (unique, 0x10000000, 4), (unique, 0x10000000, 4) INT_RIGHT (const, 0x0, 4) , (unique, 0x56180, 1), (unique, 0x56180, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x153412, 1)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x90, 8) INT_OR (unique, 0x56280, 8) , (unique, 0x56380, 8), (unique, 0x56380, 8) INT_LEFT (register, 0x98, 8) , (unique, 0x56300, 1), (unique, 0x56300, 1) INT_SUB (const, 0x40, 1) , (unique, 0x56180, 1), (unique, 0x56280, 8) INT_RIGHT (register, 0x90, 8) , (unique, 0x56180, 1), (unique, 0x56180, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x38, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x90, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x98, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x30, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1533f0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x98, 8), (register, 0x98, 8) INT_OR (unique, 0x56280, 8) , (unique, 0x56380, 8), (unique, 0x56380, 8) INT_LEFT (register, 0x80, 8) , (unique, 0x56300, 1), (unique, 0x56300, 1) INT_SUB (const, 0x40, 1) , (unique, 0x56180, 1), (unique, 0x56280, 8) INT_RIGHT (register, 0x98, 8) , (unique, 0x56180, 1), (unique, 0x56180, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x38, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0xbd80, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x80, 8) INT_OR (unique, 0x56280, 8) , (unique, 0x56380, 8), (unique, 0x56380, 8) INT_LEFT (register, 0x88, 8) , (unique, 0x56300, 1), (unique, 0x56300, 1) INT_SUB (const, 0x40, 1) , (unique, 0x56180, 1), (unique, 0x56280, 8) INT_RIGHT (register, 0x80, 8) , (unique, 0x56180, 1), (unique, 0x56180, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x38, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0xbd80, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x88, 8) INT_RIGHT (register, 0x88, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x38, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x98, 8), (register, 0x98, 8) INT_OR (unique, 0x56280, 8) , (unique, 0x56380, 8), (unique, 0x56380, 8) INT_LEFT (register, 0x80, 8) , (unique, 0x56300, 1), (unique, 0x56300, 1) INT_SUB (const, 0x40, 1) , (unique, 0x56180, 1), (unique, 0x56280, 8) INT_RIGHT (register, 0x98, 8) , (unique, 0x56180, 1), (unique, 0x56180, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x38, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0xbd80, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (unique, 0xbd80, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x80, 8) INT_OR (unique, 0x56280, 8) , (unique, 0x56380, 8), (unique, 0x56380, 8) INT_LEFT (register, 0x88, 8) , (unique, 0x56300, 1), (unique, 0x56300, 1) INT_SUB (const, 0x40, 1) , (unique, 0x56180, 1), (unique, 0x56280, 8) INT_RIGHT (register, 0x80, 8) , (unique, 0x56180, 1), (unique, 0x56180, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3100, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0xbd80, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (unique, 0xbd80, 8)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x88, 8) INT_OR (unique, 0x56280, 8) , (unique, 0x56380, 8), (unique, 0x56380, 8) INT_LEFT (register, 0x90, 8) , (unique, 0x56300, 1), (unique, 0x56300, 1) INT_SUB (const, 0x40, 1) , (unique, 0x56180, 1), (unique, 0x56280, 8) INT_RIGHT (register, 0x88, 8) , (unique, 0x56180, 1), (unique, 0x56180, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3100, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (unique, 0xbd80, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (unique, 0xbd80, 8)]
