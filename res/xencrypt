[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2f, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c, 4)]
[(ram, 0x4c2ee8, 8) INDIRECT (ram, 0x4c2ee8, 8) , (const, 0x2f, 4), (ram, 0x4c2ee8, 8) INDIRECT (ram, 0x4c2ee8, 8) , (const, 0x1c, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000191, 8), (unique, 0x10000191, 8) CALL (ram, 0x11f8a0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff, 8), (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x239bf9, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x10000199, 4), (unique, 0x10000199, 4) CAST (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000019d, 8), (unique, 0x1000019d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2ee8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c2ee8, 8) MULTIEQUAL (ram, 0x4c2ee8, 8) , (ram, 0x4c2ee8, 8)]
[(register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x38, 8) , (unique, 0x3a80, 8) , (const, 0x1, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x239bc1, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100001a5, 1) , (const, 0xa, 1), (unique, 0x100001a5, 1) CAST (register, 0x8, 1), (register, 0x8, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x38, 8) , (unique, 0x3a80, 8) , (const, 0x1, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x38, 1) COPY (const, 0xf0, 1)]
[ ---  CBRANCH (ram, 0x239bc6, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 4) , (const, 0x1a, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x41, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100001a6, 8), (unique, 0x100001a6, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x37, 4)]
[(register, 0x38, 1) SUBPIECE (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) INT_LEFT (unique, 0x100000db, 4) , (const, 0x4, 4), (unique, 0x100000db, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1)]
[(register, 0x8, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000133, 8) , (const, 0x1, 8), (unique, 0x10000133, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x1, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x239bea, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 1) , (register, 0x10, 1), (register, 0x10, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000133, 8) , (const, 0x1, 8), (unique, 0x10000133, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x1, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0x3100, 1) INT_SUB (unique, 0x10000111, 1) , (const, 0x37, 1), (unique, 0x10000111, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x239bea, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x19, 4) , (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x41, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[(register, 0x10, 1) COPY (const, 0xff, 1)]
[(ram, 0x4c2ee8, 8) INDIRECT (ram, 0x4c2ee8, 8) , (const, 0xe1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 1), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x10, 1) INT_ADD (register, 0x10, 1) , (register, 0x38, 1), (register, 0x10, 1) MULTIEQUAL (register, 0x10, 1) , (unique, 0x3100, 1) , (register, 0x10, 1)]
[ ---  CBRANCH (ram, 0x239ba0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (unique, 0x100001b6, 4), (unique, 0x100001b6, 4) CAST (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(ram, 0x4c2ee8, 8) MULTIEQUAL (ram, 0x4c2ee8, 8) , (ram, 0x4c2ee8, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x239c77, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffb8, 8) INT_ZEXT (unique, 0x100000f9, 1), (unique, 0x100000f9, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x239c77, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb8, 8) INT_ZEXT (stack, 0xffffffffffffffb8, 2), (stack, 0xffffffffffffffb8, 2) INT_ADD (unique, 0x1000014d, 2) , (unique, 0x100000f9, 1), (unique, 0x1000014d, 2) INT_LEFT (unique, 0x1000014b, 2) , (const, 0x8, 2), (unique, 0x1000014b, 2) INT_SEXT (unique, 0x100001ba, 1), (unique, 0x100001ba, 1) CAST (unique, 0x100000fa, 1), (unique, 0x100000fa, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x239c77, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb8, 8) INT_ZEXT (stack, 0xffffffffffffffb8, 3), (stack, 0xffffffffffffffb8, 3) INT_ADD (unique, 0x10000152, 3) , (stack, 0xffffffffffffffb8, 2), (unique, 0x10000152, 3) INT_LEFT (unique, 0x1000014f, 3) , (const, 0x10, 3), (unique, 0x1000014f, 3) INT_SEXT (unique, 0x100001bb, 1), (unique, 0x100001bb, 1) CAST (unique, 0x100000fb, 1), (unique, 0x100000fb, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x239c77, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb8, 8) INT_ZEXT (stack, 0xffffffffffffffb8, 4), (stack, 0xffffffffffffffb8, 4) INT_ADD (unique, 0x10000159, 4) , (stack, 0xffffffffffffffb8, 3), (unique, 0x10000159, 4) INT_LEFT (unique, 0x10000155, 4) , (const, 0x18, 4), (unique, 0x10000155, 4) INT_SEXT (unique, 0x100001bc, 1), (unique, 0x100001bc, 1) CAST (unique, 0x100000fc, 1), (unique, 0x100000fc, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x239c77, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb8, 8) INT_ZEXT (stack, 0xffffffffffffffb8, 5), (stack, 0xffffffffffffffb8, 5) INT_ADD (unique, 0x10000162, 5) , (stack, 0xffffffffffffffb8, 4), (unique, 0x10000162, 5) INT_LEFT (unique, 0x1000015d, 5) , (const, 0x20, 5), (unique, 0x1000015d, 5) INT_SEXT (unique, 0x100001bd, 1), (unique, 0x100001bd, 1) CAST (unique, 0x100000fd, 1), (unique, 0x100000fd, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x239c77, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb8, 8) INT_ZEXT (stack, 0xffffffffffffffb8, 6), (stack, 0xffffffffffffffb8, 6) INT_ADD (unique, 0x1000016d, 6) , (stack, 0xffffffffffffffb8, 5), (unique, 0x1000016d, 6) INT_LEFT (unique, 0x10000167, 6) , (const, 0x28, 6), (unique, 0x10000167, 6) INT_SEXT (unique, 0x100001be, 1), (unique, 0x100001be, 1) CAST (unique, 0x100000fe, 1), (unique, 0x100000fe, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x239c77, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb8, 8) INT_ZEXT (stack, 0xffffffffffffffb8, 7), (stack, 0xffffffffffffffb8, 7) INT_ADD (unique, 0x1000017a, 7) , (stack, 0xffffffffffffffb8, 6), (unique, 0x1000017a, 7) INT_LEFT (unique, 0x10000173, 7) , (const, 0x30, 7), (unique, 0x10000173, 7) INT_SEXT (unique, 0x100001bf, 1), (unique, 0x100001bf, 1) CAST (unique, 0x100000ff, 1), (unique, 0x100000ff, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x239c77, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb8, 8) INT_ADD (unique, 0x10000189, 8) , (stack, 0xffffffffffffffb8, 7), (unique, 0x10000189, 8) INT_LEFT (unique, 0x10000181, 8) , (const, 0x38, 8), (unique, 0x10000181, 8) INT_SEXT (unique, 0x100001c0, 1), (unique, 0x100001c0, 1) CAST (unique, 0x10000100, 1), (unique, 0x10000100, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0x2, 1)]
[ ---  CALL (ram, 0x22fae0, 8) , (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) CAST (register, 0x20, 8)]
[(ram, 0x4c2ee8, 8) INDIRECT (ram, 0x4c2ee8, 8) , (const, 0x249, 4), (ram, 0x4c2ee8, 8) INDIRECT (ram, 0x4c2ee8, 8) , (const, 0x233, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x249, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x233, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x249, 4), (stack, 0xffffffffffffffc8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x239d00, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) CALL (ram, 0x22ee80, 8) , (unique, 0x100001c9, 8) , (register, 0x0, 8) , (register, 0x0, 4) , (const, 0x0, 4) , (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) CAST (unique, 0x3800, 8), (unique, 0x100001c9, 8) CAST (register, 0x20, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x303, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x303, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[(ram, 0x4c2ee8, 8) COPY (ram, 0x4c2ee8, 8), (ram, 0x4c2ee8, 8) INDIRECT (ram, 0x4c2ee8, 8) , (const, 0x303, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x239cdb, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x100001d9, 4), (unique, 0x100001d9, 4) CAST (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000143, 8) , (const, 0x1, 8), (unique, 0x10000143, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x1, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000113, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000113, 8) PTRSUB (const, 0x0, 8) , (const, 0x293e30, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xf, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100001dd, 1), (unique, 0x100001dd, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c2ee8, 8) INDIRECT (ram, 0x4c2ee8, 8) , (const, 0x2bf, 4), (ram, 0x4c2ee8, 8) INDIRECT (ram, 0x4c2ee8, 8) , (const, 0x2bb, 4), (ram, 0x4c2ee8, 8) MULTIEQUAL (ram, 0x4c2ee8, 8) , (ram, 0x4c2ee8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbb00, 1), (unique, 0x3b80, 8) PTRADD (register, 0x38, 8) , (unique, 0x3a80, 8) , (const, 0x1, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000011b, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000011b, 8) PTRSUB (const, 0x0, 8) , (const, 0x293e30, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x100000bc, 1), (unique, 0x100000bc, 1) INT_RIGHT (unique, 0x100001de, 1) , (const, 0x4, 4), (unique, 0x100001de, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x239cb0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (unique, 0x100001df, 4), (unique, 0x100001df, 4) CAST (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (const, 0x0, 1), (unique, 0x3b80, 8) PTRADD (register, 0x38, 8) , (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_SEXT (unique, 0x100001e3, 4), (unique, 0x100001e3, 4) CAST (unique, 0x100000ed, 4), (unique, 0x100000ed, 4) INT_MULT (register, 0x0, 4) , (const, 0x2, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2e8, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x2e8, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[(ram, 0x4c2ee8, 8) COPY (ram, 0x4c2ee8, 8), (ram, 0x4c2ee8, 8) INDIRECT (ram, 0x4c2ee8, 8) , (const, 0x2e8, 4), (ram, 0x4c2ee8, 8) INDIRECT (ram, 0x4c2ee8, 8) , (const, 0x2e5, 4), (ram, 0x4c2ee8, 8) MULTIEQUAL (ram, 0x4c2ee8, 8) , (ram, 0x4c2ee8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
