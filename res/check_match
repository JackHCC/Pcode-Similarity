[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000144, 8), (unique, 0x10000144, 8) INT_ADD (unique, 0x1000013c, 8) , (const, 0x6, 8), (unique, 0x1000013c, 8) CAST (register, 0x88, 8)]
[(register, 0x8, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xf, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000014c, 8), (unique, 0x1000014c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x480af8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000154, 8), (unique, 0x10000154, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4809f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x6, 1)]
[ ---  CBRANCH (ram, 0x4809f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0xfff1, 2)]
[ ---  CBRANCH (ram, 0x480ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x80, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_NEGATE (register, 0x0, 4), (register, 0x0, 4) INT_SRIGHT (const, 0x467, 4) , (register, 0x8, 1)]
[ ---  CBRANCH (ram, 0x480a2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x480ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x401140, 8) , (register, 0x38, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (stack, 0x10, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x1000015c, 8), (unique, 0x1000015c, 8) INT_ADD (stack, 0x18, 8) , (const, 0x340, 8)]
[ ---  CBRANCH (ram, 0x480a88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x480a79, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x480a79, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_LESSEQUAL (unique, 0x1000016c, 2) , (register, 0x8, 2), (unique, 0x1000016c, 2) CAST (register, 0x0, 2), (register, 0x0, 2) INT_ADD (unique, 0x10000094, 2) , (const, 0x2, 2), (unique, 0x10000094, 2) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4), (register, 0x28, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x7fff, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000164, 8), (unique, 0x10000164, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (register, 0x10, 8) INT_ZEXT (stack, 0x8, 4)]
[ ---  CBRANCH (ram, 0x480ad0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000016e, 2) , (const, 0x0, 2), (unique, 0x1000016e, 2) CAST (unique, 0xbc00, 2)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x28, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0x28, 8)]
[ ---  CBRANCH (ram, 0x480ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x20, 8) , (register, 0x88, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x480b10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x480a79, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x480a79, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x485520, 8) , (unique, 0xbd80, 8) , (stack, 0x18, 8)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100000f1, 8) , (unique, 0x100000e9, 8) , (const, 0x6f, 4) , (unique, 0x100000f9, 8), (unique, 0x100000f9, 8) COPY (const, 0x4b0020, 8), (unique, 0x100000f1, 8) COPY (const, 0x4afdc0, 8), (unique, 0x100000e9, 8) COPY (const, 0x4afd64, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x480ae0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000190, 8), (unique, 0x10000190, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000188, 8), (unique, 0x10000188, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000180, 8), (unique, 0x10000180, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000178, 8), (unique, 0x10000178, 8) INT_ADD (stack, 0x18, 8) , (const, 0x2e8, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7fff, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000170, 8), (unique, 0x10000170, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (register, 0x10, 8) INT_ZEXT (stack, 0x8, 4)]
[ ---  CBRANCH (ram, 0x480a79, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x401140, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x480ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4), (register, 0x28, 4) INT_OR (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001a0, 8), (unique, 0x100001a0, 8) INT_ADD (unique, 0x10000198, 8) , (const, 0xc, 8), (unique, 0x10000198, 8) CAST (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x480ad0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100001a8, 2) , (const, 0x0, 2), (unique, 0x100001a8, 2) CAST (unique, 0xbc00, 2)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x88, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
