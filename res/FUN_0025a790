[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000022a, 8), (unique, 0x1000022a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000232, 8), (unique, 0x10000232, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3800, 8) CAST (unique, 0x1000023a, 8), (unique, 0x1000023a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa4, 8)]
[ ---  BRANCH (ram, 0x25a7d9, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x3e, 4), (ram, 0x14, 4) MULTIEQUAL (ram, 0x14, 4) , (ram, 0x14, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x3e, 4), (ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4)]
[(ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x3e, 4), (ram, 0x1c, 4) MULTIEQUAL (ram, 0x1c, 4) , (ram, 0x1c, 4)]
[(ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x3e, 4), (ram, 0x20, 4) MULTIEQUAL (ram, 0x20, 4) , (ram, 0x20, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3e, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x3e, 4), (stack, 0xffffffffffffffa4, 4) COPY (const, 0x10, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3e, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3e, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x25a7c8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2227d0, 8) , (unique, 0xbc80, 4) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x25a910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000242, 8), (unique, 0x10000242, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12c, 4)]
[(ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x12c, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x12c, 4)]
[(ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x12c, 4)]
[(ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x12c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12c, 4)]
[ ---  CALL (ram, 0x25a5d0, 8)]
[ ---  BRANCH (ram, 0x25a896, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x55, 4)]
[(ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x5a, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x55, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x5a, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x55, 4)]
[(ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x5a, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x55, 4)]
[(ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x5a, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x55, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x55, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x5a, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x55, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x55, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x55, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x55, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000252, 8), (unique, 0x10000252, 8) CALL (ram, 0x1212c0, 8) , (const, 0x1d0, 8)]
[ ---  CBRANCH (ram, 0x25a8b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000024a, 8), (unique, 0x1000024a, 8) CALL (ram, 0x1212c0, 8) , (const, 0x150, 8)]
[ ---  CBRANCH (ram, 0x25a8b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x10000152, 8) , (unique, 0x1000016a, 8) , (register, 0x0, 8), (unique, 0x1000016a, 8) COPY (const, 0x2b72c1, 8), (unique, 0x10000152, 8) COPY (const, 0x2b67f6, 8), (register, 0x0, 8) CALL (ram, 0x130d70, 8) , (unique, 0x10000142, 8) , (unique, 0x10000162, 8) , (const, 0x5, 8), (unique, 0x10000162, 8) COPY (const, 0x2b718a, 8), (unique, 0x10000142, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x115, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x111, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x10d, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xf3, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x115, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x111, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x10d, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xf3, 4)]
[(ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x115, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x111, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x10d, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xf3, 4)]
[(ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x115, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x111, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x10d, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xf3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x115, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x111, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf3, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x115, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x111, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x10d, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xf3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x115, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x111, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf3, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  CALLOTHER (const, 0x49, 4)]
[ ---  BRANCH (ram, 0x25a905, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2, 4)]
[ ---  CALL (ram, 0x24f650, 8) , (unique, 0x3100, 8) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0x10000262, 8) , (unique, 0x1000013a, 8) , (unique, 0x10000132, 8), (unique, 0x10000262, 8) CAST (register, 0x0, 8), (unique, 0x1000013a, 8) PTRSUB (const, 0x0, 8) , (const, 0x25aa60, 8), (unique, 0x10000132, 8) PTRSUB (const, 0x0, 8) , (const, 0x25a9f0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000025a, 8), (unique, 0x1000025a, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000026a, 8) , (register, 0x0, 8), (unique, 0x1000026a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100001aa, 8) , (const, 0x10, 8), (unique, 0x100001aa, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000272, 8) , (register, 0xa0, 8), (unique, 0x10000272, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (register, 0xa0, 8) PTRADD (register, 0x0, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) CAST (unique, 0x10000172, 8), (unique, 0x10000172, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea5a0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ea, 8) , (register, 0x0, 4), (unique, 0x100001ea, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa9, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa9, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7d, 4)]
[ ---  CALL (ram, 0x259990, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000282, 8) , (stack, 0xffffffffffffffa8, 8), (unique, 0x10000282, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x14, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xa9, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x7d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000028a, 8) , (stack, 0xffffffffffffffb0, 8), (unique, 0x1000028a, 8) CAST (unique, 0x10000127, 8), (unique, 0x10000127, 8) PTRSUB (unique, 0x10000202, 8) , (const, 0x8, 8), (unique, 0x10000202, 8) PTRSUB (register, 0x0, 8) , (const, 0x14, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa9, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x7d, 4)]
[(ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xb6, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x2d7, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x2d6, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xa9, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xa6, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xa4, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xa1, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x94, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x90, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x8d, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x81, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x7d, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x75, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xb6, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x2d7, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x2d6, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xa9, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xa6, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xa4, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xa1, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x94, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x90, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x8d, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x81, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x7d, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x75, 4)]
[(ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xb6, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x2d7, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x2d6, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xa9, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xa6, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xa4, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xa1, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x94, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x90, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x8d, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x81, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x7d, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x75, 4)]
[(ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xb6, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x2d7, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x2d6, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xa9, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xa6, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xa4, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xa1, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x94, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x90, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x8d, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x81, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x7d, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x75, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2d7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2d6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa9, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa1, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x94, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x90, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x81, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x7d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x75, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffa4, 4), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x10, 8), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xa9, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x7d, 4)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x20, 4) MULTIEQUAL (ram, 0x20, 4) , (ram, 0x20, 4)]
[(ram, 0x1c, 4) MULTIEQUAL (ram, 0x1c, 4) , (ram, 0x1c, 4)]
[(ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4)]
[(ram, 0x14, 4) MULTIEQUAL (ram, 0x14, 4) , (ram, 0x14, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x25a91a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000292, 8), (unique, 0x10000292, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xeb, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xeb, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x14, 4) COPY (ram, 0x14, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xeb, 4)]
[(ram, 0x18, 4) COPY (ram, 0x18, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xeb, 4)]
[(ram, 0x1c, 4) COPY (ram, 0x1c, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xeb, 4)]
[(ram, 0x20, 4) COPY (ram, 0x20, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xeb, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xeb, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x14, 4) COPY (ram, 0x14, 4)]
[(ram, 0x18, 4) COPY (ram, 0x18, 4)]
[(ram, 0x1c, 4) COPY (ram, 0x1c, 4)]
[(ram, 0x20, 4) COPY (ram, 0x20, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
