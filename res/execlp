[(unique, 0x3c80, 8) CAST (unique, 0x10000260, 8), (unique, 0x10000260, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[(unique, 0x10000238, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000240, 8) COPY (unique, 0x10000268, 8), (unique, 0x10000268, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000248, 8) COPY (unique, 0x10000270, 8), (unique, 0x10000270, 8) CAST (register, 0x8, 8)]
[(unique, 0x10000250, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000258, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1cc2d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (unique, 0x10000238, 8) , (const, 0x16d, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x10000240, 8) , (const, 0x16d, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000248, 8) , (const, 0x16d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000250, 8) , (const, 0x16d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000258, 8) , (const, 0x16d, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1cc140, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffdf98, 8)]
[(register, 0x18, 4) COPY (const, 0x10, 4)]
[(register, 0xb0, 4) COPY (const, 0x1, 4)]
[(register, 0xb8, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000190, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) COPY (const, 0x400, 8)]
[(unique, 0x100001a0, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffdf98, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000258, 8) , (unique, 0x10000127, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x10000250, 8) , (unique, 0x1000011f, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000248, 8) , (unique, 0x10000117, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x10000240, 8) , (unique, 0x1000010f, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffdf98, 8) MULTIEQUAL (unique, 0x10000238, 8) , (unique, 0x10000107, 8) , (stack, 0xffffffffffffdf98, 8)]
[(stack, 0xffffffffffffdf88, 8) MULTIEQUAL (unique, 0x3c80, 8) , (unique, 0x100000ff, 8) , (unique, 0x100000ff, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000190, 8) , (unique, 0x10000198, 8) , (unique, 0x100000ce, 8)]
[(unique, 0x3b80, 8) PTRADD (register, 0xa8, 8) , (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x100001a0, 8) , (unique, 0x100000eb, 8) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0x100001a8, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x100001a0, 8) , (unique, 0x100000eb, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1cc246, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x2f, 4) , (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (unique, 0x100000da, 4) , (unique, 0x100000da, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x8, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (unique, 0x100000da, 4)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (stack, 0xffffffffffffdf98, 8) , (const, 0x8c, 4), (stack, 0xffffffffffffdf98, 8) MULTIEQUAL (stack, 0xffffffffffffdf98, 8) , (stack, 0xffffffffffffdf98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000280, 8), (unique, 0x10000280, 8) INT_ADD (unique, 0x10000278, 8) , (register, 0x0, 8), (unique, 0x10000278, 8) CAST (unique, 0x10000157, 8), (unique, 0x10000157, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (register, 0x0, 8) INT_ZEXT (register, 0x18, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x3b80, 8) , (unique, 0x3b80, 8), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (unique, 0x100000da, 4)]
[(unique, 0x10000208, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0x100000ce, 8)]
[(unique, 0x10000218, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x100001a8, 8) , (register, 0x0, 8)]
[(unique, 0x10000228, 8) COPY (stack, 0xffffffffffffdf88, 8), (stack, 0xffffffffffffdf88, 8) MULTIEQUAL (stack, 0xffffffffffffdf88, 8) , (unique, 0x100000ff, 8)]
[(unique, 0x100000da, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x100000e3, 8) MULTIEQUAL (unique, 0x10000208, 8) , (unique, 0x10000210, 8)]
[(unique, 0x100000eb, 8) MULTIEQUAL (unique, 0x10000218, 8) , (unique, 0x10000220, 8)]
[(unique, 0x100000f3, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(unique, 0x100000ff, 8) MULTIEQUAL (unique, 0x10000228, 8) , (unique, 0x10000230, 8)]
[(unique, 0x10000107, 8) MULTIEQUAL (stack, 0xffffffffffffdf98, 8) , (stack, 0xffffffffffffdf98, 8)]
[(unique, 0x1000010f, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000117, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x1000011f, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x10000127, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1cc263, 1) , (unique, 0x100000e2, 1), (unique, 0x100000e2, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (unique, 0x10000107, 8) , (const, 0x123, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x1000010f, 8) , (const, 0x123, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000117, 8) , (const, 0x123, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x1000011f, 8) , (const, 0x123, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000127, 8) , (const, 0x123, 4)]
[(register, 0x0, 4) CALL (ram, 0x1cc140, 8) , (register, 0x38, 8) , (unique, 0x100000eb, 8)]
[ ---  CBRANCH (ram, 0x1cc281, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000eb, 8) , (unique, 0x3800, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (stack, 0xffffffffffffdf98, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x133, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x100000eb, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(unique, 0x10000198, 8) COPY (unique, 0x100000e3, 8)]
[ ---  CBRANCH (ram, 0x1cc1d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000e3, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_ZEXT (register, 0xb0, 4), (register, 0xb0, 4) INT_ADD (unique, 0x100000f3, 4) , (const, 0x1, 4)]
[(unique, 0x100000ce, 8) INT_MULT (unique, 0x100000e3, 8) , (const, 0x2, 8)]
[(register, 0x30, 8) INT_LEFT (unique, 0x100000e3, 8) , (const, 0x4, 4)]
[(unique, 0x10000180, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1cc21e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000eb, 8) , (unique, 0x3800, 8)]
[(unique, 0x10000188, 8) COPY (unique, 0x100000eb, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (unique, 0x10000107, 8) , (const, 0xd6, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x1000010f, 8) , (const, 0xd6, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000117, 8) , (const, 0xd6, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x1000011f, 8) , (const, 0xd6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000127, 8) , (const, 0xd6, 4)]
[ ---  CBRANCH (ram, 0x1cc2c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000288, 8), (unique, 0x10000288, 8) CALL (ram, 0x11f7f0, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000180, 8) , (unique, 0x10000188, 8)]
[ ---  CBRANCH (ram, 0x1cc2cd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000eb, 8) , (unique, 0x3800, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (stack, 0xffffffffffffdf98, 8) , (const, 0x166, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x166, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x166, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x166, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x166, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x100000eb, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1cc298, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000eb, 8) , (unique, 0x3800, 8)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (stack, 0xffffffffffffdf98, 8) , (const, 0x154, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x154, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x154, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x154, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x154, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000290, 8), (unique, 0x10000290, 8) CALL (ram, 0x193a40, 8) , (register, 0x0, 8) , (unique, 0x100000eb, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (unique, 0x100000e3, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1cc1d8, 1)]
[(unique, 0x3b80, 8) PTRADD (register, 0x0, 8) , (register, 0xb8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1cc1e2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100000da, 4) , (const, 0x30, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (unique, 0x100000da, 4)]
[(stack, 0xffffffffffffdf98, 8) INDIRECT (stack, 0xffffffffffffdf98, 8) , (const, 0x11a, 4), (stack, 0xffffffffffffdf98, 8) MULTIEQUAL (stack, 0xffffffffffffdf98, 8) , (stack, 0xffffffffffffdf98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffdf88, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3b80, 8) , (unique, 0x3b80, 8), (stack, 0xffffffffffffdf88, 8) MULTIEQUAL (stack, 0xffffffffffffdf88, 8) , (unique, 0x100000ff, 8)]
[(unique, 0x10000210, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0x100000ce, 8)]
[(unique, 0x10000220, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x100001a8, 8) , (register, 0x0, 8)]
[(unique, 0x10000230, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffdf88, 8) , (const, 0x1, 8) , (const, 0x8, 8), (stack, 0xffffffffffffdf88, 8) MULTIEQUAL (stack, 0xffffffffffffdf88, 8) , (unique, 0x100000ff, 8)]
