[(unique, 0x100001c7, 8) COPY (ram, 0x4eae28, 8)]
[(register, 0xa8, 8) INT_AND (register, 0x30, 8) , (const, 0xffffffff, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ff, 8), (unique, 0x100001ff, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4eae28, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001f7, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x245031, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x0, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x244fc8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000020f, 8), (unique, 0x1000020f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (register, 0x8, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000207, 8), (unique, 0x10000207, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x244ea2, 1) , (unique, 0x1000010e, 1), (unique, 0x1000010e, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x2c, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x23, 1)]
[ ---  CBRANCH (ram, 0x244eb9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100001f7, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x244e90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000218, 8), (unique, 0x10000218, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x30, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x30, 8) INT_SEXT (unique, 0x10000217, 1), (unique, 0x10000217, 1) CAST (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x244eb9, 1) , (unique, 0x100001b9, 1), (unique, 0x100001b9, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2c, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x23, 1)]
[(register, 0x30, 8) PTRADD (register, 0x18, 8) , (unique, 0x10000093, 8) , (const, 0x1, 8), (unique, 0x10000093, 8) INT_2COMP (unique, 0x10000220, 8), (unique, 0x10000220, 8) CAST (register, 0x38, 8)]
[(unique, 0x100001cf, 8) COPY (register, 0x18, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x244ecd, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000228, 8), (unique, 0x10000228, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001c7, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x244ebf, 1)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100001cf, 8) , (unique, 0x100001f7, 8)]
[ ---  CBRANCH (ram, 0x244fd8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x3, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000230, 8), (unique, 0x10000230, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001c7, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000238, 8) , (register, 0x0, 4), (unique, 0x10000238, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001c7, 8) , (const, 0x18, 8) , (const, 0x1, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x11d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11d, 4)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x122, 4), (ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x11d, 4), (ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x11a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000250, 8) , (register, 0x0, 8), (unique, 0x10000250, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100001c7, 8) , (unique, 0x1000018f, 8) , (const, 0x1, 8), (unique, 0x1000018f, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x20, 8), (unique, 0x3900, 8) INT_MULT (register, 0xb8, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x19d9f0, 8) , (unique, 0x10000240, 8) , (unique, 0x10000248, 8), (unique, 0x10000248, 8) CAST (register, 0x30, 8), (unique, 0x10000240, 8) CAST (register, 0x38, 8), (register, 0xb8, 8) INT_SEXT (unique, 0xbc80, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000261, 8), (unique, 0x10000261, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000260, 1), (unique, 0x10000260, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000258, 8), (unique, 0x10000258, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x122, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x11d, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11d, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x11a, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0x100001f7, 8) , (register, 0x18, 8)]
[(unique, 0x100001ef, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100001f7, 8) , (register, 0x18, 8)]
[(unique, 0x10000197, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100001a0, 8) MULTIEQUAL (unique, 0x100001ef, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x244f12, 1) , (unique, 0x1000019f, 1), (unique, 0x1000019f, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000026a, 8), (unique, 0x1000026a, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000269, 1), (unique, 0x10000269, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (unique, 0x100001a0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x244f20, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 1) , (const, 0x3c, 1), (register, 0x8, 1) SUBPIECE (unique, 0x10000197, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x244f58, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0x1d680, 8) , (const, 0x0, 8), (unique, 0x1d680, 8) INT_AND (unique, 0x1d600, 8) , (const, 0x1, 8), (unique, 0x1d600, 8) INT_RIGHT (const, 0xc00100000000000, 8) , (unique, 0x1d580, 8), (unique, 0x1d580, 8) INT_AND (unique, 0x10000197, 8) , (const, 0x3f, 8)]
[(register, 0x38, 8) PTRADD (unique, 0x100001a0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000273, 8), (unique, 0x10000273, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000272, 1), (unique, 0x10000272, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001a0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100001a8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100001b0, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x244f82, 1) , (unique, 0x100001b8, 1), (unique, 0x100001b8, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000027c, 8), (unique, 0x1000027c, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000027b, 1), (unique, 0x1000027b, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (unique, 0x100001b0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x244f8b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x0, 1), (register, 0x8, 1) SUBPIECE (unique, 0x100001a8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x244f20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x23, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1e1, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1cf, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1e1, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1cf, 4)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x1e1, 4), (ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x1cf, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1e1, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1cf, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e1, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cf, 4)]
[(register, 0x0, 4) CALL (ram, 0x1650c0, 8) , (register, 0x20, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (register, 0xa8, 8), (register, 0x0, 8) CAST (unique, 0x10000284, 8), (unique, 0x10000284, 8) CALL (ram, 0x130d70, 8) , (unique, 0x1000014f, 8) , (unique, 0x10000177, 8) , (const, 0x5, 8), (unique, 0x10000177, 8) COPY (const, 0x2ba870, 8), (unique, 0x1000014f, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100001a0, 8) , (unique, 0x100001a0, 8) , (unique, 0x100001b0, 8)]
[ ---  CBRANCH (ram, 0x244f2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x0, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000197, 8) , (unique, 0x10000197, 8) , (unique, 0x100001a8, 8)]
[ ---  CBRANCH (ram, 0x244e50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x23, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa8, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x95, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xa8, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x95, 4)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0xa8, 4), (ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x95, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xa8, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x95, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x95, 4)]
[(register, 0x0, 4) CALL (ram, 0x1650c0, 8) , (register, 0x20, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (register, 0xa8, 8) , (const, 0x4, 8), (register, 0x0, 8) CAST (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) CALL (ram, 0x130d70, 8) , (unique, 0x10000157, 8) , (unique, 0x1000016f, 8) , (const, 0x5, 8), (unique, 0x1000016f, 8) COPY (const, 0x2ba838, 8), (unique, 0x10000157, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[(unique, 0x10000121, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000129, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(unique, 0x10000131, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[(unique, 0x10000139, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x10000141, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x24500d, 1) , (unique, 0x10000120, 1), (unique, 0x10000120, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x244f30, 1)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x10000167, 8) , (unique, 0x10000139, 8), (unique, 0x10000167, 8) COPY (const, 0x2b6796, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd1, 4), (register, 0x110, 8) INDIRECT (unique, 0x10000121, 8) , (const, 0xcc, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xd1, 4), (ram, 0x4eae00, 8) INDIRECT (unique, 0x10000129, 8) , (const, 0xcc, 4)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0xd1, 4), (ram, 0x4eae28, 8) INDIRECT (unique, 0x10000131, 8) , (const, 0xcc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000141, 8) , (const, 0xcc, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000139, 8) , (const, 0xcc, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x244f30, 1)]
[(ram, 0x4eae28, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (unique, 0x10000131, 8) , (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (unique, 0x10000129, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x24503b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000294, 8), (unique, 0x10000294, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000121, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000141, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eae28, 8) COPY (ram, 0x4eae28, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x107, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x107, 4)]
[(ram, 0x4eae28, 8) COPY (ram, 0x4eae28, 8), (ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x107, 4)]
[ ---  RETURN (const, 0x1, 4)]
