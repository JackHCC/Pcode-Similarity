[(unique, 0x100000a0, 8) COPY (ram, 0x4c2e18, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000d0, 8), (unique, 0x100000d0, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2f30, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000d8, 8), (unique, 0x100000d8, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e18, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x100000b0, 8) COPY (register, 0x38, 8)]
[(ram, 0x4c2f30, 8) MULTIEQUAL (ram, 0x4c2f30, 8) , (ram, 0x4c2f30, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x21c71b, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 1) , (unique, 0x100000e8, 1), (unique, 0x100000e8, 1) CAST (register, 0x8, 1), (register, 0x8, 1) INT_SUB (unique, 0x10000058, 1) , (const, 0x30, 1), (unique, 0x10000058, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100000e0, 8), (unique, 0x100000e0, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100000b0, 8) , (unique, 0x100000b8, 8)]
[ ---  CBRANCH (ram, 0x21c860, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x5, 1) , (unique, 0x100000e9, 1), (unique, 0x100000e9, 1) CAST (register, 0x8, 1), (register, 0x8, 1) INT_ADD (unique, 0x10000058, 1) , (const, 0x9f, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[(ram, 0x4c2f30, 8) COPY (ram, 0x4c2f30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x8, 8) INT_SEXT (unique, 0x100000f2, 1), (unique, 0x100000f2, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000ea, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x100000ea, 8) CAST (register, 0x38, 8)]
[(unique, 0x100000c8, 4) COPY (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x8, 4) , (const, 0x57, 4), (register, 0x8, 4) INT_SEXT (unique, 0x10000058, 1)]
[ ---  CBRANCH (ram, 0x21c72f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (register, 0x8, 4) , (const, 0x30, 4), (register, 0x8, 4) INT_SEXT (unique, 0x10000058, 1)]
[(unique, 0x100000cc, 4) COPY (unique, 0x3100, 4)]
[(unique, 0x3100, 1) SUBPIECE (unique, 0x3100, 4) , (const, 0x0, 4), (unique, 0x3100, 4) MULTIEQUAL (unique, 0x100000c8, 4) , (unique, 0x100000cc, 4)]
[(unique, 0xc780, 1) INT_LESS (register, 0x80, 8) , (const, 0x5, 8)]
[(register, 0x8, 8) INT_SEXT (unique, 0x100000fb, 1), (unique, 0x100000fb, 1) CAST (register, 0xa0, 1), (register, 0xa0, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100000f3, 8), (unique, 0x100000f3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x21c828, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 1) , (const, 0x3a, 1), (register, 0xa0, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100000f3, 8), (unique, 0x100000f3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x21c828, 1) , (unique, 0x1000005d, 1), (unique, 0x1000005d, 1) BOOL_NEGATE (unique, 0xc780, 1)]
[(unique, 0x3100, 8) PTRADD (unique, 0x100000fc, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x100000fc, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x21c79e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x5, 8)]
[ ---  CBRANCH (ram, 0x21c79e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x21c752, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000104, 8), (unique, 0x10000104, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1f7, 4)]
[(ram, 0x4c2f30, 8) INDIRECT (ram, 0x4c2f30, 8) , (const, 0x1f7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 1), (unique, 0x3100, 8) PTRADD (unique, 0x10000090, 8) , (const, 0x5, 8) , (const, 0x1, 8), (unique, 0x10000090, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0x1000010c, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x1000010c, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x21c76e, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 1) , (unique, 0x10000114, 1), (unique, 0x10000114, 1) CAST (register, 0x8, 1), (register, 0x8, 1) INT_SUB (register, 0xa0, 1) , (const, 0x30, 1)]
[ ---  CBRANCH (ram, 0x21c860, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x5, 1) , (unique, 0x10000115, 1), (unique, 0x10000115, 1) CAST (register, 0x8, 1), (register, 0x8, 1) INT_ADD (register, 0xa0, 1) , (const, 0x9f, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[(ram, 0x4c2f30, 8) COPY (ram, 0x4c2f30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x1000006c, 1) INT_MULT (unique, 0x3100, 1) , (const, 0x10, 1)]
[(unique, 0x3100, 4) INT_SUB (register, 0x0, 4) , (const, 0x57, 4), (register, 0x0, 4) INT_SEXT (unique, 0x10000116, 1), (unique, 0x10000116, 1) CAST (register, 0xa0, 1)]
[(unique, 0x100000c0, 4) COPY (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0x10000116, 1), (unique, 0x10000116, 1) CAST (register, 0xa0, 1)]
[ ---  CBRANCH (ram, 0x21c789, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x9, 4) , (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0x10000116, 1), (unique, 0x10000116, 1) CAST (register, 0xa0, 1)]
[(unique, 0x100000c4, 4) COPY (unique, 0x3100, 4)]
[(register, 0x0, 1) INT_ADD (unique, 0x1000006b, 1) , (unique, 0x1000006c, 1), (unique, 0x1000006b, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100000c0, 4) , (unique, 0x100000c4, 4)]
[ ---  CBRANCH (ram, 0x21c79e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000117, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10000117, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x21c860, 1) , (unique, 0xc780, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[(ram, 0x4c2f30, 8) COPY (ram, 0x4c2f30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x10f, 4)]
[(ram, 0x4c2f30, 8) INDIRECT (ram, 0x4c2f30, 8) , (const, 0x10f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 1), (unique, 0x3400, 8) PTRADD (unique, 0x10000080, 8) , (register, 0x80, 8) , (const, 0x1, 8), (unique, 0x10000080, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (register, 0x0, 1) , (unique, 0x3100, 1) , (unique, 0x3100, 1)]
[ ---  CBRANCH (ram, 0x21c84e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x0, 1), (register, 0x8, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (register, 0xa0, 1) , (register, 0xa0, 1)]
[(ram, 0x4c2f30, 8) MULTIEQUAL (ram, 0x4c2f30, 8) , (ram, 0x4c2f30, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x21c7ad, 1)]
[(ram, 0x4c2f30, 8) MULTIEQUAL (ram, 0x4c2f30, 8) , (ram, 0x4c2f30, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(unique, 0x100000b8, 8) COPY (unique, 0x1000011f, 8), (unique, 0x1000011f, 8) CAST (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x21c6ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x6, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000130, 8), (unique, 0x10000130, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000128, 8), (unique, 0x10000128, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100000a0, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10000127, 1), (unique, 0x10000127, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1000006f, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x10000078, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x21c7e2, 1) , (unique, 0x10000077, 1), (unique, 0x10000077, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000139, 8), (unique, 0x10000139, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10000138, 1), (unique, 0x10000138, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (unique, 0x10000078, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x21c860, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x23, 1), (register, 0x0, 1) SUBPIECE (unique, 0x1000006f, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21c860, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[(ram, 0x4c2f30, 8) COPY (ram, 0x4c2f30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100000a8, 8) , (register, 0x10, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x180, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c2f30, 8) INDIRECT (ram, 0x4c2f30, 8) , (const, 0x180, 4), (ram, 0x4c2f30, 8) MULTIEQUAL (ram, 0x4c2f30, 8) , (ram, 0x4c2f30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x1000006f, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100000a8, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x10000078, 8)]
[ ---  CBRANCH (ram, 0x21c815, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x10000078, 8)]
[ ---  CBRANCH (ram, 0x21c815, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x23, 1)]
[(unique, 0x100000a8, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x21c7f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10000149, 1), (unique, 0x10000149, 1) CAST (unique, 0xbb00, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000141, 8), (unique, 0x10000141, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100000a0, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1b7, 4)]
[(ram, 0x4c2f30, 8) COPY (ram, 0x4c2f30, 8), (ram, 0x4c2f30, 8) INDIRECT (ram, 0x4c2f30, 8) , (const, 0x1b7, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
