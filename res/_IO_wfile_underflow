[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000601, 8), (unique, 0x10000601, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x418fd9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ec, 4) , (const, 0x0, 4), (unique, 0x100000ec, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x10, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x419410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000f0, 4) , (const, 0x0, 4), (unique, 0x100000f0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x20, 4)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x597, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x593, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x9, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000609, 8), (unique, 0x10000609, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x418fa0, 1)]
[ ---  CBRANCH (ram, 0x418f98, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000621, 8), (unique, 0x10000621, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000619, 8), (unique, 0x10000619, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000611, 8), (unique, 0x10000611, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000639, 8), (unique, 0x10000639, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x26, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4192c8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000631, 8), (unique, 0x10000631, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000629, 8), (unique, 0x10000629, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x519, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x519, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x519, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x519, 4)]
[(register, 0x0, 4) CALL (ram, 0x41ab30, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000649, 8) , (unique, 0xbd80, 8), (unique, 0x10000649, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000641, 8), (unique, 0x10000641, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x528, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x522, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x519, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x50b, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x508, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x504, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000659, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x10000659, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100005f1, 8) , (const, 0x519, 4), (unique, 0x100005f1, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x419430, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000669, 8), (unique, 0x10000669, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000661, 8), (unique, 0x10000661, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000651, 8), (unique, 0x10000651, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x418fa0, 1)]
[ ---  CBRANCH (ram, 0x418fc8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x558, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x558, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x558, 4)]
[ ---  CALL (ram, 0x401040, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffa0, 8) , (register, 0x10, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff60, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000679, 8), (unique, 0x10000679, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000671, 8), (unique, 0x10000671, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000699, 8) , (unique, 0xbd80, 8), (unique, 0x10000699, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000681, 8), (unique, 0x10000681, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006a1, 8) , (register, 0x10, 8), (unique, 0x100006a1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000691, 8), (unique, 0x10000691, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000689, 8), (unique, 0x10000689, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000681, 8), (unique, 0x10000681, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x57d, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x57a, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x577, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x558, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006a9, 8) , (unique, 0xbd80, 8), (unique, 0x100006a9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000681, 8), (unique, 0x10000681, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x418e93, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006b9, 8) , (unique, 0xbd80, 8), (unique, 0x100006b9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100006b1, 8), (unique, 0x100006b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006c1, 8) , (unique, 0xbd80, 8), (unique, 0x100006c1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100006b1, 8), (unique, 0x100006b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x76, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x73, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x70, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006c9, 8) , (unique, 0xbd80, 8), (unique, 0x100006c9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100006b1, 8), (unique, 0x100006b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x419388, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x41939c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100006d1, 8), (unique, 0x100006d1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4d7, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x4d7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4d7, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x4dc, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x4d7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4e9, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x4e9, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4e9, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x41ee60, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006e1, 8) , (unique, 0xbd80, 8), (unique, 0x100006e1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100006d9, 8), (unique, 0x100006d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006e9, 8) , (unique, 0xbd80, 8), (unique, 0x100006e9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100006d9, 8), (unique, 0x100006d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x4f5, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x4f2, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x4ef, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x4e9, 4), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006f1, 8) , (unique, 0xbd80, 8), (unique, 0x100006f1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100006d9, 8), (unique, 0x100006d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x418e9c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006f9, 8) , (register, 0x0, 8), (unique, 0x100006f9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000711, 8) , (register, 0x0, 8), (unique, 0x10000711, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0xbb8, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0xbb7, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x84, 4), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000719, 8) , (register, 0x0, 8), (unique, 0x10000719, 8) CAST (unique, 0x100002ac, 8), (unique, 0x100002ac, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x419360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000709, 8), (unique, 0x10000709, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000701, 8), (unique, 0x10000701, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x419374, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000721, 8), (unique, 0x10000721, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4b4, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x4b4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4b4, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x4b9, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x4b4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4c6, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x4c6, 4), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x4c6, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4c6, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x478f10, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x418ebf, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000581, 8) COPY (ram, 0x4c56d0, 8), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[ ---  CBRANCH (ram, 0x418ff2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x202, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100005f9, 8) COPY (ram, 0x4c56d0, 8)]
[ ---  CBRANCH (ram, 0x418fe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000729, 8), (unique, 0x10000729, 8) CAST (ram, 0x4c56d0, 8)]
[ ---  CBRANCH (ram, 0x4193ca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x280, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x288, 4)]
[ ---  CBRANCH (ram, 0x419437, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000741, 8), (unique, 0x10000741, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000739, 8), (unique, 0x10000739, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000731, 8), (unique, 0x10000731, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c56d0, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x41943f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000749, 8), (unique, 0x10000749, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x47a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x47e, 4)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x47e, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x47e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x47e, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[ ---  BRANCH (ram, 0x418f15, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0xee, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0xf5, 4), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000759, 8) , (unique, 0xbd80, 8), (unique, 0x10000759, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000751, 8), (unique, 0x10000751, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x10000581, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000761, 8), (unique, 0x10000761, 8) CAST (unique, 0x10000589, 8), (unique, 0x10000589, 8) COPY (ram, 0x4c56d0, 8), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(unique, 0x100005c1, 8) COPY (unique, 0x10000589, 8), (unique, 0x10000589, 8) COPY (ram, 0x4c56d0, 8), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x10c, 4), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100005d1, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100005c1, 8) , (unique, 0x100005f9, 8)]
[ ---  CBRANCH (ram, 0x4193e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x280, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x288, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100005e1, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100005d1, 8) , (unique, 0x100005f9, 8)]
[ ---  CBRANCH (ram, 0x419455, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000769, 8), (unique, 0x10000769, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x80, 8) , (const, 0xd8, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100005d1, 8) , (unique, 0x100005f9, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x461, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x461, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x461, 4)]
[ ---  CALL (ram, 0x41b380, 8)]
[(unique, 0x100005e9, 8) COPY (ram, 0x4c56d0, 8), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x461, 4)]
[ ---  BRANCH (ram, 0x4193f4, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x45d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x45d, 4), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x45d, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x45d, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x80, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000771, 8), (unique, 0x10000771, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100005e1, 8) , (unique, 0x100005e9, 8)]
[ ---  BRANCH (ram, 0x418f54, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x419000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000779, 8), (unique, 0x10000779, 8) CAST (unique, 0x10000581, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x149, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000781, 8), (unique, 0x10000781, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x10000581, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x419000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000781, 8), (unique, 0x10000781, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x10000581, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x14e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000789, 8) , (const, 0x0, 8), (unique, 0x10000789, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x419463, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000791, 8), (unique, 0x10000791, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x414, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x419000, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x419006, 1)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x164, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x419006, 1)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x17e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x17e, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x17e, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x41e8f0, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0x5280, 8), (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000799, 8), (unique, 0x10000799, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002c4, 8) , (unique, 0x5280, 8), (unique, 0x100002c4, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000799, 8), (unique, 0x10000799, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000799, 8), (unique, 0x10000799, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002b4, 8) , (unique, 0x5280, 8), (unique, 0x100002b4, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000799, 8), (unique, 0x10000799, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5280, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000799, 8), (unique, 0x10000799, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0xbc0, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0xbbf, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0xbbd, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0xbbc, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0xbc3, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0xbc2, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x17e, 4), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002bc, 8) , (unique, 0x5280, 8), (unique, 0x100002bc, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000799, 8), (unique, 0x10000799, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0x100005a9, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x419082, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x100005a9, 8) , (unique, 0x100005b1, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x4191e0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100007a1, 8), (unique, 0x100007a1, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x40d, 4)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x40d, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x40d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x40d, 4)]
[ ---  CALL (ram, 0x41b380, 8)]
[ ---  BRANCH (ram, 0x419098, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1bb, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x1bb, 4), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1bb, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1bb, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x419180, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x100007c1, 8) , (const, 0x1, 8), (unique, 0x100007c1, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007b9, 8), (unique, 0x100007b9, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x70, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100007b1, 8), (unique, 0x100007b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100007a9, 8), (unique, 0x100007a9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x4191a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x28, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007c9, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x100007c9, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x3eb, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x3e9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x10, 4)]
[ ---  BRANCH (ram, 0x418fa0, 1)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x3f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x418fd9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x406, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x54, 4), (unique, 0x4f00, 8) CAST (unique, 0x100007d1, 8), (unique, 0x100007d1, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x418fa0, 1)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x1d9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007e9, 8) , (register, 0x98, 8), (unique, 0x100007e9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x98, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100007d9, 8), (unique, 0x100007d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4190d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100007e1, 8), (unique, 0x100007e1, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x1ef, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007f1, 8) , (register, 0x10, 8), (unique, 0x100007f1, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100007f9, 8), (unique, 0x100007f9, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x58, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100007f9, 8), (unique, 0x100007f9, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000811, 8), (unique, 0x10000811, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000809, 8), (unique, 0x10000809, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x58, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100007f9, 8), (unique, 0x100007f9, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x202, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x1ff, 4), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000819, 8) , (unique, 0xbd80, 8), (unique, 0x10000819, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000801, 8), (unique, 0x10000801, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4191f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0x10000591, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_SUB (const, 0x10, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x41921b, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (const, 0x10, 8) , (register, 0x28, 8)]
[(unique, 0x10000599, 8) COPY (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x39d, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x372, 4)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x39d, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x372, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x39d, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x372, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x39d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x372, 4)]
[(register, 0x0, 4) CALL (ram, 0x41ab30, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (register, 0x0, 8) , (unique, 0x3800, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000829, 8), (unique, 0x10000829, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000821, 8), (unique, 0x10000821, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x401160, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3800, 8) , (register, 0x28, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x41911b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000591, 8) , (unique, 0x10000599, 8)]
[ ---  CBRANCH (ram, 0x41928e, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_SUB (stack, 0xffffffffffffffa0, 8) , (unique, 0x10000831, 8), (unique, 0x10000831, 8) CAST (unique, 0x3400, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000839, 8), (unique, 0x10000839, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x419125, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x220, 4)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x220, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x220, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x220, 4)]
[(register, 0x0, 4) CALL (ram, 0x41ab30, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (unique, 0xbd80, 8) , (register, 0x98, 8) , (unique, 0x3800, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000849, 8), (unique, 0x10000849, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000841, 8), (unique, 0x10000841, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x100005b9, 8) COPY (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x238, 4), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000859, 8) , (register, 0x30, 8), (unique, 0x10000859, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100005b9, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4193c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000851, 8), (unique, 0x10000851, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000861, 8), (unique, 0x10000861, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x418fa0, 1)]
[ ---  CBRANCH (ram, 0x418fc8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x419487, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x338, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x338, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100002ea, 8) , (unique, 0x100002e2, 8) , (const, 0x122, 4) , (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) COPY (const, 0x49ae20, 8), (unique, 0x100002ea, 8) COPY (const, 0x49adfc, 8), (unique, 0x100002e2, 8) COPY (const, 0x49adf1, 8)]
[(ram, 0x4c56d0, 8) COPY (ram, 0x4c56d0, 8), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x338, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x419038, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000869, 8), (unique, 0x10000869, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4192a0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000871, 8), (unique, 0x10000871, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x418fc8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30b, 4)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x30b, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x30b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x30b, 4)]
[ ---  CALL (ram, 0x401060, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x317, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x317, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x317, 4)]
[ ---  CALL (ram, 0x401040, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000889, 8) , (unique, 0xbd80, 8), (unique, 0x10000889, 8) CAST (unique, 0x3100, 8), (unique, 0xbd80, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000881, 8), (unique, 0x10000881, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x330, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x324, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x317, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000891, 8) , (unique, 0xbd80, 8), (unique, 0x10000891, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000879, 8), (unique, 0x10000879, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x419082, 1)]
[(unique, 0x100005a1, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x4191d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SUB (stack, 0xffffffffffffffa0, 8) , (unique, 0x10000899, 8), (unique, 0x10000899, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2d9, 4)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x2d9, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2d9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2d9, 4)]
[ ---  CALL (ram, 0x401040, 8) , (unique, 0x3800, 8) , (stack, 0xffffffffffffffa0, 8) , (register, 0x28, 8), (register, 0x28, 8) INT_SUB (register, 0x28, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x419166, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x418fc8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x10, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100005a1, 8) , (register, 0x28, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100008a1, 8), (unique, 0x100008a1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x419075, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008a9, 8) , (register, 0x80, 8), (unique, 0x100008a9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0xbc8, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0xbc7, 4), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008b1, 8) , (register, 0x80, 8), (unique, 0x100008b1, 8) CAST (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100005b1, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x54, 4), (unique, 0x4f00, 8) CAST (unique, 0x100008b9, 8), (unique, 0x100008b9, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x293, 4), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x28e, 4), (ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x20, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x418fa0, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4c56d0, 8) MULTIEQUAL (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8) , (ram, 0x4c56d0, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4194a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100008c1, 8), (unique, 0x100008c1, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2c9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2c9, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c56d0, 8) COPY (ram, 0x4c56d0, 8), (ram, 0x4c56d0, 8) INDIRECT (ram, 0x4c56d0, 8) , (const, 0x2c9, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c56d0, 8) COPY (ram, 0x4c56d0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
