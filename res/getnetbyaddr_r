[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3e, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x3e, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x3e, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x3e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3e, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x236fd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x245ec0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0xffffffff, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x392, 4), (ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x390, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x392, 4), (ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x390, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x392, 4), (ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x390, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000258, 8), (unique, 0x10000258, 8) INT_ADD (unique, 0x10000248, 8) , (unique, 0x10000250, 8), (unique, 0x10000250, 8) CAST (ram, 0x4eae68, 8), (unique, 0x10000248, 8) CAST (register, 0x110, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x392, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x390, 4)]
[ ---  BRANCH (ram, 0x236f0e, 1)]
[ ---  CBRANCH (ram, 0x236de8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ef448, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x317, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x317, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x317, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x317, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x317, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x317, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x317, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x317, 4)]
[ ---  CBRANCH (ram, 0x237009, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24b3a0, 8) , (unique, 0x3800, 8) , (unique, 0x100001e6, 8) , (const, 0x0, 8), (unique, 0x100001e6, 8) COPY (const, 0x2b69f2, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x236e37, 1)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (unique, 0x10000260, 8) , (unique, 0xbd80, 8), (unique, 0x10000260, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (stack, 0xffffffffffffffb0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4ef438, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4ef438, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4ef448, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x236cde, 1)]
[(register, 0x0, 8) CAST (unique, 0x10000268, 8), (unique, 0x10000268, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4ef438, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4ef438, 8) , (const, 0x11, 4)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4ef440, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4ef440, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4ef448, 1) MULTIEQUAL (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1)]
[(ram, 0x4ef440, 8) MULTIEQUAL (ram, 0x4ef440, 8) , (register, 0x0, 8)]
[(ram, 0x4ef438, 8) MULTIEQUAL (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000240, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x236f88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff94, 4) , (const, 0x0, 4), (stack, 0xffffffffffffff94, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e3, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x2e3, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x2e3, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x2e3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x237000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000280, 8), (unique, 0x10000280, 8) INT_ADD (unique, 0x10000270, 8) , (unique, 0x10000278, 8), (unique, 0x10000278, 8) CAST (ram, 0x4eae68, 8), (unique, 0x10000270, 8) CAST (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x304, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x304, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x304, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x304, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0x3, 4)]
[ ---  BRANCH (ram, 0x236fa9, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e6, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x2e6, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x2e6, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x2e6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0xffffffff, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2ec, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x2ec, 4), (ram, 0x4ef438, 8) MULTIEQUAL (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x2ec, 4), (ram, 0x4ef440, 8) MULTIEQUAL (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x2ec, 4), (ram, 0x4ef448, 1) MULTIEQUAL (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ec, 4)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x236f0e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000298, 8), (unique, 0x10000298, 8) INT_ADD (unique, 0x10000288, 8) , (unique, 0x10000290, 8), (unique, 0x10000290, 8) CAST (unique, 0x10000240, 8), (unique, 0x10000288, 8) CAST (register, 0x110, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffff94, 4) COPY (const, 0x16, 4)]
[ ---  BRANCH (ram, 0x236f06, 1)]
[(unique, 0x100001d2, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffff88, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) PTRADD (ram, 0x4eae68, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[ ---  BRANCH (ram, 0x236d76, 1)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x100001cb, 1) MULTIEQUAL (unique, 0x100001d2, 1) , (unique, 0x100001ce, 1)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe9, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe9, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x10a, 4), (ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0xe9, 4), (ram, 0x4ef438, 8) MULTIEQUAL (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x10a, 4), (ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0xe9, 4), (ram, 0x4ef440, 8) MULTIEQUAL (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x10a, 4), (ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0xe9, 4), (ram, 0x4ef448, 1) MULTIEQUAL (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x10a, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe9, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x10a, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xe9, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe9, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x236d28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xfffffffe, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 4) , (register, 0x30, 4) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x0, 8) , (stack, 0x8, 8) , (stack, 0xffffffffffffff50, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xe9, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xe9, 4), (stack, 0xffffffffffffff50, 8) COPY (const, 0x236d80, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x236e50, 1) , (unique, 0x100001cb, 1)]
[ ---  CBRANCH (ram, 0x236d50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffb0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100002a0, 4), (unique, 0x100002a0, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x236d50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x236dbe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2a0, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x2a0, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x2a0, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x2a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) INT_ADD (unique, 0x100002ac, 8) , (unique, 0x100002b4, 8), (unique, 0x100002b4, 8) CAST (unique, 0x10000240, 8), (unique, 0x100002ac, 8) CAST (register, 0x110, 8)]
[(unique, 0x100001cf, 1) COPY (const, 0x0, 1)]
[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x236e98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (stack, 0x8, 8)]
[ ---  CBRANCH (ram, 0x236dba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x22, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002d4, 8), (unique, 0x100002d4, 8) INT_ADD (unique, 0x100002c4, 8) , (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) CAST (unique, 0x10000240, 8), (unique, 0x100002c4, 8) CAST (register, 0x110, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffff88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x281, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x276, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x281, 4), (ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x27e, 4), (ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x276, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x281, 4), (ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x27e, 4), (ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x276, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x281, 4), (ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x27e, 4), (ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x276, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x281, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x276, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x281, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x276, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x281, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x276, 4)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002ec, 8), (unique, 0x100002ec, 8) INT_ADD (unique, 0x100002dc, 8) , (unique, 0x100002e4, 8), (unique, 0x100002e4, 8) CAST (unique, 0x10000240, 8), (unique, 0x100002dc, 8) CAST (register, 0x110, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x281, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x276, 4)]
[ ---  CBRANCH (ram, 0x236d50, 1) , (unique, 0x100001cb, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x138, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x138, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x138, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x138, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000304, 8), (unique, 0x10000304, 8) INT_ADD (unique, 0x100002f4, 8) , (unique, 0x100002fc, 8), (unique, 0x100002fc, 8) CAST (unique, 0x10000240, 8), (unique, 0x100002f4, 8) CAST (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x236e70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000030c, 8), (unique, 0x1000030c, 8) INT_ADD (stack, 0xffffffffffffffb0, 8) , (const, 0x14, 8)]
[(ram, 0x4ef448, 1) MULTIEQUAL (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1)]
[(ram, 0x4ef440, 8) MULTIEQUAL (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8)]
[(ram, 0x4ef438, 8) MULTIEQUAL (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x236f38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff88, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x233, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x233, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x233, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x233, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x233, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x233, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x233, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x233, 4)]
[ ---  CBRANCH (ram, 0x236e7c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0xc, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000324, 8), (unique, 0x10000324, 8) INT_ADD (unique, 0x10000314, 8) , (unique, 0x1000031c, 8), (unique, 0x1000031c, 8) CAST (unique, 0x10000240, 8), (unique, 0x10000314, 8) CAST (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x24f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x24c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x24a, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x24f, 4), (ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x24c, 4), (ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x24a, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x24f, 4), (ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x24c, 4), (ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x24a, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x24f, 4), (ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x24c, 4), (ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x24a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x24f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x24f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x24f, 4)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x236f0e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) INT_ADD (unique, 0x1000032c, 8) , (unique, 0x10000334, 8), (unique, 0x10000334, 8) CAST (unique, 0x10000240, 8), (unique, 0x1000032c, 8) CAST (register, 0x110, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x24f, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (register, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x22c, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x22c, 4), (ram, 0x4ef438, 8) MULTIEQUAL (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x22c, 4), (ram, 0x4ef440, 8) MULTIEQUAL (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x22c, 4), (ram, 0x4ef448, 1) MULTIEQUAL (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000354, 8), (unique, 0x10000354, 8) INT_ADD (unique, 0x10000344, 8) , (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) CAST (unique, 0x10000240, 8), (unique, 0x10000344, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x100001d0, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x236d50, 1)]
[(register, 0xb0, 4) COPY (const, 0x1, 4)]
[(unique, 0x100001d1, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x236d50, 1)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x100001ce, 1) MULTIEQUAL (unique, 0x100001cb, 1) , (unique, 0x100001d1, 1) , (unique, 0x100001d0, 1) , (unique, 0x100001cf, 1) , (unique, 0x100001cb, 1) , (unique, 0x100001cb, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x169, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x169, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x169, 4), (ram, 0x4ef438, 8) MULTIEQUAL (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x169, 4), (ram, 0x4ef440, 8) MULTIEQUAL (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x169, 4), (ram, 0x4ef448, 1) MULTIEQUAL (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x169, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x169, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x169, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x236ee0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249490, 8) , (unique, 0x3800, 8) , (unique, 0x100001de, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (register, 0xb0, 4) , (const, 0x0, 8), (unique, 0x100001de, 8) COPY (const, 0x2b69f2, 8), (register, 0xb0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x17a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17a, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x17a, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x17a, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x17a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x17a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x17a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x17a, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x237022, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d3, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d0, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x1d3, 4), (ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x1d0, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x1d3, 4), (ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x1d0, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x1d3, 4), (ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x1d0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1d3, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1d3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d3, 4)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x236f06, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1, 4) , (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x237063, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000036c, 8), (unique, 0x1000036c, 8) INT_ADD (unique, 0x1000035c, 8) , (unique, 0x10000364, 8), (unique, 0x10000364, 8) CAST (unique, 0x10000240, 8), (unique, 0x1000035c, 8) CAST (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x236ecb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 4) , (const, 0xfffffffe, 4)]
[ ---  CBRANCH (ram, 0x236ecb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 4) , (const, 0xfffffffe, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4ef448, 1) MULTIEQUAL (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1)]
[(ram, 0x4ef440, 8) MULTIEQUAL (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8)]
[(ram, 0x4ef438, 8) MULTIEQUAL (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff94, 4) COPY (const, 0x16, 4)]
[ ---  BRANCH (ram, 0x236f06, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4ef448, 1) MULTIEQUAL (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1)]
[(ram, 0x4ef440, 8) MULTIEQUAL (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8)]
[(ram, 0x4ef438, 8) MULTIEQUAL (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x236f0e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (stack, 0x8, 8)]
[(stack, 0xffffffffffffff94, 4) COPY (const, 0xb, 4)]
[ ---  BRANCH (ram, 0x236f06, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x190, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x190, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18d, 4)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x190, 4), (ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x18d, 4)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x190, 4), (ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x18d, 4)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x190, 4), (ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x18d, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x190, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x190, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x190, 4)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x197, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x197, 4), (ram, 0x4ef438, 8) MULTIEQUAL (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8)]
[(ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x197, 4), (ram, 0x4ef440, 8) MULTIEQUAL (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8)]
[(ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x197, 4), (ram, 0x4ef448, 1) MULTIEQUAL (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (stack, 0xffffffffffffff94, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) INT_ADD (unique, 0x10000374, 8) , (unique, 0x1000037c, 8), (unique, 0x1000037c, 8) CAST (unique, 0x10000240, 8), (unique, 0x10000374, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4ef448, 1) MULTIEQUAL (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1) , (ram, 0x4ef448, 1)]
[(ram, 0x4ef440, 8) MULTIEQUAL (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8) , (ram, 0x4ef440, 8)]
[(ram, 0x4ef438, 8) MULTIEQUAL (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8) , (ram, 0x4ef438, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x23705e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ef438, 8) COPY (ram, 0x4ef438, 8)]
[(ram, 0x4ef440, 8) COPY (ram, 0x4ef440, 8)]
[(ram, 0x4ef448, 1) COPY (ram, 0x4ef448, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x1000038c, 4), (unique, 0x1000038c, 4) COPY (stack, 0xffffffffffffff94, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1c6, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1c6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c6, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c6, 4)]
[(ram, 0x4ef438, 8) COPY (ram, 0x4ef438, 8), (ram, 0x4ef438, 8) INDIRECT (ram, 0x4ef438, 8) , (const, 0x1c6, 4)]
[(ram, 0x4ef440, 8) COPY (ram, 0x4ef440, 8), (ram, 0x4ef440, 8) INDIRECT (ram, 0x4ef440, 8) , (const, 0x1c6, 4)]
[(ram, 0x4ef448, 1) COPY (ram, 0x4ef448, 1), (ram, 0x4ef448, 1) INDIRECT (ram, 0x4ef448, 1) , (const, 0x1c6, 4)]
[ ---  RETURN (const, 0x1, 4)]
