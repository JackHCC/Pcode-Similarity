[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000188, 8), (unique, 0x10000188, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x10000168, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(register, 0x8, 8) COPY (const, 0xe, 8)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffff80, 1) MULTIEQUAL (stack, 0xffffffffffffff80, 1) , (stack, 0xffffffffffffff80, 1)]
[(stack, 0xffffffffffffff78, 4) MULTIEQUAL (stack, 0xffffffffffffff78, 4) , (stack, 0xffffffffffffff78, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000168, 8) , (unique, 0x10000170, 8)]
[ ---  CBRANCH (ram, 0x257f18, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0x29, 4)]
[(stack, 0xffffffffffffff80, 1) INDIRECT (stack, 0xffffffffffffff80, 1) , (const, 0x29, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x29, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x10000170, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x257f15, 1)]
[ ---  CBRANCH (ram, 0x257f2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f00f0, 4) , (const, 0x0, 4)]
[(ram, 0x4f00f0, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f00f0, 4) , (const, 0x0, 4)]
[(ram, 0x4f00f0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x257f50, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x136, 4)]
[(ram, 0x4f00f0, 4) INDIRECT (ram, 0x4f00f0, 4) , (const, 0x136, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x136, 4)]
[(stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0x136, 4)]
[(stack, 0xffffffffffffff80, 1) INDIRECT (stack, 0xffffffffffffff80, 1) , (const, 0x136, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x136, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x1000013d, 8), (unique, 0x1000013d, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f00f0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f00f0, 4) INDIRECT (ram, 0x4f00f0, 4) , (const, 0x4b, 4), (ram, 0x4f00f0, 4) MULTIEQUAL (ram, 0x4f00f0, 4) , (ram, 0x4f00f0, 4) , (ram, 0x4f00f0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4b, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0x4b, 4), (stack, 0xffffffffffffff78, 4) MULTIEQUAL (stack, 0xffffffffffffff78, 4) , (stack, 0xffffffffffffff78, 4) , (stack, 0xffffffffffffff78, 4)]
[(stack, 0xffffffffffffff80, 1) INDIRECT (stack, 0xffffffffffffff80, 1) , (const, 0x4b, 4), (stack, 0xffffffffffffff80, 1) MULTIEQUAL (stack, 0xffffffffffffff80, 1) , (stack, 0xffffffffffffff80, 1) , (stack, 0xffffffffffffff80, 1)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x4b, 4), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[ ---  CBRANCH (ram, 0x258000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x257b80, 8) , (const, 0x2, 8)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x257f92, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x71, 4)]
[(ram, 0x4f00f0, 4) INDIRECT (ram, 0x4f00f0, 4) , (const, 0x71, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x71, 4)]
[(stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0x71, 4)]
[(stack, 0xffffffffffffff80, 1) INDIRECT (stack, 0xffffffffffffff80, 1) , (const, 0x71, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x71, 4)]
[(unique, 0x100000a1, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x9, 8) , (unique, 0x1000012d, 8) , (const, 0x0, 8) , (unique, 0x10000125, 8) , (register, 0x20, 8) , (const, 0x1e, 8) , (const, 0x0, 8), (unique, 0x1000012d, 8) PTRSUB (const, 0x0, 8) , (const, 0x25c4f0, 8), (unique, 0x10000125, 8) PTRSUB (const, 0x0, 8) , (const, 0x250f00, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000190, 8), (unique, 0x10000190, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x100000a1, 4) , (register, 0x10, 4)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffff80, 1) MULTIEQUAL (stack, 0xffffffffffffff80, 1) , (stack, 0xffffffffffffff80, 1)]
[(stack, 0xffffffffffffff78, 4) MULTIEQUAL (stack, 0xffffffffffffff78, 4) , (stack, 0xffffffffffffff78, 4)]
[(ram, 0x4f00f0, 4) MULTIEQUAL (ram, 0x4f00f0, 4) , (ram, 0x4f00f0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x257fa6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000017c, 4) COPY (unique, 0x1000015d, 4), (unique, 0x1000015d, 4) INT_ADD (ram, 0x4f00f0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x257fc8, 1) , (unique, 0x10000161, 1), (unique, 0x10000161, 1) INT_NOTEQUAL (unique, 0x1000015d, 4) , (const, 0x0, 4), (unique, 0x1000015d, 4) INT_ADD (ram, 0x4f00f0, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffff80, 1) INDIRECT (stack, 0xffffffffffffff80, 1) , (const, 0x10c, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x10c, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000135, 8), (unique, 0x10000135, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f00f0, 8)]
[(unique, 0x10000178, 4) COPY (ram, 0x4f00f0, 4), (ram, 0x4f00f0, 4) INDIRECT (ram, 0x4f00f0, 4) , (const, 0x10c, 4), (ram, 0x4f00f0, 4) INT_ADD (ram, 0x4f00f0, 4) , (const, 0xffffffff, 4)]
[(unique, 0x10000184, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INDIRECT (const, 0x0, 4) , (const, 0x10c, 4)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffff80, 1) MULTIEQUAL (stack, 0xffffffffffffff80, 1) , (stack, 0xffffffffffffff80, 1)]
[(stack, 0xffffffffffffff78, 4) MULTIEQUAL (stack, 0xffffffffffffff78, 4) , (stack, 0xffffffffffffff78, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f00f0, 4) COPY (unique, 0x10000180, 4), (unique, 0x10000180, 4) MULTIEQUAL (unique, 0x10000178, 4) , (unique, 0x1000017c, 4)]
[ ---  CBRANCH (ram, 0x257fdf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x10000184, 4) , (register, 0x10, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x257fdf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff78, 4) , (const, 0x0, 4)]
[(unique, 0x100000de, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff80, 1) , (const, 0x0, 1)]
[(register, 0x0, 4) CAST (unique, 0x100001a0, 4), (unique, 0x100001a0, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (unique, 0x100000de, 4)]
[ ---  CBRANCH (ram, 0x258004, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000198, 8), (unique, 0x10000198, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xfd, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4f00f0, 4) COPY (ram, 0x4f00f0, 4), (ram, 0x4f00f0, 4) INDIRECT (ram, 0x4f00f0, 4) , (const, 0xfd, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xfd, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4f00f0, 4) COPY (ram, 0x4f00f0, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
