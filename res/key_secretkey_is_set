[(unique, 0x10000153, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(register, 0x8, 8) COPY (const, 0xe, 8)]
[(stack, 0xffffffffffffff90, 1) MULTIEQUAL (stack, 0xffffffffffffff90, 1) , (stack, 0xffffffffffffff90, 1)]
[(stack, 0xffffffffffffff88, 4) MULTIEQUAL (stack, 0xffffffffffffff88, 4) , (stack, 0xffffffffffffff88, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000153, 8) , (unique, 0x1000015b, 8)]
[ ---  CBRANCH (ram, 0x2365c7, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0x22, 4)]
[(stack, 0xffffffffffffff90, 1) INDIRECT (stack, 0xffffffffffffff90, 1) , (const, 0x22, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x1000015b, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x2365c4, 1)]
[ ---  CBRANCH (ram, 0x2365dc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7fb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7fb0, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7fb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7fb0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2365ff, 1)]
[(ram, 0x4c7fb0, 4) INDIRECT (ram, 0x4c7fb0, 4) , (const, 0x118, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x118, 4)]
[(stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0x118, 4)]
[(stack, 0xffffffffffffff90, 1) INDIRECT (stack, 0xffffffffffffff90, 1) , (const, 0x118, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x1000012b, 8), (unique, 0x1000012b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7fb0, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(ram, 0x4c7fb0, 4) INDIRECT (ram, 0x4c7fb0, 4) , (const, 0x44, 4), (ram, 0x4c7fb0, 4) MULTIEQUAL (ram, 0x4c7fb0, 4) , (ram, 0x4c7fb0, 4) , (ram, 0x4c7fb0, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x44, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0x44, 4), (stack, 0xffffffffffffff88, 4) MULTIEQUAL (stack, 0xffffffffffffff88, 4) , (stack, 0xffffffffffffff88, 4) , (stack, 0xffffffffffffff88, 4)]
[(stack, 0xffffffffffffff90, 1) INDIRECT (stack, 0xffffffffffffff90, 1) , (const, 0x44, 4), (stack, 0xffffffffffffff90, 1) MULTIEQUAL (stack, 0xffffffffffffff90, 1) , (stack, 0xffffffffffffff90, 1) , (stack, 0xffffffffffffff90, 1)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x236642, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x236290, 8) , (const, 0x2, 8)]
[(ram, 0x4c7fb0, 4) INDIRECT (ram, 0x4c7fb0, 4) , (const, 0x75, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x75, 4)]
[(stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0x75, 4)]
[(stack, 0xffffffffffffff90, 1) INDIRECT (stack, 0xffffffffffffff90, 1) , (const, 0x75, 4)]
[(unique, 0x100000a8, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x9, 8) , (unique, 0x1000011b, 8) , (const, 0x0, 8) , (unique, 0x10000113, 8) , (register, 0x20, 8) , (const, 0x1e, 8) , (const, 0x0, 8), (unique, 0x1000011b, 8) PTRSUB (const, 0x0, 8) , (const, 0x23a1c0, 8), (unique, 0x10000113, 8) PTRSUB (const, 0x0, 8) , (const, 0x22fe10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000173, 8), (unique, 0x10000173, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0x100000a8, 4)]
[(stack, 0xffffffffffffff90, 1) MULTIEQUAL (stack, 0xffffffffffffff90, 1) , (stack, 0xffffffffffffff90, 1)]
[(stack, 0xffffffffffffff88, 4) MULTIEQUAL (stack, 0xffffffffffffff88, 4) , (stack, 0xffffffffffffff88, 4)]
[(ram, 0x4c7fb0, 4) MULTIEQUAL (ram, 0x4c7fb0, 4) , (ram, 0x4c7fb0, 4)]
[ ---  CBRANCH (ram, 0x236656, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000167, 4) COPY (unique, 0x1000014b, 4), (unique, 0x1000014b, 4) INT_ADD (ram, 0x4c7fb0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x236678, 1) , (unique, 0x1000014f, 1), (unique, 0x1000014f, 1) INT_NOTEQUAL (unique, 0x1000014b, 4) , (const, 0x0, 4), (unique, 0x1000014b, 4) INT_ADD (ram, 0x4c7fb0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffff90, 1) INDIRECT (stack, 0xffffffffffffff90, 1) , (const, 0xf9, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x10000123, 8), (unique, 0x10000123, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7fb0, 8)]
[(unique, 0x10000163, 4) COPY (ram, 0x4c7fb0, 4), (ram, 0x4c7fb0, 4) INDIRECT (ram, 0x4c7fb0, 4) , (const, 0xf9, 4), (ram, 0x4c7fb0, 4) INT_ADD (ram, 0x4c7fb0, 4) , (const, 0xffffffff, 4)]
[(unique, 0x1000016f, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INDIRECT (const, 0x0, 4) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffff90, 1) MULTIEQUAL (stack, 0xffffffffffffff90, 1) , (stack, 0xffffffffffffff90, 1)]
[(stack, 0xffffffffffffff88, 4) MULTIEQUAL (stack, 0xffffffffffffff88, 4) , (stack, 0xffffffffffffff88, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7fb0, 4) COPY (unique, 0x1000016b, 4), (unique, 0x1000016b, 4) MULTIEQUAL (unique, 0x10000163, 4) , (unique, 0x10000167, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x23668f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x1000016f, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x23668f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff88, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff90, 1) , (const, 0x0, 1)]
[(ram, 0x4c7fb0, 4) COPY (ram, 0x4c7fb0, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x1000017b, 4), (unique, 0x1000017b, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
