[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48f0e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0xa0, 8) CAST (unique, 0x10000165, 8), (unique, 0x10000165, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000015d, 8), (unique, 0x1000015d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x53, 8) , (const, 0x8, 8)]
[(ram, 0x4c4f08, 8) COPY (ram, 0x4c4f08, 8)]
[(ram, 0x4c4f70, 8) COPY (ram, 0x4c4f70, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48f104, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4f08, 8) , (const, 0x0, 8)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x59, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x59, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x59, 4)]
[ ---  CALL (ram, 0x0, 8) , (unique, 0x100000dc, 8), (unique, 0x100000dc, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c60e0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c4f70, 8) MULTIEQUAL (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8)]
[(ram, 0x4c4f08, 8) MULTIEQUAL (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8)]
[ ---  CBRANCH (ram, 0x48f130, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x8a, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x8a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x100000d4, 8), (unique, 0x100000d4, 8) PTRSUB (const, 0x0, 8) , (const, 0x4889a0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000175, 8), (unique, 0x10000175, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48f1f8, 1) , (unique, 0x13280, 1), (unique, 0x13280, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x0, 1), (register, 0x8, 1) INT_RIGHT (unique, 0xbb00, 1) , (const, 0x4, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000018d, 8), (unique, 0x1000018d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000185, 8), (unique, 0x10000185, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xe, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000016d, 8), (unique, 0x1000016d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x48f1f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000019d, 8), (unique, 0x1000019d, 8) INT_ADD (unique, 0x10000195, 8) , (const, 0x5, 8), (unique, 0x10000195, 8) CAST (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x48f1aa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x3a, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48f1aa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b5, 8), (unique, 0x100001b5, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x5d, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7fff, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100001ad, 8), (unique, 0x100001ad, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001a5, 8), (unique, 0x100001a5, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x12f, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x12f, 4)]
[(register, 0x0, 8) CAST (unique, 0x100001bd, 8), (unique, 0x100001bd, 8) CALL (ram, 0x481760, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x3800, 8) , (unique, 0xbd80, 8) , (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x72, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x48f1f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x3400, 8) , (const, 0x12f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001c5, 8), (unique, 0x100001c5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x14b, 4), (ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x148, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x14b, 4), (ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x148, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x100000cc, 8), (unique, 0x100000cc, 8) PTRSUB (const, 0x0, 8) , (const, 0x488900, 8)]
[ ---  BRANCH (ram, 0x48f10c, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c4f70, 8) MULTIEQUAL (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8)]
[(ram, 0x4c4f08, 8) MULTIEQUAL (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8)]
[ ---  CBRANCH (ram, 0x48f230, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x2, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x28, 8) , (const, 0x8a, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x0, 8)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x180, 4)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x180, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x180, 4)]
[ ---  CALL (ram, 0x482810, 8) , (register, 0x28, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x28, 8) , (const, 0x8a, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x48f209, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100001dd, 8), (unique, 0x100001dd, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d5, 8), (unique, 0x100001d5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001cd, 8), (unique, 0x100001cd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x17b, 4), (ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x178, 4), (ram, 0x4c4f08, 8) MULTIEQUAL (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8)]
[(ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x17b, 4), (ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x178, 4), (ram, 0x4c4f70, 8) MULTIEQUAL (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x100000c4, 8), (unique, 0x100000c4, 8) PTRSUB (const, 0x0, 8) , (const, 0x4888f0, 8)]
[ ---  BRANCH (ram, 0x48f10c, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c4f08, 8) MULTIEQUAL (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8) , (ram, 0x4c4f08, 8)]
[ ---  CBRANCH (ram, 0x48f0d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4f70, 8) , (const, 0x0, 8), (ram, 0x4c4f70, 8) MULTIEQUAL (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8) , (ram, 0x4c4f70, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x73, 4)]
[ ---  CALL (ram, 0x0, 8) , (unique, 0x100000e4, 8), (unique, 0x100000e4, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c60e0, 8)]
[(ram, 0x4c4f08, 8) COPY (ram, 0x4c4f08, 8), (ram, 0x4c4f08, 8) INDIRECT (ram, 0x4c4f08, 8) , (const, 0x73, 4)]
[(ram, 0x4c4f70, 8) COPY (ram, 0x4c4f70, 8), (ram, 0x4c4f70, 8) INDIRECT (ram, 0x4c4f70, 8) , (const, 0x73, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(ram, 0x4c4f08, 8) COPY (ram, 0x4c4f08, 8)]
[(ram, 0x4c4f70, 8) COPY (ram, 0x4c4f70, 8)]
[ ---  RETURN (const, 0x0, 8)]
