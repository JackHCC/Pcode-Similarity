[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x6, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x7, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb4, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22eef2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000061, 4) , (const, 0x0, 4), (unique, 0x10000061, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4)]
[ ---  CBRANCH (ram, 0x22ef28, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 4) , (const, 0x2001, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (register, 0x10, 4) , (const, 0xe5, 4), (register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffb8, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffb9, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffba, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffbb, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffbd, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffbe, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0xe5, 4)]
[ ---  CBRANCH (ram, 0x22efd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22f0c0, 8) , (register, 0x30, 8) , (register, 0x10, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0x10000069, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x22eef7, 1)]
[(register, 0x0, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x22eef7, 1)]
[(register, 0x0, 4) COPY (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0xa8, 1), (register, 0xa8, 1) MULTIEQUAL (unique, 0xbb00, 1) , (stack, 0xffffffffffffffb8, 1) , (stack, 0xffffffffffffffb8, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 1), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (stack, 0xffffffffffffffb9, 1) , (stack, 0xffffffffffffffb9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 1), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x1, 8), (register, 0x28, 1) MULTIEQUAL (unique, 0xbb00, 1) , (stack, 0xffffffffffffffba, 1) , (stack, 0xffffffffffffffba, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 1), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x3, 8) , (const, 0x1, 8), (register, 0x18, 1) MULTIEQUAL (unique, 0xbb00, 1) , (stack, 0xffffffffffffffbb, 1) , (stack, 0xffffffffffffffbb, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x98, 1), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x4, 8) , (const, 0x1, 8), (register, 0x98, 1) MULTIEQUAL (unique, 0xbb00, 1) , (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 1), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x5, 8) , (const, 0x1, 8), (register, 0x90, 1) MULTIEQUAL (unique, 0xbb00, 1) , (stack, 0xffffffffffffffbd, 1) , (stack, 0xffffffffffffffbd, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x88, 1), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x6, 8) , (const, 0x1, 8), (register, 0x88, 1) MULTIEQUAL (unique, 0xbb00, 1) , (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 1), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x7, 8) , (const, 0x1, 8), (register, 0x10, 1) MULTIEQUAL (unique, 0xbb00, 1) , (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000086, 4), (unique, 0x10000086, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (unique, 0x10000069, 4)]
