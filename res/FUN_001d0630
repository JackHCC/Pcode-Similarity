[(unique, 0x100002dc, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(register, 0x1240, 16) COPY (const, 0x0, 16)]
[(register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1d06a0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (const, 0x31, 8), (register, 0x8, 8) INT_AND (unique, 0x10000880, 8) , (const, 0x3f, 8), (unique, 0x10000880, 8) CAST (register, 0x38, 8)]
[(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_OR (unique, 0x10000018, 8) , (unique, 0x10000020, 8), (unique, 0x10000020, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x10000018, 8) INT_AND (register, 0x10, 8) , (const, 0xffffffff00000000, 8), (register, 0x10, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x10, 4) , (register, 0x1260, 16), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x1260, 16) INT_ADD (unique, 0x100004d0, 16) , (register, 0x1260, 12), (unique, 0x100004d0, 16) INT_LEFT (unique, 0x100004c0, 16) , (const, 0x60, 16), (unique, 0x100004c0, 16) INT_SEXT (unique, 0x100008a8, 4), (unique, 0x100008a8, 4) CAST (register, 0x126c, 4), (register, 0x126c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100001ac, 4) , (const, 0x0, 4), (register, 0x1260, 12) INT_ADD (unique, 0x100004b4, 12) , (register, 0x1260, 8), (unique, 0x100004b4, 12) INT_LEFT (unique, 0x100004a8, 12) , (const, 0x40, 12), (unique, 0x100004a8, 12) INT_SEXT (unique, 0x100008a4, 4), (unique, 0x100008a4, 4) CAST (register, 0x1268, 4), (register, 0x1268, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100001a0, 4) , (const, 0x0, 4), (register, 0x1260, 8) INT_SUB (unique, 0x100004a0, 8) , (unique, 0x90d00, 4), (unique, 0x100004a0, 8) INT_LEFT (unique, 0x10000498, 8) , (const, 0x20, 8), (unique, 0x10000498, 8) INT_SEXT (unique, 0x100008a0, 4), (unique, 0x100008a0, 4) CAST (register, 0x1264, 4), (register, 0x1264, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x10000194, 4) , (const, 0x0, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000190, 4) , (const, 0x0, 4), (unique, 0x100001ac, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x100001a0, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001a4, 8), (unique, 0x100001a4, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x10000194, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000198, 8), (unique, 0x10000198, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000190, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000898, 8), (unique, 0x10000898, 8) INT_AND (unique, 0x10000890, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000890, 8) CAST (register, 0x38, 8), (register, 0x8, 8) INT_AND (unique, 0x10000888, 8) , (const, 0xf, 8), (unique, 0x10000888, 8) CAST (register, 0x38, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x38, 8) CAST (unique, 0x10000898, 8), (unique, 0x10000898, 8) INT_AND (unique, 0x10000890, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000890, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1d06e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_OR (unique, 0x10000028, 8) , (unique, 0x10000030, 8), (unique, 0x10000030, 8) INT_ZEXT (register, 0x0, 4), (unique, 0x10000028, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff00000000, 8), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1200, 16), (register, 0x1200, 16) INT_ADD (unique, 0x10000518, 16) , (register, 0x1200, 12), (unique, 0x10000518, 16) INT_LEFT (unique, 0x10000508, 16) , (const, 0x60, 16), (unique, 0x10000508, 16) INT_SEXT (unique, 0x100008b4, 4), (unique, 0x100008b4, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100001ac, 4) , (unique, 0x100002dc, 4), (register, 0x1200, 12) INT_ADD (unique, 0x100004fc, 12) , (register, 0x1200, 8), (unique, 0x100004fc, 12) INT_LEFT (unique, 0x100004f0, 12) , (const, 0x40, 12), (unique, 0x100004f0, 12) INT_SEXT (unique, 0x100008b0, 4), (unique, 0x100008b0, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100001a0, 4) , (unique, 0x100002dc, 4), (register, 0x1200, 8) INT_SUB (unique, 0x100004e8, 8) , (unique, 0x90d00, 4), (unique, 0x100004e8, 8) INT_LEFT (unique, 0x100004e0, 8) , (const, 0x20, 8), (unique, 0x100004e0, 8) INT_SEXT (unique, 0x100008ac, 4), (unique, 0x100008ac, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x10000194, 4) , (unique, 0x100002dc, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000190, 4) , (unique, 0x100002dc, 4), (unique, 0x100001ac, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x100001a0, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001a4, 8), (unique, 0x100001a4, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x10000194, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000198, 8), (unique, 0x10000198, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000190, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000898, 8), (unique, 0x10000898, 8) INT_AND (unique, 0x10000890, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000890, 8) CAST (register, 0x38, 8), (register, 0x8, 8) INT_AND (unique, 0x10000888, 8) , (const, 0xf, 8), (unique, 0x10000888, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1d0880, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x100008c0, 8), (unique, 0x100008c0, 8) INT_ADD (unique, 0x100008b8, 8) , (register, 0x8, 8), (unique, 0x100008b8, 8) CAST (register, 0x38, 8)]
[(unique, 0x100007e8, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100008d0, 8), (unique, 0x100008d0, 8) INT_ADD (unique, 0x100008c8, 8) , (register, 0x8, 8), (unique, 0x100008c8, 8) CAST (register, 0x38, 8)]
[(unique, 0x10000868, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d0930, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100007e0, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000860, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1d06f0, 1)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x8, 4) , (register, 0x1240, 16), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x1240, 16) INT_ADD (unique, 0x10000440, 16) , (register, 0x1240, 12), (unique, 0x10000440, 16) INT_LEFT (unique, 0x10000430, 16) , (const, 0x60, 16), (unique, 0x10000430, 16) INT_SEXT (unique, 0x100008e0, 4), (unique, 0x100008e0, 4) CAST (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x10000184, 4) , (const, 0x0, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000424, 12) , (register, 0x1240, 8), (unique, 0x10000424, 12) INT_LEFT (unique, 0x10000418, 12) , (const, 0x40, 12), (unique, 0x10000418, 12) INT_SEXT (unique, 0x100008dc, 4), (unique, 0x100008dc, 4) CAST (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000178, 4) , (const, 0x0, 4), (register, 0x1240, 8) INT_SUB (unique, 0x10000410, 8) , (unique, 0x90d00, 4), (unique, 0x10000410, 8) INT_LEFT (unique, 0x10000408, 8) , (const, 0x20, 8), (unique, 0x10000408, 8) INT_SEXT (unique, 0x100008d8, 4), (unique, 0x100008d8, 4) CAST (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000016c, 4) , (const, 0x0, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000168, 4) , (const, 0x0, 4), (unique, 0x10000184, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000188, 8), (unique, 0x10000188, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x10000178, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000017c, 8), (unique, 0x1000017c, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x1000016c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000170, 8), (unique, 0x10000170, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000168, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0680, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0x10000008, 8) , (unique, 0x10000010, 8), (unique, 0x10000010, 8) INT_ZEXT (register, 0x0, 4), (unique, 0x10000008, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff00000000, 8), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1200, 16), (register, 0x1200, 16) INT_ADD (unique, 0x10000488, 16) , (register, 0x1200, 12), (unique, 0x10000488, 16) INT_LEFT (unique, 0x10000478, 16) , (const, 0x60, 16), (unique, 0x10000478, 16) INT_SEXT (unique, 0x100008ec, 4), (unique, 0x100008ec, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x10000184, 4) , (unique, 0x100002dc, 4), (register, 0x1200, 12) INT_ADD (unique, 0x1000046c, 12) , (register, 0x1200, 8), (unique, 0x1000046c, 12) INT_LEFT (unique, 0x10000460, 12) , (const, 0x40, 12), (unique, 0x10000460, 12) INT_SEXT (unique, 0x100008e8, 4), (unique, 0x100008e8, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000178, 4) , (unique, 0x100002dc, 4), (register, 0x1200, 8) INT_SUB (unique, 0x10000458, 8) , (unique, 0x90d00, 4), (unique, 0x10000458, 8) INT_LEFT (unique, 0x10000450, 8) , (const, 0x20, 8), (unique, 0x10000450, 8) INT_SEXT (unique, 0x100008e4, 4), (unique, 0x100008e4, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000016c, 4) , (unique, 0x100002dc, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000168, 4) , (unique, 0x100002dc, 4), (unique, 0x10000184, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000188, 8), (unique, 0x10000188, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x10000178, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000017c, 8), (unique, 0x1000017c, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x1000016c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000170, 8), (unique, 0x10000170, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000168, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100007c0, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000840, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1d0886, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000840, 8) , (register, 0x38, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x100007c0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1d08c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000108, 8) , (const, 0x0, 8), (unique, 0x10000108, 8) INT_AND (register, 0x8, 8) , (const, 0xf, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100007c0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1d0930, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58b00, 8) , (const, 0x0, 8), (unique, 0x58b00, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d08d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1d08e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000110, 8) , (const, 0x0, 8), (unique, 0x10000110, 8) INT_AND (register, 0x8, 8) , (const, 0xf00, 8)]
[ ---  CBRANCH (ram, 0x1d0930, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0x1fff, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x1, 1) SUBPIECE (unique, 0x100007b0, 8) , (const, 0x0, 4), (unique, 0x100007b0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1d0920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000118, 8) , (const, 0x0, 8), (unique, 0x10000118, 8) INT_AND (register, 0x0, 8) , (const, 0x1000, 8)]
[ ---  CBRANCH (ram, 0x1d0910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x1, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1d0900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000120, 8) , (const, 0x0, 8), (unique, 0x10000120, 8) INT_AND (register, 0x0, 8) , (const, 0xf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0930, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0x1ff, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d0910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x1, 1) , (const, 0x0, 1), (register, 0x1, 1) SUBPIECE (unique, 0x100007b8, 8) , (const, 0x0, 4), (unique, 0x100007b8, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1d0900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000130, 8) , (const, 0x0, 8), (unique, 0x10000130, 8) INT_AND (register, 0x0, 8) , (const, 0xf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0930, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0x1f, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d0900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000128, 8) , (const, 0x0, 8), (unique, 0x10000128, 8) INT_AND (register, 0x0, 8) , (const, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) CAST (unique, 0x100008f8, 8), (unique, 0x100008f8, 8) INT_AND (unique, 0x100008f0, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100008f0, 8) CAST (register, 0x38, 8)]
[(unique, 0x100007d8, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000858, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1d06f0, 1)]
[ ---  CBRANCH (ram, 0x1d0930, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000908, 8), (unique, 0x10000908, 8) INT_AND (unique, 0x10000900, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000900, 8) CAST (register, 0x38, 8)]
[(unique, 0x100007c8, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000848, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1d06f0, 1)]
[(register, 0x80, 8) COPY (unique, 0x10000878, 8), (unique, 0x10000878, 8) MULTIEQUAL (unique, 0x10000848, 8) , (unique, 0x10000850, 8) , (unique, 0x10000858, 8) , (unique, 0x10000860, 8) , (unique, 0x10000868, 8) , (unique, 0x10000870, 8)]
[(register, 0x30, 8) COPY (unique, 0x100007f8, 8), (unique, 0x100007f8, 8) MULTIEQUAL (unique, 0x100007c8, 8) , (unique, 0x100007d0, 8) , (unique, 0x100007d8, 8) , (unique, 0x100007e0, 8) , (unique, 0x100007e8, 8) , (unique, 0x100007f0, 8)]
[(unique, 0x10000818, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1d0770, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0x10000048, 8) , (unique, 0x10000050, 8), (unique, 0x10000050, 8) INT_ZEXT (register, 0x0, 4), (unique, 0x10000048, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff00000000, 8), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1200, 16), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_OR (unique, 0x10000038, 8) , (unique, 0x10000040, 8), (unique, 0x10000040, 8) INT_ZEXT (register, 0x8, 4), (unique, 0x10000038, 8) INT_AND (register, 0x8, 8) , (const, 0xffffffff00000000, 8), (register, 0x8, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x8, 4) , (register, 0x1240, 16), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x1200, 16) INT_ADD (unique, 0x100005d8, 16) , (register, 0x1200, 12), (unique, 0x100005d8, 16) INT_LEFT (unique, 0x100005c8, 16) , (const, 0x60, 16), (unique, 0x100005c8, 16) INT_SEXT (unique, 0x10000918, 4), (unique, 0x10000918, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100001d4, 4) , (unique, 0x100002dc, 4), (register, 0x1200, 12) INT_ADD (unique, 0x100005bc, 12) , (register, 0x1200, 8), (unique, 0x100005bc, 12) INT_LEFT (unique, 0x100005b0, 12) , (const, 0x40, 12), (unique, 0x100005b0, 12) INT_SEXT (unique, 0x10000914, 4), (unique, 0x10000914, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100001c8, 4) , (unique, 0x100002dc, 4), (register, 0x1200, 8) INT_SUB (unique, 0x100005a8, 8) , (unique, 0x90d00, 4), (unique, 0x100005a8, 8) INT_LEFT (unique, 0x100005a0, 8) , (const, 0x20, 8), (unique, 0x100005a0, 8) INT_SEXT (unique, 0x10000910, 4), (unique, 0x10000910, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x100001bc, 4) , (unique, 0x100002dc, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x100001b8, 4) , (unique, 0x100002dc, 4), (register, 0x1240, 16) INT_ADD (unique, 0x10000590, 16) , (register, 0x1240, 12), (unique, 0x10000590, 16) INT_LEFT (unique, 0x10000580, 16) , (const, 0x60, 16), (unique, 0x10000580, 16) INT_SEXT (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (register, 0x124c, 4) , (unique, 0x100001d4, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000574, 12) , (register, 0x1240, 8), (unique, 0x10000574, 12) INT_LEFT (unique, 0x10000568, 12) , (const, 0x40, 12), (unique, 0x10000568, 12) INT_SEXT (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (register, 0x124c, 4) SUBPIECE (unique, 0x10000558, 16) , (const, 0x0, 4), (unique, 0x10000558, 16) INT_RIGHT (register, 0x1240, 16) , (const, 0x60, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (register, 0x1248, 4) , (unique, 0x100001c8, 4), (register, 0x1248, 4) SUBPIECE (unique, 0x10000538, 16) , (const, 0x0, 4), (unique, 0x10000538, 16) INT_RIGHT (register, 0x1240, 16) , (const, 0x40, 4), (register, 0x1240, 8) INT_ADD (unique, 0x10000550, 8) , (register, 0x1240, 4), (unique, 0x10000550, 8) INT_LEFT (unique, 0x10000548, 8) , (const, 0x20, 8), (unique, 0x10000548, 8) INT_SEXT (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (register, 0x1244, 4) , (unique, 0x100001bc, 4), (register, 0x1244, 4) SUBPIECE (unique, 0x10000528, 16) , (const, 0x0, 4), (unique, 0x10000528, 16) INT_RIGHT (register, 0x1240, 16) , (const, 0x20, 4), (register, 0x1240, 4) INT_2COMP (unique, 0x90d00, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (register, 0x1240, 4) , (unique, 0x100001b8, 4), (register, 0x1240, 4) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (unique, 0x100001d4, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001d8, 8), (unique, 0x100001d8, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x100001c8, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001cc, 8), (unique, 0x100001cc, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100001bc, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001c0, 8), (unique, 0x100001c0, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x100001b8, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 16) MULTIEQUAL (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16)]
[(unique, 0x10000820, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0770, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (unique, 0x10000060, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0x10000048, 8) , (unique, 0x10000070, 8), (unique, 0x10000070, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1260, 16), (unique, 0x10000060, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1240, 16), (register, 0x1260, 16) INT_ADD (unique, 0x10000668, 16) , (register, 0x1260, 12), (unique, 0x10000668, 16) INT_LEFT (unique, 0x10000658, 16) , (const, 0x60, 16), (unique, 0x10000658, 16) INT_SEXT (unique, 0x10000924, 4), (unique, 0x10000924, 4) CAST (register, 0x126c, 4), (register, 0x126c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100001fc, 4) , (unique, 0x100002dc, 4), (register, 0x1260, 12) INT_ADD (unique, 0x1000064c, 12) , (register, 0x1260, 8), (unique, 0x1000064c, 12) INT_LEFT (unique, 0x10000640, 12) , (const, 0x40, 12), (unique, 0x10000640, 12) INT_SEXT (unique, 0x10000920, 4), (unique, 0x10000920, 4) CAST (register, 0x1268, 4), (register, 0x1268, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100001f0, 4) , (unique, 0x100002dc, 4), (register, 0x1260, 8) INT_SUB (unique, 0x10000638, 8) , (unique, 0x90d00, 4), (unique, 0x10000638, 8) INT_LEFT (unique, 0x10000630, 8) , (const, 0x20, 8), (unique, 0x10000630, 8) INT_SEXT (unique, 0x1000091c, 4), (unique, 0x1000091c, 4) CAST (register, 0x1264, 4), (register, 0x1264, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x100001e4, 4) , (unique, 0x100002dc, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x100001e0, 4) , (unique, 0x100002dc, 4), (register, 0x1240, 16) INT_ADD (unique, 0x10000620, 16) , (register, 0x1240, 12), (unique, 0x10000620, 16) INT_LEFT (unique, 0x10000610, 16) , (const, 0x60, 16), (unique, 0x10000610, 16) INT_SEXT (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (register, 0x124c, 4) , (unique, 0x100001fc, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000604, 12) , (register, 0x1240, 8), (unique, 0x10000604, 12) INT_LEFT (unique, 0x100005f8, 12) , (const, 0x40, 12), (unique, 0x100005f8, 12) INT_SEXT (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (register, 0x1248, 4) , (unique, 0x100001f0, 4), (register, 0x1240, 8) INT_ADD (unique, 0x100005f0, 8) , (register, 0x1240, 4), (unique, 0x100005f0, 8) INT_LEFT (unique, 0x100005e8, 8) , (const, 0x20, 8), (unique, 0x100005e8, 8) INT_SEXT (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (register, 0x1244, 4) , (unique, 0x100001e4, 4), (register, 0x1240, 4) INT_2COMP (unique, 0x90d00, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (register, 0x1240, 4) , (unique, 0x100001e0, 4), (unique, 0x100001fc, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000200, 8), (unique, 0x10000200, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x4, 8), (unique, 0x100001f0, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f4, 8), (unique, 0x100001f4, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0x100001e4, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e8, 8), (unique, 0x100001e8, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x4, 8), (unique, 0x100001e0, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x10000828, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0770, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (unique, 0x10000080, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0x10000048, 8) , (unique, 0x10000090, 8), (unique, 0x10000090, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1280, 16), (unique, 0x10000080, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1240, 16), (register, 0x1280, 16) INT_ADD (unique, 0x100006f8, 16) , (register, 0x1280, 12), (unique, 0x100006f8, 16) INT_LEFT (unique, 0x100006e8, 16) , (const, 0x60, 16), (unique, 0x100006e8, 16) INT_SEXT (unique, 0x10000930, 4), (unique, 0x10000930, 4) CAST (register, 0x128c, 4), (register, 0x128c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x10000224, 4) , (unique, 0x100002dc, 4), (register, 0x1280, 12) INT_ADD (unique, 0x100006dc, 12) , (register, 0x1280, 8), (unique, 0x100006dc, 12) INT_LEFT (unique, 0x100006d0, 12) , (const, 0x40, 12), (unique, 0x100006d0, 12) INT_SEXT (unique, 0x1000092c, 4), (unique, 0x1000092c, 4) CAST (register, 0x1288, 4), (register, 0x1288, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000218, 4) , (unique, 0x100002dc, 4), (register, 0x1280, 8) INT_SUB (unique, 0x100006c8, 8) , (unique, 0x90d00, 4), (unique, 0x100006c8, 8) INT_LEFT (unique, 0x100006c0, 8) , (const, 0x20, 8), (unique, 0x100006c0, 8) INT_SEXT (unique, 0x10000928, 4), (unique, 0x10000928, 4) CAST (register, 0x1284, 4), (register, 0x1284, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000020c, 4) , (unique, 0x100002dc, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000208, 4) , (unique, 0x100002dc, 4), (register, 0x1240, 16) INT_ADD (unique, 0x100006b0, 16) , (register, 0x1240, 12), (unique, 0x100006b0, 16) INT_LEFT (unique, 0x100006a0, 16) , (const, 0x60, 16), (unique, 0x100006a0, 16) INT_SEXT (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (register, 0x124c, 4) , (unique, 0x10000224, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000694, 12) , (register, 0x1240, 8), (unique, 0x10000694, 12) INT_LEFT (unique, 0x10000688, 12) , (const, 0x40, 12), (unique, 0x10000688, 12) INT_SEXT (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (register, 0x1248, 4) , (unique, 0x10000218, 4), (register, 0x1240, 8) INT_ADD (unique, 0x10000680, 8) , (register, 0x1240, 4), (unique, 0x10000680, 8) INT_LEFT (unique, 0x10000678, 8) , (const, 0x20, 8), (unique, 0x10000678, 8) INT_SEXT (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (register, 0x1244, 4) , (unique, 0x1000020c, 4), (register, 0x1240, 4) INT_2COMP (unique, 0x90d00, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (register, 0x1240, 4) , (unique, 0x10000208, 4), (unique, 0x10000224, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000228, 8), (unique, 0x10000228, 8) PTRADD (register, 0x38, 8) , (const, 0xb, 8) , (const, 0x4, 8), (unique, 0x10000218, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000021c, 8), (unique, 0x1000021c, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0x1000020c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000210, 8), (unique, 0x10000210, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x4, 8), (unique, 0x10000208, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100007d0, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000830, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x10000850, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1d06f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (unique, 0x100000a0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0x10000048, 8) , (unique, 0x100000b0, 8), (unique, 0x100000b0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x12a0, 16), (unique, 0x100000a0, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1240, 16), (register, 0x12a0, 16) INT_ADD (unique, 0x10000788, 16) , (register, 0x12a0, 12), (unique, 0x10000788, 16) INT_LEFT (unique, 0x10000778, 16) , (const, 0x60, 16), (unique, 0x10000778, 16) INT_SEXT (unique, 0x10000948, 4), (unique, 0x10000948, 4) CAST (register, 0x12ac, 4), (register, 0x12ac, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x1000024c, 4) , (unique, 0x100002dc, 4), (register, 0x12a0, 12) INT_ADD (unique, 0x1000076c, 12) , (register, 0x12a0, 8), (unique, 0x1000076c, 12) INT_LEFT (unique, 0x10000760, 12) , (const, 0x40, 12), (unique, 0x10000760, 12) INT_SEXT (unique, 0x10000944, 4), (unique, 0x10000944, 4) CAST (register, 0x12a8, 4), (register, 0x12a8, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000240, 4) , (unique, 0x100002dc, 4), (register, 0x12a0, 8) INT_SUB (unique, 0x10000758, 8) , (unique, 0x90d00, 4), (unique, 0x10000758, 8) INT_LEFT (unique, 0x10000750, 8) , (const, 0x20, 8), (unique, 0x10000750, 8) INT_SEXT (unique, 0x10000940, 4), (unique, 0x10000940, 4) CAST (register, 0x12a4, 4), (register, 0x12a4, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x10000234, 4) , (unique, 0x100002dc, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000230, 4) , (unique, 0x100002dc, 4), (register, 0x1240, 16) INT_ADD (unique, 0x10000740, 16) , (register, 0x1240, 12), (unique, 0x10000740, 16) INT_LEFT (unique, 0x10000730, 16) , (const, 0x60, 16), (unique, 0x10000730, 16) INT_SEXT (unique, 0x1000093c, 4), (unique, 0x1000093c, 4) CAST (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (register, 0x124c, 4) , (unique, 0x1000024c, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000724, 12) , (register, 0x1240, 8), (unique, 0x10000724, 12) INT_LEFT (unique, 0x10000718, 12) , (const, 0x40, 12), (unique, 0x10000718, 12) INT_SEXT (unique, 0x10000938, 4), (unique, 0x10000938, 4) CAST (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (register, 0x1248, 4) , (unique, 0x10000240, 4), (register, 0x1240, 8) INT_SUB (unique, 0x10000710, 8) , (unique, 0x90d00, 4), (unique, 0x10000710, 8) INT_LEFT (unique, 0x10000708, 8) , (const, 0x20, 8), (unique, 0x10000708, 8) INT_SEXT (unique, 0x10000934, 4), (unique, 0x10000934, 4) CAST (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (register, 0x1244, 4) , (unique, 0x10000234, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (register, 0x1240, 4) , (unique, 0x10000230, 4), (unique, 0x1000024c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000250, 8), (unique, 0x10000250, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x4, 8), (unique, 0x10000240, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000244, 8), (unique, 0x10000244, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (unique, 0x10000234, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000238, 8), (unique, 0x10000238, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x4, 8), (unique, 0x10000230, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x1240, 16) MULTIEQUAL (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x38, 8) COPY (unique, 0x10000838, 8), (unique, 0x10000838, 8) MULTIEQUAL (unique, 0x10000818, 8) , (unique, 0x10000820, 8) , (unique, 0x10000828, 8) , (unique, 0x10000830, 8)]
[ ---  CBRANCH (ram, 0x1d07b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100007f0, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000870, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d07d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (unique, 0x100000c8, 8) , (unique, 0x100000d0, 8), (unique, 0x100000d0, 8) INT_ZEXT (register, 0x8, 4), (unique, 0x100000c8, 8) INT_AND (register, 0x8, 8) , (const, 0xffffffff00000000, 8), (register, 0x8, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x8, 4) , (register, 0x1240, 16), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[(register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1d0810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002d4, 4) , (const, 0x0, 4), (unique, 0x100002d4, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4)]
[ ---  CBRANCH (ram, 0x1d0775, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58b00, 8) , (const, 0x0, 8), (unique, 0x58b00, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0830, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1d0775, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0x1f, 8)]
[ ---  CBRANCH (ram, 0x1d0900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000f8, 8) , (const, 0x0, 8), (unique, 0x100000f8, 8) INT_AND (register, 0x0, 8) , (const, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0850, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002d8, 4) , (const, 0x0, 4), (unique, 0x100002d8, 4) INT_AND (register, 0x8, 4) , (const, 0xf00, 4)]
[ ---  CBRANCH (ram, 0x1d0775, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0x1ff, 8)]
[ ---  CBRANCH (ram, 0x1d0910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x1, 1) , (const, 0x0, 1), (register, 0x1, 1) SUBPIECE (unique, 0x100007a8, 8) , (const, 0x0, 4), (unique, 0x100007a8, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1d0900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000100, 8) , (const, 0x0, 8), (unique, 0x10000100, 8) INT_AND (register, 0x0, 8) , (const, 0xf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0775, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0x1fff, 8)]
[(register, 0x1, 1) SUBPIECE (unique, 0x100007a0, 8) , (const, 0x0, 4), (unique, 0x100007a0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1d0920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000e8, 8) , (const, 0x0, 8), (unique, 0x100000e8, 8) INT_AND (register, 0x0, 8) , (const, 0x1000, 8)]
[ ---  CBRANCH (ram, 0x1d0910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x1, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1d0900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000f0, 8) , (const, 0x0, 8), (unique, 0x100000f0, 8) INT_AND (register, 0x0, 8) , (const, 0xf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0930, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x1, 1) SUBPIECE (unique, 0x10000798, 8) , (const, 0x0, 4), (unique, 0x10000798, 8) INT_RIGHT (register, 0x80, 8) , (const, 0x8, 4)]
[(unique, 0x10000800, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1d0920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000b8, 8) , (const, 0x0, 8), (unique, 0x100000b8, 8) INT_AND (register, 0x80, 8) , (const, 0xf000, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000800, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1d0910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x1, 1) , (const, 0x0, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000800, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1d0900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000c0, 8) , (const, 0x0, 8), (unique, 0x100000c0, 8) INT_AND (register, 0x80, 8) , (const, 0xf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000800, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
