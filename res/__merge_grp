[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1e2ab0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002fb, 8), (unique, 0x100002fb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002f3, 8), (unique, 0x100002f3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1e2ab0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000303, 8), (unique, 0x10000303, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000030b, 8) , (unique, 0xbc80, 4), (unique, 0x1000030b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1e2a9a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x88, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1e2a9a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3400, 8) , (register, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0xa0, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8), (register, 0xa0, 8) PTRADD (register, 0x88, 8) , (unique, 0x3100, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa0, 8) PTRADD (register, 0x88, 8) , (unique, 0x3100, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1e2c80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1e2bd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x8, 8)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002ab, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1e2b2b, 1)]
[(unique, 0x100002b3, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) COPY (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) MULTIEQUAL (unique, 0x100002ab, 8) , (unique, 0x100002b3, 8)]
[ ---  CBRANCH (ram, 0x1e2b28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) COPY (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) MULTIEQUAL (unique, 0x100002ab, 8) , (unique, 0x100002b3, 8)]
[ ---  CBRANCH (ram, 0x1e2bd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002d3, 8) COPY (unique, 0x3400, 8)]
[ ---  BRANCH (ram, 0x1e2b9a, 1)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1e2b68, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100002d3, 8) , (unique, 0x100002db, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0xb0, 8) , (register, 0x30, 8) , (unique, 0x3100, 8), (register, 0xb0, 8) PTRADD (register, 0x88, 8) , (register, 0xb0, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xb0, 8), (unique, 0x3400, 8) CAST (unique, 0x1000031b, 8), (unique, 0x1000031b, 8) INT_ADD (unique, 0x10000313, 8) , (register, 0xa0, 8), (unique, 0x10000313, 8) CAST (register, 0x0, 8), (register, 0xb0, 8) PTRADD (register, 0x88, 8) , (register, 0xb0, 8) , (const, 0x1, 8)]
[(unique, 0x100002db, 8) COPY (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1e2cb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000032b, 8), (unique, 0x1000032b, 8) INT_ADD (unique, 0x10000323, 8) , (register, 0xa0, 8), (unique, 0x10000323, 8) CAST (unique, 0xbd80, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x3580, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x1000033b, 8), (unique, 0x1000033b, 8) INT_ADD (unique, 0x10000333, 8) , (register, 0xa0, 8), (unique, 0x10000333, 8) CAST (stack, 0xffffffffffffffa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4), (unique, 0x3400, 8) PTRADD (register, 0x88, 8) , (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1e2d18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000218, 8) , (const, 0x0, 8), (unique, 0x10000218, 8) INT_AND (unique, 0x10000343, 8) , (const, 0x7, 8), (unique, 0x10000343, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x88, 8) , (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x88, 8) , (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) INT_SUB (register, 0x80, 8) , (register, 0x0, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1e2cc9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1e2bb7, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x80, 8) , (stack, 0xffffffffffffffb0, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffa0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x22, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffa0, 8)]
[ ---  CBRANCH (ram, 0x1e2a9a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000034b, 8) , (register, 0xa8, 8), (unique, 0x1000034b, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x88, 8) , (unique, 0x3400, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002cb, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000353, 8), (unique, 0x10000353, 8) INT_ADD (register, 0x10, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x1e2d28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000035b, 8), (unique, 0x1000035b, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1e29d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000373, 8), (unique, 0x10000373, 8) INT_ADD (unique, 0x1000036b, 8) , (unique, 0x10000363, 8), (unique, 0x1000036b, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000363, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100002c3, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1e2bd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x8, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002c3, 8) , (unique, 0x100002cb, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8) , (register, 0xa8, 8), (register, 0xa8, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x10000118, 8), (unique, 0x10000118, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) INT_SUB (register, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1e2bec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0xa8, 8) COPY (const, 0x8, 8)]
[(unique, 0x100002e3, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x1e2a7b, 1)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x1e2a40, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100002e3, 8) , (unique, 0x100002eb, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0xb8, 8) , (register, 0xb0, 8) , (unique, 0x3100, 8), (register, 0xb8, 8) CAST (unique, 0x1000037b, 8), (unique, 0x1000037b, 8) INT_ADD (register, 0xb8, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0xb8, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000038b, 8), (unique, 0x1000038b, 8) INT_ADD (unique, 0x10000383, 8) , (unique, 0x10000259, 8), (unique, 0x10000383, 8) CAST (register, 0x0, 8), (unique, 0x10000259, 8) INT_ADD (register, 0xa8, 8) , (unique, 0x10000251, 8), (unique, 0x10000251, 8) INT_SUB (register, 0xa8, 8) , (const, 0x8, 8), (register, 0xb8, 8) CAST (unique, 0x1000037b, 8), (unique, 0x1000037b, 8) INT_ADD (register, 0xb8, 8) , (register, 0x30, 8)]
[(register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)]
[(unique, 0x100002eb, 8) COPY (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1e2bf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000393, 8), (unique, 0x10000393, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0xa8, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003a3, 8), (unique, 0x100003a3, 8) INT_ADD (unique, 0x1000039b, 8) , (unique, 0x3480, 8), (unique, 0x1000039b, 8) CAST (register, 0x0, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x100003ab, 8), (unique, 0x100003ab, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1e2c21, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000210, 8) , (const, 0x0, 8), (unique, 0x10000210, 8) INT_AND (unique, 0x100003b3, 8) , (const, 0x7, 8), (unique, 0x100003b3, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003ab, 8), (unique, 0x100003ab, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3100, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x100003bb, 8), (unique, 0x100003bb, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x38, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1e2a90, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3400, 8) , (register, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3580, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (register, 0x0, 8) , (unique, 0x3580, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1e2750, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x88, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x22, 8)]
