[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000a7, 8), (unique, 0x100000a7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x30, 8) COPY (const, 0x2b3c79, 8)]
[(unique, 0x10000097, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x267199, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xfffffffffffffff0, 8)]
[(ram, 0x4eafd8, 8) MULTIEQUAL (ram, 0x4eafd8, 8) , (ram, 0x4eafd8, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x18, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10000097, 8) , (unique, 0x1000009f, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x88, 8) COPY (const, 0x2b3ed0, 8)]
[ ---  CBRANCH (ram, 0x26714c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x80, 8)]
[(register, 0x88, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x26715a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x2baf60, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x26716e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000af, 8), (unique, 0x100000af, 8) CAST (ram, 0x4eafd8, 8)]
[(register, 0x10, 8) COPY (const, 0x2b7477, 8)]
[ ---  CALL (ram, 0x165180, 8) , (const, 0x2, 4) , (unique, 0x1000007f, 8) , (register, 0x10, 8) , (register, 0x18, 8) , (register, 0x80, 8) , (register, 0x88, 8) , (register, 0x8, 8) , (register, 0x30, 8) , (register, 0x0, 8), (unique, 0x1000007f, 8) COPY (const, 0x2b748e, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[(register, 0x8, 8) INDIRECT (register, 0x8, 8) , (const, 0x89, 4), (register, 0x8, 8) INDIRECT (unique, 0x1000008f, 8) , (const, 0x7c, 4), (unique, 0x1000008f, 8) COPY (register, 0x18, 8)]
[(register, 0x38, 4) INDIRECT (register, 0x38, 4) , (const, 0x89, 4), (register, 0x38, 4) COPY (const, 0x7f, 4)]
[(register, 0x80, 8) INDIRECT (register, 0x80, 8) , (const, 0x89, 4), (register, 0x80, 8) INDIRECT (register, 0x80, 8) , (const, 0x7c, 4)]
[(ram, 0x4eafd8, 8) INDIRECT (ram, 0x4eafd8, 8) , (const, 0x89, 4), (ram, 0x4eafd8, 8) INDIRECT (ram, 0x4eafd8, 8) , (const, 0x7c, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x89, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x7c, 4)]
[ ---  CALL (ram, 0x1e4dd0, 8) , (const, 0x7f, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x80, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x18, 8)]
[(ram, 0x4eafd8, 8) INDIRECT (ram, 0x4eafd8, 8) , (const, 0x94, 4), (ram, 0x4eafd8, 8) MULTIEQUAL (ram, 0x4eafd8, 8) , (ram, 0x4eafd8, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x94, 4), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xfffffffffffffff0, 8)]
[(register, 0x0, 8) CALL (ram, 0x19dad0, 8) , (register, 0x38, 4) , (unique, 0x3800, 8) , (const, 0x400, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbe8, 8), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x30, 8) COPY (const, 0x2b3ed0, 8)]
[(unique, 0x1000009f, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x26712f, 1)]
