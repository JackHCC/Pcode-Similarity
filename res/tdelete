[(stack, 0xffffffffffffffb8, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (unique, 0x10000408, 8), (unique, 0x10000408, 8) CAST (register, 0x10, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe58, 8)]
[(register, 0xa0, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe60, 8)]
[ ---  CBRANCH (ram, 0x202956, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x202956, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000410, 8), (unique, 0x10000410, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc4, 4) COPY (const, 0x28, 4)]
[(unique, 0x100003f8, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x202911, 1)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x100003f8, 8) , (unique, 0xbd80, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x100000f9, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100000f1, 8)]
[(register, 0xa8, 8) INT_AND (register, 0x18, 8) , (const, 0xffffffff, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100000f1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000418, 8) , (const, 0x202921, 8), (unique, 0x10000418, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x69, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x68, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x69, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x68, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x69, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x68, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x69, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x68, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[ ---  CBRANCH (ram, 0x2029b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0x10000420, 8) , (unique, 0x10000320, 8) , (unique, 0xbd80, 8), (unique, 0x10000420, 8) CAST (unique, 0x10000318, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (unique, 0x10000318, 8) COPY (stack, 0xffffffffffffffb0, 8), (unique, 0x10000320, 8) COPY (stack, 0xffffffffffffffb8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x100000e9, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000438, 8), (unique, 0x10000438, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000428, 8), (unique, 0x10000428, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4)]
[(unique, 0x10000400, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000428, 8), (unique, 0x10000428, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x202a58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000430, 8), (unique, 0x10000430, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000428, 8), (unique, 0x10000428, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x202a58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0x10000388, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x202a5f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0x10000390, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000388, 8) , (unique, 0x10000390, 8)]
[ ---  CBRANCH (ram, 0x202cd1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (register, 0x30, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000440, 8), (unique, 0x10000440, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3680, 8) CAST (unique, 0x10000448, 8), (unique, 0x10000448, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (register, 0xa8, 4)]
[(unique, 0x10000338, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x10000358, 8) COPY (register, 0x20, 8)]
[(unique, 0x100003e8, 8) COPY (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x202a06, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x100003e8, 8) , (unique, 0x100003f0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000338, 8) , (unique, 0x10000340, 8)]
[(unique, 0x10000328, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3680, 8) , (register, 0x8, 8)]
[(unique, 0x10000350, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000358, 8) , (unique, 0x10000360, 8)]
[(unique, 0x10000398, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000400, 8) , (register, 0x80, 8)]
[(unique, 0x100003d8, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x2029e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc4, 4) , (register, 0xa8, 4), (register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000094, 8) , (const, 0x1, 8), (unique, 0x10000094, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffffc4, 4) , (const, 0x14, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000458, 8) , (const, 0x202a43, 8), (unique, 0x10000458, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000174, 8) , (const, 0x1, 8), (unique, 0x10000174, 8) INT_ADD (unique, 0x10000094, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000094, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffffc4, 4) , (const, 0x14, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x199, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x198, 4), (stack, 0xffffffffffffffc4, 4) COPY (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffffc4, 4) , (const, 0x14, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000460, 8), (unique, 0x10000460, 8) CALL (ram, 0x193a40, 8) , (register, 0x38, 8) , (register, 0xa0, 8) , (register, 0x8, 8), (register, 0x38, 8) INT_AND (unique, 0x10000450, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000450, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000016c, 8) , (const, 0x1, 8), (unique, 0x1000016c, 8) INT_ADD (unique, 0x10000094, 8) , (const, 0xf, 8), (unique, 0x10000094, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffffc4, 4) , (const, 0x14, 4)]
[(unique, 0x10000330, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x199, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x198, 4), (stack, 0xffffffffffffffb8, 8) COPY (register, 0x8, 8)]
[(unique, 0x100003a0, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x199, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x198, 4), (stack, 0xffffffffffffffa8, 8) COPY (register, 0x80, 8)]
[(unique, 0x100003e0, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x199, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x198, 4), (stack, 0xffffffffffffffb0, 8) COPY (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x2029e0, 1)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x100003d8, 8) , (unique, 0x100003e0, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000398, 8) , (unique, 0x100003a0, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000350, 8) , (register, 0x20, 8)]
[(register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4), (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1b5, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1b5, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1b5, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x1b5, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000478, 8) , (register, 0xb0, 8), (unique, 0x10000478, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (unique, 0x10000470, 8) , (const, 0x1, 8), (unique, 0x10000470, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000328, 8) , (unique, 0x10000330, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x0, 8)]
[(register, 0x8, 8) CAST (unique, 0x10000488, 8), (unique, 0x10000488, 8) INT_ADD (unique, 0x10000480, 8) , (const, 0x8, 8), (unique, 0x10000480, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000328, 8) , (unique, 0x10000330, 8)]
[ ---  CBRANCH (ram, 0x202c28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000468, 8), (unique, 0x10000468, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000490, 8), (unique, 0x10000490, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x10000348, 8) COPY (register, 0x18, 8)]
[(unique, 0x100003a8, 8) COPY (register, 0x80, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x100003a8, 8) , (unique, 0x10000400, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x202cd9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004a0, 8), (unique, 0x100004a0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000498, 8), (unique, 0x10000498, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xa0, 8) , (unique, 0x100002b4, 8) , (const, 0x1, 8), (unique, 0x100002b4, 8) INT_ADD (unique, 0x3900, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (register, 0xa8, 4), (register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000348, 8) , (unique, 0xbd80, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) CAST (unique, 0x100004a8, 8), (unique, 0x100004a8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[(unique, 0x100003c8, 8) COPY (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x202a6e, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) CAST (unique, 0x100004b0, 8), (unique, 0x100004b0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(unique, 0x100003c0, 8) COPY (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x202a6e, 1)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x202a79, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (unique, 0xbd80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100003c0, 8) , (unique, 0x100003c8, 8) , (unique, 0x10000400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x202b39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100004b8, 8), (unique, 0x100004b8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0x10000370, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x202ce2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4), (register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x202c18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x202a9b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000370, 8) , (unique, 0x10000378, 8)]
[(unique, 0x10000380, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x202c18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100004c0, 8), (unique, 0x100004c0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x202ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8), (unique, 0xbd80, 8) CAST (unique, 0x100004d8, 8), (unique, 0x100004d8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x100004d0, 8), (unique, 0x100004d0, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004c8, 8), (unique, 0x100004c8, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xa0, 8) , (unique, 0x1000018c, 8) , (const, 0x1, 8), (unique, 0x1000018c, 8) INT_ADD (unique, 0x3900, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3900, 8) INT_MULT (register, 0x88, 8) , (const, 0x8, 8), (register, 0x88, 8) INT_SEXT (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x202ae5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100004e0, 8), (unique, 0x100004e0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004e8, 8) , (register, 0x8, 1), (unique, 0x100004e8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x8, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xfe, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004f8, 8) , (unique, 0xbb00, 1), (unique, 0x100004f8, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100004f0, 8), (unique, 0x100004f0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0x10000500, 8), (unique, 0x10000500, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000508, 8), (unique, 0x10000508, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x283, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x283, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x283, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x283, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000510, 8) , (unique, 0x3100, 8), (unique, 0x10000510, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x202b58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x202b58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000518, 8), (unique, 0x10000518, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x202c00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x202c00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000520, 8), (unique, 0x10000520, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x202b03, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x202b6f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000528, 8), (unique, 0x10000528, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 1), (unique, 0x3100, 8) CAST (unique, 0x10000540, 8), (unique, 0x10000540, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (register, 0x30, 1) INT_OR (register, 0x30, 1) , (register, 0x88, 1), (register, 0x88, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xfe, 1), (register, 0x30, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000538, 8), (unique, 0x10000538, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000530, 8), (unique, 0x10000530, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000548, 8), (unique, 0x10000548, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000550, 8), (unique, 0x10000550, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000558, 8), (unique, 0x10000558, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000560, 8), (unique, 0x10000560, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000570, 8) , (unique, 0xba80, 1), (unique, 0x10000570, 8) CAST (unique, 0x3100, 8), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xfe, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000568, 8), (unique, 0x10000568, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000588, 8) , (register, 0x88, 1), (unique, 0x10000588, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x88, 1) INT_OR (register, 0x88, 1) , (register, 0x90, 1), (register, 0x90, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xfe, 1), (register, 0x88, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000580, 8), (unique, 0x10000580, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000578, 8), (unique, 0x10000578, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000598, 8) , (unique, 0xba80, 1), (unique, 0x10000598, 8) CAST (unique, 0x3100, 8), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xfe, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000590, 8), (unique, 0x10000590, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xba80, 1), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xfe, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005a0, 8), (unique, 0x100005a0, 8) INT_ADD (register, 0x30, 8) , (const, 0x18, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x100005a8, 8), (unique, 0x100005a8, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x202b39, 1)]
[ ---  CBRANCH (ram, 0x202bd6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005b8, 8), (unique, 0x100005b8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x100005b0, 8), (unique, 0x100005b0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005c0, 8) , (register, 0x8, 1), (unique, 0x100005c0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x8, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xfe, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005d0, 8) , (unique, 0xbb00, 1), (unique, 0x100005d0, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005c8, 8), (unique, 0x100005c8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0x100005d8, 8), (unique, 0x100005d8, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100005e0, 8), (unique, 0x100005e0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3f8, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3f8, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3f8, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x3f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005e8, 8) , (unique, 0x3100, 8), (unique, 0x100005e8, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x202be5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x202c50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005f0, 8), (unique, 0x100005f0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x202c5f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x202ca0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005f8, 8), (unique, 0x100005f8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 1), (unique, 0x3100, 8) CAST (unique, 0x10000610, 8), (unique, 0x10000610, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (register, 0x30, 1) INT_OR (register, 0x30, 1) , (register, 0x88, 1), (register, 0x88, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xfe, 1), (register, 0x30, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000608, 8), (unique, 0x10000608, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000600, 8), (unique, 0x10000600, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000618, 8), (unique, 0x10000618, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000620, 8), (unique, 0x10000620, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000628, 8), (unique, 0x10000628, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000630, 8), (unique, 0x10000630, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000640, 8) , (unique, 0xba80, 1), (unique, 0x10000640, 8) CAST (unique, 0x3100, 8), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xfe, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000638, 8), (unique, 0x10000638, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x202b39, 1)]
[ ---  CBRANCH (ram, 0x202c00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x202ca0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000648, 8), (unique, 0x10000648, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000660, 8) , (register, 0x88, 1), (unique, 0x10000660, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x88, 1) INT_OR (register, 0x88, 1) , (register, 0x90, 1), (register, 0x90, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xfe, 1), (register, 0x88, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000658, 8), (unique, 0x10000658, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000650, 8), (unique, 0x10000650, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000670, 8) , (unique, 0xba80, 1), (unique, 0x10000670, 8) CAST (unique, 0x3100, 8), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xfe, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000668, 8), (unique, 0x10000668, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xba80, 1), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xfe, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000678, 8), (unique, 0x10000678, 8) INT_ADD (register, 0x30, 8) , (const, 0x18, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x10000680, 8), (unique, 0x10000680, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x202b39, 1)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000690, 8) , (unique, 0xbb00, 1), (unique, 0x10000690, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000688, 8), (unique, 0x10000688, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4), (register, 0xa8, 4) INT_SUB (register, 0xa8, 4) , (const, 0x1, 4), (register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4)]
[(unique, 0x10000378, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x202a8c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x0, 4), (register, 0xa8, 4) INT_SUB (register, 0xa8, 4) , (const, 0x1, 4), (register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006a0, 8) , (unique, 0xba80, 1), (unique, 0x100006a0, 8) CAST (unique, 0x3100, 8), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xfe, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000698, 8), (unique, 0x10000698, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000380, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x202b39, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006a8, 8) , (const, 0x202b41, 8), (unique, 0x100006a8, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x306, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x305, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x306, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x305, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x306, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x305, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x306, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x305, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xb8, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100006b0, 8), (unique, 0x100006b0, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000340, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x10000360, 8) COPY (register, 0x20, 8)]
[(unique, 0x100003f0, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x202970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc4, 4) , (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006d0, 8) , (const, 0x2029a7, 8), (unique, 0x100006d0, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000013c, 8) , (const, 0x1, 8), (unique, 0x1000013c, 8) INT_ADD (unique, 0x10000080, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000080, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffffc4, 4) , (const, 0x14, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x120, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x11f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x120, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x11f, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x120, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x11f, 4), (stack, 0xffffffffffffffc4, 4) COPY (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffffc4, 4) , (const, 0x14, 4)]
[(register, 0x0, 8) CAST (unique, 0x100006d8, 8), (unique, 0x100006d8, 8) CALL (ram, 0x193a40, 8) , (register, 0x38, 8) , (register, 0xa0, 8) , (unique, 0x3680, 8), (register, 0x38, 8) INT_AND (unique, 0x100006c8, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100006c8, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000134, 8) , (const, 0x1, 8), (unique, 0x10000134, 8) INT_ADD (unique, 0x10000080, 8) , (const, 0xf, 8), (unique, 0x10000080, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbd00, 4), (unique, 0x3680, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffffc4, 4) , (const, 0x14, 4)]
[(stack, 0xffffffffffffffa8, 4) SUBPIECE (stack, 0xffffffffffffffa8, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x120, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x11f, 4), (stack, 0xffffffffffffffa8, 8) CAST (unique, 0x100006c0, 8), (unique, 0x100006c0, 8) INT_OR (unique, 0x100000cb, 8) , (unique, 0x100000d3, 8), (unique, 0x100000d3, 8) INT_ZEXT (register, 0x0, 4), (unique, 0x100000cb, 8) INT_AND (unique, 0x100006b8, 8) , (const, 0xffffffff00000000, 8), (unique, 0x100006b8, 8) CAST (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000368, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000080, 8) , (const, 0x1, 8), (unique, 0x10000080, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffffc4, 4) , (const, 0x14, 4)]
[ ---  BRANCH (ram, 0x202939, 1)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000368, 8) , (register, 0x20, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x92, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x92, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x92, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x92, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006e4, 8) , (register, 0xb0, 8), (unique, 0x100006e4, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (register, 0xa8, 8) , (const, 0x1, 8), (register, 0xa8, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xa0, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100006ec, 8), (unique, 0x100006ec, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x202900, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100006e0, 4) , (const, 0x0, 4), (unique, 0x100006e0, 4) CAST (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (register, 0x0, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x100006f4, 8), (unique, 0x100006f4, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100006fc, 8), (unique, 0x100006fc, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000704, 8), (unique, 0x10000704, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x1000070c, 8), (unique, 0x1000070c, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x100000f9, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x100000f1, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x202956, 1) , (unique, 0x10000101, 1), (unique, 0x10000101, 1) INT_EQUAL (unique, 0x100000e9, 8) , (const, 0x0, 8), (unique, 0x100000e9, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
