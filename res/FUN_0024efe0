[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x24f035, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000152, 8), (unique, 0x10000152, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000015a, 8), (unique, 0x1000015a, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0x10000122, 8) COPY (register, 0x30, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000122, 8) , (unique, 0x1000012a, 8) , (unique, 0x10000132, 8)]
[(unique, 0x1000013a, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0x100000a7, 4) , (unique, 0x100000af, 4), (unique, 0x100000a7, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x100000af, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x24f00d, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x28, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0x100000a7, 4) , (unique, 0x100000af, 4), (unique, 0x100000a7, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x100000af, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x28, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x28, 4) , (register, 0x28, 4), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x1000013e, 4) COPY (register, 0x28, 4)]
[(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x1000013a, 4) , (unique, 0x1000013e, 4)]
[(register, 0xb0, 8) CAST (unique, 0x1000016a, 8), (unique, 0x1000016a, 8) INT_ADD (unique, 0x10000162, 8) , (register, 0xa0, 8), (unique, 0x10000162, 8) CAST (register, 0xb0, 8), (register, 0xa0, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x1000013a, 4) , (unique, 0x1000013e, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (register, 0xb0, 8) , (register, 0xa0, 8), (register, 0xa0, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x1000013a, 4) , (unique, 0x1000013e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x38, 8) CAST (unique, 0x1000017a, 8), (unique, 0x1000017a, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x1000013a, 4) , (unique, 0x1000013e, 4)]
[ ---  CBRANCH (ram, 0x24f048, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0xbd80, 8), (register, 0x38, 8) CAST (unique, 0x1000017a, 8), (unique, 0x1000017a, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000172, 8), (unique, 0x10000172, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x1000013a, 4) , (unique, 0x1000013e, 4)]
[(unique, 0x1000012a, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x24f000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x24f035, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000018a, 8) , (const, 0x1, 4), (unique, 0x1000018a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_MULT (register, 0x0, 4) , (const, 0x1000000, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (register, 0x0, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (register, 0x0, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x18, 4), (register, 0x0, 4) INT_SUB (unique, 0x10000086, 4) , (const, 0x4, 4), (unique, 0x10000086, 4) INT_SUB (unique, 0x1000008e, 4) , (unique, 0x10000096, 4), (unique, 0x1000008e, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (unique, 0x10000096, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) CAST (unique, 0x10000182, 8), (unique, 0x10000182, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x24f090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x100001aa, 8), (unique, 0x100001aa, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_AND (unique, 0x100001a2, 8) , (const, 0xffffffff, 8), (unique, 0x100001a2, 8) CAST (register, 0x18, 8), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) CAST (unique, 0x1000019a, 8), (unique, 0x1000019a, 8) INT_SUB (unique, 0x10000192, 8) , (unique, 0xbd80, 8), (unique, 0x10000192, 8) CAST (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100001b2, 8), (unique, 0x100001b2, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x38, 8) CAST (unique, 0x100001ba, 8), (unique, 0x100001ba, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0x10000132, 8) COPY (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x24f000, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
