[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002ad, 8), (unique, 0x100002ad, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18beb8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002bd, 8), (unique, 0x100002bd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002b5, 8), (unique, 0x100002b5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18c060, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002c5, 8), (unique, 0x100002c5, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x282, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x282, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x282, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x282, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18bee2, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x8e, 4), (stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x8e, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x100002a5, 8) COPY (stack, 0xffffffffffffff68, 8), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x8e, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(register, 0x30, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100002e5, 8), (unique, 0x100002e5, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002dd, 8), (unique, 0x100002dd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002d5, 8), (unique, 0x100002d5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18bf14, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002cd, 8), (unique, 0x100002cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x90, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[ ---  CBRANCH (ram, 0x18bf98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x8000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff50, 4) , (const, 0xf000, 4)]
[ ---  CBRANCH (ram, 0x18bf14, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff68, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc3, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xc3, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x128, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x128, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x128, 4)]
[ ---  CBRANCH (ram, 0x18c080, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x8, 8), (register, 0x10, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x8, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x30, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x8, 8) INT_2COMP (register, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100002a5, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x216da0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x26c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x26c, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (register, 0x10, 8), (register, 0x38, 8) CAST (unique, 0x100002f5, 8), (unique, 0x100002f5, 8) INT_ADD (unique, 0x100002ed, 8) , (register, 0x10, 8), (unique, 0x100002ed, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000030d, 8) , (register, 0xa8, 8), (unique, 0x1000030d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_ADD (stack, 0xffffffffffffff68, 8) , (unique, 0x10000305, 8), (unique, 0x10000305, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002fd, 8), (unique, 0x100002fd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x26c, 4)]
[ ---  BRANCH (ram, 0x18bfeb, 1)]
[ ---  CBRANCH (ram, 0x18c0a0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x226, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x226, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x226, 4)]
[ ---  CBRANCH (ram, 0x18c0ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x2223f0, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x256, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x256, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x10000325, 8), (unique, 0x10000325, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000031d, 8), (unique, 0x1000031d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000315, 8), (unique, 0x10000315, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18bf19, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000032d, 8) , (const, 0x0, 8), (unique, 0x1000032d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000335, 8) , (const, 0x0, 8), (unique, 0x10000335, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000033d, 8) , (const, 0x0, 8), (unique, 0x1000033d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000345, 8) , (const, 0x0, 8), (unique, 0x10000345, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000034d, 8) , (const, 0x0, 8), (unique, 0x1000034d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e82a0, 8)]
[ ---  CBRANCH (ram, 0x18bf5b, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x10000355, 4), (unique, 0x10000355, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7d60, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000359, 8) , (register, 0x0, 8), (unique, 0x10000359, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x10000174, 8), (unique, 0x10000174, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7d60, 8), (unique, 0x3200, 8) CAST (unique, 0x10000369, 8), (unique, 0x10000369, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x130, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000361, 8), (unique, 0x10000361, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18c0e0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000371, 8), (unique, 0x10000371, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x112, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x112, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18bf86, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x10e, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000379, 8), (unique, 0x10000379, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x18be8d, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000381, 8) , (register, 0x0, 8), (unique, 0x10000381, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000391, 8) , (register, 0xa8, 8), (unique, 0x10000391, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_ADD (stack, 0xffffffffffffff68, 8) , (unique, 0x10000389, 8), (unique, 0x10000389, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x18bfeb, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003a1, 8) , (register, 0xa8, 8), (unique, 0x100003a1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_ADD (unique, 0x100002a5, 8) , (unique, 0x10000399, 8), (unique, 0x10000399, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003c9, 8) , (register, 0x38, 8), (unique, 0x100003c9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003d1, 8) , (register, 0x8, 8), (unique, 0x100003d1, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003b9, 8), (unique, 0x100003b9, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003b1, 8), (unique, 0x100003b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003a9, 8), (unique, 0x100003a9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18c070, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x30, 8) INT_SUB (register, 0xa8, 8) , (unique, 0x100003c1, 8), (unique, 0x100003c1, 8) CAST (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003b9, 8), (unique, 0x100003b9, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003b1, 8), (unique, 0x100003b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003a9, 8), (unique, 0x100003a9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003d9, 8) , (register, 0xa8, 8), (unique, 0x100003d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003e1, 8) , (register, 0xa8, 8), (unique, 0x100003e1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18c050, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003f1, 8) , (register, 0xa8, 8), (unique, 0x100003f1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003f9, 8) , (register, 0x38, 8), (unique, 0x100003f9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ADD (unique, 0x100003e9, 8) , (register, 0x8, 8), (unique, 0x100003e9, 8) CAST (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c2, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1c2, 4)]
[ ---  CBRANCH (ram, 0x18c0ca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000409, 8), (unique, 0x10000409, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000401, 8), (unique, 0x10000401, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x210210, 8) , (unique, 0xbc80, 4) , (register, 0x30, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000411, 8) , (register, 0x0, 8), (unique, 0x10000411, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18c03c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x20, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18be8a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000421, 8), (unique, 0x10000421, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000419, 8), (unique, 0x10000419, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x10, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x18be8d, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18c0ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000429, 8), (unique, 0x10000429, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x60, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
