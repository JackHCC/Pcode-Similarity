[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000084c, 8), (unique, 0x1000084c, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1f23e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x7, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000844, 8), (unique, 0x10000844, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x38, 8) CAST (unique, 0x1000083c, 8), (unique, 0x1000083c, 8) INT_ADD (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000085c, 8), (unique, 0x1000085c, 8) INT_ADD (register, 0x8, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f21c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000854, 8), (unique, 0x10000854, 8) INT_ADD (register, 0x8, 8) , (const, 0x68, 8)]
[ ---  CBRANCH (ram, 0x1f21c0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000864, 8), (unique, 0x10000864, 8) INT_ADD (register, 0x8, 8) , (const, 0x2c, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f21c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000086c, 8), (unique, 0x1000086c, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5, 1)]
[(unique, 0x100004d1, 1) COPY (const, 0x1, 1)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1f210a, 1)]
[(register, 0xa0, 8) INT_SEXT (register, 0x80, 4)]
[(unique, 0x3a00, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3680, 8)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x80, 4)]
[ ---  BRANCH (ram, 0x1f20f4, 1)]
[(register, 0x18, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f20e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f20fb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000874, 8), (unique, 0x10000874, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x3a00, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f21a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5, 1)]
[ ---  CBRANCH (ram, 0x1f21d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000c1, 8) , (const, 0x0, 8), (unique, 0x100000c1, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1f21af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xa, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000884, 8), (unique, 0x10000884, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000087c, 8), (unique, 0x1000087c, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0x100006e9, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1f217e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000c9, 8) , (const, 0x0, 8), (unique, 0x100000c9, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000894, 8), (unique, 0x10000894, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000088c, 8), (unique, 0x1000088c, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0x100004d2, 1) COPY (const, 0x0, 1)]
[(unique, 0x100004d0, 1) MULTIEQUAL (unique, 0x100004d2, 1) , (unique, 0x100004d1, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0xa0, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1f216f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100008ac, 8), (unique, 0x100008ac, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100008a4, 8), (unique, 0x100008a4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000089c, 8), (unique, 0x1000089c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eadc8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) CAST (unique, 0x100008bc, 8), (unique, 0x100008bc, 8) INT_ADD (register, 0x10, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) INT_SEXT (register, 0x80, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100008b4, 8), (unique, 0x100008b4, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f2250, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100008cc, 8), (unique, 0x100008cc, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100008c4, 8), (unique, 0x100008c4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x50, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100008bc, 8), (unique, 0x100008bc, 8) INT_ADD (register, 0x10, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) INT_SEXT (register, 0x80, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100008b4, 8), (unique, 0x100008b4, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) CAST (unique, 0x100008dc, 8), (unique, 0x100008dc, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100008d4, 8), (unique, 0x100008d4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x60, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100008e4, 8), (unique, 0x100008e4, 8) INT_ADD (register, 0x8, 8) , (const, 0x40, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (unique, 0x3400, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(unique, 0x3100, 8) INT_ADD (unique, 0x100008f4, 8) , (const, 0x5, 8), (unique, 0x100008f4, 8) CAST (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (unique, 0x3400, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(unique, 0x10000819, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100008ec, 8), (unique, 0x100008ec, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (unique, 0x3400, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1f2286, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100008ec, 8), (unique, 0x100008ec, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (unique, 0x3400, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(unique, 0x10000821, 8) COPY (unique, 0x3100, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000819, 8) , (unique, 0x10000821, 8)]
[ ---  CBRANCH (ram, 0x1f22e8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x0, 4)]
[(unique, 0x100007d9, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1f2319, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f2490, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000904, 8), (unique, 0x10000904, 8) INT_ADD (unique, 0x100008fc, 8) , (const, 0x5, 8), (unique, 0x100008fc, 8) CAST (register, 0x88, 8)]
[(unique, 0x100007e9, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f2319, 1)]
[(unique, 0x100007b9, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f2310, 1)]
[(unique, 0x100007e1, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1f2300, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0xa0, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100007b9, 8) , (unique, 0x100007c1, 8)]
[(unique, 0x100007c1, 8) COPY (register, 0x38, 8)]
[(unique, 0x100007f1, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f23d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000090c, 8), (unique, 0x1000090c, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000050b, 8) , (const, 0x1, 8), (unique, 0x1000050b, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1f2381, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100007d9, 8) , (unique, 0x100007e1, 8) , (unique, 0x100007e9, 8) , (unique, 0x100007f1, 8)]
[ ---  CBRANCH (ram, 0x1f23b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1f23b0, 1) , (unique, 0x100006a3, 1), (unique, 0x100006a3, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x200, 1) INT_LESS (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000914, 8), (unique, 0x10000914, 8) INT_ADD (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0xa0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f2381, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f23a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x3400, 8) CAST (unique, 0x1000091c, 8), (unique, 0x1000091c, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8)]
[(unique, 0x100007a9, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f2378, 1)]
[ ---  CBRANCH (ram, 0x1f2368, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100007a9, 8) , (unique, 0x100007b1, 8)]
[(unique, 0x100007b1, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f23a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000513, 8) , (const, 0x1, 8), (unique, 0x10000513, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f2381, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x88, 1) , (register, 0xa0, 1), (register, 0x88, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (register, 0xa0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbd80, 8) PTRADD (unique, 0x3100, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1f2157, 1)]
[(register, 0x88, 8) CAST (unique, 0x10000924, 8), (unique, 0x10000924, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8), (register, 0x88, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000171, 4) , (const, 0x1, 4), (unique, 0x10000171, 4) SUBPIECE (unique, 0x10000169, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (unique, 0x10000169, 8) , (const, 0x4, 8), (unique, 0x10000169, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1f2270, 1)]
[(unique, 0x100007f9, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1f22c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f2488, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000934, 8), (unique, 0x10000934, 8) INT_ADD (unique, 0x1000092c, 8) , (const, 0x5, 8), (unique, 0x1000092c, 8) CAST (register, 0x88, 8)]
[(unique, 0x10000809, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f22c1, 1)]
[(unique, 0x100007c9, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f22b8, 1)]
[(unique, 0x10000801, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1f22a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0xa0, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100007c9, 8) , (unique, 0x100007d1, 8)]
[(unique, 0x100007d1, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000811, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f2390, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000093c, 8), (unique, 0x1000093c, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000503, 8) , (const, 0x1, 8), (unique, 0x10000503, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1f2498, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (register, 0x0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100007f9, 8) , (unique, 0x10000801, 8) , (unique, 0x10000809, 8) , (unique, 0x10000811, 8)]
[(unique, 0xbd80, 8) PTRADD (unique, 0x3100, 8) , (register, 0xa0, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1f2157, 1)]
[(unique, 0x3400, 8) CAST (unique, 0x10000944, 8), (unique, 0x10000944, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000122, 4) , (const, 0x1, 4), (unique, 0x10000122, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1f2270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000122, 4) , (const, 0x1, 4), (unique, 0x10000122, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(register, 0x88, 8) CAST (unique, 0x10000954, 8), (unique, 0x10000954, 8) INT_ADD (unique, 0x1000094c, 8) , (register, 0x30, 8), (unique, 0x1000094c, 8) CAST (unique, 0x3400, 8), (register, 0x30, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f2270, 1)]
[(unique, 0x100004cf, 1) CAST (unique, 0x10000960, 1), (unique, 0x10000960, 1) INT_AND (unique, 0x100004d0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x1000095c, 4) , (const, 0x2, 4), (unique, 0x1000095c, 4) CAST (register, 0xa0, 4), (register, 0xa0, 4) INT_SUB (register, 0xa0, 4) , (register, 0x80, 4), (register, 0xa0, 4) INT_SUB (unique, 0x100000a3, 4) , (unique, 0x100000ab, 4), (unique, 0x100000a3, 4) SUBPIECE (stack, 0xffffffffffffff80, 8) , (const, 0x0, 4), (unique, 0x100000ab, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100004cd, 1) MULTIEQUAL (unique, 0x100004d0, 1) , (unique, 0x100004cf, 1)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6, 1)]
[ ---  CBRANCH (ram, 0x1f21e8, 1) , (unique, 0x100004ce, 1), (unique, 0x100004ce, 1) BOOL_NEGATE (unique, 0x100004cd, 1)]
[(register, 0xb8, 8) CAST (unique, 0x10000971, 8), (unique, 0x10000971, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_SEXT (register, 0x80, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000969, 8), (unique, 0x10000969, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000981, 8), (unique, 0x10000981, 8) INT_ADD (unique, 0x10000979, 8) , (const, 0x34, 8), (unique, 0x10000979, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000961, 8), (unique, 0x10000961, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f2430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000961, 8), (unique, 0x10000961, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f2204, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f2576, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[ ---  BRANCH (ram, 0x1f2211, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000989, 8), (unique, 0x10000989, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1f243a, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1f2471, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (register, 0x0, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100006b9, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1f2245, 1)]
[ ---  CBRANCH (ram, 0x1f2238, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100006b9, 8) , (unique, 0x100006c1, 8)]
[(unique, 0x100006c1, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f2471, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x28, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1f24bc, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000999, 8), (unique, 0x10000999, 8) INT_ADD (unique, 0x10000991, 8) , (const, 0x44, 8), (unique, 0x10000991, 8) CAST (unique, 0xbd80, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f245e, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x23c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x23c, 4), (ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x23c, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x23c, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffb4, 8) INDIRECT (stack, 0xffffffffffffffb4, 8) , (const, 0x23c, 4), (stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x23c, 4), (stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x23c, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1f2450, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x225730, 8) , (register, 0x28, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100009a1, 8), (unique, 0x100009a1, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000523, 8) , (const, 0x4, 8), (unique, 0x10000523, 8) INT_MULT (register, 0xb0, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f24a5, 1) , (unique, 0x10000433, 1), (unique, 0x10000433, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_SLESSEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100009b1, 8), (unique, 0x100009b1, 8) INT_ADD (unique, 0x100009a9, 8) , (const, 0x44, 8), (unique, 0x100009a9, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 4) INT_ADD (unique, 0x1000019c, 4) , (const, 0x1, 4), (unique, 0x1000019c, 4) SUBPIECE (register, 0xb0, 8) , (const, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100009c9, 8), (unique, 0x100009c9, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100009c1, 8), (unique, 0x100009c1, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100009b9, 8), (unique, 0x100009b9, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eadc8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f257f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff94, 4) , (const, 0x0, 4), (stack, 0xffffffffffffff94, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffa8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb4, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffbc, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000830, 4) COPY (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x1f260d, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100009d1, 8), (unique, 0x100009d1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0xb8, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[ ---  BRANCH (ram, 0x1f25ce, 1)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9bf, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x9bf, 4), (ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x9bf, 4), (stack, 0xffffffffffffffa8, 8) INT_OR (unique, 0x10000442, 8) , (unique, 0x1000044a, 8), (unique, 0x1000044a, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0x10000442, 8) INT_AND (stack, 0xffffffffffffffa8, 8) , (const, 0xffffffff00000000, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100009e1, 8), (unique, 0x100009e1, 8) INT_ADD (unique, 0x100009d9, 8) , (register, 0x28, 8), (unique, 0x100009d9, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x9bf, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (unique, 0x10000830, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffb4, 8) INDIRECT (stack, 0xffffffffffffffb4, 8) , (const, 0x9bf, 4), (stack, 0xffffffffffffffb4, 8) INT_OR (unique, 0x10000452, 8) , (unique, 0x10000462, 8), (unique, 0x10000462, 8) INT_LEFT (unique, 0x1000045a, 8) , (const, 0x20, 4), (unique, 0x1000045a, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0x10000452, 8) INT_AND (stack, 0xffffffffffffffb4, 8) , (const, 0xffffffff, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100009f1, 8), (unique, 0x100009f1, 8) INT_ADD (unique, 0x100009e9, 8) , (register, 0x28, 8), (unique, 0x100009e9, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8), (stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x9bf, 4), (stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9bf, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1f25c0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALL (ram, 0x1c7a80, 8) , (unique, 0x100009f9, 8) , (unique, 0x10000a01, 8), (unique, 0x10000a01, 8) CAST (unique, 0x3100, 8), (unique, 0x100009f9, 8) CAST (unique, 0x3800, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9d2, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x9d2, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x9d2, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x9d2, 4)]
[(stack, 0xffffffffffffffb4, 8) INDIRECT (stack, 0xffffffffffffffb4, 8) , (const, 0x9d2, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x9d2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9d2, 4)]
[ ---  CBRANCH (ram, 0x1f25c0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALL (ram, 0x1c7a80, 8) , (unique, 0x10000a19, 8) , (unique, 0x3100, 8), (unique, 0x10000a19, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a11, 8), (unique, 0x10000a11, 8) INT_ADD (unique, 0x10000a09, 8) , (const, 0x4, 8), (unique, 0x10000a09, 8) CAST (unique, 0x100005ab, 8), (unique, 0x100005ab, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb4, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100006e1, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1f217e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000a21, 8), (unique, 0x10000a21, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f2608, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0xb8, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000a29, 8), (unique, 0x10000a29, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (unique, 0x10000830, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000a31, 8), (unique, 0x10000a31, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f261d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000a39, 8), (unique, 0x10000a39, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000a41, 8), (unique, 0x10000a41, 8) INT_ADD (register, 0xb0, 8) , (const, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1f261d, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4)]
[(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) INT_ZEXT (unique, 0x3800, 4), (unique, 0x3800, 4) INT_SUB (register, 0xa0, 4) , (const, 0x1, 4)]
[(unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000553, 8) , (const, 0x4, 8), (unique, 0x10000553, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1f250d, 1)]
[ ---  CBRANCH (ram, 0x1f2500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (register, 0xa0, 4), (register, 0x88, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000a4d, 8), (unique, 0x10000a4d, 8) INT_ADD (register, 0x10, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000a49, 4), (unique, 0x10000a49, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f2838, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000a55, 4) , (const, 0x1, 4), (unique, 0x10000a55, 4) CAST (register, 0xa0, 4)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f254e, 1)]
[ ---  CBRANCH (ram, 0x1f2500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1f2547, 1)]
[(register, 0x38, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f2538, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f254e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xb8, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f2500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (register, 0x38, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f261d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3a00, 8) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f2673, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000a59, 8), (unique, 0x10000a59, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f2847, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x18, 4) , (unique, 0x10000a61, 4), (unique, 0x10000a61, 4) CAST (register, 0xa0, 4)]
[(register, 0x30, 8) INT_SEXT (unique, 0x10000a75, 4), (unique, 0x10000a75, 4) CAST (register, 0xa0, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1f263c, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0x10000481, 4) , (unique, 0x10000489, 4), (unique, 0x10000481, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x10000489, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000a6d, 8), (unique, 0x10000a6d, 8) INT_ADD (register, 0xb0, 8) , (const, 0xc0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000a65, 8), (unique, 0x10000a65, 8) INT_ADD (register, 0xb0, 8) , (const, 0xb8, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x1f2897, 1)]
[(unique, 0x10000494, 1) COPY (const, 0x0, 1)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000a79, 8), (unique, 0x10000a79, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f286e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000a81, 8), (unique, 0x10000a81, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000a79, 8), (unique, 0x10000a79, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f2b5c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f2b5c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) CAST (unique, 0x10000a89, 8), (unique, 0x10000a89, 8) INT_ADD (register, 0x80, 8) , (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0x80, 8) INT_SEXT (unique, 0x3100, 4)]
[(register, 0x90, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x1f28f7, 1)]
[(register, 0x98, 8) INT_ADD (register, 0x98, 8) , (const, 0x1, 8), (register, 0x98, 8) INT_ZEXT (register, 0x98, 4), (register, 0x98, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4)]
[(unique, 0x100006a9, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1f28ef, 1)]
[(unique, 0x100004be, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x100006a9, 8) , (unique, 0x100006b1, 8)]
[ ---  CBRANCH (ram, 0x1f28df, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100006a9, 8) , (unique, 0x100006b1, 8)]
[(unique, 0x100006b1, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f28f7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x90, 4), (register, 0x90, 4) MULTIEQUAL (unique, 0x100004be, 4) , (unique, 0x100004be, 4) , (register, 0x90, 4)]
[ ---  BRANCH (ram, 0x1f286e, 1)]
[(unique, 0x3a00, 4) INT_ADD (unique, 0x3880, 4) , (unique, 0x3900, 4), (unique, 0x3900, 4) INT_MULT (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0x3880, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000a95, 8), (unique, 0x10000a95, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000a91, 4), (unique, 0x10000a91, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffc, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000029d, 4) , (register, 0x10, 4), (unique, 0x1000029d, 4) INT_ADD (register, 0x0, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x1f2b35, 1) , (unique, 0x10000492, 1), (unique, 0x10000492, 1) MULTIEQUAL (unique, 0x10000494, 1) , (register, 0x206, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000a9d, 8), (unique, 0x10000a9d, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3a00, 4)]
[ ---  BRANCH (ram, 0x1f263c, 1)]
[ ---  CBRANCH (ram, 0x1f2b2d, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) INT_ADD (unique, 0x3a00, 4) , (const, 0x4, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x1f263c, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x370, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x370, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x370, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x370, 4)]
[(stack, 0xffffffffffffffb4, 8) INDIRECT (stack, 0xffffffffffffffb4, 8) , (const, 0x370, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x370, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x370, 4)]
[(register, 0x0, 4) CALL (ram, 0x130210, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000aa5, 8), (unique, 0x10000aa5, 8) INT_ADD (register, 0xb0, 8) , (const, 0xc8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1f2673, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000aad, 8), (unique, 0x10000aad, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x4, 8), (unique, 0x3480, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f266a, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000abd, 8), (unique, 0x10000abd, 8) INT_ADD (unique, 0x10000ab5, 8) , (register, 0x10, 8), (unique, 0x10000ab5, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f283f, 1) , (unique, 0x1000046e, 1), (unique, 0x1000046e, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x5200, 4) , (register, 0x0, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000acd, 8), (unique, 0x10000acd, 8) INT_ADD (unique, 0x10000ac5, 8) , (register, 0x10, 8), (unique, 0x10000ac5, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f2658, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3580, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) INT_ZEXT (register, 0xa0, 4)]
[ ---  BRANCH (ram, 0x1f2553, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000ad5, 8), (unique, 0x10000ad5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000add, 8), (unique, 0x10000add, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f2778, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000aed, 8), (unique, 0x10000aed, 8) INT_ADD (unique, 0x10000ae5, 8) , (const, 0x3c, 8), (unique, 0x10000ae5, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1f2940, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000b15, 8) , (const, 0x0, 8), (unique, 0x10000b15, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000b0d, 8), (unique, 0x10000b0d, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000b05, 8), (unique, 0x10000b05, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x50, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000afd, 8), (unique, 0x10000afd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000af5, 8), (unique, 0x10000af5, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eadc8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000b25, 8), (unique, 0x10000b25, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000b1d, 8), (unique, 0x10000b1d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x60, 8)]
[(register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000b2d, 4), (unique, 0x10000b2d, 4) CAST (register, 0xa0, 4)]
[(unique, 0x3100, 8) INT_ADD (unique, 0x10000b39, 8) , (const, 0x5, 8), (unique, 0x10000b39, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3400, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3400, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000799, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f2973, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESS (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000b31, 8), (unique, 0x10000b31, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3400, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100007a1, 8) COPY (register, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000799, 8) , (unique, 0x100007a1, 8)]
[ ---  CBRANCH (ram, 0x1f29cb, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10000779, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f29a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f2aff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000b49, 8), (unique, 0x10000b49, 8) INT_ADD (unique, 0x10000b41, 8) , (const, 0x5, 8), (unique, 0x10000b41, 8) CAST (register, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000789, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f29a8, 1)]
[(unique, 0x100006c9, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f299f, 1)]
[(unique, 0x10000781, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f298f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x38, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100006c9, 8) , (unique, 0x100006d1, 8)]
[(unique, 0x100006d1, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000791, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f2aca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000b51, 8), (unique, 0x10000b51, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x10000633, 8) , (const, 0x1, 8), (unique, 0x10000633, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1f26b3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000779, 8) , (unique, 0x10000781, 8) , (unique, 0x10000789, 8) , (unique, 0x10000791, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000b59, 8), (unique, 0x10000b59, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000032f, 4) , (const, 0x1, 4), (unique, 0x1000032f, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1f295c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000032f, 4) , (const, 0x1, 4), (unique, 0x1000032f, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(register, 0x10, 8) CAST (unique, 0x10000b69, 8), (unique, 0x10000b69, 8) INT_ADD (unique, 0x10000b61, 8) , (register, 0x8, 8), (unique, 0x10000b61, 8) CAST (unique, 0x3400, 8), (register, 0x8, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f295c, 1)]
[(unique, 0x10000759, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f29fc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f2b4e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000b79, 8), (unique, 0x10000b79, 8) INT_ADD (unique, 0x10000b71, 8) , (const, 0x5, 8), (unique, 0x10000b71, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000769, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f29fc, 1)]
[(unique, 0x10000729, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f29f3, 1)]
[(unique, 0x10000761, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f29e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (register, 0x38, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000729, 8) , (unique, 0x10000731, 8)]
[(unique, 0x10000731, 8) COPY (register, 0x28, 8)]
[(unique, 0x10000771, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1f2aeb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000b81, 8), (unique, 0x10000b81, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x1000063b, 8) , (const, 0x1, 8), (unique, 0x1000063b, 8) INT_ADD (register, 0x28, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1f2b55, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000759, 8) , (unique, 0x10000761, 8) , (unique, 0x10000769, 8) , (unique, 0x10000771, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f2abb, 1)]
[ ---  CBRANCH (ram, 0x1f2ad2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f2ad2, 1) , (unique, 0x100004a6, 1), (unique, 0x100004a6, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x200, 1) INT_LESS (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000b89, 8), (unique, 0x10000b89, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x1000082a, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f2a7c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x10000749, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f2a6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000b91, 8), (unique, 0x10000b91, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8)]
[(unique, 0x10000829, 1) COPY (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1f2af8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000749, 8) , (unique, 0x10000751, 8)]
[(unique, 0x10000751, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f2a4f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x10000643, 8) , (const, 0x1, 8), (unique, 0x10000643, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)]
[(unique, 0x1000082b, 1) COPY (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1f2af3, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0x3400, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000739, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f2a98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (register, 0x28, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000ba1, 8), (unique, 0x10000ba1, 8) INT_ADD (unique, 0x10000b99, 8) , (const, 0x5, 8), (unique, 0x10000b99, 8) CAST (register, 0x10, 8), (register, 0x28, 1) MULTIEQUAL (unique, 0x10000829, 1) , (unique, 0x1000082a, 1) , (unique, 0x1000082b, 1)]
[(unique, 0x10000741, 8) COPY (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000739, 8) , (unique, 0x10000741, 8)]
[ ---  CBRANCH (ram, 0x1f2a89, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000ba9, 8), (unique, 0x10000ba9, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x1000064b, 8) , (const, 0x1, 8), (unique, 0x1000064b, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000739, 8) , (unique, 0x10000741, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x28, 8), (register, 0x28, 8) INT_SEXT (unique, 0x10000bb9, 4), (unique, 0x10000bb9, 4) CAST (register, 0x28, 4), (register, 0x28, 4) INT_SUB (register, 0x28, 4) , (register, 0xb0, 4), (register, 0xb0, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x28, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (const, 0x100, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000bb1, 8), (unique, 0x10000bb1, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x10000653, 8) , (const, 0x1, 8), (unique, 0x10000653, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f2a9a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x0, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000bc5, 8), (unique, 0x10000bc5, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000bbd, 8), (unique, 0x10000bbd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x68, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x1f26b3, 1)]
[(register, 0x10, 8) CAST (unique, 0x10000bcd, 8), (unique, 0x10000bcd, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3100, 8), (register, 0x10, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000394, 4) , (const, 0x1, 4), (unique, 0x10000394, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1f295c, 1)]
[ ---  CBRANCH (ram, 0x1f2778, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f2778, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4)]
[(unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000bd5, 8), (unique, 0x10000bd5, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x58, 8)]
[(unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100005fb, 8) , (const, 0x4, 8), (unique, 0x100005fb, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1f26ed, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000be1, 8), (unique, 0x10000be1, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000bdd, 4), (unique, 0x10000bdd, 4) CAST (register, 0x88, 4), (register, 0x88, 4) INT_AND (unique, 0x100003d9, 4) , (const, 0xffffff, 4), (unique, 0x100003d9, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f26e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000bed, 8), (unique, 0x10000bed, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_SEXT (unique, 0x10000be9, 4), (unique, 0x10000be9, 4) CAST (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffff, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000be1, 8), (unique, 0x10000be1, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000bdd, 4), (unique, 0x10000bdd, 4) CAST (register, 0x88, 4), (register, 0x88, 4) INT_AND (unique, 0x100003d9, 4) , (const, 0xffffff, 4), (unique, 0x100003d9, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f26e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (register, 0x98, 4), (register, 0xb0, 4) INT_SRIGHT (unique, 0x10000bf9, 4) , (const, 0x18, 4), (unique, 0x10000bf9, 4) CAST (unique, 0x100003d9, 4), (register, 0x98, 4) INT_SRIGHT (unique, 0x10000bf5, 4) , (const, 0x18, 4), (unique, 0x10000bf5, 4) CAST (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1f2b25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c0d, 8), (unique, 0x10000c0d, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c05, 8), (unique, 0x10000c05, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x98, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10000c01, 4), (unique, 0x10000c01, 4) CAST (unique, 0x3100, 4), (register, 0x98, 8) INT_SEXT (unique, 0x10000bfd, 4), (unique, 0x10000bfd, 4) CAST (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4), (unique, 0x3100, 4) INT_ADD (register, 0x88, 4) , (const, 0x1, 4)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000c15, 8), (unique, 0x10000c15, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000c1d, 8), (unique, 0x10000c1d, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x1f2767, 1)]
[ ---  CBRANCH (ram, 0x1f274e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x30, 8)]
[(register, 0x38, 8) INT_ZEXT (register, 0xa0, 4)]
[ ---  BRANCH (ram, 0x1f2558, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000719, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f2b64, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000403, 1) , (const, 0x0, 1), (unique, 0x10000403, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x38, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1f2b25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x1000061b, 8) , (const, 0x1, 8), (unique, 0x1000061b, 8) INT_ADD (register, 0x98, 8) , (unique, 0x10000613, 8), (unique, 0x10000613, 8) INT_SUB (const, 0xffffffffffffffff, 8) , (register, 0x8, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x88, 4)]
[ ---  BRANCH (ram, 0x1f26e0, 1)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f2778, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3a00, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000665, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000066d, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(unique, 0x10000675, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x1000067d, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(unique, 0x10000681, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8)]
[(unique, 0x10000689, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(unique, 0x1000068d, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1f256a, 1) , (unique, 0x10000664, 1), (unique, 0x10000664, 1) INT_NOTEQUAL (unique, 0x1000069c, 1) , (const, 0x0, 1), (unique, 0x1000069c, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x1000068d, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (unique, 0x10000689, 4)]
[(stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (unique, 0x10000681, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (unique, 0x1000067d, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x10000675, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (unique, 0x1000066d, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000665, 8)]
[(unique, 0x10000721, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1f2571, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x18, 4) , (unique, 0x10000c25, 4), (unique, 0x10000c25, 4) CAST (register, 0xa0, 4)]
[(register, 0x18, 8) INT_ZEXT (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xc1, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c31, 8), (unique, 0x10000c31, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (register, 0x80, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000c29, 8), (unique, 0x10000c29, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x38, 4) , (unique, 0xbc80, 4), (register, 0x38, 4) INT_ADD (register, 0x80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000c39, 8), (unique, 0x10000c39, 8) INT_ADD (register, 0x8, 8) , (const, 0x40, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000c41, 8), (unique, 0x10000c41, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x30, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f2786, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xe0, 1)]
[ ---  CBRANCH (ram, 0x1f2906, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xf0, 1)]
[ ---  CBRANCH (ram, 0x1f2921, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xf8, 1)]
[ ---  CBRANCH (ram, 0x1f2b06, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xfc, 1)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0xfe, 1)]
[ ---  CBRANCH (ram, 0x1f2b1b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xfc, 1)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x83, 1) , (unique, 0xbb00, 1)]
[(register, 0x18, 8) COPY (const, 0x6, 8)]
[ ---  BRANCH (ram, 0x1f27a0, 1)]
[ ---  CBRANCH (ram, 0x1f2936, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xf8, 1)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x87, 1) , (unique, 0xbb00, 1)]
[(register, 0x18, 8) COPY (const, 0x5, 8)]
[ ---  BRANCH (ram, 0x1f27a0, 1)]
[ ---  CBRANCH (ram, 0x1f2917, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xf0, 1)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x8f, 1) , (unique, 0xbb00, 1)]
[(register, 0x18, 8) COPY (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1f27a0, 1)]
[ ---  CBRANCH (ram, 0x1f279b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xe0, 1)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9f, 1) , (unique, 0xbb00, 1)]
[(register, 0x18, 8) COPY (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4), (register, 0x0, 4) INT_ADD (register, 0x80, 4) , (unique, 0x1000025c, 4), (unique, 0x1000025c, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x10000c51, 1) , (const, 0x40, 1), (unique, 0x10000c51, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c49, 8), (unique, 0x10000c49, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_SEXT (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x10000c5a, 1) , (const, 0x40, 1), (unique, 0x10000c5a, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c52, 8), (unique, 0x10000c52, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x80, 4) , (const, 0x2, 4)]
[(unique, 0x100006f1, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1f217e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000025c, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x10000c63, 1) , (const, 0x40, 1), (unique, 0x10000c63, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c5b, 8), (unique, 0x10000c5b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x80, 4) , (const, 0x3, 4)]
[(unique, 0x100006f9, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1f217e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000025c, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x1f217c, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x10000c6c, 1) , (const, 0x40, 1), (unique, 0x10000c6c, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c64, 8), (unique, 0x10000c64, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x1f2b44, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000025c, 4) , (const, 0x6, 4)]
[(unique, 0x10000709, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x5, 8)]
[ ---  BRANCH (ram, 0x1f217e, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c6d, 8), (unique, 0x10000c6d, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x80, 4) , (const, 0x5, 4)]
[(register, 0x18, 8) COPY (const, 0x2, 8)]
[(unique, 0x10000701, 8) COPY (unique, 0x1000065c, 8), (unique, 0x1000065c, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1f217e, 1) , (unique, 0x1000065b, 1), (unique, 0x1000065b, 1) INT_LESS (unique, 0x10000c75, 1) , (const, 0x40, 1), (unique, 0x10000c75, 1) CAST (unique, 0x1000069d, 1), (unique, 0x1000069d, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x1000068d, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (unique, 0x10000689, 4)]
[(stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (unique, 0x10000681, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (unique, 0x1000067d, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (unique, 0x10000675, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (unique, 0x1000066d, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x10000665, 8)]
[(unique, 0x100006d9, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb4, 8) MULTIEQUAL (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8) , (stack, 0xffffffffffffffb4, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100006d9, 8) , (unique, 0x100006e1, 8) , (unique, 0x100006e9, 8) , (unique, 0x100006f1, 8) , (unique, 0x100006f9, 8) , (unique, 0x10000701, 8) , (unique, 0x10000709, 8) , (unique, 0x100006e9, 8) , (unique, 0x10000719, 8) , (unique, 0x10000721, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1f2b3f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000c76, 8), (unique, 0x10000c76, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1a3, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x1a3, 4)]
[(stack, 0xffffffffffffffb4, 8) INDIRECT (stack, 0xffffffffffffffb4, 8) , (const, 0x1a3, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x1a3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a3, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8), (ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x1a3, 4)]
[ ---  RETURN (const, 0x1, 4)]
