[(unique, 0x3100, 8) CAST (unique, 0x10000174, 8), (unique, 0x10000174, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x1000017c, 8), (unique, 0x1000017c, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000184, 8), (unique, 0x10000184, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa8, 8)]
[(unique, 0x10000154, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x421f94, 1) , (unique, 0x10000153, 1), (unique, 0x10000153, 1) INT_NOTEQUAL (unique, 0x1000014b, 8) , (const, 0x0, 8), (unique, 0x1000014b, 8) MULTIEQUAL (unique, 0x10000154, 8) , (unique, 0x1000015c, 8) , (unique, 0x10000164, 8)]
[ ---  CBRANCH (ram, 0x42203c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000018c, 8), (unique, 0x1000018c, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0x100000c8, 4) , (const, 0x2, 4), (unique, 0x100000c8, 4) SUBPIECE (unique, 0x10000074, 8) , (const, 0x0, 4), (unique, 0x10000074, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x4, 4), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000014b, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x100000da, 8), (unique, 0x100000da, 8) COPY (const, 0x49b510, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000194, 8), (unique, 0x10000194, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000014b, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0xb0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x100001a4, 8), (unique, 0x100001a4, 8) INT_ADD (unique, 0x1000019c, 8) , (register, 0x28, 8), (unique, 0x1000019c, 8) CAST (unique, 0x1000014b, 8), (register, 0x28, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x421ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000088, 8) , (const, 0x0, 8), (unique, 0x10000088, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000014b, 8)]
[ ---  CBRANCH (ram, 0x422030, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x18, 8) CAST (unique, 0x100001b4, 8), (unique, 0x100001b4, 8) INT_SUB (unique, 0x100001ac, 8) , (unique, 0xbd80, 8), (unique, 0x100001ac, 8) CAST (unique, 0x1000014b, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000014b, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x100000e2, 8), (unique, 0x100000e2, 8) COPY (const, 0x49b540, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CALL (ram, 0x421e10, 8) , (register, 0x18, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x1000014b, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x421f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001bc, 8), (unique, 0x100001bc, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)]
[ ---  CBRANCH (ram, 0x422010, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001cc, 8), (unique, 0x100001cc, 8) INT_ADD (unique, 0x100001c4, 8) , (unique, 0x100000f2, 8), (unique, 0x100001c4, 8) CAST (unique, 0x3400, 8), (unique, 0x100000f2, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x421e10, 8) , (unique, 0x3400, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x100001dc, 8), (unique, 0x100001dc, 8) INT_ADD (unique, 0x100001d4, 8) , (register, 0x28, 8), (unique, 0x100001d4, 8) CAST (register, 0x18, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x421f52, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x100001ec, 8), (unique, 0x100001ec, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x100001f4, 8), (unique, 0x100001f4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001e4, 8), (unique, 0x100001e4, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[ ---  CBRANCH (ram, 0x421f6f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x100001fc, 8), (unique, 0x100001fc, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_OR (register, 0x28, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000d0, 8) , (unique, 0x10000204, 8), (unique, 0x10000204, 8) CAST (unique, 0x3100, 8), (unique, 0x100000d0, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (register, 0x28, 8)]
[(unique, 0x10000164, 8) COPY (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x28, 8) INT_OR (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x1000020c, 8), (unique, 0x1000020c, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)]
[(unique, 0x1000015c, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x421f8c, 1)]
[ ---  CBRANCH (ram, 0x421f15, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8)]
