[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000039c, 8), (unique, 0x1000039c, 8) INT_ADD (unique, 0x10000394, 8) , (const, 0x14, 8), (unique, 0x10000394, 8) CAST (register, 0x30, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003a4, 8), (unique, 0x100003a4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003ac, 8), (unique, 0x100003ac, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (const, 0x100000001, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f, 4)]
[ ---  CBRANCH (ram, 0x1feda3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003b4, 8), (unique, 0x100003b4, 8) CALL (ram, 0x1212c0, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) COPY (const, 0xc, 4)]
[ ---  BRANCH (ram, 0x1fe9d2, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5a, 4)]
[ ---  CBRANCH (ram, 0x1fe9c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1fdac0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1fe9c0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffff8c, 4) COPY (const, 0x0, 4)]
[(unique, 0x3680, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffff8c, 4) MULTIEQUAL (stack, 0xffffffffffffff8c, 4) , (stack, 0xffffffffffffff8c, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbd00, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff68, 8) INT_ADD (unique, 0x10000319, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x10000319, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff68, 8)]
[ ---  CBRANCH (ram, 0x1fec80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003c4, 8), (unique, 0x100003c4, 8) INT_ADD (unique, 0x100003bc, 8) , (stack, 0xffffffffffffff70, 8), (unique, 0x100003bc, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (unique, 0x3680, 8) , (unique, 0xbe00, 8)]
[ ---  CBRANCH (ram, 0x1fe7c7, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0xbd00, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100003cc, 8), (unique, 0x100003cc, 8) INT_ADD (register, 0x38, 8) , (const, 0xa8, 8), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffff8c, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffff8c, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1fec97, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100003d4, 8), (unique, 0x100003d4, 8) INT_ADD (register, 0x38, 8) , (const, 0xa8, 8)]
[ ---  CALL (ram, 0x1211f0, 8) , (unique, 0xbd80, 8) , (const, 0x0, 4) , (stack, 0xffffffffffffff70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7a3, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x79d, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x1fe9d2, 1)]
[(stack, 0xffffffffffffff8c, 4) MULTIEQUAL (stack, 0xffffffffffffff8c, 4) , (unique, 0xbd00, 4)]
[(unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffff64, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffa8, 8) INT_AND (stack, 0xffffffffffffffa8, 8) , (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x1fe98b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003e4, 8), (unique, 0x100003e4, 8) INT_ADD (unique, 0x3880, 8) , (stack, 0xffffffffffffff70, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100003dc, 8), (unique, 0x100003dc, 8) INT_ADD (register, 0x38, 8) , (const, 0x88, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100003f4, 8), (unique, 0x100003f4, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[ ---  CBRANCH (ram, 0x1fe98b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003ec, 8), (unique, 0x100003ec, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1c, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000135, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1fea78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000041c, 8), (unique, 0x1000041c, 8) INT_ADD (unique, 0x10000414, 8) , (const, 0xa, 8), (unique, 0x10000414, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000040c, 8), (unique, 0x1000040c, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa8, 8), (register, 0xa8, 8) INT_MULT (register, 0x90, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0x90, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000404, 8), (unique, 0x10000404, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003fc, 8), (unique, 0x100003fc, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000434, 8), (unique, 0x10000434, 8) INT_ADD (unique, 0x1000042c, 8) , (const, 0x14, 8), (unique, 0x1000042c, 8) CAST (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x699, 4)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f2060, 8) , (unique, 0xbd80, 8) , (unique, 0x3200, 8) , (register, 0x10, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x19, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0x10, 8) INT_AND (register, 0x90, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000424, 8), (unique, 0x10000424, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[ ---  CBRANCH (ram, 0x1fec10, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALL (ram, 0x1f2060, 8) , (unique, 0xbd80, 8) , (unique, 0x3200, 8) , (register, 0x10, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x19, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0x10, 8) INT_AND (register, 0x90, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000424, 8), (unique, 0x10000424, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[ ---  CBRANCH (ram, 0x1feb40, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x1fe9fd, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (register, 0x10, 4) , (unique, 0xbc80, 4), (register, 0x10, 4) INT_ADD (unique, 0xbd00, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1feb40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000444, 8), (unique, 0x10000444, 8) INT_ADD (unique, 0x1000043c, 8) , (unique, 0x3300, 8), (unique, 0x1000043c, 8) CAST (unique, 0xbd80, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1feb40, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000044c, 8), (unique, 0x1000044c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xc, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000454, 8), (unique, 0x10000454, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[(register, 0x38, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000045c, 8), (unique, 0x1000045c, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1feb2f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x38, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1feb2b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000464, 8), (unique, 0x10000464, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_RIGHT (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) INT_ADD (register, 0x8, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1feb18, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x8, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1fecc0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x5200, 4) , (unique, 0xbc80, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000046c, 8), (unique, 0x1000046c, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0x30, 4)]
[(register, 0x30, 8) INT_ZEXT (register, 0x10, 4)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x38, 4)]
[(register, 0x8, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x30, 4)]
[ ---  BRANCH (ram, 0x1feafe, 1)]
[ ---  CBRANCH (ram, 0x1fe9fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000474, 8), (unique, 0x10000474, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000047c, 8), (unique, 0x1000047c, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x1fe832, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000048c, 8), (unique, 0x1000048c, 8) INT_ADD (unique, 0xbd80, 8) , (stack, 0xffffffffffffff68, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000484, 8), (unique, 0x10000484, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1febe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000494, 8), (unique, 0x10000494, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1feb50, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1fe970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x1fe890, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000049c, 8), (unique, 0x1000049c, 8) CAST (register, 0x0, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1fe810, 1) , (unique, 0x1000036e, 1), (unique, 0x1000036e, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESSEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004a4, 8), (unique, 0x100004a4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1c, 8), (register, 0x0, 4) INT_ADD (unique, 0x10000135, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1fe869, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5, 1)]
[ ---  CBRANCH (ram, 0x1fe970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x7, 1)]
[ ---  CBRANCH (ram, 0x1fe970, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xff, 1) , (unique, 0x100004ac, 1), (unique, 0x100004ac, 1) CAST (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1fec20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0xa, 1)]
[ ---  CBRANCH (ram, 0x1fe890, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004b5, 8), (unique, 0x100004b5, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xc8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100004ad, 8), (unique, 0x100004ad, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1fe810, 1) , (unique, 0x100002cc, 1), (unique, 0x100002cc, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004bd, 8), (unique, 0x100004bd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1c, 8), (register, 0x0, 4) INT_ADD (unique, 0x10000135, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1fe890, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1fe970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xc8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[ ---  CBRANCH (ram, 0x1fe890, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0x1d680, 8) , (const, 0x0, 8), (unique, 0x1d680, 8) INT_AND (unique, 0x1d600, 8) , (const, 0x1, 8), (unique, 0x1d600, 8) INT_RIGHT (unique, 0xbd80, 8) , (unique, 0x1d580, 8), (unique, 0x1d580, 8) INT_AND (register, 0x8, 8) , (const, 0x3f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100004d5, 8), (unique, 0x100004d5, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 1), (register, 0x10, 1) INT_RIGHT (unique, 0xbb00, 1) , (const, 0x6, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fe900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x3ff00, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004dd, 8), (unique, 0x100004dd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ec, 4)]
[(register, 0x0, 8) CALL (ram, 0x1efe00, 8) , (register, 0x38, 8) , (unique, 0xbd00, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100004e5, 8), (unique, 0x100004e5, 8) INT_ADD (register, 0x38, 8) , (const, 0x78, 8)]
[ ---  CBRANCH (ram, 0x1fec50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000e9, 4) , (const, 0x0, 4), (unique, 0x100000e9, 4) INT_AND (register, 0xa8, 4) , (const, 0x4, 4), (register, 0xa8, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1fe8ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x0, 4), (register, 0xa8, 4) INT_AND (register, 0xa8, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1fe8ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001f7, 8) , (const, 0x0, 8), (unique, 0x100001f7, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1fe810, 1) , (unique, 0x100002d1, 1), (unique, 0x100002d1, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004ed, 8), (unique, 0x100004ed, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1c, 8), (register, 0x0, 4) INT_ADD (unique, 0x10000135, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1fe970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ed, 8) , (const, 0x0, 8), (unique, 0x100000ed, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1fe970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x0, 4), (register, 0xa8, 4) INT_AND (register, 0xa8, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1fe8f3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000281, 4) , (const, 0x0, 4), (unique, 0x10000281, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2000, 4)]
[ ---  CBRANCH (ram, 0x1fe970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000fd, 8) , (const, 0x0, 8), (unique, 0x100000fd, 8) INT_AND (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1fe900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000287, 4) , (const, 0x0, 4), (unique, 0x10000287, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4)]
[ ---  CBRANCH (ram, 0x1fe970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000105, 8) , (const, 0x0, 8), (unique, 0x10000105, 8) INT_AND (register, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1fe970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100004fd, 8), (unique, 0x100004fd, 8) INT_ADD (unique, 0x100004f5, 8) , (stack, 0xffffffffffffff70, 8), (unique, 0x100004f5, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1fe970, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000505, 8), (unique, 0x10000505, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xc, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000050d, 8), (unique, 0x1000050d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[(register, 0x80, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000515, 8), (unique, 0x10000515, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fe960, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x80, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1fe95c, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000051d, 8), (unique, 0x1000051d, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x1fe948, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1febd0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x5200, 4) , (unique, 0xbc80, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000525, 8), (unique, 0x10000525, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x0, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x80, 4)]
[(register, 0x8, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x10, 4)]
[ ---  BRANCH (ram, 0x1fe92c, 1)]
[ ---  CBRANCH (ram, 0x1fe9f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000052d, 8), (unique, 0x1000052d, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1fe810, 1) , (unique, 0x10000371, 1), (unique, 0x10000371, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000535, 8), (unique, 0x10000535, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1c, 8), (register, 0x0, 4) INT_ADD (unique, 0x10000135, 4) , (const, 0x1, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1fea37, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000545, 8), (unique, 0x10000545, 8) INT_ADD (unique, 0x1000053d, 8) , (const, 0x1c, 8), (unique, 0x1000053d, 8) CAST (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a5, 4)]
[ ---  CBRANCH (ram, 0x1fe970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f2b70, 8) , (register, 0x38, 8) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000054d, 8), (unique, 0x1000054d, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1fe810, 1) , (unique, 0x1000029f, 1), (unique, 0x1000029f, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000555, 8), (unique, 0x10000555, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1c, 8), (register, 0x0, 4) INT_ADD (unique, 0x10000135, 4) , (const, 0x1, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1feb80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa8, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffa8, 4) SUBPIECE (stack, 0xffffffffffffffa8, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (const, 0x100000001, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x536, 4)]
[ ---  CBRANCH (ram, 0x1fed5e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000055d, 8), (unique, 0x1000055d, 8) CALL (ram, 0x1212c0, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) COPY (const, 0xc, 4)]
[ ---  BRANCH (ram, 0x1fe9c5, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbc80, 4)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1fe810, 1) , (unique, 0x100002c8, 1), (unique, 0x100002c8, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000565, 8), (unique, 0x10000565, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1c, 8), (register, 0x0, 4) INT_ADD (unique, 0x10000135, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1fecd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffac, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffac, 4) SUBPIECE (stack, 0xffffffffffffffa8, 8) , (const, 0x4, 8)]
[(unique, 0x1000037c, 4) COPY (stack, 0xffffffffffffffac, 4)]
[(unique, 0x10000384, 8) COPY (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x1fed6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 8) INT_OR (unique, 0x10000309, 8) , (unique, 0x10000311, 8), (unique, 0x10000311, 8) INT_ZEXT (unique, 0x1000056d, 4), (unique, 0x1000056d, 4) CAST (unique, 0x1000028b, 4), (unique, 0x10000309, 8) INT_AND (stack, 0xffffffffffffffa8, 8) , (const, 0xffffffff00000000, 8), (unique, 0x1000028b, 4) INT_MULT (stack, 0xffffffffffffffa8, 4) , (const, 0x2, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x50e, 4)]
[ ---  CBRANCH (ram, 0x1fedad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000571, 8), (unique, 0x10000571, 8) CALL (ram, 0x121020, 8) , (stack, 0xffffffffffffffb0, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000028b, 4), (unique, 0x1000028b, 4) INT_MULT (stack, 0xffffffffffffffa8, 4) , (const, 0x2, 4)]
[(register, 0x0, 4) COPY (const, 0xc, 4)]
[ ---  BRANCH (ram, 0x1fe9c5, 1)]
[(unique, 0x10000380, 4) COPY (stack, 0xffffffffffffffac, 4), (stack, 0xffffffffffffffac, 4) SUBPIECE (unique, 0x10000374, 8) , (const, 0x0, 4), (unique, 0x10000374, 8) INT_RIGHT (unique, 0x10000309, 8) , (const, 0x20, 4)]
[(unique, 0x1000038c, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1fecd8, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x1000037c, 4) , (unique, 0x10000380, 4)]
[(stack, 0xffffffffffffffac, 4) SUBPIECE (stack, 0xffffffffffffffa8, 8) , (const, 0x4, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x1fed49, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000384, 8) , (unique, 0x1000038c, 8)]
[ ---  CBRANCH (ram, 0x1fed40, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000581, 8), (unique, 0x10000581, 8) INT_ADD (unique, 0x10000579, 8) , (unique, 0x10000361, 8), (unique, 0x10000579, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10000361, 8) INT_ADD (register, 0x8, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) CAST (unique, 0x10000591, 8), (unique, 0x10000591, 8) INT_ADD (unique, 0x10000589, 8) , (register, 0x8, 8), (unique, 0x10000589, 8) CAST (stack, 0xffffffffffffffb0, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) CAST (unique, 0x100005a1, 8), (unique, 0x100005a1, 8) INT_ADD (unique, 0x10000599, 8) , (register, 0x8, 8), (unique, 0x10000599, 8) CAST (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) INT_OR (unique, 0x100002f1, 8) , (unique, 0x10000301, 8), (unique, 0x10000301, 8) INT_LEFT (unique, 0x100002f9, 8) , (const, 0x20, 4), (unique, 0x100002f9, 8) INT_ZEXT (unique, 0xbd00, 4), (unique, 0x100002f1, 8) INT_AND (stack, 0xffffffffffffffa8, 8) , (const, 0xffffffff, 8), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffffac, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1fed26, 1)]
[ ---  CBRANCH (ram, 0x1fed1c, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x10, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x483, 4)]
[ ---  CALL (ram, 0x1212b0, 8) , (unique, 0x3b80, 8) , (register, 0x30, 8) , (unique, 0x3580, 8), (register, 0x30, 8) CAST (unique, 0x100005c1, 8), (unique, 0x100005c1, 8) INT_ADD (register, 0x30, 8) , (unique, 0x100005b9, 8), (unique, 0x100005b9, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x3b80, 8) CAST (unique, 0x100005b1, 8), (unique, 0x100005b1, 8) INT_ADD (unique, 0x100005a9, 8) , (register, 0x8, 8), (unique, 0x100005a9, 8) CAST (stack, 0xffffffffffffffb0, 8), (register, 0x30, 8) INT_SUB (register, 0x8, 8) , (unique, 0x3580, 8), (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x4, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x4, 8), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) CAST (unique, 0x100005d1, 8), (unique, 0x100005d1, 8) INT_ADD (unique, 0x100005c9, 8) , (register, 0x8, 8), (unique, 0x100005c9, 8) CAST (stack, 0xffffffffffffffb0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffa8, 8) INT_OR (unique, 0x100002d6, 8) , (unique, 0x100002e6, 8), (unique, 0x100002e6, 8) INT_LEFT (unique, 0x100002de, 8) , (const, 0x20, 4), (unique, 0x100002de, 8) INT_ZEXT (unique, 0xbd00, 4), (unique, 0x100002d6, 8) INT_AND (stack, 0xffffffffffffffa8, 8) , (const, 0xffffffff, 8), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffffac, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1fe810, 1) , (unique, 0x100002ee, 1), (unique, 0x100002ee, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005d9, 8), (unique, 0x100005d9, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1c, 8), (register, 0x0, 4) INT_ADD (unique, 0x10000135, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffa8, 8) INT_OR (unique, 0x100002a4, 8) , (const, 0x100000000, 8), (unique, 0x100002a4, 8) INT_AND (stack, 0xffffffffffffffa8, 8) , (const, 0xffffffff, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1fe810, 1) , (unique, 0x100002bc, 1), (unique, 0x100002bc, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005e1, 8), (unique, 0x100005e1, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1c, 8), (register, 0x0, 4) INT_ADD (unique, 0x10000135, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x303, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1fe9c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1fdac0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0xbd00, 4)]
[(unique, 0xbe00, 8) INT_SUB (stack, 0xffffffffffffff70, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1fe79a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x34a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1fedbc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100005e9, 8), (unique, 0x100005e9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
