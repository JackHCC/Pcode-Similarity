[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000b3, 8), (unique, 0x100000b3, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x1000008b, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x1c7844, 1)]
[ ---  CBRANCH (ram, 0x1c7840, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0x1a, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x41, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffffdf, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000008b, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1c7840, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1c7840, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x5f, 4)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100000a3, 8) COPY (ram, 0x2bc418, 8)]
[ ---  CBRANCH (ram, 0x1c788c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x10, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb4, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xb4, 4)]
[(register, 0x0, 8) CALL (ram, 0x1befb0, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x1000006a, 8), (unique, 0x1000006a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea960, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[(unique, 0x100000ab, 8) COPY (ram, 0x2bc418, 8), (ram, 0x2bc418, 8) INDIRECT (ram, 0x2bc418, 8) , (const, 0xb4, 4)]
[ ---  CBRANCH (ram, 0x1c7864, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd8, 8) , (register, 0x18, 8), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xb4, 4)]
[(register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x30, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0x7ff8000000000000, 8), (register, 0x10, 8) INT_AND (register, 0x0, 8) , (const, 0x7ffff00000000, 8), (register, 0x30, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x1c786c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xfffff, 4), (register, 0x8, 4) SUBPIECE (unique, 0x10000083, 8) , (const, 0x0, 4), (unique, 0x10000083, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x20, 4), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0x7ff8000000000000, 8), (register, 0x10, 8) INT_AND (register, 0x0, 8) , (const, 0x7ffff00000000, 8), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[(unique, 0x1000009b, 8) COPY (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x1c786c, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x2bc418, 8) MULTIEQUAL (ram, 0x2bc418, 8) , (ram, 0x2bc418, 8) , (ram, 0x2bc418, 8) , (ram, 0x2bc418, 8)]
[(register, 0x1200, 8) MULTIEQUAL (unique, 0x100000ab, 8) , (unique, 0x1000009b, 8) , (unique, 0x100000a3, 8) , (unique, 0x100000ab, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1c7875, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x2bc418, 8) INDIRECT (ram, 0x2bc418, 8) , (const, 0x75, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x18, 8)]
[(ram, 0x2bc418, 8) MULTIEQUAL (ram, 0x2bc418, 8) , (ram, 0x2bc418, 8)]
[ ---  CBRANCH (ram, 0x1c78f3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000bb, 8), (unique, 0x100000bb, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(ram, 0x2bc418, 8) COPY (ram, 0x2bc418, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x98, 4)]
[ ---  CALL (ram, 0x234c80, 8) , (register, 0x1200, 8)]
[(ram, 0x2bc418, 8) COPY (ram, 0x2bc418, 8), (ram, 0x2bc418, 8) INDIRECT (ram, 0x2bc418, 8) , (const, 0x98, 4)]
[ ---  RETURN (const, 0x1, 4)]
