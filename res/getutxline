[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000058, 8), (unique, 0x10000058, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x263920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ec9f0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6b, 4)]
[(ram, 0x4ec9f0, 8) INDIRECT (ram, 0x4ec9f0, 8) , (const, 0x6b, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x6b, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x6b, 4)]
[ ---  CBRANCH (ram, 0x2638f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (const, 0x180, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec9f0, 8) INDIRECT (ram, 0x4ec9f0, 8) , (const, 0x2d, 4), (ram, 0x4ec9f0, 8) MULTIEQUAL (ram, 0x4ec9f0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x2d, 4), (stack, 0xffffffffffffffe8, 8) MULTIEQUAL (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x2d, 4), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xfffffffffffffff0, 8)]
[ ---  CBRANCH (ram, 0x263940, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x263a20, 8) , (register, 0x38, 8) , (ram, 0x4ec9f0, 8) , (register, 0x20, 8), (ram, 0x4ec9f0, 8) MULTIEQUAL (ram, 0x4ec9f0, 8) , (register, 0x0, 8)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(ram, 0x4ec9f0, 8) MULTIEQUAL (ram, 0x4ec9f0, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x263907, 1)]
[(ram, 0x4ec9f0, 8) MULTIEQUAL (ram, 0x4ec9f0, 8) , (ram, 0x4ec9f0, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffe8, 8)]
[ ---  CBRANCH (ram, 0x263944, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000060, 8), (unique, 0x10000060, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(ram, 0x4ec9f0, 8) COPY (ram, 0x4ec9f0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x5a, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ec9f0, 8) COPY (ram, 0x4ec9f0, 8), (ram, 0x4ec9f0, 8) INDIRECT (ram, 0x4ec9f0, 8) , (const, 0x5a, 4)]
[ ---  RETURN (const, 0x1, 4)]
