[ ---  CBRANCH (ram, 0x17e730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x72, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x17e718, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x77, 1)]
[(unique, 0x100001d7, 1) COPY (const, 0x1, 1)]
[(unique, 0x100001c0, 1) COPY (const, 0x0, 1)]
[(register, 0xb8, 4) COPY (const, 0x0, 4)]
[(register, 0x28, 4) COPY (const, 0x4, 4)]
[ ---  BRANCH (ram, 0x17e544, 1)]
[ ---  CBRANCH (ram, 0x17e530, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x61, 1)]
[(unique, 0x100001d8, 1) COPY (const, 0x1, 1)]
[(unique, 0x100001c1, 1) COPY (const, 0x0, 1)]
[(register, 0xb8, 4) COPY (const, 0x1000, 4)]
[(register, 0x28, 4) COPY (const, 0x1004, 4)]
[(unique, 0x100001d6, 1) COPY (const, 0x0, 1)]
[(unique, 0x100001bf, 1) COPY (const, 0x1, 1)]
[(register, 0xb8, 4) COPY (const, 0x0, 4)]
[(register, 0x28, 4) COPY (const, 0x8, 4)]
[ ---  BRANCH (ram, 0x17e544, 1)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[(unique, 0x100001be, 1) MULTIEQUAL (unique, 0x100001c1, 1) , (unique, 0x100001c0, 1) , (unique, 0x100001bf, 1)]
[(unique, 0x100001d5, 1) MULTIEQUAL (unique, 0x100001d8, 1) , (unique, 0x100001d7, 1) , (unique, 0x100001d6, 1)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x17e700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100001c8, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x17e780, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6d, 1)]
[(unique, 0x100001d0, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x17e55f, 1)]
[(unique, 0x100001d1, 1) COPY (const, 0x0, 1)]
[(unique, 0x10000243, 4) COPY (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x17e5b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0x100001cf, 1) MULTIEQUAL (unique, 0x100001d1, 1) , (unique, 0x100001d0, 1)]
[ ---  CBRANCH (ram, 0x17e703, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x17e770, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6d, 1)]
[(unique, 0x100001ce, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x17e577, 1)]
[(unique, 0x10000247, 4) COPY (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x17e5b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0x100001cd, 1) MULTIEQUAL (unique, 0x100001cf, 1) , (unique, 0x100001ce, 1)]
[ ---  CBRANCH (ram, 0x17e703, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x17e7c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6d, 1)]
[(unique, 0x100001ca, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x17e58f, 1)]
[(unique, 0x1000024b, 4) COPY (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x17e5b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0x100001c9, 1) MULTIEQUAL (unique, 0x100001cd, 1) , (unique, 0x100001ca, 1)]
[ ---  CBRANCH (ram, 0x17e703, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x17e5a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6d, 1)]
[(unique, 0x100001cc, 1) COPY (const, 0x1, 1)]
[(unique, 0x100001c7, 1) MULTIEQUAL (unique, 0x100001cf, 1) , (unique, 0x100001cd, 1) , (unique, 0x100001c9, 1) , (unique, 0x100001c8, 1)]
[(unique, 0x100001d4, 1) COPY (const, 0x0, 1)]
[(unique, 0x100001bd, 1) COPY (const, 0x0, 1)]
[(unique, 0x1000024f, 4) COPY (register, 0xb8, 4)]
[ ---  BRANCH (ram, 0x17e5b0, 1)]
[(unique, 0x100001d3, 1) MULTIEQUAL (unique, 0x100001d5, 1) , (unique, 0x100001d5, 1) , (unique, 0x100001d5, 1) , (unique, 0x100001d4, 1) , (unique, 0x100001d5, 1) , (unique, 0x100001d5, 1)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0x10000243, 4) , (unique, 0x10000247, 4) , (unique, 0x1000024b, 4) , (unique, 0x1000024f, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0x100001bb, 1) MULTIEQUAL (unique, 0x100001be, 1) , (unique, 0x100001be, 1) , (unique, 0x100001be, 1) , (unique, 0x100001bd, 1) , (unique, 0x100001be, 1) , (unique, 0x100001be, 1)]
[(unique, 0x100001c5, 1) MULTIEQUAL (unique, 0x100001d1, 1) , (unique, 0x100001cf, 1) , (unique, 0x100001cd, 1) , (unique, 0x100001c7, 1) , (unique, 0x100001c9, 1) , (unique, 0x100001cc, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10d, 4)]
[ ---  CBRANCH (ram, 0x17e513, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x2105a0, 8) , (register, 0x38, 4) , (const, 0x3, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17e6e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x17e5db, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x17e5db, 1) , (unique, 0x100001d3, 1)]
[ ---  CBRANCH (ram, 0x17e505, 1) , (unique, 0x100001bb, 1)]
[(unique, 0x100001dd, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x17e5ee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x17e790, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001a8, 4) , (const, 0x0, 4), (unique, 0x100001a8, 4) INT_AND (register, 0x0, 4) , (const, 0x400, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x25b, 4)]
[ ---  CBRANCH (ram, 0x17e513, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x2105a0, 8) , (register, 0x38, 4) , (const, 0x4, 4) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x400, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001dc, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x17e5ee, 1)]
[(unique, 0x100001d9, 1) MULTIEQUAL (unique, 0x100001dd, 1) , (unique, 0x100001dd, 1) , (unique, 0x100001dc, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x14a, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x17e513, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000253, 8), (unique, 0x10000253, 8) CALL (ram, 0x1212c0, 8) , (const, 0x228, 8)]
[(unique, 0x3200, 8) PTRSUB (unique, 0x100001fe, 8) , (const, 0x18, 8), (unique, 0x100001fe, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x166, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x0, 8) , (const, 0x88, 8), (unique, 0x3200, 8) PTRSUB (unique, 0x100001ee, 8) , (const, 0x8, 8), (unique, 0x100001ee, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  CBRANCH (ram, 0x17e62a, 1) , (unique, 0x100001c5, 1)]
[ ---  CBRANCH (ram, 0x17e750, 1) , (unique, 0x100001bb, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18b, 4)]
[ ---  CALL (ram, 0x18eb50, 8) , (register, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x3200, 8) , (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7d60, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e82a0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x23e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x23e, 4)]
[ ---  CALL (ram, 0x18eb50, 8) , (register, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x3200, 8) , (unique, 0x100001de, 8), (unique, 0x100001de, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7be0, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e8120, 8)]
[ ---  BRANCH (ram, 0x17e644, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000263, 8) , (register, 0x10, 8), (unique, 0x10000263, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x193, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALL (ram, 0x18c110, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 4), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x70, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1bc, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x199, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x193, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000022e, 8) , (register, 0x10, 4), (unique, 0x1000022e, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x28, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffefb3, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17e516, 1) , (unique, 0x100001db, 1), (unique, 0x100001db, 1) BOOL_NEGATE (unique, 0x100001d9, 1)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17e516, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x1004, 4), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x1004, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17e7d0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x224, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x224, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x17e6a9, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x206, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x206, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x17e516, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x0, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000273, 8), (unique, 0x10000273, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17e516, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x1d, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000027b, 8), (unique, 0x1000027b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000283, 8) , (const, 0x16, 4), (unique, 0x10000283, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
