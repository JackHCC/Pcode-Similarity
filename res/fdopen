[ ---  CBRANCH (ram, 0x16d6a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x72, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x16d680, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x77, 1)]
[(unique, 0x100001b3, 1) COPY (const, 0x1, 1)]
[(unique, 0x1000019c, 1) COPY (const, 0x0, 1)]
[(register, 0xb0, 4) COPY (const, 0x0, 4)]
[(register, 0xa0, 4) COPY (const, 0x4, 4)]
[ ---  BRANCH (ram, 0x16d4d4, 1)]
[ ---  CBRANCH (ram, 0x16d4c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x61, 1)]
[(unique, 0x100001b4, 1) COPY (const, 0x1, 1)]
[(unique, 0x1000019d, 1) COPY (const, 0x0, 1)]
[(register, 0xb0, 4) COPY (const, 0x1000, 4)]
[(register, 0xa0, 4) COPY (const, 0x1004, 4)]
[(unique, 0x100001b2, 1) COPY (const, 0x0, 1)]
[(unique, 0x1000019b, 1) COPY (const, 0x1, 1)]
[(register, 0xb0, 4) COPY (const, 0x0, 4)]
[(register, 0xa0, 4) COPY (const, 0x8, 4)]
[ ---  BRANCH (ram, 0x16d4d4, 1)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(unique, 0x1000019a, 1) MULTIEQUAL (unique, 0x1000019d, 1) , (unique, 0x1000019c, 1) , (unique, 0x1000019b, 1)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[(unique, 0x100001b1, 1) MULTIEQUAL (unique, 0x100001b4, 1) , (unique, 0x100001b3, 1) , (unique, 0x100001b2, 1)]
[ ---  CBRANCH (ram, 0x16d670, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100001a4, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x16d700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6d, 1)]
[(unique, 0x100001ac, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x16d4ef, 1)]
[(unique, 0x100001ad, 1) COPY (const, 0x0, 1)]
[(unique, 0x1000022a, 4) COPY (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x16d540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0x100001ab, 1) MULTIEQUAL (unique, 0x100001ad, 1) , (unique, 0x100001ac, 1)]
[ ---  CBRANCH (ram, 0x16d673, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x16d6f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6d, 1)]
[(unique, 0x100001aa, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x16d507, 1)]
[(unique, 0x1000022e, 4) COPY (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x16d540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0x100001a9, 1) MULTIEQUAL (unique, 0x100001ab, 1) , (unique, 0x100001aa, 1)]
[ ---  CBRANCH (ram, 0x16d673, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x16d740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6d, 1)]
[(unique, 0x100001a6, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x16d51f, 1)]
[(unique, 0x10000232, 4) COPY (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x16d540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0x100001a5, 1) MULTIEQUAL (unique, 0x100001a9, 1) , (unique, 0x100001a6, 1)]
[ ---  CBRANCH (ram, 0x16d673, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x16d536, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6d, 1)]
[(unique, 0x100001a8, 1) COPY (const, 0x1, 1)]
[(unique, 0x100001a3, 1) MULTIEQUAL (unique, 0x100001ab, 1) , (unique, 0x100001a9, 1) , (unique, 0x100001a5, 1) , (unique, 0x100001a4, 1)]
[(unique, 0x100001b0, 1) COPY (const, 0x0, 1)]
[(unique, 0x10000199, 1) COPY (const, 0x0, 1)]
[(unique, 0x10000236, 4) COPY (register, 0xb0, 4)]
[ ---  BRANCH (ram, 0x16d540, 1)]
[(unique, 0x10000197, 1) MULTIEQUAL (unique, 0x1000019a, 1) , (unique, 0x1000019a, 1) , (unique, 0x1000019a, 1) , (unique, 0x10000199, 1) , (unique, 0x1000019a, 1) , (unique, 0x1000019a, 1)]
[(unique, 0x100001af, 1) MULTIEQUAL (unique, 0x100001b1, 1) , (unique, 0x100001b1, 1) , (unique, 0x100001b1, 1) , (unique, 0x100001b0, 1) , (unique, 0x100001b1, 1) , (unique, 0x100001b1, 1)]
[(register, 0xa0, 4) MULTIEQUAL (unique, 0x1000022a, 4) , (unique, 0x1000022e, 4) , (unique, 0x10000232, 4) , (unique, 0x10000236, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[(unique, 0x100001a1, 1) MULTIEQUAL (unique, 0x100001ad, 1) , (unique, 0x100001ab, 1) , (unique, 0x100001a9, 1) , (unique, 0x100001a3, 1) , (unique, 0x100001a5, 1) , (unique, 0x100001a8, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10d, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x10d, 4)]
[ ---  CBRANCH (ram, 0x16d4a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1f6df0, 8) , (register, 0x38, 4) , (const, 0x3, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16d650, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x16d56b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x16d56b, 1) , (unique, 0x100001af, 1)]
[ ---  CBRANCH (ram, 0x16d495, 1) , (unique, 0x10000197, 1)]
[(unique, 0x100000e3, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x16d57f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x16d710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000184, 4) , (const, 0x0, 4), (unique, 0x10000184, 4) INT_AND (register, 0x0, 4) , (const, 0x400, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x234, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x234, 4)]
[ ---  CBRANCH (ram, 0x16d4a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1f6df0, 8) , (register, 0x38, 4) , (const, 0x4, 4) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x400, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100000e2, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x16d57f, 1)]
[(unique, 0x100000e1, 1) MULTIEQUAL (unique, 0x100000e3, 1) , (unique, 0x100000e3, 1) , (unique, 0x100000e2, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x148, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x148, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x16d4a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000023a, 8), (unique, 0x1000023a, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x228, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x161, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x10000242, 8), (unique, 0x10000242, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x0, 8) , (const, 0x88, 8), (unique, 0x3200, 8) PTRSUB (unique, 0x100001c5, 8) , (const, 0x8, 8), (unique, 0x100001c5, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  CBRANCH (ram, 0x16d5b1, 1) , (unique, 0x100001a1, 1)]
[ ---  CBRANCH (ram, 0x16d6c0, 1) , (unique, 0x10000197, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x189, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x189, 4)]
[ ---  CALL (ram, 0x17ba60, 8) , (register, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x3200, 8) , (unique, 0x100001bd, 8), (unique, 0x100001bd, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c2260, 8), (unique, 0x3200, 8) PTRSUB (unique, 0x100001dd, 8) , (const, 0x18, 8), (unique, 0x100001dd, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c26e0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x217, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x217, 4)]
[ ---  CALL (ram, 0x17ba60, 8) , (register, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x3200, 8) , (unique, 0x100001b5, 8), (unique, 0x100001b5, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c20e0, 8), (unique, 0x3200, 8) PTRSUB (unique, 0x10000215, 8) , (const, 0x18, 8), (unique, 0x10000215, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c2560, 8)]
[ ---  BRANCH (ram, 0x16d5d5, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000024a, 8) , (register, 0x0, 8), (unique, 0x1000024a, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x191, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALL (ram, 0x179740, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 4), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x70, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1b6, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x197, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x191, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x18d, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000205, 8) , (register, 0x0, 4), (unique, 0x10000205, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0xa0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffefb3, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f5, 8), (unique, 0x100001f5, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16d4a6, 1) , (unique, 0x100000e0, 1), (unique, 0x100000e0, 1) BOOL_NEGATE (unique, 0x100000e1, 1)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16d4a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (const, 0x1004, 4), (register, 0xa0, 4) INT_AND (register, 0xa0, 4) , (const, 0x1004, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1e0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e0, 4)]
[ ---  CBRANCH (ram, 0x16d4a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x0, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000025a, 8), (unique, 0x1000025a, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000252, 8), (unique, 0x10000252, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16d4a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x1d, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000262, 8), (unique, 0x10000262, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000026a, 8) , (const, 0x16, 4), (unique, 0x1000026a, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3f, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
