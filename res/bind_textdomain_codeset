[ ---  CBRANCH (ram, 0x12e41b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4c2f08, 8) COPY (ram, 0x4c2f08, 8)]
[(ram, 0x4c2f10, 8) COPY (ram, 0x4c2f10, 8)]
[(ram, 0x4c8728, 8) COPY (ram, 0x4c8728, 8)]
[(ram, 0x4c8730, 8) COPY (ram, 0x4c8730, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12e430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c2f08, 8) COPY (ram, 0x4c2f08, 8)]
[(ram, 0x4c2f10, 8) COPY (ram, 0x4c2f10, 8)]
[(ram, 0x4c8728, 8) COPY (ram, 0x4c8728, 8)]
[(ram, 0x4c8730, 8) COPY (ram, 0x4c8730, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12e5c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8790, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1de, 4)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x1de, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x1de, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x1de, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x1de, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1de, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x10000167, 8), (unique, 0x10000167, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4aa0, 8), (register, 0x0, 8) CAST (unique, 0x10000229, 8), (unique, 0x10000229, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000221, 8), (unique, 0x10000221, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8728, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8728, 8) , (const, 0x11, 4)]
[ ---  BRANCH (ram, 0x12e444, 1)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000201, 8) COPY (ram, 0x4c2f08, 8), (ram, 0x4c2f08, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000231, 8), (unique, 0x10000231, 8) CAST (ram, 0x4c2f08, 8), (ram, 0x4c2f08, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8)]
[(unique, 0x100001d0, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001d8, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8)]
[(unique, 0x100001e0, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(unique, 0x100001e8, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(unique, 0x100001f0, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(unique, 0x100001f8, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[ ---  CBRANCH (ram, 0x12e472, 1) , (unique, 0x100001cf, 1), (unique, 0x100001cf, 1) INT_NOTEQUAL (unique, 0x100001c7, 8) , (const, 0x0, 8), (unique, 0x100001c7, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x100001d0, 8) , (const, 0x160, 4)]
[(ram, 0x4c2f08, 8) INDIRECT (unique, 0x100001d8, 8) , (const, 0x160, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (unique, 0x100001e0, 8) , (const, 0x160, 4)]
[(ram, 0x4c8728, 8) INDIRECT (unique, 0x100001e8, 8) , (const, 0x160, 4)]
[(ram, 0x4c8730, 8) INDIRECT (unique, 0x100001f0, 8) , (const, 0x160, 4)]
[(ram, 0x4c8790, 4) INDIRECT (unique, 0x100001f8, 4) , (const, 0x160, 4)]
[(register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001c7, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12e460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001c7, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12e5e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000239, 8), (unique, 0x10000239, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001c7, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x12e4ce, 1)]
[ ---  CBRANCH (ram, 0x12e4a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000241, 8), (unique, 0x10000241, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001c7, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x187, 4)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x187, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x187, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x187, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x187, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x187, 4)]
[ ---  CBRANCH (ram, 0x12e4ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (register, 0x30, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x195, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x195, 4), (ram, 0x4c2f08, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x195, 4), (ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x195, 4), (ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x195, 4), (ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x195, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[ ---  CBRANCH (ram, 0x12e5b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000249, 8), (unique, 0x10000249, 8) CALL (ram, 0x18aa40, 8) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a6, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000251, 8), (unique, 0x10000251, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001c7, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x1a9, 4), (ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x1a6, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x1a9, 4), (ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x1a6, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x1a9, 4), (ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x1a6, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x1a9, 4), (ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x1a6, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1a9, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1a6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001c7, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12e500, 1) , (register, 0x207, 1)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000259, 8), (unique, 0x10000259, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001c7, 8)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (unique, 0x100001f8, 4)]
[(ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (unique, 0x100001f0, 8)]
[(ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (unique, 0x100001e8, 8)]
[(ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (unique, 0x100001e0, 8)]
[(ram, 0x4c2f08, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (unique, 0x100001d8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x100001d0, 8)]
[ ---  CBRANCH (ram, 0x12e5b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x87, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x81, 4)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x87, 4), (ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x81, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x87, 4), (ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x81, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x87, 4), (ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x81, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x87, 4), (ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x81, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x87, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x81, 4)]
[ ---  CBRANCH (ram, 0x12e5b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000261, 8), (unique, 0x10000261, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x19, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(ram, 0x4c2f08, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x12e4ce, 1)]
[ ---  CALL (ram, 0x193a40, 8) , (unique, 0x3100, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000269, 8), (unique, 0x10000269, 8) CAST (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) COPY (const, 0x292f70, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa2, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9b, 4)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0xa2, 4), (ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x9f, 4), (ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x9b, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0xa2, 4), (ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x9f, 4), (ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x9b, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0xa2, 4), (ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x9f, 4), (ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x9b, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0xa2, 4), (ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x9f, 4), (ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x9b, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xa2, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x9f, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x9b, 4)]
[ ---  CBRANCH (ram, 0x12e5fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000271, 8), (unique, 0x10000271, 8) CALL (ram, 0x18aa40, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x12e60b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x10000279, 8), (unique, 0x10000279, 8) CAST (unique, 0x10000157, 8), (unique, 0x10000157, 8) COPY (const, 0x292f70, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14a, 4)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x14a, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x14a, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x14a, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x14a, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x14a, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x14e, 4), (ram, 0x4c2f08, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x14e, 4), (ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x14e, 4), (ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x14e, 4), (ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x14e, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x12e4ce, 1)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0xb2, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0xb2, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0xb2, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0xb2, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xb2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12e5f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000281, 8), (unique, 0x10000281, 8) CAST (unique, 0x10000201, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc2, 4)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0xc2, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0xc2, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0xc2, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0xc2, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xc2, 4)]
[(unique, 0x10000209, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x12e593, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x10000289, 8), (unique, 0x10000289, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0xd2, 4), (ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0xd0, 4), (ram, 0x4c2f08, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0xd2, 4), (ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0xd0, 4), (ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0xd2, 4), (ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0xd0, 4), (ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0xd2, 4), (ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0xd0, 4), (ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xd2, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xd0, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000291, 8) , (register, 0x0, 8), (unique, 0x10000291, 8) CAST (unique, 0x10000201, 8)]
[ ---  BRANCH (ram, 0x12e4c4, 1)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(ram, 0x4c2f08, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x12e580, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000299, 8), (unique, 0x10000299, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) COPY (unique, 0x10000219, 8), (unique, 0x10000219, 8) MULTIEQUAL (unique, 0x10000209, 8) , (unique, 0x10000211, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12d, 4)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x12d, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x12d, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x12d, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x12d, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x12d, 4)]
[(unique, 0x10000211, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x12e59c, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x100002a1, 8), (unique, 0x100002a1, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x126, 4), (ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x124, 4), (ram, 0x4c2f08, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x126, 4), (ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x124, 4), (ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x126, 4), (ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x124, 4), (ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x126, 4), (ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x124, 4), (ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x126, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x124, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0x100002a9, 8), (unique, 0x100002a9, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x12e4c4, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0xdb, 4), (ram, 0x4c2f08, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0xdb, 4), (ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0xdb, 4), (ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0xdb, 4), (ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xdb, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002b9, 8) , (unique, 0xbd00, 4), (unique, 0x100002b9, 8) CAST (ram, 0x4c2f10, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002b1, 8), (unique, 0x100002b1, 8) CAST (ram, 0x4c2f10, 8), (ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(ram, 0x4c2f08, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x0, 8) , (register, 0xb0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x12e41b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8790, 4) , (const, 0x0, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c2f08, 8) INDIRECT (ram, 0x4c2f08, 8) , (const, 0x114, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x114, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x114, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x114, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x114, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x1000015f, 8), (unique, 0x1000015f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4aa0, 8), (register, 0x0, 8) CAST (unique, 0x100002c9, 8), (unique, 0x100002c9, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002c1, 8), (unique, 0x100002c1, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8730, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8730, 8) , (const, 0x11, 4)]
[ ---  BRANCH (ram, 0x12e41b, 1)]
[(ram, 0x4c2f08, 8) COPY (ram, 0x4c2f08, 8), (ram, 0x4c2f08, 8) MULTIEQUAL (ram, 0x4c2f08, 8) , (ram, 0x4c2f08, 8)]
[(ram, 0x4c2f10, 8) COPY (ram, 0x4c2f10, 8), (ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(ram, 0x4c8728, 8) COPY (ram, 0x4c8728, 8), (ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c8730, 8) COPY (ram, 0x4c8730, 8), (ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xb0, 8)]
