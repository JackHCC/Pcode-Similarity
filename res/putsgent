[ ---  CBRANCH (ram, 0x20cf28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2c, 4)]
[ ---  CBRANCH (ram, 0x20cf28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x22a7f0, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3c, 4)]
[ ---  CBRANCH (ram, 0x20cf28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x22a7f0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x4c, 4)]
[ ---  CBRANCH (ram, 0x20cf28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x22a820, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x5c, 4)]
[ ---  CBRANCH (ram, 0x20cf28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x22a820, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000026c, 8) , (const, 0x16, 4), (unique, 0x1000026c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x317, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x317, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x20cd95, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x20cd91, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000284, 8), (unique, 0x10000284, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000027c, 8), (unique, 0x1000027c, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000274, 8), (unique, 0x10000274, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x30, 8) , (const, 0x88, 8)]
[ ---  CBRANCH (ram, 0x20cd6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x312, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x312, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xa9, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xa9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x20cd86, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x2f5, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2f5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2f5, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb2, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xb2, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000294, 8) , (register, 0x80, 8), (unique, 0x10000294, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x30, 8) , (const, 0x88, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xba, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xba, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x20cdbd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000029c, 8), (unique, 0x1000029c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c365, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xe5, 4)]
[(register, 0x0, 4) INT_2COMP (unique, 0x10000179, 4), (unique, 0x10000179, 4) INT_SRIGHT (register, 0x0, 4) , (const, 0x1f, 4), (register, 0x0, 4) CALL (ram, 0x155720, 8) , (unique, 0x100002a4, 8) , (unique, 0x1000017e, 8) , (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0x100002a4, 8) CAST (register, 0x30, 8), (unique, 0x1000017e, 8) COPY (const, 0x28e98e, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8)]
[(unique, 0x1000016c, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x20ce08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002ac, 8), (unique, 0x100002ac, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x1000016a, 1) MULTIEQUAL (unique, 0x1000016c, 1) , (unique, 0x1000016b, 1)]
[ ---  CBRANCH (ram, 0x20cde0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xb8, 8)]
[(register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c365, 8)]
[ ---  CBRANCH (ram, 0x20cdf7, 1) , (unique, 0x1000016d, 1), (unique, 0x1000016d, 1) BOOL_NEGATE (unique, 0x1000016a, 1)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x28f2c2, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2c5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2c5, 4)]
[(unique, 0x1000016b, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x20cf60, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x155720, 8) , (unique, 0x100002b4, 8) , (unique, 0x10000186, 8) , (register, 0x10, 8), (unique, 0x100002b4, 8) CAST (register, 0x30, 8), (unique, 0x10000186, 8) COPY (const, 0x28e9d5, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0xb0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x20ce10, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xb0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x20cf70, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x28, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x27d, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x27d, 4)]
[ ---  CBRANCH (ram, 0x20ce29, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x17b150, 8) , (register, 0x30, 8) , (const, 0x3a, 4)]
[(register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x20ce29, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x28, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x139, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x137, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x139, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x137, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x3a, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(unique, 0x10000172, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x20ce78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000170, 1) MULTIEQUAL (unique, 0x10000172, 1) , (unique, 0x10000171, 1)]
[ ---  CBRANCH (ram, 0x20ce50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8)]
[(register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c365, 8)]
[ ---  CBRANCH (ram, 0x20ce67, 1) , (unique, 0x10000173, 1), (unique, 0x10000173, 1) BOOL_NEGATE (unique, 0x10000170, 1)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x28f2c2, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x259, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x259, 4)]
[(unique, 0x10000171, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x20cf50, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x155720, 8) , (unique, 0x100002c4, 8) , (unique, 0x1000018e, 8) , (register, 0x10, 8), (unique, 0x100002c4, 8) CAST (register, 0x30, 8), (unique, 0x1000018e, 8) COPY (const, 0x28e9d5, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x20ce81, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x20cec0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x28, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x206, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x206, 4)]
[ ---  CBRANCH (ram, 0x20ce96, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x17b150, 8) , (register, 0x30, 8) , (const, 0xa, 4)]
[(register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x20cea8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000023e, 8), (unique, 0x1000023e, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x28, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x164, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x162, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x164, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x162, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0xa, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x20cede, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000236, 8), (unique, 0x10000236, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1b1, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1b1, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x30, 8) , (const, 0x88, 8)]
[ ---  CBRANCH (ram, 0x20ce9e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x30, 8) , (const, 0x88, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1bf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002d4, 8) , (const, 0x0, 8), (unique, 0x100002d4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x20cf03, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1bf, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1f7, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1f7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1cf, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1cf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x1000025f, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000267, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x20cf1d, 1) , (unique, 0x1000025e, 1), (unique, 0x1000025e, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x1000025f, 8) , (const, 0x1e9, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x10000267, 4) , (const, 0x1e9, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (unique, 0x1000025f, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (unique, 0x10000267, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (unique, 0x10000123, 4), (unique, 0x10000123, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 4) , (const, 0x0, 4), (register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
