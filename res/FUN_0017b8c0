[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002b3, 8), (unique, 0x100002b3, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3d, 4)]
[(ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x3d, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3d, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3d, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002ab, 8), (unique, 0x100002ab, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x17b921, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x10, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x30, 4) , (const, 0x5, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x17b970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x58585858, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) PTRADD (register, 0x38, 8) , (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x8, 4) , (register, 0x30, 4), (register, 0x8, 4) INT_ADD (register, 0x0, 4) , (const, 0xfffffffa, 4)]
[ ---  CBRANCH (ram, 0x17b921, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x5858, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100002c3, 8), (unique, 0x100002c3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffff14, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x17b9ac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed858, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd1, 4)]
[(ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0xd1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd1, 4)]
[ ---  CALL (ram, 0x120ff0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[(register, 0x0, 8) INT_XOR (register, 0x0, 8) , (stack, 0xffffffffffffff18, 8), (register, 0x0, 8) INT_LEFT (stack, 0xffffffffffffff20, 8) , (const, 0x10, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xd1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13e, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x13e, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (ram, 0x4ed858, 8), (register, 0x18, 8) INT_XOR (unique, 0x49b00, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e58e0, 8), (ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x13e, 4), (unique, 0x49b00, 8) CALLOTHER (const, 0x46, 4), (ram, 0x4ed858, 8) MULTIEQUAL (ram, 0x4ed858, 8) , (register, 0x0, 8)]
[(register, 0x0, 4) INT_OR (unique, 0x1000010d, 4) , (const, 0xc2, 4), (unique, 0x1000010d, 4) INT_AND (register, 0x10, 4) , (const, 0xffffff3c, 4)]
[(register, 0x18, 4) COPY (const, 0x3a2f8, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002cb, 8) , (unique, 0xbb00, 1), (unique, 0x100002cb, 8) CAST (unique, 0x3400, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000023f, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000023f, 8) COPY (const, 0x2bbc80, 8), (register, 0x8, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000125, 8), (unique, 0x10000125, 8) INT_MULT (register, 0x38, 8) , (const, 0xffffffffffffffc2, 8), (register, 0x38, 8) INT_DIV (register, 0x10, 8) , (const, 0x1f, 8), (register, 0x10, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x1, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x100002db, 8), (unique, 0x100002db, 8) INT_ADD (unique, 0x100002d3, 8) , (const, 0x1, 8), (unique, 0x100002d3, 8) CAST (unique, 0x3400, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000247, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x10000247, 8) COPY (const, 0x2bbc80, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (unique, 0x1000013d, 8), (unique, 0x1000013d, 8) INT_MULT (register, 0x10, 8) , (const, 0xffffffffffffffc2, 8), (register, 0x10, 8) INT_DIV (register, 0x10, 8) , (const, 0x1f, 8), (register, 0x38, 8) INT_DIV (register, 0x10, 8) , (const, 0x1f, 8), (register, 0x10, 8) INT_DIV (register, 0x10, 8) , (const, 0x3e, 8), (register, 0x10, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x1, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x100002eb, 8), (unique, 0x100002eb, 8) INT_ADD (unique, 0x100002e3, 8) , (const, 0x2, 8), (unique, 0x100002e3, 8) CAST (unique, 0x3400, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000024f, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x1000024f, 8) COPY (const, 0x2bbc80, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (unique, 0x10000155, 8), (unique, 0x10000155, 8) INT_MULT (register, 0x10, 8) , (const, 0xffffffffffffffc2, 8), (register, 0x10, 8) INT_DIV (register, 0x10, 8) , (const, 0x1f, 8), (register, 0x38, 8) INT_DIV (register, 0x30, 8) , (const, 0xf04, 8), (register, 0x10, 8) INT_DIV (register, 0x30, 8) , (const, 0x1e08, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x100002fb, 8), (unique, 0x100002fb, 8) INT_ADD (unique, 0x100002f3, 8) , (const, 0x3, 8), (unique, 0x100002f3, 8) CAST (unique, 0x3400, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000257, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x10000257, 8) COPY (const, 0x2bbc80, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (unique, 0x1000016d, 8), (unique, 0x1000016d, 8) INT_MULT (register, 0x10, 8) , (const, 0xffffffffffffffc2, 8), (register, 0x10, 8) INT_DIV (register, 0x10, 8) , (const, 0x1f, 8), (register, 0x38, 8) INT_DIV (register, 0x10, 8) , (const, 0x745f, 8), (register, 0x10, 8) INT_DIV (register, 0x10, 8) , (const, 0xe8be, 8), (register, 0x10, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x3, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000303, 8) , (unique, 0xbb00, 1), (unique, 0x10000303, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000025f, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x1000025f, 8) COPY (const, 0x2bbc80, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (unique, 0x10000185, 8), (unique, 0x10000185, 8) INT_MULT (register, 0x10, 8) , (const, 0xffffffffffffffc2, 8), (register, 0x10, 8) INT_DIV (register, 0x10, 8) , (const, 0x1f, 8), (register, 0x38, 8) INT_DIV (register, 0x30, 8) , (const, 0xe17810, 8), (register, 0x10, 8) INT_DIV (register, 0x30, 8) , (const, 0x1c2f020, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3200, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5e1, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x50f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x445, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x37b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x28b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x215, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x5e1, 4), (ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x50f, 4), (ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x445, 4), (ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x37b, 4), (ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x28b, 4), (ram, 0x4ed858, 8) INDIRECT (unique, 0x1000028f, 8) , (const, 0x215, 4), (unique, 0x1000028f, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000313, 8), (unique, 0x10000313, 8) INT_ADD (unique, 0x1000030b, 8) , (const, 0x5, 8), (unique, 0x1000030b, 8) CAST (unique, 0x3400, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000267, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x10000267, 8) COPY (const, 0x2bbc80, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0x1000019d, 8), (unique, 0x1000019d, 8) INT_MULT (register, 0x10, 8) , (const, 0xffffffffffffffc2, 8), (register, 0x10, 8) INT_DIV (register, 0x10, 8) , (const, 0x1f, 8), (register, 0x30, 8) INT_DIV (register, 0x30, 8) , (const, 0x369b13e0, 8), (register, 0x10, 8) INT_DIV (register, 0x30, 8) , (const, 0x6d3627c0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3200, 8)]
[ ---  CBRANCH (ram, 0x17bb80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x689, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x689, 4)]
[(ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x689, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x689, 4)]
[(register, 0x0, 4) CALL (ram, 0x20fbb0, 8) , (register, 0x38, 8) , (const, 0x1c0, 4)]
[ ---  CBRANCH (ram, 0x17bbf8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x2, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x65d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x65d, 4)]
[(ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x65d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x65d, 4)]
[ ---  CBRANCH (ram, 0x17bba2, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f800, 8) , (const, 0x1, 4) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[ ---  CBRANCH (ram, 0x17bbce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000031b, 8), (unique, 0x1000031b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x67f, 4)]
[(ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x67f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000323, 8) , (unique, 0xbc80, 4), (unique, 0x10000323, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x17b940, 1)]
[ ---  CBRANCH (ram, 0x17bbe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x612, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x612, 4)]
[(ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x612, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x612, 4)]
[(register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (register, 0x38, 8) , (register, 0x0, 4) , (const, 0x180, 8)]
[ ---  BRANCH (ram, 0x17bb8d, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4ed858, 8) MULTIEQUAL (ram, 0x4ed858, 8) , (ram, 0x4ed858, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x17bc30, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x655, 4)]
[(ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x655, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000032b, 8) , (unique, 0xbc80, 4), (unique, 0x1000032b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x100002a7, 4) COPY (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x17b940, 1)]
[ ---  CBRANCH (ram, 0x17bbce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x11, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000333, 8), (unique, 0x10000333, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3200, 8) INT_ADD (ram, 0x4ed858, 8) , (const, 0x1e61, 8), (ram, 0x4ed858, 8) MULTIEQUAL (ram, 0x4ed858, 8) , (ram, 0x4ed858, 8)]
[ ---  CBRANCH (ram, 0x17b9f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x642, 4)]
[(ram, 0x4ed858, 8) INDIRECT (unique, 0x10000297, 8) , (const, 0x642, 4), (unique, 0x10000297, 8) COPY (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000033b, 8) , (const, 0x11, 4), (unique, 0x1000033b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4ed858, 8) MULTIEQUAL (ram, 0x4ed858, 8) , (ram, 0x4ed858, 8) , (ram, 0x4ed858, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100002a3, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x17b940, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5fd, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x1000022f, 8) , (unique, 0x10000227, 8) , (const, 0x121, 4) , (unique, 0x10000237, 8), (unique, 0x10000237, 8) COPY (const, 0x2b7dc8, 8), (unique, 0x1000022f, 8) COPY (const, 0x2b7da0, 8), (unique, 0x10000227, 8) COPY (const, 0x2b3fed, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5fd, 4)]
[(ram, 0x4ed858, 8) COPY (ram, 0x4ed858, 8), (ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x5fd, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x72, 4)]
[(ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0x72, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000343, 8) , (const, 0x16, 4), (unique, 0x10000343, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x1000029f, 4) COPY (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4ed858, 8) MULTIEQUAL (ram, 0x4ed858, 8) , (ram, 0x4ed858, 8) , (ram, 0x4ed858, 8) , (ram, 0x4ed858, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x1000029f, 4) , (unique, 0x100002a3, 4) , (unique, 0x100002a7, 4) , (stack, 0xffffffffffffff14, 4)]
[ ---  CBRANCH (ram, 0x17bc47, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000034b, 8), (unique, 0x1000034b, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa3, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa3, 4)]
[(ram, 0x4ed858, 8) COPY (ram, 0x4ed858, 8), (ram, 0x4ed858, 8) INDIRECT (ram, 0x4ed858, 8) , (const, 0xa3, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ed858, 8) COPY (ram, 0x4ed858, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
