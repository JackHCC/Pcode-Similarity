[(register, 0x38, 8) COPY (const, 0x1, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000470, 8), (unique, 0x10000470, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x10000358, 8) COPY (register, 0x8, 8), (register, 0x8, 8) COPY (const, 0x0, 8)]
[(unique, 0x100003d0, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100003d0, 8) , (unique, 0x100003d8, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000328, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000358, 8) , (unique, 0x10000360, 8) , (unique, 0x10000368, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000380, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000358, 8) , (unique, 0x10000360, 8) , (unique, 0x10000368, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19e0e6, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3400, 8) , (register, 0x8, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000358, 8) , (unique, 0x10000360, 8) , (unique, 0x10000368, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10000380, 8) , (unique, 0x10000388, 8)]
[(register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (unique, 0x100001d4, 8) , (const, 0x1, 8), (unique, 0x100001d4, 8) INT_ADD (register, 0x10, 8) , (register, 0x30, 8), (register, 0x0, 8) COPY (unique, 0x10000338, 8), (unique, 0x10000338, 8) MULTIEQUAL (unique, 0x10000328, 8) , (unique, 0x10000330, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19e490, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (unique, 0x100001d4, 8) , (const, 0x1, 8), (unique, 0x100001d4, 8) INT_ADD (register, 0x10, 8) , (register, 0x30, 8), (register, 0x0, 8) COPY (unique, 0x10000338, 8), (unique, 0x10000338, 8) MULTIEQUAL (unique, 0x10000328, 8) , (unique, 0x10000330, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(register, 0x38, 8) INT_SUB (register, 0x0, 8) , (register, 0x30, 8)]
[(unique, 0x10000330, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x10000388, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19e0bc, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x19e4e8, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x19e55d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x19e0b3, 1)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x10000368, 8) COPY (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x19e0b3, 1)]
[(register, 0x38, 8) COPY (const, 0x1, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000360, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0x100003d8, 8) COPY (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x19e0b3, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(stack, 0xfffffffffffff780, 8) COPY (const, 0x1, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000340, 8) COPY (register, 0x8, 8), (register, 0x8, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000420, 8) COPY (register, 0x90, 8), (register, 0x90, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xfffffffffffff780, 8) MULTIEQUAL (stack, 0xfffffffffffff780, 8) , (stack, 0xfffffffffffff780, 8) , (stack, 0xfffffffffffff780, 8) , (stack, 0xfffffffffffff780, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x10000420, 8) , (unique, 0x10000428, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[(unique, 0x10000310, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000340, 8) , (unique, 0x10000348, 8) , (unique, 0x10000350, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000370, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000340, 8) , (unique, 0x10000348, 8) , (unique, 0x10000350, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19e135, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3400, 8) , (register, 0x8, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000340, 8) , (unique, 0x10000348, 8) , (unique, 0x10000350, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xfffffffffffff780, 8) MULTIEQUAL (stack, 0xfffffffffffff780, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10000370, 8) , (unique, 0x10000378, 8)]
[ ---  CBRANCH (ram, 0x19e4b0, 1) , (unique, 0x100001bf, 1), (unique, 0x100001bf, 1) BOOL_AND (register, 0x200, 1) , (unique, 0x100001c1, 1), (unique, 0x100001c1, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbb00, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (unique, 0x100001dc, 8) , (const, 0x1, 8), (unique, 0x100001dc, 8) INT_ADD (register, 0x10, 8) , (register, 0x90, 8), (register, 0x0, 8) COPY (unique, 0x10000320, 8), (unique, 0x10000320, 8) MULTIEQUAL (unique, 0x10000310, 8) , (unique, 0x10000318, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(register, 0x8, 8) INT_SUB (register, 0x0, 8) , (register, 0x90, 8)]
[(unique, 0x10000318, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x10000378, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19e106, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x19e500, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x19e56a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (stack, 0xfffffffffffff780, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x19e0fd, 1)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x10000350, 8) COPY (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x19e0fd, 1)]
[(stack, 0xfffffffffffff780, 8) COPY (const, 0x1, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000348, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0x10000428, 8) COPY (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x19e0fd, 1)]
[(unique, 0x10000440, 8) COPY (stack, 0xfffffffffffff780, 8), (stack, 0xfffffffffffff780, 8) MULTIEQUAL (stack, 0xfffffffffffff780, 8) , (register, 0x8, 8)]
[(unique, 0x10000450, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x90, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x19e151, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x3100, 8) INT_ADD (register, 0x90, 8) , (const, 0x1, 8)]
[(unique, 0x10000448, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000458, 8) COPY (register, 0x30, 8)]
[(stack, 0xfffffffffffff788, 8) MULTIEQUAL (unique, 0x10000450, 8) , (unique, 0x10000458, 8)]
[(stack, 0xfffffffffffff780, 8) MULTIEQUAL (unique, 0x10000440, 8) , (unique, 0x10000448, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8)]
[(unique, 0x3c80, 8) PTRADD (unique, 0x10000280, 8) , (const, 0x100, 8) , (const, 0x8, 8), (unique, 0x10000280, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001b3, 8) , (register, 0x8, 8), (unique, 0x100001b3, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19e170, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3c80, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (stack, 0xfffffffffffff780, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x19e32b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4f7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x4f7, 4)]
[ ---  CBRANCH (ram, 0x19e510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121220, 8) , (register, 0x10, 8) , (unique, 0x3400, 8) , (stack, 0xfffffffffffff788, 8)]
[(register, 0xa0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000308, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0x100003c8, 8) COPY (register, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100003c8, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x136, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x0, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000214, 8) , (register, 0x8, 8) , (const, 0x8, 8), (unique, 0x10000214, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000308, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100003c8, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19e1a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000308, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x154, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x154, 4)]
[ ---  CBRANCH (ram, 0x19e358, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121220, 8) , (register, 0x10, 8) , (unique, 0x3400, 8) , (stack, 0xfffffffffffff788, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) PTRADD (register, 0x10, 8) , (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0x3100, 8) INT_SUB (stack, 0xfffffffffffff788, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_SUB (register, 0x8, 8) , (stack, 0xfffffffffffff780, 8)]
[(register, 0x0, 8) INT_SUB (const, 0x1, 8) , (stack, 0xfffffffffffff788, 8)]
[(unique, 0x100003e0, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000430, 8) COPY (register, 0x8, 8), (register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x19e239, 1)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x10000430, 8) , (unique, 0x10000438, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d6, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d6, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x0, 8) CALL (ram, 0x1210c0, 8) , (register, 0x38, 8) , (const, 0x0, 4) , (register, 0x10, 8), (register, 0x38, 8) CAST (unique, 0x10000478, 8), (unique, 0x10000478, 8) INT_ADD (register, 0x38, 8) , (register, 0x38, 8), (register, 0x10, 8) INT_SUB (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (register, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100003e0, 8) , (unique, 0x10000460, 8) , (unique, 0x10000460, 8) , (unique, 0x10000460, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (unique, 0x3400, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x19e510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3400, 8) , (const, 0x0, 8), (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (register, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (unique, 0x3400, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x19e510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x10000460, 8) COPY (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x19e220, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000234, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x10000234, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000480, 8), (unique, 0x10000480, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3400, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x100002c0, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x19e230, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (stack, 0xfffffffffffff780, 8)]
[(unique, 0x100002c8, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x19e230, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[(unique, 0x100002d0, 8) COPY (register, 0x0, 8)]
[(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002c0, 8) , (unique, 0x100002c8, 8) , (unique, 0x100002d0, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002e8, 8) COPY (stack, 0xfffffffffffff788, 8)]
[ ---  CBRANCH (ram, 0x19e280, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (stack, 0xfffffffffffff788, 8) , (register, 0xb8, 8)]
[(unique, 0x100002f0, 8) COPY (register, 0xb8, 8)]
[(unique, 0x3b80, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002e8, 8) , (unique, 0x100002f0, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000488, 8), (unique, 0x10000488, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002e8, 8) , (unique, 0x100002f0, 8)]
[ ---  CBRANCH (ram, 0x19e2bf, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3100, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002e8, 8) , (unique, 0x100002f0, 8)]
[ ---  CBRANCH (ram, 0x19e548, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x19e2b6, 1)]
[ ---  CBRANCH (ram, 0x19e2a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (unique, 0x3100, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x30, 8) CAST (unique, 0x10000490, 8), (unique, 0x10000490, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3100, 8)]
[(unique, 0x100003b8, 8) COPY (stack, 0xfffffffffffff788, 8)]
[ ---  CBRANCH (ram, 0x19e577, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (stack, 0xfffffffffffff788, 8)]
[ ---  CBRANCH (ram, 0x19e577, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0xb8, 8) , (const, 0x1, 8)]
[(unique, 0x10000390, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x19e306, 1)]
[(unique, 0x100003a8, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x100003a0, 8), (unique, 0x100003a0, 8) MULTIEQUAL (unique, 0x10000390, 8) , (unique, 0x10000398, 8)]
[ ---  CBRANCH (ram, 0x19e2f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x100003a0, 8), (unique, 0x100003a0, 8) MULTIEQUAL (unique, 0x10000390, 8) , (unique, 0x10000398, 8)]
[(unique, 0x10000398, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x100003b0, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19e30f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x10, 8) , (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000244, 8) , (const, 0x1, 8), (unique, 0x10000244, 8) INT_SUB (register, 0x10, 8) , (stack, 0xfffffffffffff788, 8)]
[ ---  CBRANCH (ram, 0x19e57f, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100003a8, 8) , (unique, 0x100003b0, 8) , (unique, 0x100003b8, 8) , (unique, 0x100003b8, 8)]
[(unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x19e512, 1)]
[(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (stack, 0xfffffffffffff780, 8)]
[(unique, 0x10000438, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x19e236, 1)]
[ ---  CBRANCH (ram, 0x19e548, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000498, 8), (unique, 0x10000498, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0xb0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x19e236, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(unique, 0x3100, 8) INT_SUB (stack, 0xfffffffffffff788, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (stack, 0xfffffffffffff788, 8) , (const, 0x1, 8)]
[(unique, 0x100002f8, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x8, 8) , (stack, 0xfffffffffffff788, 8)]
[ ---  CBRANCH (ram, 0x19e378, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (stack, 0xfffffffffffff788, 8), (register, 0x0, 8) INT_SUB (register, 0x8, 8) , (stack, 0xfffffffffffff788, 8)]
[(unique, 0x10000300, 8) COPY (stack, 0xfffffffffffff788, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002f8, 8) , (unique, 0x10000300, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (unique, 0x3100, 8) , (const, 0x1, 8)]
[(register, 0xa8, 8) INT_SUB (const, 0x1, 8) , (stack, 0xfffffffffffff788, 8)]
[(unique, 0x10000400, 8) COPY (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x19e3b6, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3dc, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3dc, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x0, 8) CALL (ram, 0x1210c0, 8) , (unique, 0x3400, 8) , (const, 0x0, 4) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0x3400, 8) , (register, 0x80, 8), (unique, 0x3400, 8) CAST (unique, 0x100004a0, 8), (unique, 0x100004a0, 8) INT_ADD (register, 0x38, 8) , (register, 0x80, 8), (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (register, 0x8, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000400, 8) , (unique, 0x10000468, 8) , (unique, 0x10000468, 8) , (unique, 0x10000468, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (unique, 0x3400, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x19e510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3400, 8) , (const, 0x0, 8), (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (register, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (unique, 0x3400, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x19e510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000468, 8) COPY (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x19e3b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000025c, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x1000025c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100004a8, 8), (unique, 0x100004a8, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3400, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) CAST (unique, 0x100004b0, 8), (unique, 0x100004b0, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (stack, 0xfffffffffffff788, 8)]
[ ---  CBRANCH (ram, 0x19e438, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (stack, 0xfffffffffffff788, 8) , (register, 0xa0, 8)]
[(unique, 0x100002d8, 8) COPY (stack, 0xfffffffffffff788, 8)]
[ ---  CBRANCH (ram, 0x19e4d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x19e42f, 1)]
[ ---  CBRANCH (ram, 0x19e420, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xa0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002d8, 8) , (register, 0x0, 8)]
[(register, 0x10, 8) CAST (unique, 0x100004b8, 8), (unique, 0x100004b8, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x19e482, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x19e537, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[(unique, 0x100002b0, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x19e478, 1)]
[ ---  CBRANCH (ram, 0x19e468, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002b0, 8) , (unique, 0x100002b8, 8)]
[(unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x19e512, 1)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x0, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x19e585, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004c0, 8), (unique, 0x100004c0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ee, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x100002b8, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19e537, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000026c, 8) , (const, 0x1, 8), (unique, 0x1000026c, 8) INT_SUB (register, 0x0, 8) , (stack, 0xfffffffffffff788, 8)]
[(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x19e3b3, 1)]
[ ---  CBRANCH (ram, 0x19e4d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100004c8, 8), (unique, 0x100004c8, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0xa8, 8) , (register, 0xb0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002d8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x19e3b3, 1)]
