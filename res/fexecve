[(unique, 0x100000b3, 8) COPY (ram, 0x4eae68, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c7, 8), (unique, 0x100000c7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1e4f40, 1) , (unique, 0x10000057, 1), (unique, 0x10000057, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x88, 8) INT_ZEXT (unique, 0x100000cf, 4), (unique, 0x100000cf, 4) CAST (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1e4f40, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xfa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000d3, 8) , (const, 0x16, 4), (unique, 0x100000d3, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x1e4f4e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x26, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000db, 8), (unique, 0x100000db, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x164f50, 8) , (unique, 0x3c80, 8) , (const, 0x1b, 8) , (unique, 0x10000093, 8) , (register, 0x88, 8) , (const, 0x1000, 8), (unique, 0x10000093, 8) COPY (const, 0x2b538d, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[ ---  CALL (ram, 0x1e4e30, 8) , (unique, 0x3c80, 8) , (register, 0x30, 8) , (register, 0x10, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x90, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x90, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8a, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x9a, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x8a, 4)]
[(unique, 0x100000bb, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000e3, 8), (unique, 0x100000e3, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100000b3, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x90, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8a, 4)]
[ ---  CBRANCH (ram, 0x1e4f33, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f760, 8) , (const, 0x1, 4) , (unique, 0x1000009b, 8) , (register, 0x20, 8), (unique, 0x1000009b, 8) COPY (const, 0x2b539e, 8)]
[(unique, 0x100000bf, 4) COPY (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1e4f33, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000eb, 8), (unique, 0x100000eb, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100000b3, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x100000c3, 4) COPY (unique, 0xbc80, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000f3, 8) , (register, 0x28, 4), (unique, 0x100000f3, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100000b3, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x28, 4) MULTIEQUAL (unique, 0x100000bb, 4) , (unique, 0x100000bf, 4) , (unique, 0x100000c3, 4)]
[ ---  BRANCH (ram, 0x1e4f4e, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x1e4f95, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000fb, 8), (unique, 0x100000fb, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe3, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe3, 4)]
[ ---  RETURN (const, 0x1, 4)]
