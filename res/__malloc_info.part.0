[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000675, 8), (unique, 0x10000675, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffee68, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffee08, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(unique, 0x3c80, 8) CAST (unique, 0x1000067d, 8), (unique, 0x1000067d, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffefd8, 8)]
[(unique, 0x3c80, 8) CAST (unique, 0x10000685, 8), (unique, 0x10000685, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffee98, 8)]
[(unique, 0x3c80, 8) CAST (unique, 0x1000068d, 8), (unique, 0x1000068d, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffefe8, 8)]
[(stack, 0xffffffffffffee60, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffee58, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffee50, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffee38, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffee48, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffee30, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffee40, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffee68, 8) MULTIEQUAL (stack, 0xffffffffffffee68, 8) , (unique, 0x1000023d, 8)]
[(stack, 0xffffffffffffee60, 8) MULTIEQUAL (stack, 0xffffffffffffee60, 8) , (unique, 0x10000235, 8)]
[(stack, 0xffffffffffffee58, 8) MULTIEQUAL (stack, 0xffffffffffffee58, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffee50, 8) MULTIEQUAL (stack, 0xffffffffffffee50, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffee48, 8) MULTIEQUAL (stack, 0xffffffffffffee48, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffee40, 8) MULTIEQUAL (stack, 0xffffffffffffee40, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffee38, 8) MULTIEQUAL (stack, 0xffffffffffffee38, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffee30, 8) MULTIEQUAL (stack, 0xffffffffffffee30, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffee08, 8) MULTIEQUAL (stack, 0xffffffffffffee08, 8) , (unique, 0x10000245, 8)]
[(ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x8a, 4), (ram, 0x4c5728, 4) MULTIEQUAL (ram, 0x4c5728, 4) , (unique, 0x10000266, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x8a, 4), (ram, 0x4c5738, 8) MULTIEQUAL (ram, 0x4c5738, 8) , (unique, 0x1000026a, 8)]
[(stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffefd8, 8) MULTIEQUAL (stack, 0xffffffffffffefd8, 8) , (unique, 0x10000282, 8)]
[(stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffefe0, 8) MULTIEQUAL (stack, 0xffffffffffffefe0, 8) , (unique, 0x1000028a, 8)]
[(stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffefe8, 8) MULTIEQUAL (stack, 0xffffffffffffefe8, 8) , (unique, 0x10000292, 8)]
[(stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffeff0, 8) MULTIEQUAL (stack, 0xffffffffffffeff0, 8) , (unique, 0x1000029a, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x100002a2, 8)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x8a, 4), (ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x8a, 4), (ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[ ---  CALL (ram, 0x470c30, 8) , (register, 0x38, 8) , (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) COPY (const, 0x49b21a, 8)]
[(unique, 0x100005cd, 8) COPY (ram, 0x49b118, 8), (ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x8a, 4), (ram, 0x49b118, 8) MULTIEQUAL (ram, 0x49b118, 8) , (unique, 0x1000025e, 8)]
[(unique, 0x100005c5, 8) COPY (ram, 0x49b110, 8), (ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x8a, 4), (ram, 0x49b110, 8) MULTIEQUAL (ram, 0x49b110, 8) , (unique, 0x10000256, 8)]
[ ---  CBRANCH (ram, 0x422c93, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000695, 8), (unique, 0x10000695, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x1000024e, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000069d, 8), (unique, 0x1000069d, 8) CAST (stack, 0xffffffffffffee08, 8)]
[(ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x59d, 4)]
[(ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x59d, 4)]
[(ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x59d, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x59d, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x59d, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x59d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006a5, 8) , (const, 0x1, 4), (unique, 0x100006a5, 8) CAST (stack, 0xffffffffffffee08, 8)]
[(unique, 0x10000635, 8) COPY (unique, 0x100005c5, 8)]
[(unique, 0x1000064d, 8) COPY (unique, 0x100005cd, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5a3, 4)]
[(ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x5a3, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x5a3, 4)]
[(stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x5a3, 4)]
[(stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x5a3, 4)]
[(stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x5a3, 4)]
[(stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x5a3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5a3, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x5a3, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x5a3, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[(unique, 0x1000063d, 8) COPY (ram, 0x49b110, 8), (ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x5a3, 4)]
[(unique, 0x10000655, 8) COPY (ram, 0x49b118, 8), (ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x5a3, 4)]
[ ---  BRANCH (ram, 0x422838, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100006ad, 8), (unique, 0x100006ad, 8) CAST (stack, 0xffffffffffffee08, 8)]
[(ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0xb2, 4)]
[(ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0xb2, 4)]
[(ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0xb2, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0xb2, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0xb2, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0xb2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006b5, 8) , (const, 0x1, 4), (unique, 0x100006b5, 8) CAST (stack, 0xffffffffffffee08, 8)]
[(unique, 0x1000062d, 8) COPY (unique, 0x100005c5, 8)]
[(unique, 0x10000645, 8) COPY (unique, 0x100005cd, 8)]
[(ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffeff0, 8) MULTIEQUAL (stack, 0xffffffffffffeff0, 8) , (stack, 0xffffffffffffeff0, 8) , (stack, 0xffffffffffffeff0, 8) , (stack, 0xffffffffffffeff0, 8)]
[(stack, 0xffffffffffffefe8, 8) MULTIEQUAL (stack, 0xffffffffffffefe8, 8) , (stack, 0xffffffffffffefe8, 8) , (stack, 0xffffffffffffefe8, 8) , (stack, 0xffffffffffffefe8, 8)]
[(stack, 0xffffffffffffefe0, 8) MULTIEQUAL (stack, 0xffffffffffffefe0, 8) , (stack, 0xffffffffffffefe0, 8) , (stack, 0xffffffffffffefe0, 8) , (stack, 0xffffffffffffefe0, 8)]
[(stack, 0xffffffffffffefd8, 8) MULTIEQUAL (stack, 0xffffffffffffefd8, 8) , (stack, 0xffffffffffffefd8, 8) , (stack, 0xffffffffffffefd8, 8) , (stack, 0xffffffffffffefd8, 8)]
[(ram, 0x4c5738, 8) MULTIEQUAL (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8)]
[(ram, 0x4c5728, 4) MULTIEQUAL (ram, 0x4c5728, 4) , (ram, 0x4c5728, 4) , (ram, 0x4c5728, 4) , (ram, 0x4c5728, 4)]
[(ram, 0x49b118, 8) MULTIEQUAL (ram, 0x49b118, 8) , (ram, 0x49b118, 8) , (ram, 0x49b118, 8) , (ram, 0x49b118, 8)]
[(ram, 0x49b110, 8) MULTIEQUAL (ram, 0x49b110, 8) , (ram, 0x49b110, 8) , (ram, 0x49b110, 8) , (ram, 0x49b110, 8)]
[(register, 0x1248, 8) MULTIEQUAL (unique, 0x10000645, 8) , (unique, 0x1000064d, 8) , (unique, 0x10000655, 8) , (unique, 0x100005cd, 8)]
[(register, 0x1240, 8) MULTIEQUAL (unique, 0x1000062d, 8) , (unique, 0x10000635, 8) , (unique, 0x1000063d, 8) , (unique, 0x100005c5, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100006d5, 8), (unique, 0x100006d5, 8) INT_ADD (unique, 0x100006cd, 8) , (const, 0x10, 8), (unique, 0x100006cd, 8) CAST (stack, 0xffffffffffffee08, 8)]
[(register, 0x90, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100006dd, 8), (unique, 0x100006dd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006c5, 8), (unique, 0x100006c5, 8) INT_ADD (unique, 0x100006bd, 8) , (const, 0x60, 8), (unique, 0x100006bd, 8) CAST (stack, 0xffffffffffffee08, 8)]
[(unique, 0x100005ed, 8) COPY (unique, 0x3c80, 8)]
[ ---  BRANCH (ram, 0x422883, 1)]
[(stack, 0xffffffffffffeff0, 8) MULTIEQUAL (stack, 0xffffffffffffeff0, 8) , (stack, 0xffffffffffffeff0, 8)]
[(stack, 0xffffffffffffefe8, 8) MULTIEQUAL (stack, 0xffffffffffffefe8, 8) , (stack, 0xffffffffffffefe8, 8)]
[(stack, 0xffffffffffffefe0, 8) MULTIEQUAL (stack, 0xffffffffffffefe0, 8) , (stack, 0xffffffffffffefe0, 8)]
[(stack, 0xffffffffffffefd8, 8) MULTIEQUAL (stack, 0xffffffffffffefd8, 8) , (stack, 0xffffffffffffefd8, 8)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x100005ed, 8) , (unique, 0x100005f5, 8)]
[ ---  CBRANCH (ram, 0x422860, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006e5, 8) , (const, 0x0, 8), (unique, 0x100006e5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000035c, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000035c, 8) PTRSUB (unique, 0x10000354, 8) , (const, 0x0, 8), (unique, 0x10000354, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x57d, 4), (stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x571, 4)]
[(stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x57d, 4), (stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x571, 4)]
[(stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x57d, 4), (stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x571, 4)]
[(stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x57d, 4), (stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x571, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 16)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006ed, 8), (unique, 0x100006ed, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x422898, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006f5, 8), (unique, 0x100006f5, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006fd, 8) , (register, 0x38, 8), (unique, 0x100006fd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000039c, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000039c, 8) PTRSUB (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000705, 8) , (register, 0x10, 8), (unique, 0x10000705, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100003bc, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100003bc, 8) PTRSUB (unique, 0x100003b4, 8) , (const, 0x0, 8), (unique, 0x100003b4, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(register, 0x98, 8) INT_ADD (register, 0x98, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_MULT (register, 0x38, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x13c, 4), (stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x12f, 4), (stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x11b, 4)]
[(stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x13c, 4), (stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x12f, 4), (stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x11b, 4)]
[(stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x13c, 4), (stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x12f, 4), (stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x11b, 4)]
[(stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x13c, 4), (stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x12f, 4), (stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x11b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000070d, 8) , (unique, 0x3100, 8), (unique, 0x1000070d, 8) CAST (unique, 0x100003cc, 8), (unique, 0x100003cc, 8) PTRSUB (register, 0x8, 8) , (const, 0x0, 8), (unique, 0x3100, 8) INT_SUB (register, 0x38, 8) , (const, 0xf, 8)]
[ ---  BRANCH (ram, 0x42286d, 1)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x15d, 4), (stack, 0xffffffffffffefd8, 8) MULTIEQUAL (stack, 0xffffffffffffefd8, 8) , (stack, 0xffffffffffffefd8, 8)]
[(stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x15d, 4), (stack, 0xffffffffffffefe0, 8) MULTIEQUAL (stack, 0xffffffffffffefe0, 8) , (stack, 0xffffffffffffefe0, 8)]
[(stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x15d, 4), (stack, 0xffffffffffffefe8, 8) MULTIEQUAL (stack, 0xffffffffffffefe8, 8) , (stack, 0xffffffffffffefe8, 8)]
[(stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x15d, 4), (stack, 0xffffffffffffeff0, 8) MULTIEQUAL (stack, 0xffffffffffffeff0, 8) , (stack, 0xffffffffffffeff0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000071d, 8) , (register, 0x10, 8), (unique, 0x1000071d, 8) CAST (unique, 0x10000394, 8), (unique, 0x10000394, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000715, 8), (unique, 0x10000715, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000036c, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000036c, 8) PTRSUB (register, 0x8, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100005f5, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x4228c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (unique, 0x3c80, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[(unique, 0x3200, 8) CAST (unique, 0x10000725, 8), (unique, 0x10000725, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000735, 8), (unique, 0x10000735, 8) INT_ADD (unique, 0x1000072d, 8) , (const, 0x60, 8), (unique, 0x1000072d, 8) CAST (stack, 0xffffffffffffee08, 8)]
[(unique, 0x10000625, 8) COPY (unique, 0x3c80, 8)]
[ ---  BRANCH (ram, 0x422914, 1)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000745, 8) , (register, 0x1240, 8), (unique, 0x10000745, 8) CAST (unique, 0x1000041c, 8), (unique, 0x1000041c, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000625, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000074d, 8) , (register, 0x1248, 8), (unique, 0x1000074d, 8) CAST (unique, 0x10000223, 8), (unique, 0x10000223, 8) PTRADD (unique, 0x10000434, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000434, 8) PTRSUB (unique, 0x1000042c, 8) , (const, 0x0, 8), (unique, 0x1000042c, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000625, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 16), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000625, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x4228f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000073d, 8), (unique, 0x1000073d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x4228f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x88, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(unique, 0x100005fd, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x1, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x28, 8) COPY (unique, 0x1000060d, 8), (unique, 0x1000060d, 8) MULTIEQUAL (unique, 0x100005fd, 8) , (unique, 0x10000605, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000075d, 8), (unique, 0x1000075d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000755, 8), (unique, 0x10000755, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x100005dd, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x422952, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000755, 8), (unique, 0x10000755, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100005e5, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x100005dd, 8) , (unique, 0x100005e5, 8)]
[(unique, 0x10000615, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x422959, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000061d, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000615, 8) , (unique, 0x1000061d, 8)]
[(unique, 0x10000605, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x422940, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000765, 8) , (register, 0x8, 8), (unique, 0x10000765, 8) CAST (unique, 0x1000045c, 8), (unique, 0x1000045c, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000076d, 8) , (register, 0x30, 8), (unique, 0x1000076d, 8) CAST (unique, 0x10000213, 8), (unique, 0x10000213, 8) PTRADD (unique, 0x10000474, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000474, 8) PTRSUB (unique, 0x1000046c, 8) , (const, 0x0, 8), (unique, 0x1000046c, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000775, 8) , (register, 0x38, 8), (unique, 0x10000775, 8) CAST (unique, 0x10000484, 8), (unique, 0x10000484, 8) PTRSUB (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000077d, 8) , (register, 0x28, 8), (unique, 0x1000077d, 8) CAST (unique, 0x1000021b, 8), (unique, 0x1000021b, 8) PTRADD (unique, 0x1000048c, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000048c, 8) PTRSUB (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4228fa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000785, 8) , (const, 0x0, 8), (unique, 0x10000785, 8) CAST (unique, 0x100003ec, 8), (unique, 0x100003ec, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x90, 8) INT_ADD (register, 0x90, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000078d, 8), (unique, 0x1000078d, 8) CAST (unique, 0x100003f4, 8), (unique, 0x100003f4, 8) PTRSUB (register, 0x80, 8) , (const, 0x0, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x0, 8)]
[(register, 0x88, 8) PTRADD (register, 0x88, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4229a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3200, 8) , (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x422b38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffee08, 8) , (unique, 0x10000304, 8), (unique, 0x10000304, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(register, 0xa0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffc000000, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000795, 8), (unique, 0x10000795, 8) INT_ADD (register, 0xa0, 8) , (const, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000079d, 8), (unique, 0x1000079d, 8) INT_ADD (register, 0xa0, 8) , (const, 0x18, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x422b48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100007a5, 8), (unique, 0x100007a5, 8) INT_ADD (register, 0xa0, 8) , (const, 0x8, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffee80, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffee28, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffee78, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffee80, 8) MULTIEQUAL (stack, 0xffffffffffffee80, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffee78, 8) MULTIEQUAL (stack, 0xffffffffffffee78, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffee28, 8) MULTIEQUAL (stack, 0xffffffffffffee28, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x422c69, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100007ad, 8), (unique, 0x100007ad, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x4ef, 4)]
[(ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x4ef, 4)]
[(ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x4ef, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x4ef, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x4ef, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x4ef, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007bd, 8) , (const, 0x0, 4), (unique, 0x100007bd, 8) CAST (stack, 0xffffffffffffee08, 8)]
[ ---  CBRANCH (ram, 0x4229e3, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100007b5, 8), (unique, 0x100007b5, 8) CAST (stack, 0xffffffffffffee08, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x4229e3, 1)]
[(ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x269, 4)]
[(ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x269, 4)]
[(ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x269, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x269, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x269, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x269, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007cd, 8) , (unique, 0xbd00, 4), (unique, 0x100007cd, 8) CAST (stack, 0xffffffffffffee08, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100007c5, 8), (unique, 0x100007c5, 8) CAST (stack, 0xffffffffffffee08, 8)]
[(ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c5738, 8) MULTIEQUAL (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8)]
[(ram, 0x4c5728, 4) MULTIEQUAL (ram, 0x4c5728, 4) , (ram, 0x4c5728, 4) , (ram, 0x4c5728, 4)]
[(ram, 0x49b118, 8) MULTIEQUAL (ram, 0x49b118, 8) , (ram, 0x49b118, 8) , (ram, 0x49b118, 8)]
[(ram, 0x49b110, 8) MULTIEQUAL (ram, 0x49b110, 8) , (ram, 0x49b110, 8) , (ram, 0x49b110, 8)]
[(unique, 0xbd80, 8) INT_ADD (stack, 0xffffffffffffee30, 8) , (register, 0x88, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) INT_ADD (stack, 0xffffffffffffee38, 8) , (register, 0x98, 8)]
[(unique, 0xbd80, 8) INT_ADD (stack, 0xffffffffffffee40, 8) , (register, 0x18, 8)]
[(unique, 0xbd80, 8) INT_ADD (stack, 0xffffffffffffee48, 8) , (register, 0x90, 8)]
[(ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffeff0, 8) MULTIEQUAL (stack, 0xffffffffffffeff0, 8) , (stack, 0xffffffffffffeff0, 8)]
[(stack, 0xffffffffffffefe8, 8) MULTIEQUAL (stack, 0xffffffffffffefe8, 8) , (stack, 0xffffffffffffefe8, 8)]
[(stack, 0xffffffffffffefe0, 8) MULTIEQUAL (stack, 0xffffffffffffefe0, 8) , (stack, 0xffffffffffffefe0, 8)]
[(stack, 0xffffffffffffefd8, 8) MULTIEQUAL (stack, 0xffffffffffffefd8, 8) , (stack, 0xffffffffffffefd8, 8)]
[(ram, 0x4c5738, 8) MULTIEQUAL (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8)]
[(ram, 0x4c5728, 4) MULTIEQUAL (ram, 0x4c5728, 4) , (ram, 0x4c5728, 4)]
[(ram, 0x49b118, 8) MULTIEQUAL (ram, 0x49b118, 8) , (ram, 0x49b118, 8)]
[(ram, 0x49b110, 8) MULTIEQUAL (ram, 0x49b110, 8) , (ram, 0x49b110, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0x10000535, 8) , (unique, 0x10000585, 8) , (const, 0x8, 8), (unique, 0x10000585, 8) INT_ADD (unique, 0x1000057d, 8) , (const, 0x3, 8), (unique, 0x1000057d, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0x10000535, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffee98, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x422a58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0xa, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x422a58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x329, 4)]
[(ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x329, 4)]
[(ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x329, 4)]
[(ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x329, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x329, 4)]
[(stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x329, 4)]
[(stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x329, 4)]
[(stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x329, 4)]
[(stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x329, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x329, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x329, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x329, 4)]
[ ---  CALL (ram, 0x470c30, 8) , (register, 0x38, 8) , (unique, 0x100002d4, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0x100002d4, 8) COPY (const, 0x49b570, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x1000056d, 8) , (unique, 0x100005b5, 8) , (const, 0x8, 8), (unique, 0x100005b5, 8) INT_ADD (unique, 0x100005ad, 8) , (const, 0x1, 8), (unique, 0x100005ad, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0x1000056d, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffee98, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000054d, 8) , (unique, 0x1000059d, 8) , (const, 0x8, 8), (unique, 0x1000059d, 8) INT_ADD (unique, 0x10000595, 8) , (const, 0x2, 8), (unique, 0x10000595, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0x1000054d, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffee98, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100007d5, 8), (unique, 0x100007d5, 8) CAST (unique, 0x100004cc, 8), (unique, 0x100004cc, 8) PTRSUB (unique, 0x3400, 8) , (const, 0x0, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3c80, 8) , (unique, 0x100004bc, 8) , (const, 0x10, 8), (unique, 0x100004bc, 8) INT_MULT (register, 0xa0, 8) , (const, 0x2, 8)]
[(ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffeff0, 8) MULTIEQUAL (stack, 0xffffffffffffeff0, 8) , (stack, 0xffffffffffffeff0, 8) , (stack, 0xffffffffffffeff0, 8)]
[(stack, 0xffffffffffffefe8, 8) MULTIEQUAL (stack, 0xffffffffffffefe8, 8) , (stack, 0xffffffffffffefe8, 8) , (stack, 0xffffffffffffefe8, 8)]
[(stack, 0xffffffffffffefe0, 8) MULTIEQUAL (stack, 0xffffffffffffefe0, 8) , (stack, 0xffffffffffffefe0, 8) , (stack, 0xffffffffffffefe0, 8)]
[(stack, 0xffffffffffffefd8, 8) MULTIEQUAL (stack, 0xffffffffffffefd8, 8) , (stack, 0xffffffffffffefd8, 8) , (stack, 0xffffffffffffefd8, 8)]
[(ram, 0x4c5738, 8) MULTIEQUAL (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8)]
[(ram, 0x4c5728, 4) MULTIEQUAL (ram, 0x4c5728, 4) , (ram, 0x4c5728, 4) , (ram, 0x4c5728, 4)]
[(ram, 0x49b118, 8) MULTIEQUAL (ram, 0x49b118, 8) , (ram, 0x49b118, 8) , (ram, 0x49b118, 8)]
[(ram, 0x49b110, 8) MULTIEQUAL (ram, 0x49b110, 8) , (ram, 0x49b110, 8) , (ram, 0x49b110, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x422a20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x89, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x422b74, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffeff0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4de, 4)]
[(ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x4de, 4)]
[(ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x4de, 4)]
[(ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x4de, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x4de, 4)]
[(stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x4de, 4)]
[(stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x4de, 4)]
[(stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x4de, 4)]
[(stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x4de, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4de, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x4de, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x4de, 4)]
[ ---  CALL (ram, 0x470c30, 8) , (register, 0x38, 8) , (unique, 0x100002dc, 8) , (stack, 0xffffffffffffefd8, 8) , (stack, 0xffffffffffffefe0, 8) , (stack, 0xffffffffffffefe8, 8), (unique, 0x100002dc, 8) COPY (const, 0x49b5a8, 8)]
[ ---  BRANCH (ram, 0x422a84, 1)]
[(unique, 0xbd80, 8) INT_ADD (stack, 0xffffffffffffee50, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100007e5, 8), (unique, 0x100007e5, 8) INT_ADD (unique, 0x100007dd, 8) , (const, 0x888, 8), (unique, 0x100007dd, 8) CAST (stack, 0xffffffffffffee08, 8)]
[(unique, 0xbd80, 8) INT_ADD (stack, 0xffffffffffffee58, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100007f5, 8), (unique, 0x100007f5, 8) INT_ADD (unique, 0x100007ed, 8) , (const, 0x890, 8), (unique, 0x100007ed, 8) CAST (stack, 0xffffffffffffee08, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x39a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x39a, 4), (ram, 0x49b110, 8) MULTIEQUAL (ram, 0x49b110, 8) , (ram, 0x49b110, 8)]
[(ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x39a, 4), (ram, 0x49b118, 8) MULTIEQUAL (ram, 0x49b118, 8) , (ram, 0x49b118, 8)]
[(ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x39a, 4), (ram, 0x4c5728, 4) MULTIEQUAL (ram, 0x4c5728, 4) , (ram, 0x4c5728, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x39a, 4), (ram, 0x4c5738, 8) MULTIEQUAL (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8)]
[(stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x39a, 4), (stack, 0xffffffffffffefd8, 8) MULTIEQUAL (stack, 0xffffffffffffefd8, 8) , (stack, 0xffffffffffffefd8, 8)]
[(stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x39a, 4), (stack, 0xffffffffffffefe0, 8) MULTIEQUAL (stack, 0xffffffffffffefe0, 8) , (stack, 0xffffffffffffefe0, 8)]
[(stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x39a, 4), (stack, 0xffffffffffffefe8, 8) MULTIEQUAL (stack, 0xffffffffffffefe8, 8) , (stack, 0xffffffffffffefe8, 8)]
[(stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x39a, 4), (stack, 0xffffffffffffeff0, 8) MULTIEQUAL (stack, 0xffffffffffffeff0, 8) , (stack, 0xffffffffffffeff0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x39a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x39a, 4), (ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x39a, 4), (ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[ ---  CALL (ram, 0x470c30, 8) , (register, 0x38, 8) , (unique, 0x100002e4, 8) , (register, 0x88, 8) , (register, 0x98, 8) , (register, 0x18, 8) , (register, 0x90, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0x100002e4, 8) COPY (const, 0x49b5e8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100007f5, 8), (unique, 0x100007f5, 8) INT_ADD (unique, 0x100007ed, 8) , (const, 0x890, 8), (unique, 0x100007ed, 8) CAST (stack, 0xffffffffffffee08, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100007e5, 8), (unique, 0x100007e5, 8) INT_ADD (unique, 0x100007dd, 8) , (const, 0x888, 8), (unique, 0x100007dd, 8) CAST (stack, 0xffffffffffffee08, 8)]
[ ---  CBRANCH (ram, 0x422ba2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffee08, 8) , (unique, 0x1000030c, 8), (unique, 0x1000030c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CALL (ram, 0x470c30, 8) , (register, 0x38, 8) , (unique, 0x100002f4, 8) , (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8), (unique, 0x100002f4, 8) COPY (const, 0x49b700, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4b5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x48b, 4)]
[(ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x4b5, 4), (ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x48b, 4)]
[(ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x4b5, 4), (ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x48b, 4)]
[(ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x4b5, 4), (ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x48b, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x4b5, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x48b, 4)]
[(stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x4b5, 4), (stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x48b, 4)]
[(stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x4b5, 4), (stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x48b, 4)]
[(stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x4b5, 4), (stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x48b, 4)]
[(stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x4b5, 4), (stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x48b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4b5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x48b, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x4b5, 4), (ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x48b, 4)]
[ ---  CALL (ram, 0x477b20, 8) , (unique, 0x100002cc, 8) , (register, 0x38, 8), (unique, 0x100002cc, 8) COPY (const, 0x49b232, 8)]
[(unique, 0x1000065d, 8) COPY (unique, 0x100007fd, 8), (unique, 0x100007fd, 8) CAST (ram, 0x4c6010, 8), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x4b5, 4), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x48b, 4)]
[(unique, 0x1000066d, 8) COPY (unique, 0x100005d5, 8), (unique, 0x100005d5, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x48b, 4)]
[ ---  CALL (ram, 0x470c30, 8) , (register, 0x38, 8) , (unique, 0x100002ec, 8) , (stack, 0xffffffffffffee78, 8) , (stack, 0xffffffffffffee28, 8) , (stack, 0xffffffffffffee80, 8), (unique, 0x100002ec, 8) COPY (const, 0x49b690, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3eb, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c1, 4)]
[(ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x3eb, 4), (ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x3c1, 4)]
[(ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x3eb, 4), (ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x3c1, 4)]
[(ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x3eb, 4), (ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x3c1, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x3eb, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x3eb, 4), (stack, 0xffffffffffffefd8, 8) INDIRECT (stack, 0xffffffffffffefd8, 8) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x3eb, 4), (stack, 0xffffffffffffefe0, 8) INDIRECT (stack, 0xffffffffffffefe0, 8) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x3eb, 4), (stack, 0xffffffffffffefe8, 8) INDIRECT (stack, 0xffffffffffffefe8, 8) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x3eb, 4), (stack, 0xffffffffffffeff0, 8) INDIRECT (stack, 0xffffffffffffeff0, 8) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3eb, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3c1, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x3eb, 4), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x3c1, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x3eb, 4), (ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x3c1, 4)]
[ ---  CALL (ram, 0x477b20, 8) , (unique, 0x100002c4, 8) , (register, 0x38, 8), (unique, 0x100002c4, 8) COPY (const, 0x49b232, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000080d, 8), (unique, 0x1000080d, 8) INT_ADD (unique, 0x10000805, 8) , (const, 0x870, 8), (unique, 0x10000805, 8) CAST (stack, 0xffffffffffffee08, 8)]
[(unique, 0x10000665, 8) COPY (stack, 0xffffffffffffee28, 8)]
[(ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[(ram, 0x4c6010, 8) MULTIEQUAL (ram, 0x4c6010, 8) , (ram, 0x4c6010, 8)]
[(unique, 0x1000024e, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000256, 8) MULTIEQUAL (ram, 0x49b110, 8) , (ram, 0x49b110, 8)]
[(unique, 0x1000025e, 8) MULTIEQUAL (ram, 0x49b118, 8) , (ram, 0x49b118, 8)]
[(unique, 0x10000266, 4) MULTIEQUAL (ram, 0x4c5728, 4) , (ram, 0x4c5728, 4)]
[(unique, 0x1000026a, 8) MULTIEQUAL (ram, 0x4c5738, 8) , (ram, 0x4c5738, 8)]
[(unique, 0x10000282, 8) MULTIEQUAL (stack, 0xffffffffffffefd8, 8) , (stack, 0xffffffffffffefd8, 8)]
[(unique, 0x1000028a, 8) MULTIEQUAL (stack, 0xffffffffffffefe0, 8) , (stack, 0xffffffffffffefe0, 8)]
[(unique, 0x10000292, 8) MULTIEQUAL (stack, 0xffffffffffffefe8, 8) , (stack, 0xffffffffffffefe8, 8)]
[(unique, 0x1000029a, 8) MULTIEQUAL (stack, 0xffffffffffffeff0, 8) , (stack, 0xffffffffffffeff0, 8)]
[(unique, 0x100002a2, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000023d, 8) INT_ADD (stack, 0xffffffffffffee68, 8) , (unique, 0x100002b2, 8), (unique, 0x100002b2, 8) MULTIEQUAL (unique, 0x1000066d, 8) , (unique, 0x10000665, 8)]
[(unique, 0x10000235, 8) INT_ADD (stack, 0xffffffffffffee60, 8) , (unique, 0x100002aa, 8), (unique, 0x100002aa, 8) MULTIEQUAL (unique, 0x100005d5, 8) , (stack, 0xffffffffffffee78, 8)]
[ ---  CBRANCH (ram, 0x422b2f, 1) , (unique, 0x1000024d, 1), (unique, 0x1000024d, 1) INT_EQUAL (unique, 0x10000245, 8) , (unique, 0x10000314, 8), (unique, 0x10000314, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8), (unique, 0x10000245, 8) MULTIEQUAL (unique, 0x1000065d, 8) , (unique, 0xbd80, 8)]
[(ram, 0x49b110, 8) INDIRECT (unique, 0x10000256, 8) , (const, 0x436, 4)]
[(ram, 0x49b118, 8) INDIRECT (unique, 0x1000025e, 8) , (const, 0x436, 4)]
[(ram, 0x4c5728, 4) INDIRECT (unique, 0x10000266, 4) , (const, 0x436, 4)]
[(ram, 0x4c5738, 8) INDIRECT (unique, 0x1000026a, 8) , (const, 0x436, 4)]
[(ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x436, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x436, 4)]
[ ---  CALL (ram, 0x470c30, 8) , (register, 0x38, 8) , (unique, 0x100002fc, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0x1000026a, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0x10000235, 8) , (unique, 0x1000023d, 8), (unique, 0x100002fc, 8) COPY (const, 0x49b748, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000266, 4)]
[ ---  CBRANCH (ram, 0x422cbe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000815, 8), (unique, 0x10000815, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100002a2, 8) , (const, 0x436, 4), (register, 0x110, 8) INDIRECT (unique, 0x1000024e, 8) , (const, 0x436, 4)]
[(ram, 0x49b110, 8) COPY (ram, 0x49b110, 8)]
[(ram, 0x49b118, 8) COPY (ram, 0x49b118, 8)]
[(ram, 0x4c5728, 4) COPY (ram, 0x4c5728, 4)]
[(ram, 0x4c5738, 8) COPY (ram, 0x4c5738, 8)]
[(ram, 0x4c6010, 8) COPY (ram, 0x4c6010, 8)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x474, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x49b110, 8) COPY (ram, 0x49b110, 8), (ram, 0x49b110, 8) INDIRECT (ram, 0x49b110, 8) , (const, 0x474, 4)]
[(ram, 0x49b118, 8) COPY (ram, 0x49b118, 8), (ram, 0x49b118, 8) INDIRECT (ram, 0x49b118, 8) , (const, 0x474, 4)]
[(ram, 0x4c5728, 4) COPY (ram, 0x4c5728, 4), (ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x474, 4)]
[(ram, 0x4c5738, 8) COPY (ram, 0x4c5738, 8), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x474, 4)]
[(ram, 0x4c6010, 8) COPY (ram, 0x4c6010, 8), (ram, 0x4c6010, 8) INDIRECT (ram, 0x4c6010, 8) , (const, 0x474, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x474, 4)]
[ ---  RETURN (const, 0x1, 4)]
