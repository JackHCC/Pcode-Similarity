[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x24a2a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24a168, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x63, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x63, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x63, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x63, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x63, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x63, 4)]
[ ---  CBRANCH (ram, 0x24a538, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x245ec0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x38, 8) , (const, 0xffffffff, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x42d, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x428, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000348, 8), (unique, 0x10000348, 8) INT_ADD (unique, 0x10000338, 8) , (unique, 0x10000340, 8), (unique, 0x10000340, 8) CAST (ram, 0x4eae68, 8), (unique, 0x10000338, 8) CAST (register, 0x110, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x42d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x428, 4)]
[ ---  BRANCH (ram, 0x24a309, 1)]
[ ---  CBRANCH (ram, 0x24a2af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x24a2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x24a55e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x422, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x422, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x24a2c0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x415, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x415, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x415, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x415, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x415, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x415, 4)]
[ ---  CBRANCH (ram, 0x24a18a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249160, 8) , (register, 0x8, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x90, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x90, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x90, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x24a2e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x9f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0xb0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xda, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbb, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xda, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xbb, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xda, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xbb, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xda, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xbb, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xda, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xbb, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xda, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xbb, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x24a408, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xfffffffe, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb0, 8) , (stack, 0x18, 8) , (stack, 0x20, 8) , (stack, 0x28, 8) , (register, 0x8, 8) , (unique, 0x3400, 8), (register, 0x8, 8) PTRADD (ram, 0x4eae68, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0x3400, 8) PTRADD (ram, 0x4eae50, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xbb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xbb, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xbb, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x24a41b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24a1fc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (stack, 0x38, 8)]
[ ---  CBRANCH (ram, 0x24a1fc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x22, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000360, 8), (unique, 0x10000360, 8) INT_ADD (unique, 0x10000350, 8) , (unique, 0x10000358, 8), (unique, 0x10000358, 8) CAST (ram, 0x4eae68, 8), (unique, 0x10000350, 8) CAST (register, 0x110, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e2, 4)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0xa0, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x3e7, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x3e2, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3e7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3e2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x30, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x24a274, 1)]
[ ---  CBRANCH (ram, 0x24a448, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0x8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24a390, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x24a3a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x24a330, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000368, 8), (unique, 0x10000368, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x14, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x24a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x24a, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x24a, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x24a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x257, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x24a, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x257, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x24a, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x24a24a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249490, 8) , (register, 0x8, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (register, 0xb0, 8) , (register, 0xb8, 4) , (const, 0x0, 8), (register, 0xb8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x26c, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x26c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x26c, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x26c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x26c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x26c, 4)]
[ ---  CBRANCH (ram, 0x24a2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249160, 8) , (register, 0x8, 8) , (register, 0x30, 8) , (const, 0x0, 8) , (unique, 0x3800, 8)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x288, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x27d, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x288, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x27d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x288, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27d, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x288, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x27d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x288, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x27d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x288, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x27d, 4)]
[ ---  CBRANCH (ram, 0x24a3a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0x8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x27d, 4)]
[ ---  CBRANCH (ram, 0x24a22c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x24a333, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000370, 8), (unique, 0x10000370, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x14, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x13c, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13c, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x13c, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x13c, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x13c, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x24a350, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249490, 8) , (register, 0x8, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (register, 0xb0, 8) , (register, 0xb8, 4) , (const, 0x0, 8), (register, 0xb8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1dc, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x1dc, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1dc, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1dc, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1dc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1dc, 4)]
[ ---  CBRANCH (ram, 0x24a2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249160, 8) , (register, 0x8, 8) , (register, 0x30, 8) , (const, 0x0, 8) , (unique, 0x3800, 8)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f8, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ed, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x1f8, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x1ed, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f8, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ed, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1ed, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ed, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ed, 4)]
[ ---  CBRANCH (ram, 0x24a22c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0x8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ed, 4)]
[ ---  CBRANCH (ram, 0x24a4c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x24a4d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x24a330, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000378, 8), (unique, 0x10000378, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x14, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x298, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x298, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x363, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x363, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x363, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x363, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x370, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x363, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x370, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x363, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x24a24a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249490, 8) , (register, 0x8, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (register, 0xb0, 8) , (register, 0xb8, 4) , (const, 0x0, 8), (register, 0xb8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x385, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x385, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x385, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x385, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x385, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x385, 4)]
[ ---  CBRANCH (ram, 0x24a2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249160, 8) , (register, 0x8, 8) , (register, 0x30, 8) , (const, 0x0, 8) , (unique, 0x3800, 8)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x396, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x3a5, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x396, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a5, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x396, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3a5, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x396, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3a5, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x396, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3a5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x396, 4)]
[ ---  CBRANCH (ram, 0x24a4d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x396, 4)]
[ ---  CBRANCH (ram, 0x24a468, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x24a333, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000380, 8), (unique, 0x10000380, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x14, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x213, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x213, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x213, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x213, 4)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e0, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x2e0, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e0, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2e0, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2e0, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2e0, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x24a24a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249490, 8) , (register, 0x8, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (register, 0xb0, 8) , (register, 0xb8, 4) , (const, 0x0, 8), (register, 0xb8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x14c, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x14c, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x14c, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x24a33b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x1, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x1be, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1be, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x30, 8) , (stack, 0x18, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x24a309, 1)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x164, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x164, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24a304, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0xfffffffe, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x24a28c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0xb, 4)]
[ ---  CBRANCH (ram, 0x24a309, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (stack, 0x38, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000398, 8), (unique, 0x10000398, 8) INT_ADD (unique, 0x10000388, 8) , (unique, 0x10000390, 8), (unique, 0x10000390, 8) CAST (ram, 0x4eae68, 8), (unique, 0x10000388, 8) CAST (register, 0x110, 8)]
[ ---  BRANCH (ram, 0x24a309, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2fe, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x2fe, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2fe, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2fe, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2fe, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2fe, 4)]
[ ---  CBRANCH (ram, 0x24a2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249160, 8) , (register, 0x8, 8) , (register, 0x30, 8) , (const, 0x0, 8) , (unique, 0x3800, 8)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x31e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30f, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x31e, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x30f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x31e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x31e, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x31e, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x31e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x30f, 4)]
[ ---  CBRANCH (ram, 0x24a468, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x30f, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x3ea, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3ea, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x20a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x20f, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x20a, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x20f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x20a, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x30, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) COPY (const, 0x2, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x24a567, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b3, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x1b3, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b3, 4)]
[ ---  RETURN (const, 0x1, 4)]
