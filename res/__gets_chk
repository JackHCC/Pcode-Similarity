[(unique, 0x1000013a, 8) COPY (ram, 0x4ec850, 8)]
[ ---  CBRANCH (ram, 0x23299d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x232a00, 8)]
[(ram, 0x4ec850, 8) COPY (ram, 0x4ec850, 8), (ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x1d4, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1d4, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x10000152, 8) COPY (unique, 0x10000162, 8), (unique, 0x10000162, 8) CAST (ram, 0x4ec850, 8)]
[ ---  CBRANCH (ram, 0x2328a9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000015a, 8), (unique, 0x1000015a, 8) CAST (ram, 0x4ec850, 8)]
[ ---  CBRANCH (ram, 0x2328a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000017a, 8), (unique, 0x1000017a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000172, 8), (unique, 0x10000172, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000016a, 8), (unique, 0x1000016a, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4ec850, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x232878, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x1d0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1d0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x65, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x65, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x232893, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1b3, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x1b3, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1b3, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000142, 8) COPY (unique, 0x10000182, 8), (unique, 0x10000182, 8) CAST (ram, 0x4ec850, 8), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x6f, 4), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x6f, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000192, 8) , (register, 0x80, 8), (unique, 0x10000192, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000018a, 8), (unique, 0x1000018a, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000013a, 8) , (const, 0x88, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000152, 8) , (unique, 0x10000142, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x77, 4), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x77, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[ ---  CBRANCH (ram, 0x232988, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000019a, 8), (unique, 0x1000019a, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000152, 8) , (register, 0x38, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x19b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x19b, 4)]
[ ---  CBRANCH (ram, 0x2328c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x18e0d0, 8) , (register, 0x38, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x97, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x97, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001a2, 8), (unique, 0x100001a2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x232930, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001b2, 8) , (register, 0x10, 4), (unique, 0x100001b2, 8) CAST (ram, 0x4ec850, 8), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffffdf, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001aa, 8), (unique, 0x100001aa, 8) CAST (ram, 0x4ec850, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0xa8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x20, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001aa, 8), (unique, 0x100001aa, 8) CAST (ram, 0x4ec850, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x16f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x15e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x15c, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x17fdd0, 8) , (ram, 0x4ec850, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (unique, 0x3800, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8), (ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x15e, 4), (ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x15c, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x232996, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000be, 4) , (const, 0x0, 4), (unique, 0x100000be, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x20, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ba, 8), (unique, 0x100001ba, 8) CAST (ram, 0x4ec850, 8), (ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x16f, 4), (ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x15e, 4), (ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x15c, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2328d7, 1)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x18c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x18c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c2, 8) , (register, 0xa8, 4), (unique, 0x100001c2, 8) CAST (ram, 0x4ec850, 8), (register, 0xa8, 4) INT_OR (register, 0xa8, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x2328c9, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[ ---  CBRANCH (ram, 0x2329a2, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3100, 8)]
[ ---  CALL (ram, 0x232a00, 8)]
[(ram, 0x4ec850, 8) COPY (ram, 0x4ec850, 8), (ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x13c, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x13c, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0xbe, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xbe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (const, 0x0, 1), (unique, 0x3b80, 8) PTRADD (register, 0x38, 8) , (register, 0x10, 8) , (const, 0x1, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x23291e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ca, 8), (unique, 0x100001ca, 8) CAST (unique, 0x1000013a, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0xd5, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d2, 8), (unique, 0x100001d2, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000013a, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x23291e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d2, 8), (unique, 0x100001d2, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000013a, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0xe3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001da, 8) , (const, 0x0, 8), (unique, 0x100001da, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x232904, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xe3, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x12f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x12f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0xf3, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x1000012d, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(unique, 0x10000135, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x23291e, 1) , (unique, 0x1000012c, 1), (unique, 0x1000012c, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4ec850, 8) INDIRECT (unique, 0x1000012d, 8) , (const, 0x121, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000135, 4) , (const, 0x121, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ec850, 8) COPY (ram, 0x4ec850, 8), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (unique, 0x1000012d, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (unique, 0x10000135, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
