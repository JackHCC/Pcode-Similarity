[(unique, 0x1000013b, 8) COPY (ram, 0x4c4710, 8)]
[ ---  CBRANCH (ram, 0x216828, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x216890, 8)]
[(ram, 0x4c4710, 8) COPY (ram, 0x4c4710, 8), (ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x1f0, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1f0, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x1000015b, 8) COPY (unique, 0x1000016b, 8), (unique, 0x1000016b, 8) CAST (ram, 0x4c4710, 8)]
[ ---  CBRANCH (ram, 0x21671d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000163, 8), (unique, 0x10000163, 8) CAST (ram, 0x4c4710, 8)]
[ ---  CBRANCH (ram, 0x216820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000183, 8), (unique, 0x10000183, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000017b, 8), (unique, 0x1000017b, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000173, 8), (unique, 0x10000173, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c4710, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2166ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x1ea, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ea, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x65, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x65, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x216707, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1cd, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x1cd, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1cd, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x6f, 4), (ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x6f, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000019b, 8) , (register, 0x80, 8), (unique, 0x1000019b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000193, 8), (unique, 0x10000193, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000013b, 8) , (const, 0x88, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000014b, 8) COPY (unique, 0x10000143, 8), (unique, 0x10000143, 8) COPY (unique, 0x1000018b, 8), (unique, 0x1000018b, 8) CAST (ram, 0x4c4710, 8), (ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000014b, 8) , (unique, 0x1000015b, 8)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x77, 4), (ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x77, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[ ---  CBRANCH (ram, 0x216808, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x100001a3, 8), (unique, 0x100001a3, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000015b, 8) , (register, 0x38, 8)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x1b5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1b5, 4)]
[ ---  CBRANCH (ram, 0x216736, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x17b2d0, 8) , (register, 0x38, 8)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x97, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x97, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001ab, 8), (unique, 0x100001ab, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[ ---  CBRANCH (ram, 0x2167b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x21678c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001bb, 8) , (register, 0x10, 4), (unique, 0x100001bb, 8) CAST (ram, 0x4c4710, 8), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffffdf, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001b3, 8), (unique, 0x100001b3, 8) CAST (ram, 0x4c4710, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0xa8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x20, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001b3, 8), (unique, 0x100001b3, 8) CAST (ram, 0x4c4710, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xd5, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc4, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc2, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x16ecb0, 8) , (ram, 0x4c4710, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (unique, 0x3800, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8), (ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0xc4, 4), (ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0xc2, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x216816, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000e2, 4) , (const, 0x0, 4), (unique, 0x100000e2, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x20, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001c3, 8), (unique, 0x100001c3, 8) CAST (ram, 0x4c4710, 8), (ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0xd5, 4), (ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0xc4, 4), (ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0xc2, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x21679a, 1)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0xf9, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xf9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001cb, 8) , (register, 0xa8, 4), (unique, 0x100001cb, 8) CAST (ram, 0x4c4710, 8), (register, 0xa8, 4) INT_OR (register, 0xa8, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[ ---  CBRANCH (ram, 0x21682d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x216890, 8)]
[(ram, 0x4c4710, 8) COPY (ram, 0x4c4710, 8), (ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x19a, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x19a, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x108, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x108, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (const, 0x0, 1), (unique, 0x3b80, 8) PTRADD (register, 0x38, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2167b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001d3, 8), (unique, 0x100001d3, 8) CAST (unique, 0x1000013b, 8)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x133, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x133, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001db, 8), (unique, 0x100001db, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000013b, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2167a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001db, 8), (unique, 0x100001db, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000013b, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[(ram, 0x4c4710, 8) COPY (ram, 0x4c4710, 8), (ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x141, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001e3, 8) , (const, 0x0, 8), (unique, 0x100001e3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x2167dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x141, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x18d, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x18d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x151, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x151, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x1000012b, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(unique, 0x10000133, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x2167f7, 1) , (unique, 0x1000012a, 1), (unique, 0x1000012a, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c4710, 8) INDIRECT (unique, 0x1000012b, 8) , (const, 0x17f, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x10000133, 4) , (const, 0x17f, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c4710, 8) COPY (ram, 0x4c4710, 8), (ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (unique, 0x1000012b, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x10000133, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
