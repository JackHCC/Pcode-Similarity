[ ---  CBRANCH (ram, 0x217cf0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x10, 4) , (const, 0x1, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x217c11, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x217c0c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000186, 8), (unique, 0x10000186, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000017e, 8), (unique, 0x1000017e, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000176, 8), (unique, 0x10000176, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x217be3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e2, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1e2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x68, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x68, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x217bff, 1)]
[(register, 0x88, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1c5, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c5, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1c5, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000172, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INDIRECT (const, 0x0, 4) , (const, 0x1c5, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0x10000172, 4) , (register, 0x10, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x74, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x74, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000196, 8) , (register, 0x88, 8), (unique, 0x10000196, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x22, 8) , (const, 0x4, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x88, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x7c, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x7c, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 4) INT_AND (register, 0x8, 4) , (const, 0x20, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xa7, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xa7, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffffffdf, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[(unique, 0x10000162, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x217c36, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0x1000016a, 8) COPY (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbc, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xbc, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xbc, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x217c70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x170cd0, 8) , (register, 0x8, 8) , (register, 0x38, 8) , (register, 0x10, 8) , (const, 0xa, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000162, 8) , (unique, 0x1000016a, 8)]
[ ---  CBRANCH (ram, 0x217c82, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000d4, 4) , (const, 0x0, 4), (unique, 0x100000d4, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x217c48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0xb, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000019e, 8), (unique, 0x1000019e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe0, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xe0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0xa8, 4), (register, 0xa8, 4) INT_OR (register, 0xa8, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x217cf7, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x216890, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1b6, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1b6, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (const, 0x0, 4), (unique, 0x3b80, 8) CAST (unique, 0x100001a6, 8), (unique, 0x100001a6, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1a7, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x198, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1a7, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x198, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0xa8, 4), (register, 0xa8, 4) INT_OR (register, 0xa8, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0x100000f8, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x38, 8)]
[(unique, 0x10000100, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000108, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x217ca0, 1) , (unique, 0x100000f7, 1), (unique, 0x100000f7, 1) INT_EQUAL (unique, 0x1000010d, 4) , (const, 0x0, 4), (unique, 0x1000010d, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000100, 8) , (const, 0x10b, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x10000108, 4) , (const, 0x10b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x217c59, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x119, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001b6, 8) , (const, 0x0, 8), (unique, 0x100001b6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x217cc5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x119, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x165, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x165, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x129, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x129, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x10000152, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x1000015a, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x217cdf, 1) , (unique, 0x10000151, 1), (unique, 0x10000151, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000152, 8) , (const, 0x157, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x1000015a, 4) , (const, 0x157, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x10000152, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x1000015a, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x100000f8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x10000100, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (unique, 0x10000108, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x100000f8, 8)]
