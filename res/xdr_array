[(register, 0xa0, 8) INT_ZEXT (register, 0x80, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x239f31, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x23a240, 8) , (register, 0x38, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x239f40, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x239f29, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (unique, 0xbc80, 4), (register, 0x0, 4) SUBPIECE (unique, 0x2e500, 8) , (const, 0x0, 4), (unique, 0x2e500, 8) INT_DIV (const, 0xffffffff, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x239f90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000010a, 8), (unique, 0x1000010a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x239ff1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[(register, 0x10, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x239f70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x239fe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x239ffb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000122, 8), (unique, 0x10000122, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x239f31, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000013e, 8), (unique, 0x1000013e, 8) CALL (ram, 0x11f870, 8) , (register, 0x38, 8) , (register, 0xa0, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x239f9f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000013e, 8), (unique, 0x1000013e, 8) CALL (ram, 0x11f870, 8) , (register, 0x38, 8) , (register, 0xa0, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xbc80, 4)]
[ ---  CALL (ram, 0x16cfd0, 8) , (const, 0x0, 8) , (unique, 0x100000ea, 8) , (unique, 0x10000102, 8) , (register, 0x0, 8), (unique, 0x10000102, 8) COPY (const, 0x292c00, 8), (unique, 0x100000ea, 8) COPY (const, 0x28eb09, 8), (register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x100000da, 8) , (unique, 0x100000fa, 8) , (const, 0x5, 8), (unique, 0x100000fa, 8) COPY (const, 0x28f404, 8), (unique, 0x100000da, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x239f58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[(register, 0x10, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x239f9f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[(register, 0xb8, 4) COPY (const, 0x0, 4)]
[(unique, 0x1000012e, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x239fac, 1)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (register, 0xa0, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000012e, 8) , (unique, 0x10000136, 8)]
[(register, 0x0, 4) CALLIND (register, 0x88, 8) , (register, 0x38, 8) , (register, 0x18, 8) , (const, 0xffffffff, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000012e, 8) , (unique, 0x10000136, 8)]
[ ---  CBRANCH (ram, 0x239fa8, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0xbc80, 4) , (register, 0xb8, 4), (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x239f31, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000011a, 8), (unique, 0x1000011a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(unique, 0x10000136, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x239f68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x239f31, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000112, 8), (unique, 0x10000112, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x10, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x0, 4)]
