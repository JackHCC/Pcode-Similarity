[(register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2a, 4)]
[ ---  CBRANCH (ram, 0x201f49, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000156, 8), (unique, 0x10000156, 8) INT_ADD (unique, 0x1000012e, 8) , (register, 0x38, 4), (unique, 0x1000012e, 8) INT_LEFT (unique, 0x10000126, 8) , (const, 0x20, 8), (unique, 0x10000126, 8) INT_SEXT (unique, 0x10000152, 4), (unique, 0x10000152, 4) CAST (register, 0x3c, 4)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x201d8e, 1)]
[(register, 0x10, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[(register, 0x18, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff, 8)]
[(register, 0x18, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x18, 4) INT_MULT (register, 0x18, 4) , (const, 0x10, 4), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x201d70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x201d8e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[(register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000136, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000166, 8), (unique, 0x10000166, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x18, 8), (register, 0x0, 8) INT_ZEXT (register, 0x90, 4), (register, 0x90, 4) INT_ADD (unique, 0x10000073, 4) , (const, 0x1, 4), (unique, 0x10000073, 4) SUBPIECE (unique, 0x2e680, 8) , (const, 0x0, 4), (unique, 0x2e680, 8) INT_REM (register, 0x18, 8) , (unique, 0x2e180, 8), (unique, 0x2e180, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000015e, 8), (unique, 0x1000015e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x201e12, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000166, 8), (unique, 0x10000166, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x18, 8), (register, 0x0, 8) INT_ZEXT (register, 0x90, 4), (register, 0x90, 4) INT_ADD (unique, 0x10000073, 4) , (const, 0x1, 4), (unique, 0x10000073, 4) SUBPIECE (unique, 0x2e680, 8) , (const, 0x0, 4), (unique, 0x2e680, 8) INT_REM (register, 0x18, 8) , (unique, 0x2e180, 8), (unique, 0x2e180, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000015e, 8), (unique, 0x1000015e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x201ee0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x232, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x232, 4)]
[ ---  CBRANCH (ram, 0x201dc7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (register, 0x38, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x255, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x201e35, 1)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0xb0, 4), (register, 0xb0, 4) INT_ADD (unique, 0x10000087, 4) , (const, 0x1, 4), (unique, 0x10000087, 4) SUBPIECE (unique, 0x2e680, 8) , (const, 0x0, 4), (unique, 0x2e680, 8) INT_REM (register, 0x18, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(unique, 0x10000146, 4) COPY (register, 0x90, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000009b, 4) INT_2COMP (register, 0xb0, 4)]
[(unique, 0x1000014a, 4) COPY (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x201df0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xb0, 4) , (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (unique, 0x10000146, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x1000014e, 4) COPY (unique, 0x1000009b, 4)]
[(unique, 0x1000013e, 8) COPY (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x201e12, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (register, 0x90, 4), (register, 0x0, 4) INT_ADD (register, 0x28, 4) , (unique, 0x100000e5, 4), (unique, 0x100000e5, 4) MULTIEQUAL (unique, 0x1000014a, 4) , (unique, 0x1000014e, 4)]
[ ---  CBRANCH (ram, 0x201e48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000016e, 8), (unique, 0x1000016e, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x18, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x207, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x207, 4)]
[ ---  CBRANCH (ram, 0x201de0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000176, 8), (unique, 0x10000176, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x220, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x201e35, 1)]
[ ---  CBRANCH (ram, 0x201de0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x10000136, 8) , (unique, 0x1000013e, 8) , (unique, 0x3400, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x201e88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x201f28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000186, 8), (unique, 0x10000186, 8) INT_ADD (unique, 0x1000017e, 8) , (const, 0xc, 8), (unique, 0x1000017e, 8) CAST (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000018e, 8) , (register, 0x30, 8), (unique, 0x1000018e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffb8, 8) , (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000196, 8) , (register, 0x38, 8), (unique, 0x10000196, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x100001a6, 8), (unique, 0x100001a6, 8) INT_ADD (unique, 0x1000019e, 8) , (const, 0xc, 8), (unique, 0x1000019e, 8) CAST (register, 0x80, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1cd, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c8, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c5, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c2, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1bb, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ae, 8) , (const, 0xc, 4), (unique, 0x100001ae, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ef, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ea, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x201e35, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001b6, 8) , (const, 0x3, 4), (unique, 0x100001b6, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x171, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x16c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
