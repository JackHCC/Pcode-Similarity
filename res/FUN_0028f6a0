[(register, 0x1320, 32) INT_ZEXT (unique, 0xc8a80, 16), (unique, 0xc8a80, 16) CALLOTHER (const, 0x1da, 4) , (register, 0x1320, 16) , (register, 0x1320, 16), (register, 0x1320, 16) SUBPIECE (register, 0x1320, 32) , (const, 0x0, 4)]
[(register, 0x1200, 32) CALLOTHER (const, 0x276, 4) , (unique, 0xbaa00, 16), (unique, 0xbaa00, 16) CALLOTHER (const, 0x147, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x28f6f0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (const, 0x21, 4), (register, 0x8, 4) INT_AND (unique, 0x10000042, 4) , (const, 0x3f, 4), (unique, 0x10000042, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000042, 4) , (const, 0x1f, 4)]
[ ---  CBRANCH (ram, 0x28f730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1240, 32) , (register, 0x1220, 32), (register, 0x1240, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1320, 32) , (register, 0x1300, 32), (register, 0x1220, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1200, 32) , (register, 0x1300, 32), (register, 0x1300, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000183, 8), (unique, 0x10000183, 8) INT_AND (unique, 0x1000017b, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x1000017b, 8) CAST (register, 0x38, 8), (register, 0x8, 4) INT_AND (unique, 0x10000042, 4) , (const, 0x1f, 4)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000015b, 8) COPY (unique, 0x10000193, 8), (unique, 0x10000193, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000063, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000063, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CBRANCH (ram, 0x28f726, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000018b, 8), (unique, 0x1000018b, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000063, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000063, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0x10000163, 8) COPY (register, 0x10, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000015b, 8) , (unique, 0x10000163, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CBRANCH (ram, 0x28f830, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1240, 32) , (register, 0x1220, 32), (register, 0x1240, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1320, 32) , (register, 0x1300, 32), (register, 0x1220, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1200, 32) , (register, 0x1300, 32), (register, 0x1300, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x38, 8) CAST (unique, 0x100001a3, 8), (unique, 0x100001a3, 8) INT_AND (unique, 0x1000019b, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x1000019b, 8) CAST (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x28f734, 1)]
[ ---  CBRANCH (ram, 0x28f830, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1240, 32) , (register, 0x1220, 32), (register, 0x1240, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1320, 32) , (register, 0x1300, 32), (register, 0x1220, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1200, 32) , (register, 0x1300, 32), (register, 0x1300, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28f850, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1240, 32) , (register, 0x1220, 32), (register, 0x1240, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1320, 32) , (register, 0x1300, 32), (register, 0x1220, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1200, 32) , (register, 0x1300, 32), (register, 0x1300, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28f870, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1240, 32) , (register, 0x1220, 32), (register, 0x1240, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1320, 32) , (register, 0x1300, 32), (register, 0x1220, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1200, 32) , (register, 0x1300, 32), (register, 0x1300, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28f8ae, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1240, 32) , (register, 0x1220, 32), (register, 0x1240, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1320, 32) , (register, 0x1300, 32), (register, 0x1220, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1200, 32) , (register, 0x1300, 32), (register, 0x1300, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) CAST (unique, 0x100001b3, 8), (unique, 0x100001b3, 8) INT_AND (unique, 0x100001ab, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x100001ab, 8) CAST (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28f890, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x12a0, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x12c0, 32) , (register, 0x12a0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1280, 32) , (register, 0x1260, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1240, 32) , (register, 0x1220, 32), (register, 0x1280, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1300, 32) , (register, 0x1280, 32), (register, 0x1260, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x12e0, 32) , (register, 0x1260, 32), (register, 0x1240, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x12c0, 32) , (register, 0x1240, 32), (register, 0x1220, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x12a0, 32) , (register, 0x1220, 32), (register, 0x1300, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1320, 32) , (register, 0x1300, 32), (register, 0x12e0, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1320, 32) , (register, 0x12e0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1320, 32) , (register, 0x12c0, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1320, 32) , (register, 0x12a0, 32), (register, 0x1280, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1200, 32) , (register, 0x1300, 32), (register, 0x1260, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1200, 32) , (register, 0x12e0, 32), (register, 0x1240, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1200, 32) , (register, 0x12c0, 32), (register, 0x1220, 32) CALLOTHER (const, 0x220, 4) , (register, 0x1200, 32) , (register, 0x12a0, 32), (register, 0x1300, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x12e0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x12c0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x12a0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28f830, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000016b, 8) COPY (unique, 0x100001c3, 8), (unique, 0x100001c3, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000bb, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000bb, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CBRANCH (ram, 0x28f840, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001bb, 8), (unique, 0x100001bb, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000bb, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000bb, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0x10000173, 8) COPY (register, 0x10, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000016b, 8) , (unique, 0x10000173, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CBRANCH (ram, 0x28f850, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000014b, 8) COPY (unique, 0x100001d3, 8), (unique, 0x100001d3, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100000db, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000db, 8) PTRSUB (unique, 0x100000d3, 8) , (const, 0x0, 8), (unique, 0x100000d3, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CBRANCH (ram, 0x28f861, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001cb, 8), (unique, 0x100001cb, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100000db, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000db, 8) PTRSUB (unique, 0x100000d3, 8) , (const, 0x0, 8), (unique, 0x100000d3, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0x10000153, 8) COPY (register, 0x10, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000014b, 8) , (unique, 0x10000153, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CBRANCH (ram, 0x28f870, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000013b, 8) COPY (unique, 0x100001e3, 8), (unique, 0x100001e3, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100000fb, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000fb, 8) PTRSUB (unique, 0x100000f3, 8) , (const, 0x0, 8), (unique, 0x100000f3, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CBRANCH (ram, 0x28f881, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001db, 8), (unique, 0x100001db, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100000fb, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000fb, 8) PTRSUB (unique, 0x100000f3, 8) , (const, 0x0, 8), (unique, 0x100000f3, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0x10000143, 8) COPY (register, 0x10, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000013b, 8) , (unique, 0x10000143, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1280, 32)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000012b, 8) COPY (unique, 0x100001f3, 8), (unique, 0x100001f3, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000011b, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000011b, 8) PTRSUB (unique, 0x10000113, 8) , (const, 0x0, 8), (unique, 0x10000113, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CBRANCH (ram, 0x28f8bf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001eb, 8), (unique, 0x100001eb, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000011b, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000011b, 8) PTRSUB (unique, 0x10000113, 8) , (const, 0x0, 8), (unique, 0x10000113, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0x10000133, 8) COPY (register, 0x10, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000012b, 8) , (unique, 0x10000133, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x28f7c0, 1)]
