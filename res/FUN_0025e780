[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x50, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x50, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x50, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000284, 8), (unique, 0x10000284, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) CALL (ram, 0x2625e0, 8) , (const, 0xb, 8) , (unique, 0x100001ab, 8) , (unique, 0x100001b3, 8) , (unique, 0x3800, 8), (unique, 0x100001b3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f0250, 8), (unique, 0x100001ab, 8) COPY (const, 0x2b7019, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff94, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(unique, 0x10000270, 4) COPY (stack, 0xffffffffffffff94, 4), (stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (unique, 0x10000270, 4) , (unique, 0x10000280, 4)]
[(ram, 0x4f0a70, 4) MULTIEQUAL (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x25e8eb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0xffffffffffffffff, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x6d, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6d, 4)]
[ ---  CBRANCH (ram, 0x25e8eb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x262700, 8) , (register, 0x10, 4) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x18, 8) , (const, 0x24, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000294, 8), (unique, 0x10000294, 8) INT_ADD (register, 0x0, 8) , (const, 0x38, 8)]
[(register, 0x28, 4) COPY (const, 0xfffffffe, 4)]
[(unique, 0x10000160, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000029c, 8), (unique, 0x1000029c, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)]
[(unique, 0x10000164, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000168, 8), (unique, 0x10000168, 8) CAST (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8)]
[(unique, 0x10000170, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000174, 8), (unique, 0x10000174, 8) CAST (unique, 0x100002ac, 8), (unique, 0x100002ac, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)]
[(unique, 0x1000017c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000180, 8), (unique, 0x10000180, 8) CAST (unique, 0x100002b4, 8), (unique, 0x100002b4, 8) INT_ADD (register, 0x0, 8) , (const, 0x24, 8)]
[(unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002c4, 8), (unique, 0x100002c4, 8) INT_ADD (register, 0x0, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x25e988, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (stack, 0xffffffffffffff94, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100002d4, 8), (unique, 0x100002d4, 8) INT_ADD (register, 0x0, 8) , (const, 0x3c, 8)]
[(register, 0xa8, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x25e919, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (unique, 0x5300, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (unique, 0x1000017c, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (unique, 0x10000170, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (unique, 0x10000164, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (unique, 0x10000160, 4) , (stack, 0xffffffffffffff98, 4)]
[(ram, 0x4f0a70, 4) MULTIEQUAL (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x25e898, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (stack, 0xffffffffffffff94, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb7, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0xb7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002ec, 8) , (unique, 0xbd00, 4), (unique, 0x100002ec, 8) CAST (unique, 0x3100, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002e4, 8), (unique, 0x100002e4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0x10000278, 4) COPY (stack, 0xffffffffffffff94, 4)]
[ ---  CBRANCH (ram, 0x25e8be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002f4, 8), (unique, 0x100002f4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0x10000280, 4) COPY (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x25e8d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000bd, 4) , (const, 0x0, 4), (unique, 0x100000bd, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x25e8d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (const, 0x5, 4), (register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x25e7f7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0xffffffff, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12b, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x12b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000304, 8) , (unique, 0xbd00, 4), (unique, 0x10000304, 8) CAST (unique, 0x3100, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002fc, 8), (unique, 0x100002fc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x25ead8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000030c, 8), (unique, 0x1000030c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf4, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0xf4, 4), (ram, 0x4f0a70, 4) MULTIEQUAL (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0xf4, 4), (stack, 0xffffffffffffff94, 4) MULTIEQUAL (unique, 0x10000278, 4) , (unique, 0x10000280, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xf4, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xf4, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xf4, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xf4, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xf4, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0xf4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf4, 4)]
[ ---  CALL (ram, 0x262050, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x25e86a, 1)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x141, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x141, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000031c, 8) , (unique, 0xbd00, 4), (unique, 0x1000031c, 8) CAST (unique, 0x3100, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000314, 8), (unique, 0x10000314, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x25eb10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000324, 8), (unique, 0x10000324, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x320, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x320, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x320, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (unique, 0x10000280, 4) , (const, 0x320, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x320, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x320, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x320, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x320, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x320, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x320, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x320, 4)]
[ ---  CALL (ram, 0x262050, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x25e8db, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (unique, 0x10000280, 4) , (stack, 0xffffffffffffff94, 4)]
[(ram, 0x4f0a70, 4) MULTIEQUAL (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x25ead8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (unique, 0x10000280, 4) , (stack, 0xffffffffffffff94, 4)]
[(ram, 0x4f0a70, 4) MULTIEQUAL (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x25e86a, 1)]
[(register, 0x18, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x165, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x165, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x165, 4), (ram, 0x4f0a70, 4) MULTIEQUAL (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x165, 4), (stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x165, 4), (stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x165, 4), (stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x165, 4), (stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x165, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x165, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x165, 4), (stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x165, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x25e970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x2628a0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 4) , (unique, 0x3800, 8) , (const, 0x24, 8)]
[(ram, 0x4f0a70, 4) COPY (const, 0x1, 4)]
[(register, 0x28, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x25e955, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (unique, 0x5300, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (unique, 0x1000017c, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (unique, 0x10000170, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (unique, 0x10000160, 4)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xa8, 4)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3100, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3a00, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18e, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x18e, 4), (ram, 0x4f0a70, 4) MULTIEQUAL (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x25eac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff9c, 4) , (const, 0xffffffff, 4), (stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (unique, 0x10000164, 4)]
[(ram, 0x4f0a70, 4) COPY (const, 0x1, 4)]
[(register, 0x28, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x25e947, 1)]
[ ---  CBRANCH (ram, 0x25e9a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff9c, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000033c, 8) , (stack, 0xffffffffffffffa8, 4), (unique, 0x1000033c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffa8, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3400, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000334, 8), (unique, 0x10000334, 8) INT_ADD (unique, 0x1000032c, 8) , (register, 0x8, 8), (unique, 0x1000032c, 8) CAST (register, 0x80, 8), (register, 0x8, 8) INT_SEXT (stack, 0xffffffffffffffa0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x28, 8) CAST (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) INT_ADD (unique, 0x10000344, 8) , (register, 0x80, 8), (unique, 0x10000344, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000334, 8), (unique, 0x10000334, 8) INT_ADD (unique, 0x1000032c, 8) , (register, 0x8, 8), (unique, 0x1000032c, 8) CAST (register, 0x80, 8), (register, 0x80, 8) INT_SEXT (stack, 0xffffffffffffffa4, 4), (register, 0x8, 8) INT_SEXT (stack, 0xffffffffffffffa0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x28, 8) CAST (unique, 0x1000035c, 8), (unique, 0x1000035c, 8) INT_ADD (unique, 0x10000354, 8) , (register, 0x88, 8), (unique, 0x10000354, 8) CAST (register, 0x28, 8), (register, 0x28, 8) CAST (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) INT_ADD (unique, 0x10000344, 8) , (register, 0x80, 8), (unique, 0x10000344, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000334, 8), (unique, 0x10000334, 8) INT_ADD (unique, 0x1000032c, 8) , (register, 0x8, 8), (unique, 0x1000032c, 8) CAST (register, 0x80, 8), (register, 0x88, 8) INT_SEXT (stack, 0xffffffffffffffb0, 4), (stack, 0xffffffffffffffb0, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x8, 8), (register, 0x80, 8) INT_SEXT (stack, 0xffffffffffffffa4, 4), (register, 0x8, 8) INT_SEXT (stack, 0xffffffffffffffa0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffac, 4), (unique, 0x3100, 8) CAST (unique, 0x1000037c, 8), (unique, 0x1000037c, 8) INT_ADD (unique, 0x10000374, 8) , (const, 0x14, 8), (unique, 0x10000374, 8) CAST (register, 0x8, 8), (stack, 0xffffffffffffffac, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x213, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x210, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x204, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f8, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ec, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e5, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1df, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x213, 4), (ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x210, 4), (ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x204, 4), (ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x1f8, 4), (ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x1ec, 4), (ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x1e5, 4), (ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x1df, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x28, 8) CAST (unique, 0x1000036c, 8), (unique, 0x1000036c, 8) INT_ADD (unique, 0x10000364, 8) , (register, 0x90, 8), (unique, 0x10000364, 8) CAST (register, 0x28, 8), (register, 0x28, 8) CAST (unique, 0x1000035c, 8), (unique, 0x1000035c, 8) INT_ADD (unique, 0x10000354, 8) , (register, 0x88, 8), (unique, 0x10000354, 8) CAST (register, 0x28, 8), (register, 0x28, 8) CAST (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) INT_ADD (unique, 0x10000344, 8) , (register, 0x80, 8), (unique, 0x10000344, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000334, 8), (unique, 0x10000334, 8) INT_ADD (unique, 0x1000032c, 8) , (register, 0x8, 8), (unique, 0x1000032c, 8) CAST (register, 0x80, 8), (register, 0x90, 8) INT_SEXT (stack, 0xffffffffffffffb4, 4), (stack, 0xffffffffffffffb4, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0xc, 8), (register, 0x88, 8) INT_SEXT (stack, 0xffffffffffffffb0, 4), (stack, 0xffffffffffffffb0, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x8, 8), (register, 0x80, 8) INT_SEXT (stack, 0xffffffffffffffa4, 4), (register, 0x8, 8) INT_SEXT (stack, 0xffffffffffffffa0, 4)]
[ ---  CBRANCH (ram, 0x25ea65, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x10000394, 8) , (register, 0x28, 8), (unique, 0x10000394, 8) CAST (register, 0x30, 8), (register, 0x28, 8) INT_ADD (unique, 0x1000038c, 8) , (unique, 0x1000020b, 8), (unique, 0x1000038c, 8) CAST (register, 0x28, 8), (unique, 0x1000020b, 8) INT_SUB (register, 0x98, 8) , (unique, 0x10000384, 8), (unique, 0x10000384, 8) CAST (register, 0x80, 8), (register, 0x28, 8) CAST (unique, 0x1000036c, 8), (unique, 0x1000036c, 8) INT_ADD (unique, 0x10000364, 8) , (register, 0x90, 8), (unique, 0x10000364, 8) CAST (register, 0x28, 8), (register, 0x28, 8) CAST (unique, 0x1000035c, 8), (unique, 0x1000035c, 8) INT_ADD (unique, 0x10000354, 8) , (register, 0x88, 8), (unique, 0x10000354, 8) CAST (register, 0x28, 8), (register, 0x28, 8) CAST (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) INT_ADD (unique, 0x10000344, 8) , (register, 0x80, 8), (unique, 0x10000344, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000334, 8), (unique, 0x10000334, 8) INT_ADD (unique, 0x1000032c, 8) , (register, 0x8, 8), (unique, 0x1000032c, 8) CAST (register, 0x80, 8), (register, 0x98, 8) INT_SEXT (stack, 0xffffffffffffffb8, 4), (register, 0x90, 8) INT_SEXT (stack, 0xffffffffffffffb4, 4), (stack, 0xffffffffffffffb4, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0xc, 8), (register, 0x88, 8) INT_SEXT (stack, 0xffffffffffffffb0, 4), (stack, 0xffffffffffffffb0, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x8, 8), (register, 0x80, 8) INT_SEXT (stack, 0xffffffffffffffa4, 4), (register, 0x8, 8) INT_SEXT (stack, 0xffffffffffffffa0, 4)]
[ ---  CBRANCH (ram, 0x25eb20, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x88, 8) , (register, 0x28, 8)]
[(register, 0x28, 4) COPY (const, 0x22, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x315, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x315, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000039c, 8) , (const, 0x22, 4), (unique, 0x1000039c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x25e947, 1)]
[ ---  CBRANCH (ram, 0x25eae8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ff, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2ff, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x2ff, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x2ff, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x2ff, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x2ff, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x2ff, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x2ff, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x2ff, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x2ff, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ff, 4)]
[ ---  CBRANCH (ram, 0x25eb38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x261ba0, 8) , (register, 0xa8, 4) , (register, 0x80, 8) , (register, 0x28, 8)]
[(register, 0x28, 4) COPY (const, 0x2, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30f, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x30f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003a4, 8) , (const, 0x2, 4), (unique, 0x100003a4, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x25e947, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x25f, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x25f, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x25f, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x25f, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x25f, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x25f, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x25f, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x25f, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x25f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25f, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x80, 8) , (register, 0x30, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x25ea70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003b4, 8), (unique, 0x100003b4, 8) INT_ADD (unique, 0x100003ac, 8) , (unique, 0x10000213, 8), (unique, 0x100003ac, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000213, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x25ea50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003c4, 8), (unique, 0x100003c4, 8) INT_ADD (unique, 0x100003bc, 8) , (unique, 0x10000223, 8), (unique, 0x100003bc, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000223, 8) INT_ADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x25ea50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003d4, 8), (unique, 0x100003d4, 8) INT_ADD (unique, 0x100003cc, 8) , (unique, 0x10000233, 8), (unique, 0x100003cc, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000233, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x25ea50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003e4, 8), (unique, 0x100003e4, 8) INT_ADD (unique, 0x100003dc, 8) , (unique, 0x10000243, 8), (unique, 0x100003dc, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000243, 8) INT_ADD (register, 0x90, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x25eafb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003f4, 8), (unique, 0x100003f4, 8) INT_ADD (unique, 0x100003ec, 8) , (unique, 0x10000253, 8), (unique, 0x100003ec, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000253, 8) INT_ADD (register, 0x98, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2f7, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x2f7, 4), (ram, 0x4f0a70, 4) MULTIEQUAL (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (unique, 0x100003fc, 8), (unique, 0x100003fc, 8) CAST (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x25e947, 1)]
[(register, 0x28, 4) COPY (const, 0xfffffffe, 4)]
[ ---  CBRANCH (ram, 0x25e947, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (stack, 0xffffffffffffff94, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000404, 8), (unique, 0x10000404, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(ram, 0x4f0a70, 4) MULTIEQUAL (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x25e947, 1)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a7, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x1a7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000040c, 8) , (const, 0x0, 4), (unique, 0x1000040c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(ram, 0x4f0a70, 4) MULTIEQUAL (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x25e955, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b6, 4)]
[(ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0x1b6, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x1b6, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x1b6, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x1b6, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x1b6, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x1b6, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x1b6, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x1b6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b6, 4)]
[ ---  CALL (ram, 0x210940, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(ram, 0x4f0a70, 4) MULTIEQUAL (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x25e86a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0xffffffffffffffff, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(ram, 0x4f0a70, 4) MULTIEQUAL (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4) , (ram, 0x4f0a70, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) COPY (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x25eb50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000414, 8), (unique, 0x10000414, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4f0a70, 4) COPY (ram, 0x4f0a70, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0xee, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xee, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xee, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xee, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xee, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xee, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0xee, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xee, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xee, 4)]
[(ram, 0x4f0a70, 4) COPY (ram, 0x4f0a70, 4), (ram, 0x4f0a70, 4) INDIRECT (ram, 0x4f0a70, 4) , (const, 0xee, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x25e85c, 1)]
