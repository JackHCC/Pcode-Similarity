[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000506, 8), (unique, 0x10000506, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(stack, 0xffffffffffffff70, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12544a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000025b, 4) , (const, 0x0, 4), (unique, 0x1000025b, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004fe, 8), (unique, 0x100004fe, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000516, 8), (unique, 0x10000516, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x12544a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000050e, 8), (unique, 0x1000050e, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(register, 0xa8, 8) CAST (unique, 0x10000536, 8), (unique, 0x10000536, 8) INT_XOR (register, 0xa8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000052e, 8), (unique, 0x1000052e, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0xa8, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x10000526, 8) , (const, 0x2f, 4), (unique, 0x10000526, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x1000051e, 8) , (const, 0x11, 4), (unique, 0x1000051e, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (unique, 0xbd80, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x12582a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1259d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x6e3, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100002b4, 8) , (unique, 0x100002a4, 8) , (const, 0x19f, 4) , (unique, 0x100002d4, 8), (unique, 0x100002d4, 8) COPY (const, 0x2bbc40, 8), (unique, 0x100002b4, 8) COPY (const, 0x2b39f4, 8), (unique, 0x100002a4, 8) COPY (const, 0x2b39e0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000053e, 8) , (const, 0x0, 8), (unique, 0x1000053e, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1256cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000546, 8), (unique, 0x10000546, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffff70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6d5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x69d, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x6d5, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x69d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x6d5, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x69d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6d5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x69d, 4)]
[(register, 0x0, 4) CALLIND (stack, 0xffffffffffffff70, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (stack, 0x8, 4) , (stack, 0x10, 4)]
[ ---  BRANCH (ram, 0x1256cb, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100003ee, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x125469, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(unique, 0x100003f6, 8) COPY (register, 0x30, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100003ee, 8) , (unique, 0x100003f6, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000040e, 8) COPY (register, 0x8, 8), (register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12548e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0x10000416, 8) COPY (unique, 0x3800, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x1000040e, 8) , (unique, 0x10000416, 8)]
[ ---  CBRANCH (ram, 0x125700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1254a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x7, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1259a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x66d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x66d, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100002ac, 8) , (unique, 0x1000029c, 8) , (const, 0x22f, 4) , (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) COPY (const, 0x2bbc40, 8), (unique, 0x100002ac, 8) COPY (const, 0x2b39f4, 8), (unique, 0x1000029c, 8) COPY (const, 0x2b39e0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x1000043e, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x100004a6, 8) COPY (register, 0x28, 8), (register, 0x28, 8) INT_SEXT (unique, 0x1000054e, 4), (unique, 0x1000054e, 4) CAST (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x125974, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x125889, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_LESS (register, 0x38, 4) , (const, 0x4, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000055a, 8), (unique, 0x1000055a, 8) INT_ADD (unique, 0x10000552, 8) , (const, 0x1, 8), (unique, 0x10000552, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x10000572, 8), (unique, 0x10000572, 8) INT_ADD (unique, 0x1000056a, 8) , (unique, 0x1000036c, 8), (unique, 0x1000056a, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000036c, 8) INT_ADD (register, 0x28, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000562, 8), (unique, 0x10000562, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000446, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000055a, 8), (unique, 0x1000055a, 8) INT_ADD (unique, 0x10000552, 8) , (const, 0x1, 8), (unique, 0x10000552, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x12580e, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000055a, 8), (unique, 0x1000055a, 8) INT_ADD (unique, 0x10000552, 8) , (const, 0x1, 8), (unique, 0x10000552, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000456, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x125894, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000582, 8), (unique, 0x10000582, 8) INT_ADD (unique, 0x1000057a, 8) , (const, 0x2, 8), (unique, 0x1000057a, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x100005a2, 8), (unique, 0x100005a2, 8) INT_ADD (unique, 0x1000059a, 8) , (unique, 0x10000374, 8), (unique, 0x1000059a, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000374, 8) INT_ADD (register, 0x28, 8) , (const, 0x5, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000592, 8), (unique, 0x10000592, 8) INT_ADD (unique, 0x1000058a, 8) , (const, 0x1, 8), (unique, 0x1000058a, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000436, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000582, 8), (unique, 0x10000582, 8) INT_ADD (unique, 0x1000057a, 8) , (const, 0x2, 8), (unique, 0x1000057a, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000049e, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x125811, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000582, 8), (unique, 0x10000582, 8) INT_ADD (unique, 0x1000057a, 8) , (const, 0x2, 8), (unique, 0x1000057a, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x38, 8) COPY (unique, 0x1000044e, 8), (unique, 0x1000044e, 8) MULTIEQUAL (unique, 0x10000436, 8) , (unique, 0x1000043e, 8) , (unique, 0x10000446, 8)]
[(unique, 0x1000048e, 8) COPY (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x1000049e, 8) , (unique, 0x100004a6, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x12579b, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x98, 8) , (const, 0x4, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x1000049e, 8) , (unique, 0x100004a6, 8) , (unique, 0x3100, 8)]
[(register, 0x28, 4) COPY (const, 0x7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x98, 4), (register, 0x98, 4) INT_OR (register, 0x98, 4) , (register, 0x30, 4), (register, 0x98, 4) SUBPIECE (register, 0x98, 8) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4)]
[ ---  BRANCH (ram, 0x1256cb, 1)]
[(unique, 0x1000045e, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x125894, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005b2, 8), (unique, 0x100005b2, 8) INT_ADD (unique, 0x100005aa, 8) , (const, 0x3, 8), (unique, 0x100005aa, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x100005d2, 8), (unique, 0x100005d2, 8) INT_ADD (unique, 0x100005ca, 8) , (const, 0x7, 8), (unique, 0x100005ca, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005c2, 8), (unique, 0x100005c2, 8) INT_ADD (unique, 0x100005ba, 8) , (const, 0x2, 8), (unique, 0x100005ba, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000042e, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005b2, 8), (unique, 0x100005b2, 8) INT_ADD (unique, 0x100005aa, 8) , (const, 0x3, 8), (unique, 0x100005aa, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000047e, 8) COPY (register, 0x98, 8), (register, 0x98, 8) COPY (const, 0x4, 8)]
[(register, 0x38, 8) COPY (unique, 0x10000466, 8), (unique, 0x10000466, 8) MULTIEQUAL (unique, 0x10000456, 8) , (unique, 0x1000045e, 8)]
[(unique, 0x10000486, 8) COPY (register, 0x98, 8), (register, 0x98, 8) COPY (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x12579b, 1)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0x1000047e, 8) , (unique, 0x10000486, 8) , (unique, 0x1000048e, 8) , (unique, 0x100004a6, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000042e, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x12589f, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x81, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005da, 8), (unique, 0x100005da, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1257c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(register, 0x28, 4) COPY (const, 0x6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100005ea, 8), (unique, 0x100005ea, 8) INT_ADD (unique, 0x100005e2, 8) , (register, 0x28, 8), (unique, 0x100005e2, 8) CAST (register, 0x38, 8), (register, 0x28, 8) INT_SUB (register, 0x28, 8) , (register, 0x98, 8)]
[ ---  BRANCH (ram, 0x1256cb, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000602, 8) , (unique, 0xbb00, 1), (unique, 0x10000602, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005fa, 8), (unique, 0x100005fa, 8) INT_ADD (unique, 0x100005f2, 8) , (const, 0x7, 8), (unique, 0x100005f2, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000622, 8), (unique, 0x10000622, 8) INT_ADD (unique, 0x1000061a, 8) , (const, 0x1, 8), (unique, 0x1000061a, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000612, 8), (unique, 0x10000612, 8) INT_ADD (unique, 0x1000060a, 8) , (const, 0x6, 8), (unique, 0x1000060a, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000642, 8), (unique, 0x10000642, 8) INT_ADD (unique, 0x1000063a, 8) , (const, 0x2, 8), (unique, 0x1000063a, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000632, 8), (unique, 0x10000632, 8) INT_ADD (unique, 0x1000062a, 8) , (const, 0x5, 8), (unique, 0x1000062a, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x1000065a, 8), (unique, 0x1000065a, 8) INT_ADD (unique, 0x10000652, 8) , (const, 0x3, 8), (unique, 0x10000652, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000064a, 8), (unique, 0x1000064a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100003e6, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x100003e6, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000662, 8), (unique, 0x10000662, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xfffffff8, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1254a2, 1)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0xbc80, 4)]
[(unique, 0x1000041e, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000692, 8), (unique, 0x10000692, 8) INT_SUB (unique, 0x10000682, 8) , (unique, 0x1000068a, 8), (unique, 0x1000068a, 8) CAST (register, 0x0, 8), (unique, 0x10000682, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1254d3, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (unique, 0x1000069a, 8) , (unique, 0x100006a2, 8), (unique, 0x100006a2, 8) CAST (register, 0x30, 8), (unique, 0x1000069a, 8) CAST (register, 0x38, 8), (register, 0x30, 8) CAST (unique, 0x10000692, 8), (unique, 0x10000692, 8) INT_SUB (unique, 0x10000682, 8) , (unique, 0x1000068a, 8), (unique, 0x1000068a, 8) CAST (register, 0x0, 8), (unique, 0x10000682, 8) CAST (unique, 0xbd80, 8), (register, 0x38, 8) CAST (unique, 0x1000067a, 8), (unique, 0x1000067a, 8) INT_SUB (unique, 0x1000066a, 8) , (unique, 0x10000672, 8), (unique, 0x10000672, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000066a, 8) CAST (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000426, 8) COPY (register, 0x38, 8)]
[(unique, 0x1000046e, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006b2, 8), (unique, 0x100006b2, 8) INT_ADD (unique, 0x100006aa, 8) , (const, 0x3, 8), (unique, 0x100006aa, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000041e, 8) , (unique, 0x10000426, 8)]
[ ---  CBRANCH (ram, 0x1254de, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x100006ba, 8), (unique, 0x100006ba, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000041e, 8) , (unique, 0x10000426, 8)]
[(unique, 0x10000476, 8) COPY (register, 0x30, 8)]
[(unique, 0x100004ae, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x125604, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_SRIGHT (unique, 0x100006c2, 8) , (const, 0x2, 4), (unique, 0x100006c2, 8) CAST (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000046e, 8) , (unique, 0x10000476, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x125638, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000267, 4) , (const, 0x0, 4), (unique, 0x10000267, 4) INT_AND (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x125659, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100004ae, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x125648, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100006ca, 4) , (const, 0x0, 4), (unique, 0x100006ca, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (register, 0x10, 4)]
[(register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x516, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x516, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x516, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x125650, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x125600, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0x4, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100004b6, 8) , (unique, 0x100004ae, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x125670, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100006ce, 4) , (const, 0x0, 4), (unique, 0x100006ce, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (register, 0x10, 4)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100004b6, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x125604, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125521, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100004ae, 8) , (register, 0xa8, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x125508, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100006d2, 4) , (const, 0x0, 4), (unique, 0x100006d2, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x8, 8)]
[(unique, 0x10000291, 1) COPY (const, 0x0, 1)]
[(register, 0x28, 4) COPY (const, 0x6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (register, 0x10, 4)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x125604, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100004c6, 8) , (unique, 0x100004ae, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1255c0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100006d6, 4) , (const, 0x0, 4), (unique, 0x100006d6, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000293, 1) COPY (const, 0x0, 1)]
[(register, 0x28, 4) COPY (const, 0x6, 4)]
[(unique, 0x100004ee, 8) COPY (unique, 0x100004e6, 8), (unique, 0x100004e6, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12553c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (register, 0x10, 4)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100004c6, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x125604, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100004ae, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1256f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (unique, 0x3400, 8)]
[(unique, 0x10000292, 1) COPY (const, 0x0, 1)]
[(register, 0x28, 4) COPY (const, 0x4, 4)]
[ ---  BRANCH (ram, 0x125533, 1)]
[(register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x7, 4), (register, 0x28, 4) INT_AND (unique, 0x10000126, 4) , (const, 0xfffffffe, 4), (unique, 0x10000126, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x125533, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0x10000290, 1) MULTIEQUAL (register, 0x200, 1) , (unique, 0x10000292, 1) , (unique, 0x10000291, 1)]
[ ---  CBRANCH (ram, 0x1255f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100004e6, 8) , (register, 0xa8, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0x1000028f, 1) MULTIEQUAL (unique, 0x10000293, 1) , (unique, 0x10000290, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006e2, 8), (unique, 0x100006e2, 8) INT_ADD (unique, 0x100006da, 8) , (const, 0x14, 8), (unique, 0x100006da, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1257d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100006ea, 8), (unique, 0x100006ea, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (stack, 0xffffffffffffffb0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x1256b8, 1)]
[ ---  CBRANCH (ram, 0x1257f8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffff70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x220, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f9, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x220, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1f9, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x220, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1f9, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x220, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f9, 4)]
[ ---  CBRANCH (ram, 0x1256a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffff70, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (register, 0xa8, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (const, 0x0, 8) , (stack, 0x10, 4)]
[(unique, 0x100004f6, 4) COPY (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x1255b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x125803, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000712, 8), (unique, 0x10000712, 8) INT_SUB (unique, 0x1000070a, 8) , (register, 0xa8, 8), (unique, 0x1000070a, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0xa8, 8) CAST (unique, 0x10000702, 8), (unique, 0x10000702, 8) INT_SUB (unique, 0x100006f2, 8) , (unique, 0x100006fa, 8), (unique, 0x100006fa, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0x100006f2, 8) CAST (register, 0xa8, 8)]
[ ---  BRANCH (ram, 0x1255a9, 1)]
[(unique, 0x100004fa, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1259c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x7, 4), (register, 0x28, 4) MULTIEQUAL (unique, 0x100004f6, 4) , (unique, 0x100004fa, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0x1000028e, 1) MULTIEQUAL (register, 0x206, 1) , (unique, 0x1000028f, 1) , (unique, 0x1000028f, 1)]
[ ---  CBRANCH (ram, 0x1256cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1258bc, 1) , (unique, 0x1000028e, 1)]
[ ---  CBRANCH (ram, 0x125983, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x3, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x1000072a, 8), (unique, 0x1000072a, 8) INT_SUB (unique, 0x1000071a, 8) , (unique, 0x10000722, 8), (unique, 0x10000722, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000071a, 8) CAST (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x36a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x36a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x36a, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100002bc, 8) , (unique, 0x10000294, 8) , (const, 0x309, 4) , (unique, 0x100002c4, 8), (unique, 0x100002c4, 8) COPY (const, 0x2bbc40, 8), (unique, 0x100002bc, 8) COPY (const, 0x2b3a08, 8), (unique, 0x10000294, 8) COPY (const, 0x2b39e0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12597f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x125966, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000073a, 8), (unique, 0x1000073a, 8) INT_ADD (unique, 0x10000732, 8) , (const, 0x1, 8), (unique, 0x10000732, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000074a, 8) , (unique, 0xbb00, 1), (unique, 0x1000074a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000742, 8), (unique, 0x10000742, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x125960, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x1000073a, 8), (unique, 0x1000073a, 8) INT_ADD (unique, 0x10000732, 8) , (const, 0x1, 8), (unique, 0x10000732, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000075a, 8), (unique, 0x1000075a, 8) INT_ADD (unique, 0x10000752, 8) , (const, 0x2, 8), (unique, 0x10000752, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x1000077a, 8), (unique, 0x1000077a, 8) INT_ADD (unique, 0x10000772, 8) , (const, 0x5, 8), (unique, 0x10000772, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000076a, 8), (unique, 0x1000076a, 8) INT_ADD (unique, 0x10000762, 8) , (const, 0x1, 8), (unique, 0x10000762, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x125960, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x1000075a, 8), (unique, 0x1000075a, 8) INT_ADD (unique, 0x10000752, 8) , (const, 0x2, 8), (unique, 0x10000752, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000078a, 8), (unique, 0x1000078a, 8) INT_ADD (unique, 0x10000782, 8) , (const, 0x3, 8), (unique, 0x10000782, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x100007aa, 8), (unique, 0x100007aa, 8) INT_ADD (unique, 0x100007a2, 8) , (const, 0x6, 8), (unique, 0x100007a2, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000079a, 8), (unique, 0x1000079a, 8) INT_ADD (unique, 0x10000792, 8) , (const, 0x2, 8), (unique, 0x10000792, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x125960, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x1000078a, 8), (unique, 0x1000078a, 8) INT_ADD (unique, 0x10000782, 8) , (const, 0x3, 8), (unique, 0x10000782, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x100007ca, 8), (unique, 0x100007ca, 8) INT_ADD (unique, 0x100007c2, 8) , (const, 0x7, 8), (unique, 0x100007c2, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007ba, 8), (unique, 0x100007ba, 8) INT_ADD (unique, 0x100007b2, 8) , (const, 0x3, 8), (unique, 0x100007b2, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x125960, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007da, 8), (unique, 0x100007da, 8) INT_ADD (unique, 0x100007d2, 8) , (const, 0x5, 8), (unique, 0x100007d2, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007ea, 8) , (unique, 0xbb00, 1), (unique, 0x100007ea, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100007e2, 8), (unique, 0x100007e2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x125960, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x100007da, 8), (unique, 0x100007da, 8) INT_ADD (unique, 0x100007d2, 8) , (const, 0x5, 8), (unique, 0x100007d2, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100003d6, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007fa, 8), (unique, 0x100007fa, 8) INT_ADD (unique, 0x100007f2, 8) , (const, 0x9, 8), (unique, 0x100007f2, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100003fe, 8) COPY (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x1000080a, 8), (unique, 0x1000080a, 8) INT_ADD (unique, 0x10000802, 8) , (const, 0x1, 8), (unique, 0x10000802, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003fe, 8) , (unique, 0x10000406, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000812, 8), (unique, 0x10000812, 8) CAST (register, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100003d6, 8) , (unique, 0x100003de, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003fe, 8) , (unique, 0x10000406, 8)]
[(unique, 0x100003de, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100003d6, 8) , (unique, 0x100003de, 8)]
[(unique, 0x10000406, 8) COPY (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x1000080a, 8), (unique, 0x1000080a, 8) INT_ADD (unique, 0x10000802, 8) , (const, 0x1, 8), (unique, 0x10000802, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003fe, 8) , (unique, 0x10000406, 8)]
[ ---  CBRANCH (ram, 0x125947, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x1000080a, 8), (unique, 0x1000080a, 8) INT_ADD (unique, 0x10000802, 8) , (const, 0x1, 8), (unique, 0x10000802, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003fe, 8) , (unique, 0x10000406, 8)]
[(register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x30, 4), (register, 0x30, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000025f, 4) , (const, 0x1, 4), (unique, 0x1000025f, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x1256cb, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000081a, 8), (unique, 0x1000081a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x1254b8, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x100004ee, 8) , (register, 0xa8, 8)]
[ ---  BRANCH (ram, 0x1256cb, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x0, 4) COPY (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1259c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000822, 8), (unique, 0x10000822, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1c3, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1c3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c3, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
