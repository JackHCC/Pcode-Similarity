[(stack, 0xfffffffffffffdc8, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x493f50, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x30, 8)]
[(register, 0x28, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000506, 8) COPY (register, 0x38, 8)]
[(stack, 0xfffffffffffffdc8, 8) MULTIEQUAL (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000506, 8) , (unique, 0x1000050e, 8)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000506, 8) , (unique, 0x1000050e, 8)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000506, 8) , (unique, 0x1000050e, 8)]
[ ---  BRANCHIND (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000506, 8) , (unique, 0x1000050e, 8)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x8c, 4), (stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x80, 4)]
[(register, 0x0, 8) CAST (unique, 0x100005be, 8), (unique, 0x100005be, 8) CALL (ram, 0x4927f0, 8) , (unique, 0xbb00, 1) , (register, 0x0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x492940, 8) , (unique, 0xbb00, 1) , (register, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000516, 8) COPY (stack, 0xfffffffffffffdc0, 8)]
[(unique, 0x1000051e, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[ ---  BRANCH (ram, 0x493c0c, 1)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x493fa0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100005c6, 1) , (const, 0x0, 1), (unique, 0x100005c6, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x493fc0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100005c7, 1) , (const, 0x0, 1), (unique, 0x100005c7, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x493ff2, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 4) , (const, 0x40, 4)]
[ ---  CBRANCH (ram, 0x493ff2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001c1, 1) , (const, 0x0, 1), (unique, 0x100001c1, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x10, 8) INT_SEXT (register, 0x30, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x11, 4) , (register, 0x30, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100005c8, 8), (unique, 0x100005c8, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_SEXT (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x494019, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4000000000000000, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100005d0, 8), (unique, 0x100005d0, 8) INT_ADD (register, 0x10, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x49402d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8), (unique, 0x3e80, 8) CAST (unique, 0x100005d8, 8), (unique, 0x100005d8, 8) INT_ADD (unique, 0x3d00, 8) , (register, 0x30, 8), (unique, 0x3d00, 8) INT_ADD (register, 0x10, 8) , (const, 0xd8, 8)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001f2, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001f2, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8100, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100005e0, 8), (unique, 0x100005e0, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x90, 8) CAST (unique, 0x100005f0, 8), (unique, 0x100005f0, 8) INT_ADD (unique, 0x100005e8, 8) , (register, 0x0, 8), (unique, 0x100005e8, 8) CAST (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000532, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x494040, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100005f8, 1) , (const, 0x0, 1), (unique, 0x100005f8, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[(register, 0x10, 8) INT_SEXT (register, 0x30, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x11, 4) , (register, 0x30, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100005f9, 8), (unique, 0x100005f9, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_SEXT (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x494081, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4000000000000000, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000601, 8), (unique, 0x10000601, 8) INT_ADD (register, 0x10, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x494095, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8), (unique, 0x3e80, 8) CAST (unique, 0x10000609, 8), (unique, 0x10000609, 8) INT_ADD (unique, 0x3d00, 8) , (register, 0x30, 8), (unique, 0x3d00, 8) INT_ADD (register, 0x10, 8) , (const, 0xd8, 8)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001fa, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001fa, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8100, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000611, 8), (unique, 0x10000611, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(register, 0x98, 8) PTRADD (register, 0x98, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x98, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x7f, 4), (register, 0x30, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4), (register, 0x98, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x493b6c, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000619, 1) , (const, 0x0, 1), (unique, 0x10000619, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x493b9f, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 4) , (const, 0x40, 4)]
[ ---  CBRANCH (ram, 0x493b9f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001bf, 1) , (const, 0x0, 1), (unique, 0x100001bf, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x11, 4) , (unique, 0x1000061a, 4), (unique, 0x1000061a, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x70, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000622, 8), (unique, 0x10000622, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000061e, 4), (unique, 0x1000061e, 4) CAST (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x493bc6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4000000000000000, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000062a, 8), (unique, 0x1000062a, 8) INT_ADD (register, 0x10, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x493bda, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8), (unique, 0x3e80, 8) CAST (unique, 0x10000632, 8), (unique, 0x10000632, 8) INT_ADD (unique, 0x3d00, 8) , (register, 0x10, 8), (unique, 0x3d00, 8) INT_ADD (register, 0x10, 8) , (const, 0xd8, 8)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001e2, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001e2, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8100, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000063a, 8), (unique, 0x1000063a, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x90, 8) CAST (unique, 0x1000064a, 8), (unique, 0x1000064a, 8) INT_ADD (unique, 0x10000642, 8) , (register, 0x0, 8), (unique, 0x10000642, 8) CAST (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x11, 4) , (unique, 0x10000652, 4), (unique, 0x10000652, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x50, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000065a, 8), (unique, 0x1000065a, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000656, 4), (unique, 0x10000656, 4) CAST (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x493c6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4000000000000000, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000662, 8), (unique, 0x10000662, 8) INT_ADD (register, 0x10, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x493bdd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8), (unique, 0x3e80, 8) CAST (unique, 0x1000066a, 8), (unique, 0x1000066a, 8) INT_ADD (unique, 0x3d00, 8) , (register, 0x10, 8), (unique, 0x3d00, 8) INT_ADD (register, 0x10, 8) , (const, 0xd8, 8)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001ea, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001ea, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8100, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000672, 8), (unique, 0x10000672, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x10000536, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x1000067a, 8), (unique, 0x1000067a, 8) INT_ZEXT (register, 0x90, 4), (register, 0x90, 4) INT_SUB (unique, 0x100000ad, 4) , (const, 0x30, 4), (unique, 0x100000ad, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0x1000053a, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x100002a2, 8) , (const, 0x1, 8), (unique, 0x100002a2, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000682, 8), (unique, 0x10000682, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x493c0c, 1)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x493f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100002ba, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x100002ba, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x0, 8) INT_SEXT (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[(register, 0x18, 8) PTRADD (unique, 0x3100, 8) , (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_SEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000068a, 8), (unique, 0x1000068a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x493c0c, 1)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x28, 4) , (const, 0x2, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000252, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x10000252, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffe, 4)]
[(register, 0x8, 1) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000272, 8) , (register, 0x28, 8) , (const, 0x8, 8), (unique, 0x10000272, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x28, 8) INT_SEXT (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[(unique, 0x100005ba, 4) COPY (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffe, 4)]
[ ---  BRANCHIND (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4), (register, 0x30, 4) INT_SUB (register, 0x10, 4) , (const, 0x1a, 4)]
[(register, 0x90, 8) CAST (unique, 0x10000692, 8), (unique, 0x10000692, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x100006aa, 8), (unique, 0x100006aa, 8) INT_ZEXT (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0x1000069a, 8) , (unique, 0x100006a2, 8), (unique, 0x100006a2, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000069a, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x100006c2, 8), (unique, 0x100006c2, 8) INT_ZEXT (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (unique, 0x100006b2, 8) , (unique, 0x100006ba, 8), (unique, 0x100006ba, 8) CAST (unique, 0xbd80, 8), (unique, 0x100006b2, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x100006da, 8), (unique, 0x100006da, 8) INT_ZEXT (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100006ca, 8) , (unique, 0x100006d2, 8), (unique, 0x100006d2, 8) CAST (unique, 0xbd80, 8), (unique, 0x100006ca, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x100006f2, 8), (unique, 0x100006f2, 8) INT_ZEXT (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (unique, 0x100006e2, 8) , (unique, 0x100006ea, 8), (unique, 0x100006ea, 8) CAST (unique, 0xbd80, 8), (unique, 0x100006e2, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x100006fa, 8), (unique, 0x100006fa, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x10000712, 8), (unique, 0x10000712, 8) INT_XOR (unique, 0x10000702, 8) , (unique, 0x1000070a, 8), (unique, 0x1000070a, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000702, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x10000722, 8), (unique, 0x10000722, 8) INT_SRIGHT (unique, 0x1000071a, 8) , (unique, 0x51980, 1), (unique, 0x1000071a, 8) CAST (unique, 0xbd80, 8), (unique, 0x51980, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x10000732, 8), (unique, 0x10000732, 8) INT_RIGHT (unique, 0x1000072a, 8) , (unique, 0x57680, 1), (unique, 0x1000072a, 8) CAST (unique, 0xbd80, 8), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x10000742, 8), (unique, 0x10000742, 8) INT_LEFT (unique, 0x1000073a, 8) , (unique, 0x53700, 1), (unique, 0x1000073a, 8) CAST (unique, 0xbd80, 8), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x1000075a, 8), (unique, 0x1000075a, 8) INT_ADD (unique, 0x1000074a, 8) , (unique, 0x10000752, 8), (unique, 0x10000752, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000074a, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x10000772, 8), (unique, 0x10000772, 8) INT_OR (unique, 0x10000762, 8) , (unique, 0x1000076a, 8), (unique, 0x1000076a, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000762, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x1000078a, 8), (unique, 0x1000078a, 8) INT_MULT (unique, 0x1000077a, 8) , (unique, 0x10000782, 8), (unique, 0x10000782, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000077a, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x10, 8) CAST (unique, 0x100007a2, 8), (unique, 0x100007a2, 8) INT_REM (unique, 0x10000792, 8) , (unique, 0x1000079a, 8), (unique, 0x1000079a, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000792, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x100007ba, 8), (unique, 0x100007ba, 8) INT_SUB (unique, 0x100007aa, 8) , (unique, 0x100007b2, 8), (unique, 0x100007b2, 8) CAST (unique, 0xbd80, 8), (unique, 0x100007aa, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x0, 8) CAST (unique, 0x100007d2, 8), (unique, 0x100007d2, 8) INT_SDIV (unique, 0x100007c2, 8) , (unique, 0x100007ca, 8), (unique, 0x100007ca, 8) CAST (unique, 0xbd80, 8), (unique, 0x100007c2, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x100007ea, 8), (unique, 0x100007ea, 8) INT_AND (unique, 0x100007da, 8) , (unique, 0x100007e2, 8), (unique, 0x100007e2, 8) CAST (unique, 0xbd80, 8), (unique, 0x100007da, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x2, 4) , (register, 0x28, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000041a, 8) , (register, 0x8, 8) , (const, 0x8, 8), (unique, 0x1000041a, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100003da, 8) , (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x100003da, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x10, 8) INT_SEXT (unique, 0x3100, 4), (register, 0x8, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffe, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000043a, 8) , (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x1000043a, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100003fa, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x100003fa, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (register, 0x10, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffd, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffe, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x5b9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000045a, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x1000045a, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100003ba, 8) , (register, 0x8, 8) , (const, 0x8, 8), (unique, 0x100003ba, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (register, 0x8, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffd, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x493c0c, 1)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (register, 0x28, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000031a, 8) , (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x1000031a, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100002fa, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x100002fa, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (register, 0x10, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffe, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x5e3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000033a, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x1000033a, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100002da, 8) , (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x100002da, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (register, 0x10, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffe, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x493c0c, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (register, 0x0, 8) , (unique, 0x100007f2, 8), (unique, 0x100007f2, 8) CAST (register, 0x10, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x100007fa, 8), (unique, 0x100007fa, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000035a, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x1000035a, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)]
[(unique, 0x1000053e, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x28, 4) , (const, 0x2, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000802, 8), (unique, 0x10000802, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000037a, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x1000037a, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffe, 4)]
[(unique, 0x10000542, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x493c0c, 1)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000080a, 8), (unique, 0x1000080a, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000039a, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x1000039a, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[(unique, 0x10000546, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x90, 8) CAST (unique, 0x1000081a, 8), (unique, 0x1000081a, 8) INT_OR (unique, 0x10000812, 8) , (register, 0x0, 8), (unique, 0x10000812, 8) CAST (register, 0x90, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x4940a8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000822, 1) , (const, 0x0, 1), (unique, 0x10000822, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[(unique, 0x1000054a, 4) COPY (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x493bf8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 4) , (const, 0x40, 4)]
[(unique, 0x1000054e, 4) COPY (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x493bf8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001c3, 1) , (const, 0x0, 1), (unique, 0x100001c3, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1)]
[(register, 0x90, 8) CAST (unique, 0x1000082b, 8), (unique, 0x1000082b, 8) INT_OR (unique, 0x10000823, 8) , (register, 0x0, 8), (unique, 0x10000823, 8) CAST (register, 0x90, 8), (register, 0x0, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[(unique, 0x10000552, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x90, 8) CAST (unique, 0x1000083b, 8), (unique, 0x1000083b, 8) INT_OR (unique, 0x10000833, 8) , (register, 0x0, 8), (unique, 0x10000833, 8) CAST (register, 0x90, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x4940f0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000843, 1) , (const, 0x0, 1), (unique, 0x10000843, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[(register, 0x90, 8) CAST (unique, 0x1000084c, 8), (unique, 0x1000084c, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000844, 8), (unique, 0x10000844, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(unique, 0x1000055a, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x1000085c, 8), (unique, 0x1000085c, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000854, 8), (unique, 0x10000854, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(unique, 0x1000055e, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x1000086c, 8), (unique, 0x1000086c, 8) INT_SEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000864, 8), (unique, 0x10000864, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(unique, 0x10000562, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x1000087c, 8), (unique, 0x1000087c, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000874, 8), (unique, 0x10000874, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(unique, 0x10000566, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x10000885, 8), (unique, 0x10000885, 8) INT_SEXT (unique, 0x10000884, 1), (unique, 0x10000884, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x1000056a, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x1000088d, 8), (unique, 0x1000088d, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x1000056e, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000895, 8), (unique, 0x10000895, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000292, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x10000292, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x493f03, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x24, 1)]
[ ---  CBRANCH (ram, 0x494237, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x94, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x49420d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x90, 8) CAST (unique, 0x100008a5, 8), (unique, 0x100008a5, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000089d, 8), (unique, 0x1000089d, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000052e, 4) COPY (unique, 0x3100, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[ ---  CBRANCH (ram, 0x494228, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x5, 1)]
[ ---  CBRANCH (ram, 0x494241, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x8, 1)]
[(unique, 0xbd80, 8) CAST (unique, 0x100008ad, 8), (unique, 0x100008ad, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x1000052a, 4) COPY (unique, 0x3100, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[ ---  CBRANCH (ram, 0x494218, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x49423c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2, 1)]
[(register, 0x90, 8) CAST (unique, 0x100008bd, 8), (unique, 0x100008bd, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100008b5, 8), (unique, 0x100008b5, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000526, 4) COPY (unique, 0x3100, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x100008cd, 8), (unique, 0x100008cd, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100008c5, 8), (unique, 0x100008c5, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000522, 4) COPY (unique, 0x3100, 4)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[ ---  BRANCHIND (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4), (register, 0x30, 4) INT_SUB (register, 0x10, 4) , (const, 0x6, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0x98, 8) PTRADD (register, 0x98, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x98, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x98, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x493d1b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008d5, 1) , (const, 0x0, 1), (unique, 0x100008d5, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x98, 8)]
[(register, 0x90, 8) CAST (unique, 0x100008de, 8), (unique, 0x100008de, 8) INT_ADD (unique, 0x100008d6, 8) , (register, 0x0, 8), (unique, 0x100008d6, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x100008ee, 8), (unique, 0x100008ee, 8) INT_NEGATE (unique, 0x100008e6, 8), (unique, 0x100008e6, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x100008fe, 8), (unique, 0x100008fe, 8) INT_2COMP (unique, 0x100008f6, 8), (unique, 0x100008f6, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(register, 0x90, 8) CAST (unique, 0x10000916, 8), (unique, 0x10000916, 8) INT_SUB (register, 0x90, 8) , (register, 0x0, 8), (register, 0x90, 8) INT_XOR (unique, 0x1000090e, 8) , (register, 0x0, 8), (unique, 0x1000090e, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) INT_SRIGHT (unique, 0x10000906, 8) , (const, 0x3f, 4), (unique, 0x10000906, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000091e, 8), (unique, 0x1000091e, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493bf8, 1)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x59, 4)]
[ ---  CALL (ram, 0x4011c4, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000926, 8), (unique, 0x10000926, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x9, 8) , (const, 0x1, 8)]
[(unique, 0x10000556, 4) COPY (register, 0x28, 4)]
[(stack, 0xfffffffffffffdc8, 8) MULTIEQUAL (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x10000516, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (unique, 0xbd80, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (unique, 0xbd80, 8) , (register, 0x90, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (unique, 0xbd80, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x10, 8) , (register, 0x90, 8) , (register, 0x0, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x90, 8) , (unique, 0xbd80, 8) , (register, 0x90, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x18, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x98, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x98, 8) , (unique, 0x3100, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x3f, 4) , (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (unique, 0x1000051e, 4) , (unique, 0x10000522, 4) , (unique, 0x10000526, 4) , (unique, 0x1000052a, 4) , (unique, 0x1000052e, 4) , (unique, 0x10000532, 4) , (unique, 0x10000536, 4) , (unique, 0x1000053a, 4) , (unique, 0x1000053e, 4) , (unique, 0x10000542, 4) , (unique, 0x10000546, 4) , (unique, 0x1000054a, 4) , (unique, 0x1000054e, 4) , (unique, 0x10000552, 4) , (unique, 0x10000556, 4) , (unique, 0x1000055a, 4) , (unique, 0x1000055e, 4) , (unique, 0x10000562, 4) , (unique, 0x10000566, 4) , (unique, 0x1000056a, 4) , (unique, 0x1000056e, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x100005ba, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0xab, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x1000092e, 8), (unique, 0x1000092e, 8) CAST (register, 0x90, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000212, 8) , (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x10000212, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x38, 8) INT_SEXT (register, 0x38, 4)]
[(unique, 0x100005b6, 4) COPY (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)]
[(stack, 0xfffffffffffffdc8, 8) MULTIEQUAL (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0x100005b6, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0x1000050e, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3100, 8) , (unique, 0x3a00, 8) , (register, 0x18, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x493b40, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 8) , (register, 0x30, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3100, 8) , (unique, 0x3a00, 8) , (register, 0x18, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x40178a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0xd4, 4), (stack, 0xfffffffffffffdc8, 8) MULTIEQUAL (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8)]
[ ---  CALL (ram, 0x4011c4, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000232, 8) , (register, 0x28, 8) , (const, 0x8, 8), (unique, 0x10000232, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (register, 0x28, 8) INT_SEXT (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8)]
