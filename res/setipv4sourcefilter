[(unique, 0x100000d7, 4) SUBPIECE (unique, 0x3580, 8) , (const, 0x0, 4), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (unique, 0x10000047, 8) , (const, 0x4, 8), (unique, 0x10000047, 8) INT_ZEXT (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x223000, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1000, 8) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (unique, 0x10000047, 8) , (const, 0x4, 8), (unique, 0x10000047, 8) INT_ZEXT (register, 0x80, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xd5, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x223012, 8)]
[(unique, 0x100001fa, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000202, 8) , (const, 0xd5, 4), (unique, 0x10000202, 8) COPY (register, 0x88, 8)]
[(unique, 0x10000212, 4) COPY (stack, 0xffffffffffffffc4, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (unique, 0x1000020e, 4) , (const, 0xd5, 4), (unique, 0x1000020e, 4) COPY (register, 0x10, 4)]
[(unique, 0x10000216, 4) COPY (stack, 0xffffffffffffffc0, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (unique, 0x1000020a, 4) , (const, 0xd5, 4), (unique, 0x1000020a, 4) COPY (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x222fa1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2141b0, 8) , (unique, 0x3580, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xf8, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x223032, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xf8, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xf8, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xf8, 4)]
[ ---  CBRANCH (ram, 0x223091, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000021a, 8), (unique, 0x1000021a, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x3580, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (stack, 0xffffffffffffffc4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffc0, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x120, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x22305f, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0x3480, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x133, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x223074, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x139, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x22307f, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x139, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x133, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x120, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x139, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x133, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x120, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x139, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x133, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x120, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207c80, 8) , (register, 0x38, 4) , (const, 0x0, 4) , (const, 0x29, 4) , (register, 0x0, 8) , (unique, 0x100000d7, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x10, 4), (unique, 0x3800, 8) CAST (unique, 0x1000022a, 8), (unique, 0x1000022a, 8) INT_ADD (unique, 0x10000222, 8) , (unique, 0x10000087, 8), (unique, 0x10000222, 8) CAST (unique, 0x10000181, 8), (unique, 0x10000181, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x10000087, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x2e, 8), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0x10000212, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 4), (unique, 0x3100, 8) CAST (unique, 0x1000023a, 8), (unique, 0x1000023a, 8) INT_ADD (unique, 0x10000232, 8) , (unique, 0x10000087, 8), (unique, 0x10000232, 8) CAST (unique, 0x10000109, 8), (unique, 0x10000109, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8), (unique, 0x10000087, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x2e, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0x10000216, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) CAST (unique, 0x1000024a, 8), (unique, 0x1000024a, 8) INT_ADD (unique, 0x10000242, 8) , (unique, 0x10000191, 8), (unique, 0x10000242, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8), (unique, 0x10000191, 8) INT_ADD (unique, 0x10000087, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x10000087, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x2e, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 4), (unique, 0x3100, 8) CAST (unique, 0x1000025a, 8), (unique, 0x1000025a, 8) INT_ADD (unique, 0x10000252, 8) , (unique, 0x100001e2, 8), (unique, 0x10000252, 8) CAST (unique, 0x100001ea, 8), (unique, 0x100001ea, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8), (unique, 0x100001e2, 8) INT_ADD (unique, 0x10000087, 8) , (const, 0x4, 8), (unique, 0x10000087, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x2e, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x222fd5, 8), (register, 0x20, 8) CAST (unique, 0x1000026a, 8), (unique, 0x1000026a, 8) INT_ADD (unique, 0x10000262, 8) , (unique, 0x10000087, 8), (unique, 0x10000262, 8) CAST (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x10000087, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x2e, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (unique, 0x3100, 8) , (register, 0x30, 8) , (unique, 0x3480, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000101, 8) , (unique, 0x10000087, 8) , (const, 0x1, 8), (unique, 0x10000101, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8), (unique, 0x10000087, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x2e, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x88, 8) , (unique, 0x100001fa, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x222fea, 8), (register, 0x20, 8) CAST (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) INT_ADD (unique, 0x10000272, 8) , (unique, 0x10000087, 8), (unique, 0x10000272, 8) CAST (unique, 0x100001c9, 8), (unique, 0x100001c9, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x10000087, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x2e, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xb7, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa3, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb7, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xa3, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xb7, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xb6, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xa4, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xa3, 4), (stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xb7, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xb6, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xa4, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xa3, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207c80, 8) , (register, 0x38, 4) , (const, 0x0, 4) , (const, 0x29, 4) , (unique, 0x3800, 8) , (unique, 0x100000d7, 4), (unique, 0x3800, 8) CAST (unique, 0x1000022a, 8), (unique, 0x1000022a, 8) INT_ADD (unique, 0x10000222, 8) , (unique, 0x10000087, 8), (unique, 0x10000222, 8) CAST (unique, 0x10000181, 8), (unique, 0x10000181, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x10000087, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x2e, 8)]
