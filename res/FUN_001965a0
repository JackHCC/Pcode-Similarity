[ ---  CBRANCH (ram, 0x1968d0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (const, 0x11, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x519, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x519, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x519, 4)]
[(ram, 0x4eb2c8, 8) COPY (ram, 0x4eb2c8, 8), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x519, 4)]
[(ram, 0x4ebc40, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x519, 4)]
[(ram, 0x4ebc44, 1) COPY (ram, 0x4ebc44, 1), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x519, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x519, 4)]
[(ram, 0x4ec4c8, 8) COPY (ram, 0x4ec4c8, 8), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x519, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x519, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000041f, 8), (unique, 0x1000041f, 8) CALL (ram, 0x1952e0, 8) , (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x196850, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x196a10, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x8000000000000000, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000427, 8) , (const, 0x16, 4), (unique, 0x10000427, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x4f7, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x4f7, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4f7, 4)]
[(ram, 0x4eb2c8, 8) COPY (ram, 0x4eb2c8, 8), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x4f7, 4)]
[(ram, 0x4ebc40, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x4f7, 4)]
[(ram, 0x4ebc44, 1) COPY (ram, 0x4ebc44, 1), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x4f7, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x4f7, 4)]
[(ram, 0x4ec4c8, 8) COPY (ram, 0x4ec4c8, 8), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x4f7, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4f7, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1969f0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) INT_SUB (unique, 0x100001d7, 8) , (const, 0x21, 8), (unique, 0x100001d7, 8) INT_2COMP (register, 0x38, 8)]
[(unique, 0x100003f3, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x196a32, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) INT_SUB (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x100003eb, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1965d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x196898, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100001e7, 8) , (register, 0x38, 8), (unique, 0x100001e7, 8) INT_MULT (register, 0x28, 8) , (const, 0x2, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100001e7, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1969f0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000042f, 8) , (const, 0xc, 4), (unique, 0x1000042f, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x496, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x496, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x496, 4)]
[(ram, 0x4eb2c8, 8) COPY (ram, 0x4eb2c8, 8), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x496, 4)]
[(ram, 0x4ebc40, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x496, 4)]
[(ram, 0x4ebc44, 1) COPY (ram, 0x4ebc44, 1), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x496, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x496, 4)]
[(ram, 0x4ec4c8, 8) COPY (ram, 0x4ec4c8, 8), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x496, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x496, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100003e3, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x20, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x100003e3, 8) , (unique, 0x100003eb, 8) , (unique, 0x100003f3, 8) , (unique, 0x100001e7, 8)]
[ ---  CBRANCH (ram, 0x1965f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ebc40, 4) , (const, 0x0, 4)]
[(ram, 0x4ebc40, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ebc40, 4) , (const, 0x0, 4)]
[(ram, 0x4ebc40, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x196613, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x46f, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x46f, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x46f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x46f, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x46f, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x46f, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x46f, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x46f, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x46f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x46f, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x1000031c, 8), (unique, 0x1000031c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[(ram, 0x4ebc44, 1) MULTIEQUAL (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1)]
[(ram, 0x4ebc40, 4) MULTIEQUAL (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4)]
[(ram, 0x4eb2c8, 8) MULTIEQUAL (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x196670, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000437, 8) , (unique, 0x1000033c, 8), (unique, 0x10000437, 8) CAST (ram, 0x4ebca0, 8), (unique, 0x1000033c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebca0, 8), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  CBRANCH (ram, 0x196a26, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000d6, 8) , (const, 0x0, 8), (unique, 0x100000d6, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4ebca0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x196a26, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (const, 0x20, 8), (register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x196a26, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000028a, 8) , (const, 0x0, 8), (unique, 0x1000028a, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x196670, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (ram, 0x4ebc44, 1) , (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x196a26, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_ADD (unique, 0x1000043f, 8) , (register, 0x8, 8), (unique, 0x1000043f, 8) CAST (ram, 0x4ebca0, 8), (register, 0x10, 8) INT_ADD (ram, 0x4ec4c8, 8) , (ram, 0x4eb2c8, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x100002f4, 8), (unique, 0x100002f4, 8) COPY (const, 0x2b4e81, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x460, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x460, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x460, 4)]
[(ram, 0x4eb2c8, 8) COPY (ram, 0x4eb2c8, 8), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x460, 4)]
[(ram, 0x4ebc40, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x460, 4)]
[(ram, 0x4ebc44, 1) COPY (ram, 0x4ebc44, 1), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x460, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x460, 4)]
[(ram, 0x4ec4c8, 8) COPY (ram, 0x4ec4c8, 8), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x460, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x460, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1968c0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x20, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x18, 8)]
[(unique, 0x100002d3, 1) COPY (const, 0x0, 1)]
[(register, 0xa8, 8) COPY (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x19668d, 1)]
[(unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0xa8, 8), (register, 0xa8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8)]
[(unique, 0x100002d2, 1) MULTIEQUAL (unique, 0xc800, 1) , (unique, 0x100002d3, 1)]
[ ---  CBRANCH (ram, 0x1969d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa8, 8) , (unique, 0x3100, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x1969d0, 1) , (unique, 0x100002d2, 1)]
[ ---  CBRANCH (ram, 0x1969d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_SUB (unique, 0x10000116, 8) , (const, 0x21, 8), (unique, 0x10000116, 8) INT_2COMP (register, 0x28, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x44f, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x44f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x44f, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x44f, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x44f, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x44f, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x44f, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x44f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x44f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000447, 8) , (const, 0xc, 4), (unique, 0x10000447, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x196784, 1)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x123, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x123, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x123, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x123, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x123, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x123, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x123, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x123, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x123, 4)]
[ ---  CBRANCH (ram, 0x196784, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000044f, 8), (unique, 0x1000044f, 8) CALL (ram, 0x1942d0, 8) , (unique, 0x10000324, 8) , (unique, 0x3a00, 8), (unique, 0x10000324, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0xa8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)]
[(unique, 0x100003fb, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x196778, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_REM (unique, 0x10000457, 8) , (register, 0x28, 8), (unique, 0x10000457, 8) CAST (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(unique, 0x10000403, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000477, 8), (unique, 0x10000477, 8) INT_ADD (unique, 0x1000046f, 8) , (register, 0x28, 8), (unique, 0x1000046f, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000467, 8), (unique, 0x10000467, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_2COMP (register, 0x28, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x1000045f, 8) , (unique, 0x1000034c, 8), (unique, 0x1000045f, 8) CAST (register, 0x0, 8), (unique, 0x1000034c, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x196709, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x1f, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x1000048f, 8), (unique, 0x1000048f, 8) INT_SUB (unique, 0x1000047f, 8) , (unique, 0x10000487, 8), (unique, 0x10000487, 8) CAST (unique, 0x3100, 8), (unique, 0x1000047f, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000467, 8), (unique, 0x10000467, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_2COMP (register, 0x28, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x1000045f, 8) , (unique, 0x1000034c, 8), (unique, 0x1000045f, 8) CAST (register, 0x0, 8), (unique, 0x1000034c, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8)]
[(unique, 0x1000040b, 8) COPY (register, 0x0, 8)]
[(register, 0xb8, 8) INT_SUB (register, 0xb8, 8) , (unique, 0x100004af, 8), (unique, 0x100004af, 8) CAST (register, 0x0, 8), (register, 0xb8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) CAST (unique, 0x100004a7, 8), (unique, 0x100004a7, 8) INT_SUB (unique, 0x10000497, 8) , (unique, 0x1000049f, 8), (unique, 0x1000049f, 8) CAST (unique, 0x3100, 8), (unique, 0x10000497, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000403, 8) , (unique, 0x1000040b, 8)]
[ ---  CBRANCH (ram, 0x196940, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002a2, 8) , (const, 0x0, 8), (unique, 0x100002a2, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb8, 8) INT_OR (register, 0xb8, 8) , (const, 0x2, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x440, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x43e, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x440, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x43e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x440, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x43e, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x440, 4), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x43e, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x440, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x43e, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x440, 4), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x43e, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x440, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x43e, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x440, 4), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x43e, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x440, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x43e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x100004b7, 8) , (unique, 0xbd80, 8), (unique, 0x100004b7, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x196784, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_OR (register, 0xb8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100004c7, 8), (unique, 0x100004c7, 8) INT_ADD (unique, 0x100004bf, 8) , (unique, 0x10000364, 8), (unique, 0x100004bf, 8) CAST (register, 0xb0, 8), (unique, 0x10000364, 8) INT_ADD (register, 0xb8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x100004cf, 8) , (register, 0x10, 8), (unique, 0x100004cf, 8) CAST (register, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1ef, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1ec, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1c9, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1c1, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1ef, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1ec, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1c9, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1c1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ef, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ec, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c9, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c1, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x1ef, 4), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x1ec, 4), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x1c9, 4), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x1c1, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x1ef, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x1ec, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x1c9, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x1c1, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x1ef, 4), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x1ec, 4), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x1c9, 4), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x1c1, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x1ef, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x1ec, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x1c9, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x1c1, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x1ef, 4), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x1ec, 4), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x1c9, 4), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x1c1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1ef, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1ec, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1c9, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1c1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ef, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x196754, 8)]
[ ---  CALL (ram, 0x192c60, 8) , (unique, 0x1000032c, 8) , (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0x1000032c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[ ---  CBRANCH (ram, 0x196960, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xb8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x196960, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_REM (unique, 0x100004d7, 8) , (register, 0x28, 8), (unique, 0x100004d7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[ ---  CBRANCH (ram, 0x196993, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004df, 8), (unique, 0x100004df, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x100002fc, 8) , (unique, 0xbd80, 8) , (register, 0x8, 8) , (unique, 0x100002ec, 8) , (const, 0x1280, 8) , (unique, 0x1000030c, 8) , (unique, 0x100002e4, 8) , (unique, 0x10000304, 8) , (stack, 0xffffffffffffffc0, 8), (unique, 0x1000030c, 8) COPY (const, 0x2b90d8, 8), (unique, 0x10000304, 8) COPY (const, 0x2b8c98, 8), (unique, 0x100002fc, 8) COPY (const, 0x2b8758, 8), (unique, 0x100002ec, 8) COPY (const, 0x2b4cf8, 8), (unique, 0x100002e4, 8) COPY (const, 0x2b3ed0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004e7, 8), (unique, 0x100004e7, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x40f, 4)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x421, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x41e, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x40f, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x421, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x41e, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x40f, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x421, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x41e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x40f, 4)]
[(ram, 0x4eb2c8, 8) COPY (ram, 0x4eb2c8, 8), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x421, 4), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x41e, 4), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x40f, 4)]
[(ram, 0x4ebc40, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x421, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x41e, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x40f, 4)]
[(ram, 0x4ebc44, 1) COPY (ram, 0x4ebc44, 1), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x421, 4), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x41e, 4), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x40f, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x421, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x41e, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x40f, 4)]
[(ram, 0x4ec4c8, 8) COPY (ram, 0x4ec4c8, 8), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x421, 4), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x41e, 4), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x40f, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x421, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x41e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x40f, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4ebc44, 1) MULTIEQUAL (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1)]
[(ram, 0x4ebc40, 4) MULTIEQUAL (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4)]
[(ram, 0x4eb2c8, 8) MULTIEQUAL (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1968f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000016e, 8) , (const, 0x0, 8), (unique, 0x1000016e, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100003fb, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x196784, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100004f7, 8), (unique, 0x100004f7, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0xa8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100004ef, 8) , (register, 0xa8, 8), (unique, 0x100004ef, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa8, 8) INT_OR (register, 0xa8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x3cb, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x3c7, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x3ae, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3cb, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3c7, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3ae, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3cb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3c7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3ae, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x3cb, 4), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x3c7, 4), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x3ae, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x3cb, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x3c7, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x3ae, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x3cb, 4), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x3c7, 4), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x3ae, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x3cb, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x3c7, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x3ae, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x3cb, 4), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x3c7, 4), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x3ae, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3cb, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3c7, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3ae, 4)]
[ ---  CALL (ram, 0x192c60, 8) , (unique, 0x10000334, 8) , (unique, 0x3400, 8) , (const, 0x1, 8), (unique, 0x10000334, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100004ef, 8) , (register, 0xa8, 8), (unique, 0x100004ef, 8) CAST (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x196784, 1)]
[(ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4ebc44, 1) MULTIEQUAL (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1)]
[(ram, 0x4ebc40, 4) MULTIEQUAL (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4)]
[(ram, 0x4eb2c8, 8) MULTIEQUAL (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x196798, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000417, 4) COPY (unique, 0x100003c4, 4), (unique, 0x100003c4, 4) INT_ADD (ram, 0x4ebc40, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1967ba, 1) , (unique, 0x100003c8, 1), (unique, 0x100003c8, 1) INT_NOTEQUAL (unique, 0x100003c4, 4) , (const, 0x0, 4), (unique, 0x100003c4, 4) INT_ADD (ram, 0x4ebc40, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x36c, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x36c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x36c, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x36c, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x36c, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x36c, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x36c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x36c, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000314, 8), (unique, 0x10000314, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(unique, 0x10000413, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x36c, 4), (ram, 0x4ebc40, 4) INT_ADD (ram, 0x4ebc40, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4ebc44, 1) MULTIEQUAL (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1)]
[(ram, 0x4eb2c8, 8) MULTIEQUAL (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ebc40, 4) COPY (unique, 0x1000041b, 4), (unique, 0x1000041b, 4) MULTIEQUAL (unique, 0x10000413, 4) , (unique, 0x10000417, 4)]
[ ---  CBRANCH (ram, 0x19683a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1967e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x1, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (unique, 0x10000507, 8) , (const, 0x3, 4), (unique, 0x10000507, 8) CAST (unique, 0x3800, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x100004ff, 8) , (const, 0xb, 4), (unique, 0x100004ff, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(register, 0x0, 4) COPY (const, 0x2, 4)]
[(register, 0x8, 8) INT_ZEXT (unique, 0x10000193, 4), (unique, 0x10000193, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x0, 4)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x100003d3, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x1967f7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002ba, 8) , (const, 0x0, 8), (unique, 0x100002ba, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[(unique, 0x100003db, 8) COPY (unique, 0x3100, 8)]
[(register, 0x8, 1) SUBPIECE (unique, 0x10000193, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x196836, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100003d3, 8) , (unique, 0x100003db, 8)]
[(register, 0x88, 1) INT_ADD (register, 0x8, 1) , (const, 0xff, 1)]
[(unique, 0x3100, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4ebc44, 1) MULTIEQUAL (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1)]
[(ram, 0x4ebc40, 4) MULTIEQUAL (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4)]
[(ram, 0x4eb2c8, 8) MULTIEQUAL (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[ ---  CBRANCH (ram, 0x196821, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xff, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0xff, 8)]
[ ---  CBRANCH (ram, 0x1968a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x34b, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x34b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x34b, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x34b, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x34b, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x34b, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x34b, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x34b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x34b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x88, 1), (unique, 0x3400, 8) CAST (unique, 0x10000517, 8), (unique, 0x10000517, 8) INT_ADD (unique, 0x1000050f, 8) , (register, 0x0, 8), (unique, 0x1000050f, 8) CAST (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x196810, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0x3100, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x317, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x317, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x317, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x317, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x317, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x317, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x317, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x317, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x317, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x10000527, 8), (unique, 0x10000527, 8) INT_ADD (unique, 0x1000051f, 8) , (register, 0x0, 8), (unique, 0x1000051f, 8) CAST (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x196810, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x32e, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x32e, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x32e, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x32e, 4), (ram, 0x4eb2c8, 8) MULTIEQUAL (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x32e, 4), (ram, 0x4ebc40, 4) MULTIEQUAL (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x32e, 4), (ram, 0x4ebc44, 1) MULTIEQUAL (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x32e, 4), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x32e, 4), (ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x32e, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x8, 1), (unique, 0x3400, 8) CAST (unique, 0x10000537, 8), (unique, 0x10000537, 8) INT_ADD (unique, 0x1000052f, 8) , (register, 0x30, 8), (unique, 0x1000052f, 8) CAST (register, 0xa0, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb2c8, 8) COPY (ram, 0x4eb2c8, 8), (ram, 0x4eb2c8, 8) MULTIEQUAL (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8)]
[(ram, 0x4ebc40, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) MULTIEQUAL (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4)]
[(ram, 0x4ebc44, 1) COPY (ram, 0x4ebc44, 1), (ram, 0x4ebc44, 1) MULTIEQUAL (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4ec4c8, 8) COPY (ram, 0x4ec4c8, 8), (ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8)]
