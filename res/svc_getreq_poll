[ ---  CBRANCH (ram, 0x2385ae, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(register, 0xb8, 4) COPY (const, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x237b90, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x238573, 1)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x2385a0, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x28, 4) , (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x10, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0xa0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000011f, 8), (unique, 0x1000011f, 8) PTRSUB (register, 0x18, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x23856c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000011f, 8), (unique, 0x1000011f, 8) PTRSUB (register, 0x18, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x23856c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x18, 8) , (const, 0x6, 8)]
[ ---  CBRANCH (ram, 0x238520, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ae, 2) , (const, 0x0, 2), (unique, 0x100000ae, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x20, 2)]
[ ---  CBRANCH (ram, 0x23855e, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22bdb0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000183, 8), (unique, 0x10000183, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000017b, 8), (unique, 0x1000017b, 8) INT_ADD (register, 0x0, 8) , (const, 0xe0, 8), (register, 0x0, 8) CALL (ram, 0x237a60, 8)]
[ ---  CBRANCH (ram, 0x2385b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000193, 8), (unique, 0x10000193, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000018b, 8), (unique, 0x1000018b, 8) INT_ADD (register, 0x0, 8) , (const, 0xe0, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x238600, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x400, 4)]
[(register, 0x0, 8) CALL (ram, 0x237b00, 8)]
[(unique, 0x10000173, 4) COPY (unique, 0x3800, 4), (unique, 0x3800, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x3f, 4)]
[ ---  CBRANCH (ram, 0x238619, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10000177, 4) COPY (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000147, 8) , (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x10000147, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_NEGATE (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (unique, 0x100000e4, 1) , (unique, 0x100000e6, 1), (unique, 0x100000e6, 1) INT_RIGHT (unique, 0x100000ee, 1) , (const, 0x2, 4), (unique, 0x100000e4, 1) INT_AND (unique, 0x100000e8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (unique, 0x100000e8, 1) INT_ADD (unique, 0x100000eb, 1) , (unique, 0x100000ec, 1), (unique, 0x100000ec, 1) INT_RIGHT (unique, 0x100000ee, 1) , (const, 0x2, 4), (unique, 0x100000ee, 1) SUBPIECE (unique, 0x1000016f, 4) , (const, 0x0, 4), (unique, 0x1000016f, 4) INT_SRIGHT (unique, 0xbc80, 4) , (const, 0x37, 4), (unique, 0x100000eb, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_SRIGHT (register, 0x10, 4) , (const, 0x6, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x10000173, 4) , (unique, 0x10000177, 4)]
[ ---  BRANCH (ram, 0x2385c0, 1)]
[ ---  CBRANCH (ram, 0x23855e, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x237b60, 8)]
[ ---  BRANCH (ram, 0x2385ef, 1)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x2385e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000137, 8), (unique, 0x10000137, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000013f, 8) , (const, 0xffffffff, 4), (unique, 0x1000013f, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x2385e0, 1)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x23855e, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xbc80, 4)]
[ ---  CALL (ram, 0x2381a0, 8) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x2385a0, 1) , (unique, 0x1000010a, 1), (unique, 0x1000010a, 1) INT_SLESSEQUAL (register, 0x30, 4) , (register, 0xb8, 4), (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (unique, 0xbc80, 4)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8)]
