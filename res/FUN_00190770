[(unique, 0x3100, 8) CAST (unique, 0x10000131, 8), (unique, 0x10000131, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000139, 8), (unique, 0x10000139, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(register, 0x98, 4) COPY (const, 0x0, 4)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000141, 8), (unique, 0x10000141, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000129, 8), (unique, 0x10000129, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (unique, 0x10000060, 4)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (unique, 0x10000058, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x30, 8)]
[(unique, 0x10000058, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(unique, 0x10000060, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4)]
[ ---  CBRANCH (ram, 0x1907b8, 1) , (unique, 0x10000057, 1), (unique, 0x10000057, 1) INT_NOTEQUAL (unique, 0x1000004f, 8) , (const, 0x0, 8), (unique, 0x1000004f, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x98, 4) INT_ADD (unique, 0x10000060, 4) , (const, 0x1, 4)]
[(register, 0x90, 8) INT_ADD (unique, 0x10000058, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000149, 8), (unique, 0x10000149, 8) INT_ADD (unique, 0x1000004f, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000151, 8), (unique, 0x10000151, 8) INT_ADD (unique, 0x1000004f, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x190798, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x214, 8) , (const, 0x4, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0x10000058, 8)]
[(register, 0x80, 4) COPY (const, 0x1, 4)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (unique, 0x10000075, 4)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x1000006d, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000159, 8), (unique, 0x10000159, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x88, 8)]
[(unique, 0x1000006d, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x10000075, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x190800, 1) , (unique, 0x1000006c, 1), (unique, 0x1000006c, 1) INT_NOTEQUAL (register, 0x88, 8) , (unique, 0x10000064, 8), (unique, 0x10000064, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x80, 4) INT_ADD (unique, 0x10000075, 4) , (const, 0x1, 4)]
[(register, 0x8, 8) INT_ADD (unique, 0x1000006d, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000064, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000161, 8), (unique, 0x10000161, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000064, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1907d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000169, 8) , (register, 0x88, 8), (unique, 0x10000169, 8) CAST (unique, 0x3200, 8), (register, 0x88, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0x10000060, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0x10000075, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x8, 4), (register, 0x8, 4) SUBPIECE (unique, 0x1000006d, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x10, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000171, 8), (unique, 0x10000171, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x222, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) SUBPIECE (unique, 0x1000006d, 8) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x10, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000171, 8), (unique, 0x10000171, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x222, 8) , (const, 0x4, 8)]
[(ram, 0x4eb2a8, 4) INDIRECT (ram, 0x4eb2a8, 4) , (const, 0x140, 4), (ram, 0x4eb2a8, 4) INDIRECT (ram, 0x4eb2a8, 4) , (const, 0x137, 4), (ram, 0x4eb2a8, 4) INDIRECT (ram, 0x4eb2a8, 4) , (const, 0x121, 4), (ram, 0x4eb2a8, 4) INDIRECT (ram, 0x4eb2a8, 4) , (const, 0x111, 4), (ram, 0x4eb2a8, 4) INDIRECT (ram, 0x4eb2a8, 4) , (const, 0xf6, 4), (ram, 0x4eb2a8, 4) INDIRECT (ram, 0x4eb2a8, 4) , (const, 0xe5, 4)]
[(ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0x140, 4), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0x137, 4), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0x121, 4), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0x111, 4), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0xf6, 4), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0xe5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x90, 4), (register, 0x90, 4) SUBPIECE (unique, 0x10000058, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x190857, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0x10000079, 8), (unique, 0x10000079, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (ram, 0x4eb2a8, 4), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 4), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x4, 8), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0xfffffff8, 4), (register, 0x28, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[(ram, 0x4eb2a8, 4) INDIRECT (ram, 0x4eb2a8, 4) , (const, 0x16d, 4), (ram, 0x4eb2a8, 4) INDIRECT (ram, 0x4eb2a8, 4) , (const, 0x16a, 4), (ram, 0x4eb2a8, 4) INDIRECT (ram, 0x4eb2a8, 4) , (const, 0x167, 4), (ram, 0x4eb2a8, 4) INDIRECT (ram, 0x4eb2a8, 4) , (const, 0x163, 4)]
[(ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0x16d, 4), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0x16a, 4), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0x167, 4), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0x163, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (unique, 0x10000121, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0x10000121, 8) COPY (ram, 0x4eb2b8, 8), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0x163, 4)]
[(ram, 0x4eb2a8, 4) COPY (ram, 0x4eb2a8, 4), (ram, 0x4eb2a8, 4) MULTIEQUAL (ram, 0x4eb2a8, 4) , (ram, 0x4eb2a8, 4)]
[(ram, 0x4eb2b8, 8) COPY (ram, 0x4eb2b8, 8), (ram, 0x4eb2b8, 8) MULTIEQUAL (ram, 0x4eb2b8, 8) , (ram, 0x4eb2b8, 8)]
[ ---  RETURN (const, 0x0, 8)]
