[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(unique, 0x100001f1, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffc0, 4) COPY (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x239920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0xffffffff, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x1c6, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x1c6, 4)]
[ ---  CBRANCH (ram, 0x239999, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207ce0, 8) , (const, 0x2, 4) , (const, 0x2, 4) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x1e8, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x1e4, 4)]
[ ---  CALL (ram, 0x16a940, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000317, 8), (unique, 0x10000317, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000213, 8) , (unique, 0x10000243, 8) , (const, 0x5, 8), (unique, 0x10000243, 8) COPY (const, 0x292b00, 8), (unique, 0x10000213, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001f0, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x239772, 1)]
[(unique, 0x100001ee, 1) MULTIEQUAL (unique, 0x100001f1, 1) , (unique, 0x100001f0, 1)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x42, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x42, 4), (stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x42, 4), (stack, 0xffffffffffffffc8, 8) COPY (const, 0x2, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x42, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x239900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22b270, 8) , (register, 0x28, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000031f, 8), (unique, 0x1000031f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8), (register, 0x28, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x0, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1bf, 4), (stack, 0xffffffffffffffc8, 8) INT_AND (stack, 0xffffffffffffffc8, 8) , (const, 0xffffffff0000ffff, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1bf, 4)]
[ ---  CALL (ram, 0x207830, 8) , (register, 0x28, 4) , (unique, 0x10000327, 8) , (stack, 0xffffffffffffffc0, 4), (unique, 0x10000327, 8) CAST (unique, 0x3800, 8)]
[ ---  BRANCH (ram, 0x2397a5, 1)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x55, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x55, 4), (stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x55, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x55, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x2398c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2078f0, 8) , (register, 0x28, 4) , (unique, 0x1000032f, 8) , (unique, 0x3800, 8), (unique, 0x1000032f, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x182, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x182, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x182, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x17e, 4)]
[ ---  CALL (ram, 0x16a940, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000337, 8), (unique, 0x10000337, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000203, 8) , (unique, 0x1000024b, 8) , (const, 0x5, 8), (unique, 0x1000024b, 8) COPY (const, 0x292b28, 8), (unique, 0x10000203, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  CBRANCH (ram, 0x2398b0, 1) , (unique, 0x100001ee, 1)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x191, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x191, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x191, 4)]
[ ---  CALL (ram, 0x1f7030, 8) , (register, 0x28, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x70, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x6b, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x70, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x6b, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x70, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x6b, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x70, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x6b, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x66, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000034f, 8), (unique, 0x1000034f, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x2260, 8)]
[ ---  CBRANCH (ram, 0x239948, 1) , (unique, 0x10000123, 1), (unique, 0x10000123, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000347, 8), (unique, 0x10000347, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x1d8, 8), (register, 0x0, 8) CAST (unique, 0x1000033f, 8), (unique, 0x1000033f, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x150, 8)]
[ ---  CBRANCH (ram, 0x239948, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x16cfd0, 8) , (const, 0x0, 8) , (unique, 0x10000223, 8) , (unique, 0x1000023b, 8) , (register, 0x0, 8), (unique, 0x1000023b, 8) COPY (const, 0x28f567, 8), (unique, 0x10000223, 8) COPY (const, 0x28eb09, 8), (register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x1000020b, 8) , (unique, 0x10000233, 8) , (const, 0x5, 8), (unique, 0x10000233, 8) COPY (const, 0x28f404, 8), (unique, 0x1000020b, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x16d, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x169, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x165, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x157, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x13d, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x16d, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x169, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x165, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x157, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x13d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x16d, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x169, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x165, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x157, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x13d, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x2398b0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2260, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035f, 8) , (register, 0x0, 8), (unique, 0x1000035f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x1000027b, 8) , (const, 0x10, 8), (unique, 0x1000027b, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8)]
[ ---  CALL (ram, 0x23b780, 8) , (unique, 0x3100, 8) , (register, 0x0, 8) , (const, 0x2260, 4) , (const, 0x1, 4), (unique, 0x3100, 8) CAST (unique, 0x10000357, 8), (unique, 0x10000357, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000367, 8) , (const, 0x0, 8), (unique, 0x10000367, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x74, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000036f, 8), (unique, 0x1000036f, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000377, 8), (unique, 0x10000377, 8) CAST (unique, 0x10000253, 8), (unique, 0x10000253, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c17e0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000037f, 8) , (register, 0xa8, 8), (unique, 0x1000037f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (register, 0xa8, 8) PTRADD (register, 0x0, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002bb, 8) , (register, 0x28, 4), (unique, 0x100002bb, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 2), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 2) INT_OR (unique, 0x4e880, 2) , (unique, 0x4e980, 2), (unique, 0x4e980, 2) INT_LEFT (stack, 0xffffffffffffffca, 2) , (const, 0x8, 4), (unique, 0x4e880, 2) INT_RIGHT (stack, 0xffffffffffffffca, 2) , (const, 0x8, 4), (stack, 0xffffffffffffffca, 2) SUBPIECE (stack, 0xffffffffffffffc8, 8) , (const, 0x2, 8), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xa7, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xf1, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xf1, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xf1, 4), (stack, 0xffffffffffffffc4, 4) COPY (const, 0x1, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xf1, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xf1, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xa7, 4)]
[(unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x50, 8)]
[ ---  CBRANCH (ram, 0x239886, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207c80, 8) , (register, 0x28, 4) , (const, 0x0, 4) , (const, 0x8, 4) , (unique, 0x3800, 8) , (const, 0x4, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8)]
[(register, 0x0, 4) COPY (const, 0xff, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000387, 8), (unique, 0x10000387, 8) INT_MULT (register, 0xa0, 8) , (const, 0x101010101010101, 8), (register, 0xa0, 8) INT_ZEXT (register, 0xa0, 1), (register, 0xa0, 1) SUBPIECE (unique, 0x10000144, 4) , (const, 0x0, 4), (unique, 0x10000144, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x10000303, 8) COPY (unique, 0x3100, 8)]
[(register, 0x8, 8) COPY (const, 0x20, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000303, 8) , (unique, 0x1000030b, 8)]
[ ---  CBRANCH (ram, 0x2398a8, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8)]
[(unique, 0x1000030b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100002e3, 8) , (const, 0x8, 8), (unique, 0x100002e3, 8) INT_ADD (unique, 0x100002db, 8) , (const, 0x1, 8), (unique, 0x100002db, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x2398a5, 1)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x120, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (unique, 0x10000313, 4) , (const, 0x120, 4), (unique, 0x10000313, 4) COPY (unique, 0x10000144, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x120, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x120, 4)]
[ ---  CALL (ram, 0x237bc0, 8) , (register, 0x0, 8)]
[(unique, 0x100002fb, 8) COPY (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100002fb, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
