[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x23c5d8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x3100, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000253, 8), (unique, 0x10000253, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1e6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e6, 4)]
[(ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x1e6, 4)]
[(ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1e6, 4)]
[ ---  CBRANCH (ram, 0x23c5ee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000263, 8), (unique, 0x10000263, 8) CALL (ram, 0x248f60, 8) , (unique, 0xbd80, 8) , (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) COPY (const, 0x2b6c7c, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f4, 4)]
[(ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x1f4, 4)]
[(ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x1f4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f4, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x200, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x200, 4), (ram, 0x4ef7c0, 8) MULTIEQUAL (ram, 0x4ef7c0, 8) , (ram, 0x4ef7c0, 8)]
[(ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x200, 4), (ram, 0x4ef7c8, 1) MULTIEQUAL (ram, 0x4ef7c8, 1) , (ram, 0x4ef7c8, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8)]
[ ---  CBRANCH (ram, 0x23c45c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ef7c8, 1) , (const, 0x0, 1), (ram, 0x4ef7c8, 1) MULTIEQUAL (ram, 0x4ef7c8, 1) , (ram, 0x4ef7c8, 1)]
[ ---  CBRANCH (ram, 0x23c607, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ef7c8, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b2, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b2, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x1b2, 4), (ram, 0x4ef7c0, 8) MULTIEQUAL (ram, 0x4ef7c0, 8) , (ram, 0x4ef7c0, 8)]
[(ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x1b2, 4), (ram, 0x4ef7c8, 1) MULTIEQUAL (ram, 0x4ef7c8, 1) , (ram, 0x4ef7c8, 1)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1b2, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b2, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x23c62f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24b620, 8) , (register, 0xa8, 8) , (unique, 0x10000210, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x10000210, 8) COPY (const, 0x2b6c88, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (register, 0xa8, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000273, 8), (unique, 0x10000273, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x10, 8) , (const, 0x11, 4), (register, 0x10, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000027b, 8), (unique, 0x1000027b, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ef7c8, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x23c497, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4ef7c8, 1) MULTIEQUAL (ram, 0x4ef7c8, 1) , (ram, 0x4ef7c8, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0xa8, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8)]
[ ---  CBRANCH (ram, 0x23c540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (const, 0xffffffffffffffff, 8), (register, 0x90, 8) INT_XOR (register, 0x90, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000283, 8), (unique, 0x10000283, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x90, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4ef7c0, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4ef7c0, 8) , (const, 0x11, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4ef7c0, 8) MULTIEQUAL (ram, 0x4ef7c0, 8) , (ram, 0x4ef7c0, 8)]
[(unique, 0x100001b1, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) CAST (unique, 0x1000028b, 8), (unique, 0x1000028b, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x7b, 4)]
[(ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x8a, 4), (ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x7b, 4)]
[(ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x8a, 4), (ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x7b, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x8a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8a, 4)]
[(register, 0x0, 4) CALL (ram, 0x249160, 8) , (register, 0xa8, 8) , (unique, 0x10000200, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x10000200, 8) COPY (const, 0x2b6c88, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4ef7c8, 1) MULTIEQUAL (ram, 0x4ef7c8, 1) , (ram, 0x4ef7c8, 1)]
[(ram, 0x4ef7c0, 8) MULTIEQUAL (ram, 0x4ef7c0, 8) , (register, 0x10, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0xa8, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8)]
[(register, 0xb8, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x23c543, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4ef7c8, 1) MULTIEQUAL (ram, 0x4ef7c8, 1) , (ram, 0x4ef7c8, 1) , (ram, 0x4ef7c8, 1)]
[(ram, 0x4ef7c0, 8) MULTIEQUAL (ram, 0x4ef7c0, 8) , (ram, 0x4ef7c0, 8) , (ram, 0x4ef7c0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000293, 8), (unique, 0x10000293, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8)]
[(unique, 0x100001c1, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001c9, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100001d1, 8) MULTIEQUAL (ram, 0x4ef7c0, 8) , (ram, 0x4ef7c0, 8)]
[(unique, 0x100001d9, 1) MULTIEQUAL (ram, 0x4ef7c8, 1) , (ram, 0x4ef7c8, 1)]
[(unique, 0x100001da, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100001e2, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x23c521, 1) , (unique, 0x100001c0, 1), (unique, 0x100001c0, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) MULTIEQUAL (unique, 0xbe00, 8) , (unique, 0xbe00, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100001e2, 8) , (const, 0x116, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000220, 8) , (unique, 0x10000218, 8) , (const, 0x83, 4) , (unique, 0x10000228, 8), (unique, 0x10000228, 8) COPY (const, 0x2bb5c0, 8), (unique, 0x10000220, 8) COPY (const, 0x2b6ca4, 8), (unique, 0x10000218, 8) COPY (const, 0x2b6c94, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (unique, 0x100001c9, 8) , (const, 0x116, 4)]
[(ram, 0x4ef7c0, 8) COPY (ram, 0x4ef7c0, 8), (ram, 0x4ef7c0, 8) INDIRECT (unique, 0x100001d1, 8) , (const, 0x116, 4)]
[(ram, 0x4ef7c8, 1) COPY (ram, 0x4ef7c8, 1), (ram, 0x4ef7c8, 1) INDIRECT (unique, 0x100001d9, 1) , (const, 0x116, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CALL (ram, 0x266330, 8) , (unique, 0x100001da, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000029b, 8), (unique, 0x1000029b, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd3, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb2, 4), (register, 0x110, 8) INDIRECT (unique, 0x100001c1, 8) , (const, 0xab, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd3, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb2, 4), (ram, 0x4eae68, 8) INDIRECT (unique, 0x100001c9, 8) , (const, 0xab, 4)]
[(ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0xd3, 4), (ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0xb2, 4), (ram, 0x4ef7c0, 8) INDIRECT (unique, 0x100001d1, 8) , (const, 0xab, 4)]
[(ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0xd3, 4), (ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0xb2, 4), (ram, 0x4ef7c8, 1) INDIRECT (unique, 0x100001d9, 1) , (const, 0xab, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xd3, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x100001da, 8) , (const, 0xab, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100001e2, 8) , (const, 0xab, 4)]
[(register, 0x0, 4) CALL (ram, 0x249490, 8) , (register, 0xa8, 8) , (unique, 0x10000208, 8) , (const, 0x0, 8) , (register, 0xb0, 8) , (register, 0x0, 4) , (const, 0x0, 8), (unique, 0x10000208, 8) COPY (const, 0x2b6c88, 8), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 8) , (register, 0x30, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x100001da, 8) , (const, 0xab, 4)]
[ ---  CBRANCH (ram, 0x23c5b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 8) , (register, 0x30, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x100001da, 8) , (const, 0xab, 4)]
[ ---  CBRANCH (ram, 0x23c5b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x23c4a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xee, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xee, 4)]
[(ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0xee, 4)]
[(ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0xee, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xee, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xee, 4)]
[ ---  CBRANCH (ram, 0x23c4a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002a3, 8), (unique, 0x100002a3, 8) CALL (ram, 0x248f60, 8) , (unique, 0xbd80, 8) , (unique, 0x100001f0, 8), (unique, 0x100001f0, 8) COPY (const, 0x2b6c7c, 8)]
[ ---  CALL (ram, 0x266330, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x101, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xfd, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x101, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xfd, 4)]
[(ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x101, 4), (ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0xfd, 4)]
[(ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x101, 4), (ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0xfd, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x101, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xfd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x101, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfd, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x30, 8)]
[(unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002ab, 8), (unique, 0x100002ab, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (unique, 0x100001b1, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12d, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x127, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x127, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x12d, 4), (ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x127, 4), (ram, 0x4ef7c0, 8) MULTIEQUAL (ram, 0x4ef7c0, 8) , (ram, 0x4ef7c0, 8) , (ram, 0x4ef7c0, 8)]
[(ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x12d, 4), (ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x127, 4), (ram, 0x4ef7c8, 1) MULTIEQUAL (ram, 0x4ef7c8, 1) , (ram, 0x4ef7c8, 1) , (ram, 0x4ef7c8, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x127, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x23c5c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002b3, 8), (unique, 0x100002b3, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x9, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x193, 4)]
[(ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x193, 4)]
[(ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x193, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x23c584, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002c3, 8), (unique, 0x100002c3, 8) INT_ADD (register, 0x30, 8) , (const, 0x40, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x145, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x145, 4)]
[ ---  CALL (ram, 0x121160, 8) , (unique, 0x3100, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x145, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x142, 4)]
[(ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x15b, 4), (ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x145, 4), (ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x142, 4)]
[(ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x15b, 4), (ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x145, 4), (ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x142, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100002cb, 8), (unique, 0x100002cb, 8) INT_ADD (register, 0x30, 8) , (const, 0x40, 8)]
[(ram, 0x4ef7c8, 1) MULTIEQUAL (ram, 0x4ef7c8, 1) , (ram, 0x4ef7c8, 1)]
[(ram, 0x4ef7c0, 8) MULTIEQUAL (ram, 0x4ef7c0, 8) , (ram, 0x4ef7c0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 1) BOOL_AND (unique, 0x100001ea, 1) , (unique, 0x100001eb, 1), (unique, 0x100001eb, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x1, 4), (unique, 0x100001ea, 1) BOOL_NEGATE (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x23c64f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002d3, 8), (unique, 0x100002d3, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x187, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x187, 4)]
[(ram, 0x4ef7c0, 8) COPY (ram, 0x4ef7c0, 8), (ram, 0x4ef7c0, 8) INDIRECT (ram, 0x4ef7c0, 8) , (const, 0x187, 4)]
[(ram, 0x4ef7c8, 1) COPY (ram, 0x4ef7c8, 1), (ram, 0x4ef7c8, 1) INDIRECT (ram, 0x4ef7c8, 1) , (const, 0x187, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ef7c0, 8) COPY (ram, 0x4ef7c0, 8)]
[(ram, 0x4ef7c8, 1) COPY (ram, 0x4ef7c8, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1)]
