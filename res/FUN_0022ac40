[(stack, 0xffffffffffffffa8, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100008e9, 8), (unique, 0x100008e9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x10000701, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[ ---  CBRANCH (ram, 0x22ae9e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100008e1, 8), (unique, 0x100008e1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x46, 4), (stack, 0xffffffffffffff70, 8) COPY (const, 0x22ac7f, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x46, 4)]
[(unique, 0x100006e1, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100008d9, 8) , (const, 0x46, 4), (unique, 0x100008d9, 8) COPY (register, 0x38, 8)]
[(unique, 0x100006b1, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x46, 4)]
[(unique, 0x10000691, 8) COPY (unique, 0x100008f9, 8), (unique, 0x100008f9, 8) CAST (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x46, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x10000338, 8) , (unique, 0x100000be, 8) , (const, 0x1, 8), (unique, 0x10000338, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x100000be, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x100008f1, 8), (unique, 0x100008f1, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x10000350, 8) , (unique, 0x100000be, 8) , (const, 0x1, 8), (unique, 0x10000350, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x100000be, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x100008f1, 8), (unique, 0x100008f1, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x10000368, 8) , (unique, 0x100000be, 8) , (const, 0x1, 8), (unique, 0x10000368, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x100000be, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x100008f1, 8), (unique, 0x100008f1, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000919, 8), (unique, 0x10000919, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x46, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffffa0, 8) CAST (unique, 0x10000929, 8), (unique, 0x10000929, 8) INT_OR (unique, 0x10000273, 8) , (unique, 0x1000027b, 8), (unique, 0x1000027b, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x10000273, 8) INT_AND (unique, 0x10000921, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000921, 8) CAST (stack, 0xffffffffffffffa0, 8), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffffb0, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000911, 8), (unique, 0x10000911, 8) INT_ADD (unique, 0x10000909, 8) , (unique, 0x100000be, 8), (unique, 0x10000909, 8) CAST (unique, 0x10000518, 8), (unique, 0x10000518, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x100000be, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x100008f1, 8), (unique, 0x100008f1, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0xa0, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000380, 8) , (const, 0x8, 8), (unique, 0x10000380, 8) INT_MULT (unique, 0x3880, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100000c6, 8) , (const, 0x3, 8), (unique, 0x100000c6, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000901, 8), (unique, 0x10000901, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100008d9, 8) , (const, 0x46, 4), (unique, 0x100008d9, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000719, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000901, 8), (unique, 0x10000901, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100008d9, 8) , (const, 0x46, 4), (unique, 0x100008d9, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000719, 8) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000719, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x22ad19, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000931, 8), (unique, 0x10000931, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000719, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000651, 8) , (const, 0x8, 8), (unique, 0x10000651, 8) INT_MULT (unique, 0x3880, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100000d2, 8) , (const, 0x3, 8), (unique, 0x100000d2, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(unique, 0x100007e9, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x98, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x100007e9, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x22ad10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000da, 4) , (const, 0x0, 4), (unique, 0x100000da, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000939, 8), (unique, 0x10000939, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22ad10, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xff, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000941, 8), (unique, 0x10000941, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22ad10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000949, 8), (unique, 0x10000949, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x18, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_SEXT (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x22aec0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x18, 4), (register, 0x18, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000951, 8), (unique, 0x10000951, 8) CAST (register, 0x98, 8)]
[(unique, 0x100007d9, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x22aec7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000016e, 4) , (const, 0x0, 4), (unique, 0x1000016e, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(unique, 0x100007e1, 8) COPY (register, 0x0, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x100007d9, 8) , (unique, 0x100007e1, 8)]
[ ---  CBRANCH (ram, 0x22aed3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000172, 4) , (const, 0x0, 4), (unique, 0x10000172, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x22aee0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22aed3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22aed3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000959, 8), (unique, 0x10000959, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x6d8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000961, 8) , (register, 0x30, 1), (unique, 0x10000961, 8) CAST (stack, 0xffffffffffffffb0, 8), (register, 0x30, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffb0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000971, 8), (unique, 0x10000971, 8) INT_ADD (unique, 0x10000969, 8) , (const, 0x1, 8), (unique, 0x10000969, 8) CAST (stack, 0xffffffffffffffb0, 8)]
[ ---  BRANCH (ram, 0x22aed3, 1)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x98, 8) CAST (unique, 0x10000981, 8), (unique, 0x10000981, 8) INT_ADD (unique, 0x10000979, 8) , (const, 0x1, 8), (unique, 0x10000979, 8) CAST (register, 0x98, 8)]
[ ---  BRANCH (ram, 0x22ad10, 1)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x22ace0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x8, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  CBRANCH (ram, 0x22acc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0xa0, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(unique, 0x10000769, 8) COPY (unique, 0x10000691, 8)]
[ ---  CBRANCH (ram, 0x22af80, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3800, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000989, 8) , (const, 0x0, 1), (unique, 0x10000989, 8) CAST (stack, 0xffffffffffffffb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000991, 8) , (const, 0x22afa4, 8), (unique, 0x10000991, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000590, 8) , (unique, 0x10000588, 8) , (const, 0x1, 8), (unique, 0x10000590, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x10000588, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x660, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x660, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x653, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x660, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x65f, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x660, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x65f, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x660, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x65f, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x660, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x65f, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x660, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x65f, 4), (stack, 0xffffffffffffff98, 8) COPY (unique, 0x10000691, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x660, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x65f, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x660, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x65f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x660, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x65f, 4)]
[ ---  CALL (ram, 0x229bd0, 8) , (unique, 0x100006b1, 8) , (unique, 0x100002d0, 8) , (unique, 0x3800, 8), (unique, 0x100002d0, 8) COPY (const, 0x2b6733, 8)]
[(unique, 0x100006a9, 8) COPY (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x660, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x65f, 4), (stack, 0xffffffffffffffa0, 8) COPY (unique, 0x100006e1, 8)]
[ ---  CBRANCH (ram, 0x22ae9e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000999, 8), (unique, 0x10000999, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x660, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x65f, 4), (stack, 0xffffffffffffffa0, 8) COPY (unique, 0x100006e1, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100009a1, 8), (unique, 0x100009a1, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa0, 8) CAST (unique, 0x100009b1, 8), (unique, 0x100009b1, 8) INT_OR (unique, 0x1000029c, 8) , (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x1000029c, 8) INT_AND (unique, 0x100009a9, 8) , (const, 0xffffffff00000000, 8), (unique, 0x100009a9, 8) CAST (stack, 0xffffffffffffffa0, 8), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(unique, 0x10000771, 8) COPY (stack, 0xffffffffffffff98, 8)]
[ ---  BRANCH (ram, 0x22ad2c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x100006e1, 8) , (unique, 0x100006a9, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000769, 8) , (unique, 0x10000771, 8)]
[(register, 0x88, 8) PTRADD (register, 0xa8, 8) , (unique, 0x100003a8, 8) , (const, 0x8, 8), (unique, 0x100003a8, 8) INT_MULT (unique, 0x3880, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100000f6, 8) , (const, 0x3, 8), (unique, 0x100000f6, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_AND (unique, 0x100009b9, 8) , (const, 0xffffffff, 8), (unique, 0x100009b9, 8) CAST (stack, 0xffffffffffffffa0, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100009c1, 8), (unique, 0x100009c1, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x22ada9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100009c9, 8), (unique, 0x100009c9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100003d8, 8) , (const, 0x8, 8), (unique, 0x100003d8, 8) INT_MULT (unique, 0x3880, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x10000102, 8) , (const, 0x3, 8), (unique, 0x10000102, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(unique, 0x100008d1, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xb8, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x100008d1, 8) , (register, 0xb0, 8)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x98, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x22ada0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000010a, 4) , (const, 0x0, 4), (unique, 0x1000010a, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100009d1, 8), (unique, 0x100009d1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x22ada0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xff, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100009d9, 8), (unique, 0x100009d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22ada0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100009f1, 8), (unique, 0x100009f1, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100009e9, 8), (unique, 0x100009e9, 8) INT_ADD (register, 0x110, 8) , (unique, 0x100009e1, 8), (unique, 0x100009e1, 8) CAST (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x22af50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100009f9, 8), (unique, 0x100009f9, 8) CAST (register, 0xb8, 8)]
[(unique, 0x100008c1, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x22af57, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000196, 4) , (const, 0x0, 4), (unique, 0x10000196, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(unique, 0x100008c9, 8) COPY (register, 0x18, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x100008c1, 8) , (unique, 0x100008c9, 8)]
[(unique, 0x10000741, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000799, 8) COPY (register, 0x88, 8)]
[(unique, 0x10000831, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000881, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x22af6e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000019a, 4) , (const, 0x0, 4), (unique, 0x1000019a, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x22afd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22af6e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000749, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007a1, 8) COPY (register, 0x88, 8)]
[(unique, 0x10000839, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000889, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x22afdb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000206, 4) , (const, 0x0, 4), (unique, 0x10000206, 4) INT_AND (register, 0x8, 4) , (const, 0x10, 4), (register, 0x8, 4) INT_OR (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000a01, 8), (unique, 0x10000a01, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a19, 8) , (const, 0x22affb, 8), (unique, 0x10000a19, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100005a8, 8) , (unique, 0x100005a0, 8) , (const, 0x1, 8), (unique, 0x100005a8, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x100005a0, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x484, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x484, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x484, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x483, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x484, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x483, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x484, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x483, 4), (stack, 0xffffffffffffff88, 8) COPY (register, 0x90, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x484, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x483, 4), (stack, 0xffffffffffffffb0, 8) COPY (register, 0x98, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x484, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x483, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000a21, 8), (unique, 0x10000a21, 8) CALL (ram, 0x130d70, 8) , (register, 0x98, 8) , (register, 0x30, 8) , (const, 0x5, 8)]
[(unique, 0x100006c9, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x484, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x483, 4)]
[(unique, 0x100006a1, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x484, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x483, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000699, 8) COPY (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x484, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x483, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x22b115, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002bc, 8) , (const, 0x0, 8), (unique, 0x100002bc, 8) INT_AND (unique, 0x10000a29, 8) , (const, 0x1, 8), (unique, 0x10000a29, 8) CAST (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x484, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x483, 4), (stack, 0xffffffffffffffa0, 8) CAST (unique, 0x10000a11, 8), (unique, 0x10000a11, 8) INT_OR (unique, 0x100002ac, 8) , (unique, 0x100002b4, 8), (unique, 0x100002b4, 8) INT_ZEXT (register, 0x8, 4), (unique, 0x100002ac, 8) INT_AND (unique, 0x10000a09, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000a09, 8) CAST (stack, 0xffffffffffffffa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a39, 8) , (const, 0x22b13d, 8), (unique, 0x10000a39, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000608, 8) , (unique, 0x10000600, 8) , (const, 0x1, 8), (unique, 0x10000608, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x10000600, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x628, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x628, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x628, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x627, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x628, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x627, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x628, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x627, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x628, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x627, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x628, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x627, 4)]
[ ---  CALL (ram, 0x229bd0, 8) , (unique, 0x100006c9, 8) , (unique, 0x100002d8, 8) , (unique, 0xbc80, 4), (unique, 0x100002d8, 8) COPY (const, 0x2b673a, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000a31, 8), (unique, 0x10000a31, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000759, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x628, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x627, 4), (stack, 0xffffffffffffffb0, 8) COPY (unique, 0x100006a1, 8)]
[(unique, 0x100007b1, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x628, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x627, 4), (stack, 0xffffffffffffff98, 8) COPY (unique, 0x10000699, 8)]
[(unique, 0x10000849, 8) COPY (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x628, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x627, 4), (stack, 0xffffffffffffff90, 8) COPY (stack, 0xffffffffffffff88, 8)]
[(unique, 0x10000899, 8) COPY (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x628, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x627, 4), (stack, 0xffffffffffffffa0, 8) COPY (stack, 0xffffffffffffffb0, 8)]
[ ---  BRANCH (ram, 0x22af6e, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a49, 8) , (const, 0x22b033, 8), (unique, 0x10000a49, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100005c0, 8) , (unique, 0x100005b8, 8) , (const, 0x1, 8), (unique, 0x100005c0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x100005b8, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4b3, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x4b3, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x4b3, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x4b2, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x4b3, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x4b2, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x4b3, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x4b2, 4), (stack, 0xffffffffffffff98, 8) COPY (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x4b3, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x4b2, 4), (stack, 0xffffffffffffffa0, 8) COPY (unique, 0x100006a1, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x4b3, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x4b2, 4), (stack, 0xffffffffffffffb0, 8) COPY (unique, 0x10000a41, 8), (unique, 0x10000a41, 8) CAST (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4b3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4b2, 4)]
[(unique, 0x100006f1, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x0, 8)]
[(unique, 0x100007c1, 8) COPY (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x4b3, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x4b2, 4), (stack, 0xffffffffffffff90, 8) COPY (stack, 0xffffffffffffff90, 8)]
[(unique, 0x10000859, 8) COPY (stack, 0xffffffffffffff88, 8), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x4b3, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x4b2, 4), (stack, 0xffffffffffffff88, 8) COPY (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x22b099, 1) , (unique, 0x100002c4, 1), (unique, 0x100002c4, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000a71, 8), (unique, 0x10000a71, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000a69, 8), (unique, 0x10000a69, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a61, 8), (unique, 0x10000a61, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x20, 8), (register, 0x30, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100001be, 8) , (const, 0x1, 8), (unique, 0x100001be, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a59, 8), (unique, 0x10000a59, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a51, 8), (unique, 0x10000a51, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x38, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x4b3, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x4b2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a81, 8) , (const, 0x22b075, 8), (unique, 0x10000a81, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100005d8, 8) , (unique, 0x100005d0, 8) , (const, 0x1, 8), (unique, 0x100005d8, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x100005d0, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4f7, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x4f7, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x4f7, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x4f6, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x4f7, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x4f6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4f7, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4f6, 4)]
[ ---  CALL (ram, 0x229560, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a89, 8), (unique, 0x10000a89, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x38, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x4f7, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x4f6, 4)]
[(unique, 0x100006f9, 8) COPY (unique, 0x10000a91, 8), (unique, 0x10000a91, 8) CAST (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x4f7, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x4f6, 4), (stack, 0xffffffffffffffa0, 8) COPY (unique, 0x10000a79, 8), (unique, 0x10000a79, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000761, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x4f7, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x4f6, 4), (stack, 0xffffffffffffff98, 8) COPY (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x100007c9, 8) COPY (unique, 0x100007b9, 8), (unique, 0x100007b9, 8) COPY (stack, 0xffffffffffffff88, 8), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x4f7, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x4f6, 4), (stack, 0xffffffffffffff88, 8) COPY (stack, 0xffffffffffffff90, 8)]
[(unique, 0x10000851, 8) COPY (stack, 0xffffffffffffff80, 8), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x4f7, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x4f6, 4), (stack, 0xffffffffffffff80, 8) COPY (stack, 0xffffffffffffff88, 8)]
[(unique, 0x100008a1, 8) COPY (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x4f7, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x4f6, 4), (stack, 0xffffffffffffff90, 8) COPY (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (unique, 0x100008a1, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x10000859, 8) , (unique, 0x10000851, 8)]
[(register, 0x80, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x10000761, 8)]
[(register, 0x10, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x100006f1, 8) , (unique, 0x100006f9, 8)]
[(register, 0x88, 8) COPY (unique, 0x100007d1, 8), (unique, 0x100007d1, 8) MULTIEQUAL (unique, 0x100007c1, 8) , (unique, 0x100007c9, 8)]
[(unique, 0x100006d1, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a99, 8), (unique, 0x10000a99, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x40, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000aa9, 8), (unique, 0x10000aa9, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x28, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x22b0b0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000aa1, 8), (unique, 0x10000aa1, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x28, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x22b152, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000ab1, 8), (unique, 0x10000ab1, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x10, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x30, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x6, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000821, 8) COPY (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x22b168, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000ab9, 8) , (const, 0x22b186, 8), (unique, 0x10000ab9, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000620, 8) , (unique, 0x10000618, 8) , (const, 0x1, 8), (unique, 0x10000620, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x10000618, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5e5, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x5e5, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x5e5, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x5e4, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x5e5, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x5e4, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x5e5, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x5e4, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5e5, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5e4, 4), (stack, 0xffffffffffffffb0, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5e5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5e4, 4)]
[(unique, 0x10000739, 8) COPY (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5e5, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5e4, 4), (stack, 0xffffffffffffffa0, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000791, 8) COPY (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x5e5, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x5e4, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x88, 8)]
[(unique, 0x10000809, 8) COPY (stack, 0xffffffffffffff88, 8), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x5e5, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x5e4, 4), (stack, 0xffffffffffffff88, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000879, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x5e5, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x5e4, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x22b0d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229b20, 8) , (unique, 0x100006d1, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000ac1, 8), (unique, 0x10000ac1, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x38, 8)]
[ ---  BRANCH (ram, 0x22b158, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000ac9, 8), (unique, 0x10000ac9, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x5d1, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x5cf, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0xa, 1), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000731, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x10000789, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x10000801, 8) COPY (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x10000821, 8) , (unique, 0x10000809, 8)]
[(unique, 0x10000871, 8) COPY (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (stack, 0xffffffffffffff98, 8)]
[ ---  BRANCH (ram, 0x22b0d8, 1)]
[(unique, 0x10000811, 8) COPY (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x22b1af, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000ad1, 8) , (const, 0x22b1cd, 8), (unique, 0x10000ad1, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000638, 8) , (unique, 0x10000630, 8) , (const, 0x1, 8), (unique, 0x10000638, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x10000630, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x59a, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x59a, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x59a, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x599, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x59a, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x599, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x59a, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x599, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x59a, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x599, 4), (stack, 0xffffffffffffffb0, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x59a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x599, 4)]
[(unique, 0x10000729, 8) COPY (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x59a, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x599, 4), (stack, 0xffffffffffffffa0, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000781, 8) COPY (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x59a, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x599, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x88, 8)]
[(unique, 0x100007f9, 8) COPY (stack, 0xffffffffffffff88, 8), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x59a, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x599, 4), (stack, 0xffffffffffffff88, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000869, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x59a, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x599, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x22b0d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229b20, 8) , (unique, 0x100006d1, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000ad9, 8), (unique, 0x10000ad9, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x38, 8)]
[ ---  BRANCH (ram, 0x22b0cd, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000ae1, 8), (unique, 0x10000ae1, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x558, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x556, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x20, 1), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000721, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x10000779, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x100007f1, 8) COPY (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x10000811, 8) , (unique, 0x100007f9, 8)]
[(unique, 0x10000861, 8) COPY (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (stack, 0xffffffffffffff98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000af1, 8) , (const, 0x22b100, 8), (unique, 0x10000af1, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100005f0, 8) , (unique, 0x100005e8, 8) , (const, 0x1, 8), (unique, 0x100005f0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x100005e8, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x57a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x57a, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x57a, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x579, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x57a, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x579, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x57a, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x579, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x57a, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x579, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x57a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x579, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x229bd0, 8) , (unique, 0x100006d9, 8) , (unique, 0x100002e0, 8) , (unique, 0xbc80, 4), (unique, 0x100002e0, 8) COPY (const, 0x2b6745, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000ae9, 8), (unique, 0x10000ae9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x100006d9, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000751, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x57a, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x579, 4), (stack, 0xffffffffffffffb0, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000721, 8) , (unique, 0x10000729, 8) , (unique, 0x10000731, 8) , (unique, 0x10000739, 8)]
[(unique, 0x100007a9, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x57a, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x579, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10000779, 8) , (unique, 0x10000781, 8) , (unique, 0x10000789, 8) , (unique, 0x10000791, 8)]
[(unique, 0x10000841, 8) COPY (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x57a, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x579, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x100007f1, 8) , (unique, 0x100007f9, 8) , (unique, 0x10000801, 8) , (unique, 0x10000809, 8)]
[(unique, 0x10000891, 8) COPY (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x57a, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x579, 4), (stack, 0xffffffffffffffa0, 8) COPY (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x10000861, 8) , (unique, 0x10000869, 8) , (unique, 0x10000871, 8) , (unique, 0x10000879, 8)]
[ ---  BRANCH (ram, 0x22af6e, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0x10000881, 8) , (unique, 0x10000889, 8) , (unique, 0x10000891, 8) , (unique, 0x10000899, 8) , (register, 0x98, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x10000831, 8) , (unique, 0x10000839, 8) , (unique, 0x10000841, 8) , (unique, 0x10000849, 8) , (register, 0x90, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x10000799, 8) , (unique, 0x100007a1, 8) , (unique, 0x100007a9, 8) , (unique, 0x100007b1, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000741, 8) , (unique, 0x10000749, 8) , (unique, 0x10000751, 8) , (unique, 0x10000759, 8) , (register, 0x80, 8)]
[(register, 0xb8, 8) CAST (unique, 0x10000b01, 8), (unique, 0x10000b01, 8) INT_ADD (unique, 0x10000af9, 8) , (const, 0x1, 8), (unique, 0x10000af9, 8) CAST (register, 0xb8, 8)]
[ ---  BRANCH (ram, 0x22ada0, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x22ad70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (register, 0xa0, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x22ad40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (register, 0x88, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000b11, 8), (unique, 0x10000b11, 8) LOAD (const, 0x1b1, 4) , (register, 0x90, 8)]
[(unique, 0x10000709, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x22ae9e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000b09, 8), (unique, 0x10000b09, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa0, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000410, 8) , (const, 0x8, 8), (unique, 0x10000410, 8) INT_MULT (unique, 0x3880, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x1000012a, 8) , (const, 0x3, 8), (unique, 0x1000012a, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xb8, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (unique, 0x10000b19, 8), (unique, 0x10000b19, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x22ae90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000b21, 8), (unique, 0x10000b21, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xb8, 8)]
[(unique, 0x3b80, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000438, 8) , (const, 0x8, 8), (unique, 0x10000438, 8) INT_MULT (unique, 0x3880, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x10000136, 8) , (const, 0x3, 8), (unique, 0x10000136, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(unique, 0x100008b9, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x22ae21, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100008b9, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0x100006e9, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x100006b9, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x22ae18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x100008a9, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x22ae32, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000146, 4) , (const, 0x0, 4), (unique, 0x10000146, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000b29, 8), (unique, 0x10000b29, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0x100008b1, 8) COPY (register, 0x18, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100008a9, 8) , (unique, 0x100008b1, 8)]
[ ---  CBRANCH (ram, 0x22ae18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000014a, 4) , (const, 0x0, 4), (unique, 0x1000014a, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x10, 4), (register, 0x0, 4) INT_OR (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000b31, 8), (unique, 0x10000b31, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22af08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22ae18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22ae51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b39, 8) , (const, 0x22af2f, 8), (unique, 0x10000b39, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000560, 8) , (unique, 0x10000558, 8) , (const, 0x1, 8), (unique, 0x10000560, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x10000558, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x42b, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x42b, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x42b, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x42a, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x42b, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x42a, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x42b, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x42a, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x42b, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x42a, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x42b, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x42a, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x42b, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x42a, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x42b, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x42a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x42b, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x42a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x42b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x42a, 4)]
[ ---  CALL (ram, 0x229bd0, 8) , (unique, 0x100006b9, 8) , (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) COPY (const, 0x2b6766, 8)]
[ ---  BRANCH (ram, 0x22ae18, 1)]
[ ---  CBRANCH (ram, 0x22ae18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b41, 8) , (const, 0x22ae5f, 8), (unique, 0x10000b41, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000530, 8) , (unique, 0x10000528, 8) , (const, 0x1, 8), (unique, 0x10000530, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x10000528, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x369, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x369, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x369, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x368, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x369, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x368, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x369, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x368, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x369, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x368, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x369, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x368, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x369, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x368, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x369, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x368, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x369, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x368, 4)]
[(register, 0x0, 8) CALL (ram, 0x130d70, 8) , (unique, 0x100006e9, 8) , (register, 0x30, 8) , (const, 0x5, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100006c1, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x369, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x368, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x22af38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x0, 4), (register, 0xb0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b49, 8) , (const, 0x22ae85, 8), (unique, 0x10000b49, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000548, 8) , (unique, 0x10000540, 8) , (const, 0x1, 8), (unique, 0x10000548, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x10000540, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x391, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x391, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x391, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x390, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x391, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x390, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x391, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x390, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x391, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x390, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x391, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x390, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x391, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x390, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x391, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x390, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x391, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x390, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x391, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x390, 4)]
[ ---  CALL (ram, 0x229bd0, 8) , (unique, 0x100006c1, 8) , (unique, 0x100002e8, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0x100002e8, 8) COPY (const, 0x2b674e, 8)]
[ ---  CBRANCH (ram, 0x22ae21, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (unique, 0x3b80, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b51, 8) , (const, 0x22af4a, 8), (unique, 0x10000b51, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000578, 8) , (unique, 0x10000570, 8) , (const, 0x1, 8), (unique, 0x10000578, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x10000570, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3ed, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3ed, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3ed, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x3ed, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x3ed, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x3ed, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x3ed, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3ed, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3ed, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3ed, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ed, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ec, 4)]
[ ---  CALL (ram, 0x229bd0, 8) , (unique, 0x100006c1, 8) , (unique, 0x100002f0, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0x100002f0, 8) COPY (const, 0x2b675b, 8)]
[ ---  BRANCH (ram, 0x22ae18, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x22ae90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (unique, 0x3b80, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000711, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x22ade0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (stack, 0xffffffffffffffa0, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x6, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000701, 8) , (unique, 0x10000709, 8) , (unique, 0x10000711, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x22b1f9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000b59, 8), (unique, 0x10000b59, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b61, 8) , (unique, 0x100002c8, 8), (unique, 0x10000b61, 8) CAST (register, 0x20, 8), (unique, 0x100002c8, 8) PTRSUB (const, 0x0, 8) , (const, 0x22b1fe, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3da, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3d9, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x3da, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x3d9, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x3da, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x3d9, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x3da, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x3d9, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x3da, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x3d9, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3da, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3d9, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3da, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3d9, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3da, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3d9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3da, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d9, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3da, 4)]
[ ---  RETURN (const, 0x1, 4)]
