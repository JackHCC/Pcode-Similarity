[(unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (register, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0x100000b6, 8) COPY (register, 0x8, 8)]
[(unique, 0x100000ce, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x215c21, 1)]
[(unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (register, 0x8, 8) COPY (unique, 0x100000c6, 8), (unique, 0x100000c6, 8) MULTIEQUAL (unique, 0x100000b6, 8) , (unique, 0x100000be, 8)]
[ ---  CBRANCH (ram, 0x215c10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (unique, 0x3400, 8), (register, 0x80, 8) COPY (unique, 0x100000de, 8), (unique, 0x100000de, 8) MULTIEQUAL (unique, 0x100000ce, 8) , (unique, 0x100000d6, 8)]
[(unique, 0x100000be, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x100000d6, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x215c30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x215cc0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_AND (register, 0x10, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100000e6, 8) COPY (register, 0x80, 8)]
[(unique, 0x100000f6, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000106, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000083, 8) MULTIEQUAL (unique, 0x100000e6, 8) , (unique, 0x100000ee, 8)]
[(unique, 0x1000008c, 8) MULTIEQUAL (unique, 0x100000f6, 8) , (unique, 0x100000fe, 8)]
[(unique, 0x10000094, 8) MULTIEQUAL (unique, 0x10000106, 8) , (unique, 0x1000010e, 8)]
[ ---  CBRANCH (ram, 0x215cb6, 1) , (unique, 0x1000008b, 1), (unique, 0x1000008b, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x215c2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000008c, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0x10000083, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000094, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x215cb6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000094, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x215c2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000008c, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0x10000083, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000094, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x215cb6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000094, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[(unique, 0x3100, 8) INT_ADD (unique, 0x1000008c, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x215c2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000008c, 8) , (const, 0x3, 8)]
[(register, 0x30, 8) PTRADD (unique, 0x10000094, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0xbb00, 1), (register, 0x80, 8) PTRADD (unique, 0x10000083, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000094, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x215cb6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000094, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x215d17, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x80, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x215d08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000006a, 8) , (const, 0x0, 8), (unique, 0x1000006a, 8) INT_AND (register, 0x10, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x215c2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) INT_ADD (unique, 0x1000008c, 8) , (const, 0xfffffffffffffffb, 8)]
[ ---  BRANCH (ram, 0x215cc5, 1)]
[ ---  CBRANCH (ram, 0x215c2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0x10000083, 8) , (const, 0x5, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100000ee, 8) COPY (register, 0x80, 8)]
[(unique, 0x100000fe, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000010e, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x215cb6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x1000009c, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[(unique, 0x100000a5, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x8, 8)]
[(unique, 0x100000ad, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x215cf9, 1) , (unique, 0x100000a4, 1), (unique, 0x100000a4, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x215d08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) PTRADD (unique, 0x100000a5, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x1000009c, 8)]
[ ---  CBRANCH (ram, 0x215c2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 8) , (const, 0x0, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x100000ad, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x215ce0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ad, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x216890, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x90, 8) INT_ADD (unique, 0x100000ad, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbb00, 1), (register, 0x0, 8) PTRADD (unique, 0x1000009c, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
