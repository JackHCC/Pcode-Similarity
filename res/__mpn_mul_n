[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001d5, 8), (unique, 0x100001d5, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x48b2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x48b358, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x8, 8) , (const, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1bf, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1bf, 4)]
[ ---  CALL (ram, 0x48ac00, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x48b2d5, 1)]
[(register, 0x8, 8) PTRADD (unique, 0x10000185, 8) , (unique, 0x1000008d, 8) , (const, 0x1, 8), (unique, 0x10000185, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8), (unique, 0x1000008d, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffff000, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8)]
[(unique, 0x100001b5, 8) COPY (register, 0x20, 8)]
[(unique, 0x100000db, 8) MULTIEQUAL (unique, 0x100001b5, 8) , (unique, 0x100001bd, 8)]
[(unique, 0x100000e3, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x48b32e, 1) , (unique, 0x100000d2, 1), (unique, 0x100000d2, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x8, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100000db, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001e5, 8) , (unique, 0xbe00, 8), (unique, 0x100001e5, 8) CAST (unique, 0x3c80, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001dd, 8), (unique, 0x100001dd, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x100000db, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100000db, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(unique, 0x100001bd, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100000db, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100000e3, 8) , (unique, 0x100000ad, 8) , (const, 0x1, 8), (unique, 0x100000ad, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfff, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x48b341, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfff, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001f5, 8) , (unique, 0xbe00, 8), (unique, 0x100001f5, 8) CAST (unique, 0x3880, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001ed, 8), (unique, 0x100001ed, 8) CAST (unique, 0x3880, 8), (unique, 0x3880, 8) PTRADD (unique, 0x100000e3, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000205, 8) , (const, 0x48b352, 8), (unique, 0x10000205, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100000e3, 8) , (unique, 0x1000019d, 8) , (const, 0x1, 8), (unique, 0x1000019d, 8) INT_ADD (unique, 0x100000ad, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ba, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1ba, 4)]
[ ---  CALL (ram, 0x48ad60, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x100001fd, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100001fd, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100000e3, 8) , (unique, 0x10000195, 8) , (const, 0x1, 8), (unique, 0x10000195, 8) INT_ADD (unique, 0x100000ad, 8) , (const, 0xf, 8)]
[ ---  BRANCH (ram, 0x48b2d5, 1)]
[ ---  CBRANCH (ram, 0x48b2d0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x8, 8) , (const, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x100, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x100, 4)]
[ ---  CALL (ram, 0x48a520, 8)]
[(unique, 0x100001ad, 8) COPY (register, 0x20, 8)]
[(register, 0x90, 8) PTRADD (unique, 0x10000165, 8) , (unique, 0x1000004d, 8) , (const, 0x1, 8), (unique, 0x10000165, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8), (unique, 0x1000004d, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffff000, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8)]
[(unique, 0x100001c5, 8) COPY (register, 0x20, 8)]
[(unique, 0x100000f4, 8) MULTIEQUAL (unique, 0x100001c5, 8) , (unique, 0x100001cd, 8)]
[(unique, 0x100000fc, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x48b2a5, 1) , (unique, 0x100000eb, 1), (unique, 0x100000eb, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x90, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100000f4, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000215, 8) , (unique, 0xbe00, 8), (unique, 0x10000215, 8) CAST (unique, 0x3c80, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000020d, 8), (unique, 0x1000020d, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x100000f4, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100000f4, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(unique, 0x100001cd, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100000f4, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100000fc, 8) , (unique, 0x1000006d, 8) , (const, 0x1, 8), (unique, 0x1000006d, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfff, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x48b2b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfff, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000225, 8) , (unique, 0xbe00, 8), (unique, 0x10000225, 8) CAST (unique, 0x3880, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000021d, 8), (unique, 0x1000021d, 8) CAST (unique, 0x3880, 8), (unique, 0x3880, 8) PTRADD (unique, 0x100000fc, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000022d, 8) , (const, 0x48b2c9, 8), (unique, 0x1000022d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100000fc, 8) , (unique, 0x10000175, 8) , (const, 0x1, 8), (unique, 0x10000175, 8) INT_ADD (unique, 0x1000006d, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xe1, 4)]
[ ---  CALL (ram, 0x48a690, 8)]
[(unique, 0x100001a5, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x48b2d5, 1)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100001a5, 8) , (unique, 0x100001ad, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x48b365, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000235, 8), (unique, 0x10000235, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000023d, 8) , (unique, 0x10000105, 8), (unique, 0x1000023d, 8) CAST (register, 0x20, 8), (unique, 0x10000105, 8) PTRSUB (const, 0x0, 8) , (const, 0x48b36a, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xfb, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
