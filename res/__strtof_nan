[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000089, 8), (unique, 0x10000089, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x10000075, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x14ec74, 1)]
[ ---  CBRANCH (ram, 0x14ec70, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x10000091, 1) , (const, 0x1a, 1), (unique, 0x10000091, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_ADD (unique, 0x10000052, 1) , (const, 0xbf, 1), (unique, 0x10000052, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xdf, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000075, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x14ec70, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x10000092, 1) , (const, 0xa, 1), (unique, 0x10000092, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x30, 1)]
[ ---  CBRANCH (ram, 0x14ec70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5f, 1)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000081, 4) COPY (ram, 0x2bcae0, 4)]
[ ---  CBRANCH (ram, 0x14ecbb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (register, 0x10, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb6, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xb6, 4)]
[(register, 0x0, 4) CALL (ram, 0x145920, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x10000064, 8), (unique, 0x10000064, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea960, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[(unique, 0x10000085, 4) COPY (ram, 0x2bcae0, 4), (ram, 0x2bcae0, 4) INDIRECT (ram, 0x2bcae0, 4) , (const, 0xb6, 4)]
[ ---  CBRANCH (ram, 0x14ec93, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd8, 8) , (register, 0x18, 8), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xb6, 4)]
[(unique, 0x1000007d, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x7fc00000, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3fffff, 4)]
[ ---  BRANCH (ram, 0x14ec9b, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x2bcae0, 4) MULTIEQUAL (ram, 0x2bcae0, 4) , (ram, 0x2bcae0, 4) , (ram, 0x2bcae0, 4)]
[(register, 0x1200, 4) MULTIEQUAL (unique, 0x1000007d, 4) , (unique, 0x10000081, 4) , (unique, 0x10000085, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x14eca4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x2bcae0, 4) INDIRECT (ram, 0x2bcae0, 4) , (const, 0x77, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x18, 8)]
[(ram, 0x2bcae0, 4) MULTIEQUAL (ram, 0x2bcae0, 4) , (ram, 0x2bcae0, 4)]
[ ---  CBRANCH (ram, 0x14eced, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000093, 8), (unique, 0x10000093, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(ram, 0x2bcae0, 4) COPY (ram, 0x2bcae0, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x9a, 4)]
[ ---  CALL (ram, 0x234c80, 8) , (register, 0x1200, 4)]
[(ram, 0x2bcae0, 4) COPY (ram, 0x2bcae0, 4), (ram, 0x2bcae0, 4) INDIRECT (ram, 0x2bcae0, 4) , (const, 0x9a, 4)]
[ ---  RETURN (const, 0x1, 4)]
