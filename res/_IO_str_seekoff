[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f5, 8), (unique, 0x100002f5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002fd, 8), (unique, 0x100002fd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x190560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1905e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x400, 4)]
[ ---  CBRANCH (ram, 0x190565, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x190583, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001aa, 4) , (const, 0x0, 4), (unique, 0x100001aa, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[ ---  CBRANCH (ram, 0x190600, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000198, 4) , (const, 0x0, 4), (unique, 0x10000198, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[(register, 0x8, 4) COPY (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x190648, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x190565, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x56, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x56, 4)]
[(register, 0x0, 8) CALL (ram, 0x190410, 8)]
[(unique, 0x100001f5, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1905b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x190565, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001a2, 4) , (const, 0x0, 4), (unique, 0x100001a2, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[(unique, 0x100002b2, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1905a0, 1) , (unique, 0x100002b1, 1), (unique, 0x100002b1, 1) INT_EQUAL (unique, 0x100002b6, 4) , (const, 0x0, 4), (unique, 0x100002b6, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x100, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000305, 8), (unique, 0x10000305, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000030d, 8), (unique, 0x1000030d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x14, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x19056e, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000315, 8) , (register, 0x30, 8), (unique, 0x10000315, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000031d, 8) , (unique, 0xbd80, 8), (unique, 0x1000031d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000325, 8) , (unique, 0xbd80, 8), (unique, 0x10000325, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x24c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x24a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x247, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x244, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffff7ff, 4)]
[ ---  CBRANCH (ram, 0x1905b5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002b2, 4) , (const, 0x0, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8), (register, 0x28, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000335, 8), (unique, 0x10000335, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000032d, 8), (unique, 0x1000032d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x28, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x266, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x266, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) CALL (ram, 0x190410, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x190484, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001a6, 4) , (const, 0x0, 4), (unique, 0x100001a6, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x100002b2, 4) , (register, 0x8, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x100001f5, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x190680, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(unique, 0x100002d5, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1906b8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x100002ed, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x19049e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(register, 0x28, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000345, 8), (unique, 0x10000345, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000033d, 8), (unique, 0x1000033d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1906b8, 1) , (unique, 0x100002bd, 1), (unique, 0x100002bd, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESSEQUAL (register, 0x30, 8) , (register, 0x0, 8), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000082, 8) , (register, 0x28, 8), (unique, 0x10000082, 8) INT_2COMP (register, 0x30, 8), (register, 0x0, 8) INT_2COMP (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100002ed, 8) , (register, 0x28, 8)]
[(unique, 0x100002cd, 8) COPY (register, 0x28, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1906b8, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) INT_SUB (const, 0x7fffffffffffffff, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x190690, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0xb0, 8) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100002cd, 8) , (unique, 0x100002d5, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x204, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x204, 4)]
[ ---  CBRANCH (ram, 0x1904d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x190100, 8) , (register, 0x38, 8) , (register, 0x28, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000355, 8) , (register, 0x0, 8), (unique, 0x10000355, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xb0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000034d, 8), (unique, 0x1000034d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe8, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe5, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035d, 8) , (unique, 0x3400, 8), (unique, 0x1000035d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000034d, 8), (unique, 0x1000034d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(unique, 0x1000028a, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x10000292, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x0, 8)]
[(unique, 0x1000029a, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100002a2, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x19058b, 1) , (unique, 0x10000289, 1), (unique, 0x10000289, 1) INT_EQUAL (unique, 0x100002ab, 4) , (const, 0x0, 4), (unique, 0x100002ab, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(ram, 0x4eae68, 8) COPY (unique, 0x100002a2, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x1000028a, 8)]
[ ---  CBRANCH (ram, 0x190638, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(unique, 0x100001f4, 1) COPY (const, 0x0, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x190524, 1)]
[ ---  CBRANCH (ram, 0x190610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(register, 0x0, 8) INT_2COMP (unique, 0x10000292, 8)]
[(unique, 0xd080, 1) INT_SLESS (register, 0x10, 8) , (register, 0x30, 8), (register, 0x10, 8) INT_SUB (const, 0x7fffffffffffffff, 8) , (unique, 0x10000292, 8)]
[(unique, 0x100002e5, 8) COPY (unique, 0x10000292, 8)]
[ ---  BRANCH (ram, 0x190524, 1)]
[(register, 0x0, 8) INT_2COMP (register, 0x28, 8), (register, 0x28, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000365, 8), (unique, 0x10000365, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(unique, 0xd080, 1) INT_SLESS (register, 0x10, 8) , (register, 0x30, 8), (register, 0x10, 8) INT_SUB (const, 0x7fffffffffffffff, 8) , (register, 0x28, 8), (register, 0x28, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000365, 8), (unique, 0x10000365, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(unique, 0x100002dd, 8) COPY (register, 0x28, 8), (register, 0x28, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000365, 8), (unique, 0x10000365, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(unique, 0x100001f2, 1) MULTIEQUAL (unique, 0xd080, 1) , (unique, 0xd080, 1) , (unique, 0x100001f4, 1)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x100002dd, 8) , (unique, 0x100002e5, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1906b8, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1906b8, 1) , (unique, 0x100002ca, 1), (unique, 0x100002ca, 1) BOOL_NEGATE (unique, 0x100001f2, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000375, 8) , (const, 0x16, 4), (unique, 0x10000375, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x1000029a, 8) , (unique, 0x1000029a, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x100002a2, 8) , (unique, 0x100002a2, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b8, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x100002a2, 8) , (unique, 0x100002a2, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x190658, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000292, 8) , (register, 0x28, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0x30, 8)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x100002a2, 8) , (const, 0x190, 4)]
[ ---  CBRANCH (ram, 0x190541, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x190100, 8) , (register, 0x38, 8) , (register, 0x28, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000385, 8) , (register, 0x0, 8), (unique, 0x10000385, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000037d, 8), (unique, 0x1000037d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x16a, 4), (ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x100002a2, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
