[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002cf, 8), (unique, 0x100002cf, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002d7, 8), (unique, 0x100002d7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x420ee0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x420e90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4), (register, 0x28, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x400, 4)]
[ ---  CBRANCH (ram, 0x420fa0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x420ea0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000192, 4) , (const, 0x0, 4), (unique, 0x10000192, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002df, 8), (unique, 0x100002df, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x420ec7, 1)]
[ ---  CBRANCH (ram, 0x420f90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000186, 4) , (const, 0x0, 4), (unique, 0x10000186, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[(register, 0x28, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x420ea0, 1)]
[ ---  CBRANCH (ram, 0x421070, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x28, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x420ea0, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x420e24, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002e7, 8), (unique, 0x100002e7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002ef, 8), (unique, 0x100002ef, 8) CAST (unique, 0x3100, 8)]
[(unique, 0x100001d5, 4) COPY (const, 0x0, 4)]
[(register, 0xb8, 8) INT_SUB (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f7, 8), (unique, 0x100002f7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x420ea0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x420ea0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000018e, 4) , (const, 0x0, 4), (unique, 0x1000018e, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x420f80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000018a, 4) , (const, 0x0, 4), (unique, 0x1000018a, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x100, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002ff, 8), (unique, 0x100002ff, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x420ead, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000307, 8), (unique, 0x10000307, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x14, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000030f, 8) , (register, 0x8, 8), (unique, 0x1000030f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffff7ff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000317, 8) , (unique, 0xbd80, 8), (unique, 0x10000317, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000031f, 8) , (unique, 0xbd80, 8), (unique, 0x1000031f, 8) CAST (unique, 0x100001be, 8), (unique, 0x100001be, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x420eee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000327, 8), (unique, 0x10000327, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000032f, 8), (unique, 0x1000032f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x8, 4)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x420ef7, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000337, 8), (unique, 0x10000337, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000033f, 8), (unique, 0x1000033f, 8) CAST (unique, 0x3100, 8)]
[(register, 0xa0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0xb8, 8) INT_SUB (register, 0x10, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x420e33, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000da, 4) , (const, 0x0, 4), (unique, 0x100000da, 4) INT_AND (register, 0x28, 4) , (const, 0x1, 4)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0x100001d5, 4) , (register, 0x28, 4)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x420ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(unique, 0x100002af, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x421080, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x100002c7, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x420fb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(register, 0xa0, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000347, 8), (unique, 0x10000347, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x420e49, 1)]
[ ---  CBRANCH (ram, 0x421080, 1) , (unique, 0x10000297, 1), (unique, 0x10000297, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESSEQUAL (register, 0x30, 8) , (register, 0x0, 8), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000070, 8) , (register, 0xa0, 8), (unique, 0x10000070, 8) INT_2COMP (register, 0x30, 8), (register, 0x0, 8) INT_2COMP (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100002c7, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x421080, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) INT_SUB (const, 0x7fffffffffffffff, 8) , (register, 0xa0, 8)]
[(unique, 0x100002a7, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x421018, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0xb8, 8) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100002a7, 8) , (unique, 0x100002af, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ed, 4)]
[ ---  CBRANCH (ram, 0x42105c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x420c00, 8) , (register, 0x38, 8) , (register, 0xa0, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000034f, 8), (unique, 0x1000034f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x420e7a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000357, 8) , (register, 0x10, 8), (unique, 0x10000357, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035f, 8) , (register, 0x8, 8), (unique, 0x1000035f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0xa0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x420f0e, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x420ece, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x2, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x421008, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(unique, 0x100001db, 1) COPY (const, 0x0, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x420f4a, 1)]
[ ---  CBRANCH (ram, 0x420fc8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(register, 0x0, 8) INT_2COMP (register, 0xb8, 8)]
[(unique, 0xd080, 1) INT_SLESS (register, 0x10, 8) , (register, 0x30, 8), (register, 0x10, 8) INT_SUB (const, 0x7fffffffffffffff, 8) , (register, 0xb8, 8)]
[(unique, 0x100002bf, 8) COPY (register, 0xb8, 8)]
[ ---  BRANCH (ram, 0x420f4a, 1)]
[(register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000036f, 8), (unique, 0x1000036f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000367, 8), (unique, 0x10000367, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(unique, 0xd080, 1) INT_SLESS (register, 0x10, 8) , (register, 0x30, 8), (register, 0x10, 8) INT_SUB (const, 0x7fffffffffffffff, 8) , (register, 0xa0, 8), (register, 0xa0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000036f, 8), (unique, 0x1000036f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000367, 8), (unique, 0x10000367, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(unique, 0x100002b7, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000036f, 8), (unique, 0x1000036f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000367, 8), (unique, 0x10000367, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(unique, 0x100001d9, 1) MULTIEQUAL (unique, 0xd080, 1) , (unique, 0xd080, 1) , (unique, 0x100001db, 1)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100002b7, 8) , (unique, 0x100002bf, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x421080, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x421080, 1) , (unique, 0x100002a4, 1), (unique, 0x100002a4, 1) BOOL_NEGATE (unique, 0x100001d9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000377, 8), (unique, 0x10000377, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x421040, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0xb8, 8) , (register, 0xa0, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x420f67, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x420c00, 8) , (register, 0x38, 8) , (register, 0xa0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000387, 8) , (register, 0x0, 8), (unique, 0x10000387, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000037f, 8), (unique, 0x1000037f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
