[ ---  CBRANCH (ram, 0x17d088, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[(register, 0x0, 8) CALL (ram, 0x17cfe0, 8)]
[ ---  CBRANCH (ram, 0x17d0f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000089, 4) , (const, 0x0, 4), (unique, 0x10000089, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)]
[(register, 0x28, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x17d070, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000055, 4) , (const, 0x0, 4), (unique, 0x10000055, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x400, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x17d0e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000075, 4) , (const, 0x0, 4), (unique, 0x10000075, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000191, 8), (unique, 0x10000191, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000189, 8), (unique, 0x10000189, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000199, 8), (unique, 0x10000199, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17d118, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000059, 4) , (const, 0x0, 4), (unique, 0x10000059, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[(register, 0x0, 8) CALL (ram, 0x17cfe0, 8)]
[(unique, 0x100000ec, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x17d098, 1)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0x100000ec, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x17d168, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(register, 0xa8, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x17d0af, 1)]
[(unique, 0x3b80, 8) INT_ADD (register, 0x30, 8) , (register, 0xb0, 8)]
[(unique, 0x10000161, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x17d0af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x2, 4)]
[(unique, 0x10000169, 8) COPY (unique, 0x3b80, 8)]
[ ---  CBRANCH (ram, 0x17d155, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000161, 8) , (unique, 0x10000169, 8) , (register, 0xa8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x17d180, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0xb0, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x17d0c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x17cd20, 8) , (register, 0x38, 8) , (register, 0xa8, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c1, 8) , (register, 0x0, 8), (unique, 0x100001c1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xb0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001b9, 8), (unique, 0x100001b9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c9, 8) , (unique, 0x3400, 8), (unique, 0x100001c9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001b9, 8), (unique, 0x100001b9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(unique, 0x10000181, 8) COPY (register, 0xa8, 8)]
[ ---  BRANCH (ram, 0x17d102, 1)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000181, 8) , (register, 0x30, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17d02d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) CALL (ram, 0x17cfe0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x17d130, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d9, 8), (unique, 0x100001d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x17d044, 1)]
[(unique, 0x3b80, 8) INT_ADD (register, 0xa8, 8) , (register, 0xb0, 8)]
[(unique, 0x10000171, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x17d044, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x2, 4)]
[(unique, 0x10000179, 8) COPY (unique, 0x3b80, 8)]
[ ---  CBRANCH (ram, 0x17d155, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000171, 8) , (unique, 0x10000179, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x17d140, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESSEQUAL (register, 0xa8, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x17d056, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x17cd20, 8) , (register, 0x38, 8) , (register, 0xa8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001e9, 8) , (register, 0x0, 8), (unique, 0x100001e9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0xa8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001e1, 8), (unique, 0x100001e1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
