[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000265, 8), (unique, 0x10000265, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x37, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x37, 4), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x37, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x218470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18a590, 8) , (register, 0x10, 8) , (register, 0x8, 4) , (register, 0x38, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x46, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x46, 4)]
[(unique, 0x1000025d, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121110, 8) , (register, 0x10, 8) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x218446, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121110, 8) , (register, 0x10, 8) , (const, 0xa, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1dc, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x1dc, 4), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1dc, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x218430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18a590, 8) , (unique, 0x3800, 8) , (const, 0x400, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ed, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x1ed, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1ed, 4)]
[ ---  CBRANCH (ram, 0x2182be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121110, 8) , (unique, 0x3800, 8) , (const, 0xa, 4)]
[(unique, 0x10000228, 8) MULTIEQUAL (unique, 0x10000255, 8) , (unique, 0x1000025d, 8)]
[ ---  CBRANCH (ram, 0x2182ad, 1) , (unique, 0x1000021f, 1), (unique, 0x1000021f, 1) INT_NOTEQUAL (register, 0x10, 8) , (unique, 0x10000220, 8), (unique, 0x10000220, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2182a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000220, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[(unique, 0x1000024d, 8) COPY (unique, 0x10000220, 8)]
[ ---  CBRANCH (ram, 0x2182a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x9, 1)]
[(unique, 0x10000255, 8) COPY (register, 0x10, 8)]
[(register, 0x0, 8) PTRADD (unique, 0x10000220, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000024d, 8) , (unique, 0x10000228, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x63, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x63, 4), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x63, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x218268, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121080, 8) , (register, 0x10, 8) , (unique, 0x1000019f, 8), (unique, 0x1000019f, 8) COPY (const, 0x2b57c9, 8)]
[ ---  CBRANCH (ram, 0x218268, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x23, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8d, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (register, 0x0, 8) , (const, 0x8d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x8d, 4)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3c79, 8)]
[ ---  CBRANCH (ram, 0x21830b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x19f1b0, 8) , (unique, 0x3800, 8) , (unique, 0x100001a7, 8), (unique, 0x100001a7, 8) COPY (const, 0x2b57c9, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9c, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x9c, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000026d, 8), (unique, 0x1000026d, 8) CALL (ram, 0x2180b0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000235, 8) COPY (stack, 0xfffffffffffffbc0, 8), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x21832f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffbc0, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb1, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0xb1, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb1, 4)]
[(register, 0x28, 8) PTRADD (unique, 0x10000235, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121080, 8) , (stack, 0xfffffffffffffbc0, 8) , (unique, 0x100001af, 8), (unique, 0x100001af, 8) COPY (const, 0x2b57c9, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc2, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0xc2, 4), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (register, 0x28, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xc2, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3c79, 8)]
[ ---  CBRANCH (ram, 0x218355, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x19f1b0, 8) , (unique, 0x3800, 8) , (unique, 0x100001b7, 8), (unique, 0x100001b7, 8) COPY (const, 0x2b57c9, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd1, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0xd1, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xd1, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000275, 8), (unique, 0x10000275, 8) CALL (ram, 0x2180b0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000023d, 8) COPY (stack, 0xfffffffffffffbc0, 8), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x21837a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffbc0, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe7, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0xe7, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe7, 4)]
[(register, 0x28, 8) PTRADD (unique, 0x1000023d, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121080, 8) , (stack, 0xfffffffffffffbc0, 8) , (unique, 0x100001bf, 8), (unique, 0x100001bf, 8) COPY (const, 0x2b57c9, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf8, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0xf8, 4), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (register, 0x28, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xf8, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3c79, 8)]
[ ---  CBRANCH (ram, 0x2183a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x19f1b0, 8) , (unique, 0x3800, 8) , (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) COPY (const, 0x2b57c9, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x107, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x107, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x107, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) CALL (ram, 0x2180b0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000245, 8) COPY (stack, 0xfffffffffffffbc0, 8), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2183c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffbc0, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11d, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x11d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x11d, 4)]
[(register, 0x28, 8) PTRADD (unique, 0x10000245, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121080, 8) , (stack, 0xfffffffffffffbc0, 8) , (unique, 0x100001cf, 8), (unique, 0x100001cf, 8) COPY (const, 0x2b57c9, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x12e, 4), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (register, 0x28, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x12e, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3c79, 8)]
[ ---  CBRANCH (ram, 0x2183eb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x19f1b0, 8) , (unique, 0x3800, 8) , (unique, 0x100001d7, 8), (unique, 0x100001d7, 8) COPY (const, 0x2b57c9, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13d, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x13d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x13d, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000285, 8), (unique, 0x10000285, 8) CALL (ram, 0x2180b0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x218498, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffbc0, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x160, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x160, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x160, 4)]
[ ---  CBRANCH (ram, 0x218498, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x17b110, 8) , (stack, 0xfffffffffffffbc0, 8) , (unique, 0x100001df, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x100001df, 8) COPY (const, 0x2b5876, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x1000028d, 8) , (const, 0x24, 8), (unique, 0x1000028d, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000295, 8) , (const, 0x0, 4), (unique, 0x10000295, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2184a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x100002a5, 8), (unique, 0x100002a5, 8) INT_ADD (unique, 0x1000029d, 8) , (const, 0x24, 8), (unique, 0x1000029d, 8) CAST (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x218472, 1)]
[(stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x0, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2184ad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002ad, 8), (unique, 0x100002ad, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x19f, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x19f, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
