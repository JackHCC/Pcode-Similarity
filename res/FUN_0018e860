[ ---  CBRANCH (ram, 0x18e970, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000fa, 8), (unique, 0x100000fa, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18e89a, 1)]
[ ---  CBRANCH (ram, 0x18e980, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000102, 8), (unique, 0x10000102, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x60, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x18e912, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000010a, 8), (unique, 0x1000010a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18e920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18e920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x21, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(unique, 0x3200, 8) INT_ADD (unique, 0x10000112, 8) , (const, 0x83, 8), (unique, 0x10000112, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18e93c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18e960, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000074, 4) , (const, 0x0, 4), (unique, 0x10000074, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x18e93c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000011a, 8) , (unique, 0x3200, 8), (unique, 0x1000011a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000122, 8) , (unique, 0x3200, 8), (unique, 0x10000122, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x18e8df, 1)]
[(register, 0x28, 8) INT_ADD (register, 0x10, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffffd, 4)]
[ ---  CBRANCH (ram, 0x18e8d2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18e950, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000070, 4) , (const, 0x0, 4), (unique, 0x10000070, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x18e8d2, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000012a, 8) , (register, 0x30, 8), (unique, 0x1000012a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000132, 8) , (register, 0x28, 8), (unique, 0x10000132, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000013a, 8) , (const, 0x0, 8), (unique, 0x1000013a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000142, 8) , (const, 0x0, 8), (unique, 0x10000142, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000014a, 8) , (const, 0x0, 8), (unique, 0x1000014a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000152, 8) , (const, 0x0, 8), (unique, 0x10000152, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000015a, 8) , (const, 0x0, 8), (unique, 0x1000015a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000162, 8) , (const, 0x0, 8), (unique, 0x10000162, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x0, 8)]
