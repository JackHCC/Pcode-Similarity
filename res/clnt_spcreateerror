[(stack, 0xfffffffffffffbd0, 8) INDIRECT (stack, 0xfffffffffffffbd0, 8) , (const, 0x18, 4)]
[ ---  CBRANCH (ram, 0x234730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xc, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000138, 8), (unique, 0x10000138, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x237b30, 8)]
[(stack, 0xfffffffffffffbd0, 8) INDIRECT (stack, 0xfffffffffffffbd0, 8) , (const, 0x12e, 4)]
[(register, 0x0, 8) CALL (ram, 0x18ab70, 8) , (unique, 0xbc80, 4) , (unique, 0x3800, 8) , (const, 0x400, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbd8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e0, 8), (unique, 0x100001e0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x10000198, 8) , (const, 0x8, 8), (unique, 0x10000198, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x28f4e3, 8)]
[ ---  BRANCH (ram, 0x234659, 1)]
[ ---  CBRANCH (ram, 0x2346e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xe, 4)]
[(unique, 0x100001d8, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) COPY (const, 0x28c365, 8)]
[ ---  BRANCH (ram, 0x234659, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000148, 8), (unique, 0x10000148, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x234760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000e0, 8) , (unique, 0x10000150, 8) , (const, 0x4, 8), (unique, 0x10000150, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x100000e0, 8) PTRSUB (const, 0x0, 8) , (const, 0x28bb40, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x30, 8) PTRADD (unique, 0x10000108, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x10000108, 8) COPY (const, 0x28bbe0, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x100001e8, 4), (unique, 0x100001e8, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100000f8, 8) , (unique, 0x100001b8, 8) , (const, 0x4, 8), (unique, 0x100001b8, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x100000f8, 8) PTRSUB (const, 0x0, 8) , (const, 0x28bb44, 8)]
[ ---  BRANCH (ram, 0x23463f, 1)]
[ ---  CBRANCH (ram, 0x234620, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x12, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x30, 8) COPY (const, 0x28f488, 8)]
[(stack, 0xfffffffffffffbd0, 8) INDIRECT (stack, 0xfffffffffffffbd0, 8) , (const, 0x6b, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000160, 8), (unique, 0x10000160, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x28f4e3, 8)]
[(unique, 0x100001d0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001ec, 8), (unique, 0x100001ec, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000110, 8) , (register, 0x30, 8) , (const, 0x5, 8), (unique, 0x10000110, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(stack, 0xfffffffffffffbd0, 8) MULTIEQUAL (stack, 0xfffffffffffffbd0, 8) , (stack, 0xfffffffffffffbd0, 8) , (stack, 0xfffffffffffffbd0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100001d0, 8) , (unique, 0x100001d8, 8) , (register, 0x0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa8, 8) , (register, 0xa0, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x234700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000e8, 8) , (unique, 0x10000168, 8) , (const, 0x4, 8), (unique, 0x10000168, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x100000e8, 8) PTRSUB (const, 0x0, 8) , (const, 0x28bb40, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xfffffffffffffbd0, 8) INDIRECT (stack, 0xfffffffffffffbd0, 8) , (const, 0x10a, 4)]
[(register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000118, 8) , (register, 0x30, 8) , (const, 0x5, 8), (unique, 0x10000118, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8), (register, 0x30, 8) PTRADD (unique, 0x10000100, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x10000100, 8) COPY (const, 0x28bbe0, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x100001f4, 4), (unique, 0x100001f4, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100000f0, 8) , (unique, 0x10000180, 8) , (const, 0x4, 8), (unique, 0x10000180, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x100000f0, 8) PTRSUB (const, 0x0, 8) , (const, 0x28bb44, 8)]
[ ---  BRANCH (ram, 0x23468e, 1)]
[ ---  CBRANCH (ram, 0x234660, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x12, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(stack, 0xfffffffffffffbd0, 8) INDIRECT (stack, 0xfffffffffffffbd0, 8) , (const, 0xa5, 4)]
[(register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000120, 8) , (unique, 0x10000128, 8) , (const, 0x5, 8), (unique, 0x10000128, 8) COPY (const, 0x28f488, 8), (unique, 0x10000120, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[(stack, 0xfffffffffffffbd0, 8) INDIRECT (stack, 0xfffffffffffffbd0, 8) , (const, 0xb9, 4), (stack, 0xfffffffffffffbd0, 8) MULTIEQUAL (stack, 0xfffffffffffffbd0, 8) , (stack, 0xfffffffffffffbd0, 8)]
[ ---  CBRANCH (ram, 0x23477f, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x155980, 8) , (unique, 0x3800, 8) , (unique, 0x10000130, 8) , (register, 0x38, 8) , (register, 0x8, 8) , (register, 0xa0, 8) , (register, 0xa8, 8), (unique, 0x10000130, 8) COPY (const, 0x28f4e7, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbd0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2346d4, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (stack, 0xfffffffffffffbd0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000200, 8), (unique, 0x10000200, 8) INT_ADD (register, 0x0, 8) , (const, 0xb0, 8), (register, 0x0, 8) CALL (ram, 0x237a60, 8), (stack, 0xfffffffffffffbd0, 8) INDIRECT (stack, 0xfffffffffffffbd0, 8) , (const, 0xc6, 4)]
[(stack, 0xfffffffffffffbd0, 8) INDIRECT (stack, 0xfffffffffffffbd0, 8) , (const, 0xd2, 4), (stack, 0xfffffffffffffbd0, 8) INDIRECT (stack, 0xfffffffffffffbd0, 8) , (const, 0xc6, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) INT_ADD (register, 0x0, 8) , (const, 0xb0, 8), (register, 0x0, 8) CALL (ram, 0x237a60, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (stack, 0xfffffffffffffbd0, 8) , (register, 0x0, 8)]
