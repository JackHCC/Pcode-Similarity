[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x28, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x28, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001f6, 8), (unique, 0x100001f6, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x255dc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xc, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000014e, 8), (unique, 0x1000014e, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x259750, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14e, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x14e, 4)]
[(register, 0x0, 8) CALL (ram, 0x19dad0, 8) , (unique, 0xbc80, 4) , (unique, 0x3800, 8) , (const, 0x400, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001fe, 8), (unique, 0x100001fe, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100001be, 8) , (const, 0x8, 8), (unique, 0x100001be, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001d6, 8), (unique, 0x100001d6, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x2b726e, 8)]
[ ---  BRANCH (ram, 0x255ccf, 1)]
[ ---  CBRANCH (ram, 0x255d80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xe, 4)]
[(unique, 0x100001ee, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) COPY (const, 0x2b3c79, 8)]
[ ---  BRANCH (ram, 0x255ccf, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000015e, 8), (unique, 0x1000015e, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x255c9e, 1)]
[ ---  CBRANCH (ram, 0x255c90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000f6, 8) , (unique, 0x10000166, 8) , (const, 0x4, 8), (unique, 0x10000166, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x100000f6, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3480, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x255df0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x12, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x30, 8) COPY (const, 0x2b7213, 8)]
[ ---  BRANCH (ram, 0x255cb6, 1)]
[(register, 0x30, 8) PTRADD (unique, 0x10000116, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x10000116, 8) COPY (const, 0x2b3520, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x10000206, 4), (unique, 0x10000206, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000106, 8) , (unique, 0x10000176, 8) , (const, 0x4, 8), (unique, 0x10000176, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x10000106, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3484, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x76, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x76, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x76, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000186, 8), (unique, 0x10000186, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x2b726e, 8)]
[(unique, 0x100001e6, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000020a, 8), (unique, 0x1000020a, 8) CALL (ram, 0x130d70, 8) , (unique, 0x10000126, 8) , (register, 0x30, 8) , (const, 0x5, 8), (unique, 0x10000126, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100001e6, 8) , (unique, 0x100001ee, 8) , (register, 0x0, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0xa8, 8) , (register, 0x28, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x255ce6, 1)]
[ ---  CBRANCH (ram, 0x255cd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000fe, 8) , (unique, 0x1000018e, 8) , (const, 0x4, 8), (unique, 0x1000018e, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x100000fe, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3480, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x255da0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x12, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x128, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0x128, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x128, 4)]
[(register, 0x0, 8) CALL (ram, 0x130d70, 8) , (unique, 0x10000136, 8) , (unique, 0x1000013e, 8) , (const, 0x5, 8), (unique, 0x1000013e, 8) COPY (const, 0x2b7213, 8), (unique, 0x10000136, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[ ---  BRANCH (ram, 0x255d0a, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xab, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0xab, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xab, 4)]
[(register, 0x0, 8) CALL (ram, 0x130d70, 8) , (unique, 0x1000012e, 8) , (register, 0x30, 8) , (const, 0x5, 8), (unique, 0x1000012e, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8), (register, 0x30, 8) PTRADD (unique, 0x1000011e, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x1000011e, 8) COPY (const, 0x2b3520, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x10000212, 4), (unique, 0x10000212, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000010e, 8) , (unique, 0x1000019e, 8) , (const, 0x4, 8), (unique, 0x1000019e, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x1000010e, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3484, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbf, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0xbf, 4), (stack, 0xfffffffffffffbc0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (stack, 0xfffffffffffffbc0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x255e08, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1650c0, 8) , (unique, 0x3800, 8) , (unique, 0x10000146, 8) , (register, 0x38, 8) , (register, 0x0, 8) , (register, 0x28, 8) , (register, 0xa8, 8), (unique, 0x10000146, 8) COPY (const, 0x2b7272, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x255d53, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (stack, 0xfffffffffffffbc0, 8), (unique, 0x3200, 8) CAST (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) INT_ADD (register, 0x0, 8) , (const, 0xb0, 8), (register, 0x0, 8) CALL (ram, 0x259600, 8), (stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0xcc, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd8, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcc, 4)]
[(stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0xd8, 4), (stack, 0xfffffffffffffbc0, 8) INDIRECT (stack, 0xfffffffffffffbc0, 8) , (const, 0xcc, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xd8, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xcc, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000216, 8), (unique, 0x10000216, 8) INT_ADD (register, 0x0, 8) , (const, 0xb0, 8), (register, 0x0, 8) CALL (ram, 0x259600, 8)]
[(register, 0x0, 8) MULTIEQUAL (stack, 0xfffffffffffffbc0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x255e0f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000226, 8), (unique, 0x10000226, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x102, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
