[(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(unique, 0x100000cd, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1b93a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000029, 8) , (const, 0x0, 8), (unique, 0x10000029, 8) INT_AND (unique, 0x100000f5, 8) , (const, 0x7, 8), (unique, 0x100000f5, 8) CAST (register, 0x38, 8)]
[(register, 0x8, 4) INT_SUB (const, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1b9455, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100000fd, 8), (unique, 0x100000fd, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100000cd, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000010d, 8), (unique, 0x1000010d, 8) INT_ADD (unique, 0x10000105, 8) , (const, 0x1, 8), (unique, 0x10000105, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b938a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100000cd, 8) , (unique, 0x100000d5, 8) , (register, 0x0, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100000cd, 8) , (unique, 0x100000d5, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9410, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100000cd, 8) , (unique, 0x100000d5, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0xffffffffffffffff, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x10, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9410, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0xffffffffffffffff, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x10, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9410, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0xffffffffffffffff, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x10, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9410, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x100000d5, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b93a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0xffffffffffffffff, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x10, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9455, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x0, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000011d, 8), (unique, 0x1000011d, 8) INT_ADD (unique, 0x10000115, 8) , (const, 0xfffffffffffffff9, 8), (unique, 0x10000115, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9455, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x9, 1) , (const, 0x0, 1), (register, 0x9, 1) SUBPIECE (unique, 0x100000ad, 8) , (const, 0x0, 4), (unique, 0x100000ad, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x8, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000012d, 8), (unique, 0x1000012d, 8) INT_ADD (unique, 0x10000125, 8) , (const, 0xfffffffffffffffa, 8), (unique, 0x10000125, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9455, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000000d, 8) , (const, 0x0, 8), (unique, 0x1000000d, 8) INT_AND (register, 0x8, 8) , (const, 0xff0000, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000013d, 8), (unique, 0x1000013d, 8) INT_ADD (unique, 0x10000135, 8) , (const, 0xfffffffffffffffb, 8), (unique, 0x10000135, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9455, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000015, 8) , (const, 0x0, 8), (unique, 0x10000015, 8) INT_AND (register, 0x8, 8) , (const, 0xff000000, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000014d, 8), (unique, 0x1000014d, 8) INT_ADD (unique, 0x10000145, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x10000145, 8) CAST (register, 0x0, 8)]
[(register, 0x8, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x1b9455, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x0, 1), (register, 0x8, 1) SUBPIECE (unique, 0x100000b5, 8) , (const, 0x0, 4), (unique, 0x100000b5, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x20, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000015d, 8), (unique, 0x1000015d, 8) INT_ADD (unique, 0x10000155, 8) , (const, 0xfffffffffffffffd, 8), (unique, 0x10000155, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9455, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x9, 1) , (const, 0x0, 1), (register, 0x9, 1) SUBPIECE (unique, 0x100000bd, 8) , (const, 0x0, 4), (unique, 0x100000bd, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x28, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000016d, 8), (unique, 0x1000016d, 8) INT_ADD (unique, 0x10000165, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x10000165, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b9455, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000001d, 8) , (const, 0x0, 8), (unique, 0x1000001d, 8) INT_AND (register, 0x8, 8) , (const, 0xff0000, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) INT_ADD (unique, 0x10000175, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x10000175, 8) CAST (register, 0x0, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b9480, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000031, 8) , (const, 0x0, 8), (unique, 0x10000031, 8) INT_AND (unique, 0x10000185, 8) , (const, 0x7, 8), (unique, 0x10000185, 8) CAST (register, 0x30, 8)]
[(register, 0x8, 4) INT_SUB (const, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000195, 8) , (unique, 0xba80, 1), (unique, 0x10000195, 8) CAST (register, 0x10, 8), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000018d, 8), (unique, 0x1000018d, 8) CAST (register, 0x30, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b9528, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (const, 0x0, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000018d, 8), (unique, 0x1000018d, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[(register, 0x30, 8) CAST (unique, 0x100001a5, 8), (unique, 0x100001a5, 8) INT_ADD (unique, 0x1000019d, 8) , (const, 0x1, 8), (unique, 0x1000019d, 8) CAST (register, 0x30, 8)]
[(register, 0x10, 8) CAST (unique, 0x100001b5, 8), (unique, 0x100001b5, 8) INT_ADD (unique, 0x100001ad, 8) , (const, 0x1, 8), (unique, 0x100001ad, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b9465, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x100000e5, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b9510, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b9510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x88, 8) INT_XOR (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b9510, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b9510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x88, 8) INT_XOR (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b9510, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b9510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x88, 8) INT_XOR (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b9510, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b9510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x88, 8) INT_XOR (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001bd, 8) , (register, 0x0, 1), (unique, 0x100001bd, 8) CAST (register, 0x10, 8), (register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100000e5, 8) , (unique, 0x100000e5, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b9528, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x1, 1), (register, 0x1, 1) SUBPIECE (unique, 0x100000c5, 8) , (const, 0x0, 4), (unique, 0x100000c5, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4), (register, 0x10, 8) CAST (unique, 0x100001cd, 8), (unique, 0x100001cd, 8) INT_ADD (unique, 0x100001c5, 8) , (const, 0x1, 8), (unique, 0x100001c5, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b9528, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x1, 1) , (const, 0x0, 1), (register, 0x1, 1) SUBPIECE (unique, 0x100000c5, 8) , (const, 0x0, 4), (unique, 0x100000c5, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4)]
[(register, 0x10, 8) CAST (unique, 0x100001dd, 8), (unique, 0x100001dd, 8) INT_ADD (unique, 0x100001d5, 8) , (const, 0x2, 8), (unique, 0x100001d5, 8) CAST (register, 0x10, 8)]
[(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x10, 4)]
[ ---  BRANCH (ram, 0x1b9510, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1b9480, 1)]
