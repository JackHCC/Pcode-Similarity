[(unique, 0x10000155, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1583d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1583cd, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (register, 0x30, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x3, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0x10000145, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1583d4, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000145, 8) , (unique, 0x1000014d, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x158355, 1)]
[ ---  CBRANCH (ram, 0x158348, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001ad, 8), (unique, 0x100001ad, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_SUB (register, 0x88, 8) , (const, 0x1, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x158399, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x158348, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001b5, 8), (unique, 0x100001b5, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_SUB (register, 0x88, 8) , (const, 0x2, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x100001bd, 8), (unique, 0x100001bd, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x158391, 1)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x158380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1583d4, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x88, 8) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(register, 0x8, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1583e6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x38, 8) INT_SUB (register, 0x28, 8) , (register, 0x88, 8)]
[(unique, 0x10000185, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x88, 8) , (const, 0x1, 8)]
[(unique, 0x1000018d, 8) COPY (register, 0x8, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000185, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x158409, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x1000018d, 8) , (register, 0xb0, 8)]
[(register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0xa8, 8) INT_SEXT (unique, 0xbb00, 1)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x100001a5, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x158490, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 1) , (const, 0x7f, 1), (register, 0xa8, 1) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x158490, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0xa8, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1583d4, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x100001a5, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x1584d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1584f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001c5, 8), (unique, 0x100001c5, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_SUB (register, 0x90, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x100001cd, 8), (unique, 0x100001cd, 8) INT_ADD (register, 0x90, 8) , (unique, 0x3100, 8)]
[(unique, 0x1000019d, 8) COPY (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x1584d1, 1)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1584c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (unique, 0x10000115, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x10000115, 8) MULTIEQUAL (unique, 0x1000019d, 8) , (register, 0x8, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1584f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1584a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (unique, 0x3100, 8), (register, 0x90, 8) INT_SUB (register, 0x90, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1583d4, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x90, 8) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1583d4, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x1000016d, 8) , (unique, 0x100001a5, 8)]
[ ---  CBRANCH (ram, 0x158459, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x158470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001d5, 8), (unique, 0x100001d5, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_SUB (register, 0x88, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x100001dd, 8), (unique, 0x100001dd, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000195, 8) COPY (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x158451, 1)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x158440, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (unique, 0x1000010d, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x1000010d, 8) MULTIEQUAL (unique, 0x10000195, 8) , (register, 0x8, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x158470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(unique, 0x1000016d, 8) COPY (register, 0x88, 8), (register, 0x88, 8) INT_SUB (register, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x158420, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (unique, 0x3100, 8), (register, 0x88, 8) INT_SUB (register, 0x88, 8) , (const, 0x1, 8)]
[(register, 0xa0, 8) INT_SUB (register, 0xa0, 8) , (unique, 0x3100, 8)]
[(register, 0xa0, 8) INT_SUB (register, 0xa0, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x15847c, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x88, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1583d4, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (register, 0xa0, 8) , (register, 0xa8, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x158485, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SEXT (register, 0xa8, 1)]
[(unique, 0x3100, 8) INT_SUB (register, 0x88, 8) , (const, 0x1, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x90, 8)]
[ ---  BRANCH (ram, 0x1583f8, 1)]
[(unique, 0x10000135, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1583c4, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESSEQUAL (unique, 0x100001e5, 8) , (register, 0x8, 8), (unique, 0x100001e5, 8) CAST (register, 0x38, 8)]
[(unique, 0x1000013d, 8) COPY (register, 0x88, 8)]
[(unique, 0x1000014d, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000135, 8) , (unique, 0x1000013d, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x158330, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x28, 8) , (register, 0x38, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000135, 8) , (unique, 0x1000013d, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x158348, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1583d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (unique, 0x3100, 8), (register, 0x88, 8) INT_SUB (register, 0x88, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(unique, 0x1000015d, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1583d4, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x28, 8) , (register, 0x38, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x28, 8)]
[(unique, 0x10000165, 8) COPY (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000155, 8) , (unique, 0x1000015d, 8) , (unique, 0x10000165, 8)]
