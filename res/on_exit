[ ---  CBRANCH (ram, 0x143169, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0628, 4) , (const, 0x0, 4)]
[(ram, 0x4f0628, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0628, 4) , (const, 0x0, 4)]
[(ram, 0x4f0628, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x143184, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x111, 4)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x111, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x111, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100000c7, 8), (unique, 0x100000c7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f0628, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x3c, 4), (ram, 0x4f0628, 4) MULTIEQUAL (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3c, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x1431e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000104, 8), (unique, 0x10000104, 8) CALL (ram, 0x143220, 8) , (unique, 0x100000af, 8), (unique, 0x100000af, 8) PTRSUB (const, 0x0, 8) , (const, 0x4eb718, 8)]
[ ---  CBRANCH (ram, 0x1431f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100000fc, 4) COPY (unique, 0x100000df, 4), (unique, 0x100000df, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x14320f, 1) , (unique, 0x100000e3, 1), (unique, 0x100000e3, 1) INT_NOTEQUAL (unique, 0x100000df, 4) , (const, 0x0, 4), (unique, 0x100000df, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xec, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100000bf, 8), (unique, 0x100000bf, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f0628, 8)]
[(unique, 0x100000f8, 4) COPY (ram, 0x4f0628, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0xec, 4), (ram, 0x4f0628, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0628, 4) COPY (unique, 0x10000100, 4), (unique, 0x10000100, 4) MULTIEQUAL (unique, 0x100000f8, 4) , (unique, 0x100000fc, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x1431e0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2, 8)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x6d, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x4c, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x4a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x38, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x38, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x38, 8) , (const, 0x11, 4), (register, 0x38, 8) INT_XOR (unique, 0x10000114, 8) , (unique, 0xbd80, 8), (unique, 0x10000114, 8) CAST (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000010c, 8), (unique, 0x1000010c, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1431c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x6d, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4c, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4a, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100000f0, 4) COPY (unique, 0x100000e4, 4), (unique, 0x100000e4, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1431de, 1) , (unique, 0x100000e8, 1), (unique, 0x100000e8, 1) INT_NOTEQUAL (unique, 0x100000e4, 4) , (const, 0x0, 4), (unique, 0x100000e4, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xa9, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100000b7, 8), (unique, 0x100000b7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f0628, 8)]
[(unique, 0x100000ec, 4) COPY (ram, 0x4f0628, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0xa9, 4), (ram, 0x4f0628, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0628, 4) COPY (unique, 0x100000f4, 4), (unique, 0x100000f4, 4) MULTIEQUAL (unique, 0x100000ec, 4) , (unique, 0x100000f0, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4f0628, 4) COPY (ram, 0x4f0628, 4), (ram, 0x4f0628, 4) MULTIEQUAL (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
