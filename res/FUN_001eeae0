[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000b5b, 8), (unique, 0x10000b5b, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1ef90b, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x10, 4) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000b63, 8), (unique, 0x10000b63, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x112c, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100006a3, 8) , (unique, 0x1000069b, 8) , (const, 0x114, 4) , (unique, 0x100006ab, 8), (unique, 0x100006ab, 8) COPY (const, 0x2bb520, 8), (unique, 0x100006a3, 8) COPY (const, 0x2b9818, 8), (unique, 0x1000069b, 8) COPY (const, 0x2b5504, 8)]
[(ram, 0x2bc120, 8) COPY (ram, 0x2bc120, 8), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x112c, 4)]
[(ram, 0x2bc128, 8) COPY (ram, 0x2bc128, 8), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x112c, 4)]
[(ram, 0x2bc130, 4) COPY (ram, 0x2bc130, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x112c, 4)]
[(ram, 0x2bc134, 4) COPY (ram, 0x2bc134, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x112c, 4)]
[(ram, 0x2bc138, 4) COPY (ram, 0x2bc138, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x112c, 4)]
[(ram, 0x2bc13c, 4) COPY (ram, 0x2bc13c, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x112c, 4)]
[(ram, 0x2bc140, 8) COPY (ram, 0x2bc140, 8), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x112c, 4)]
[(ram, 0x2bc148, 8) COPY (ram, 0x2bc148, 8), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x112c, 4)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x112c, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000b8b, 8), (unique, 0x10000b8b, 8) INT_ADD (unique, 0x10000b83, 8) , (const, 0x34, 8), (unique, 0x10000b83, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1eeb15, 1) , (unique, 0x100005b0, 1), (unique, 0x100005b0, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000b7b, 8), (unique, 0x10000b7b, 8) INT_ADD (unique, 0x10000b73, 8) , (const, 0x34, 8), (unique, 0x10000b73, 8) CAST (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000b6b, 8), (unique, 0x10000b6b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)]
[(unique, 0x100000f6, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000bab, 8), (unique, 0x10000bab, 8) INT_ADD (unique, 0x10000ba3, 8) , (const, 0x2c, 8), (unique, 0x10000ba3, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1eeb2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000b9b, 8), (unique, 0x10000b9b, 8) INT_ADD (unique, 0x10000b93, 8) , (const, 0x62, 8), (unique, 0x10000b93, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1eecb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1eeb2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000bbb, 8), (unique, 0x10000bbb, 8) INT_ADD (unique, 0x10000bb3, 8) , (const, 0x64, 8), (unique, 0x10000bb3, 8) CAST (register, 0x38, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000bc3, 8), (unique, 0x10000bc3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(unique, 0x10000abf, 4) COPY (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1eee70, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x100000f6, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff9c, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[ ---  BRANCH (ram, 0x1eed75, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1)]
[(stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1)]
[(stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1)]
[(stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1)]
[(stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1)]
[(stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1)]
[(stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1)]
[(stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1)]
[(stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1)]
[(stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1)]
[(stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1)]
[(stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000bcb, 8), (unique, 0x10000bcb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0xa0, 8) INT_SEXT (register, 0xb0, 4), (register, 0xb0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0xb0, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000bd3, 8), (unique, 0x10000bd3, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0xb0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000bcb, 8), (unique, 0x10000bcb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0xb0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x1eed97, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000528, 1) , (const, 0x0, 1), (unique, 0x10000528, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000bd3, 8), (unique, 0x10000bd3, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0xb0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000bcb, 8), (unique, 0x10000bcb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0xb0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x1eee10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000bdb, 8), (unique, 0x10000bdb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xfb6, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xfb6, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xfb6, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xfb6, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xfb6, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xfb6, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xfb6, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xfb6, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xfb6, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xfb6, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000be3, 8), (unique, 0x10000be3, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0xfb6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfb6, 4)]
[(unique, 0x10000a4b, 4) COPY (stack, 0xffffffffffffff9c, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xfb6, 4)]
[ ---  CBRANCH (ram, 0x1eee50, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x3, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) CALL (ram, 0x1bda00, 8) , (unique, 0x10000bfb, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x10000bfb, 8) CAST (unique, 0x3800, 8), (register, 0x10, 8) INT_SEXT (register, 0x38, 4), (register, 0x30, 8) CAST (unique, 0x10000bf3, 8), (unique, 0x10000bf3, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000beb, 8), (unique, 0x10000beb, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x38, 4) INT_SUB (unique, 0x100000f6, 4) , (register, 0xb0, 4), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1eee80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8)]
[ ---  CBRANCH (ram, 0x1eee80, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000c13, 8), (unique, 0x10000c13, 8) INT_ADD (unique, 0x10000c0b, 8) , (const, 0x34, 8), (unique, 0x10000c0b, 8) CAST (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000c03, 8), (unique, 0x10000c03, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x10bb, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x10bb, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x10bb, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x10bb, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x10bb, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x10bb, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x10bb, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x10bb, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x10bb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000c1b, 8), (unique, 0x10000c1b, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0x3400, 8) CAST (unique, 0x10000c33, 8), (unique, 0x10000c33, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c2b, 8), (unique, 0x10000c2b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0xb0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000c23, 8), (unique, 0x10000c23, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x10f2, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x10eb, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x10f2, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x10eb, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x10f2, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x10eb, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x10f2, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x10eb, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x10f2, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x10eb, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x10f2, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x10eb, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x10f2, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x10eb, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x10f2, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x10eb, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x10f2, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x10eb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0x3400, 8) CAST (unique, 0x10000c3b, 8), (unique, 0x10000c3b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c2b, 8), (unique, 0x10000c2b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0xb0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000c23, 8), (unique, 0x10000c23, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0x10000adf, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1eed6c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x10fa, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x10fa, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x10fa, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x10fa, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x10fa, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x10fa, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x10fa, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x10fa, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x10fa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000c43, 8), (unique, 0x10000c43, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1eed6c, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xfcd, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xfcd, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xfcd, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xfcd, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xfcd, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xfcd, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xfcd, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xfcd, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xfcd, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0xfcd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfcd, 4)]
[ ---  CBRANCH (ram, 0x1eecf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x225190, 8) , (stack, 0xffffffffffffff9c, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1076, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1069, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x1076, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x1069, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x1076, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x1069, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x1076, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x1069, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x1076, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x1069, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x1076, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x1069, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x1076, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x1069, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x1076, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x1069, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x1076, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x1069, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1076, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x1076, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1076, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1076, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1069, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1076, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1069, 4)]
[(unique, 0x10000aff, 4) COPY (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x1ef088, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1bdc20, 8) , (unique, 0x3800, 8) , (register, 0x0, 4) , (unique, 0x3800, 8), (register, 0x0, 4) CALL (ram, 0x225630, 8) , (unique, 0x10000a4b, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1)]
[(stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1)]
[(stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1)]
[(stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1)]
[(stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1)]
[(stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1)]
[(stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1)]
[(stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1)]
[(stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1)]
[(stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1)]
[(stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1)]
[(stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(unique, 0x10000688, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x38, 4)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(register, 0xa0, 4) MULTIEQUAL (unique, 0x10000afb, 4) , (unique, 0x10000aff, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (unique, 0x100000f6, 4)]
[(stack, 0xffffffffffffff70, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff9c, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000c4b, 8), (unique, 0x10000c4b, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1eeebc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000c53, 8), (unique, 0x10000c53, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0xa0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000c5b, 8), (unique, 0x10000c5b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0x10000af3, 4) COPY (unique, 0x10000688, 4)]
[ ---  CBRANCH (ram, 0x1eeedb, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESSEQUAL (unique, 0xbc80, 4) , (unique, 0x10000688, 4)]
[(unique, 0x10000af7, 4) COPY (unique, 0xbc80, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c6b, 8), (unique, 0x10000c6b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c63, 8), (unique, 0x10000c63, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0x1, 4), (unique, 0x10000206, 4) MULTIEQUAL (unique, 0x10000af3, 4) , (unique, 0x10000af7, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c7b, 8), (unique, 0x10000c7b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c73, 8), (unique, 0x10000c73, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0x2, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c8b, 8), (unique, 0x10000c8b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c83, 8), (unique, 0x10000c83, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0x3, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c9b, 8), (unique, 0x10000c9b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c93, 8), (unique, 0x10000c93, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0x4, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000cab, 8), (unique, 0x10000cab, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000ca3, 8), (unique, 0x10000ca3, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0x5, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000cbb, 8), (unique, 0x10000cbb, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000cb3, 8), (unique, 0x10000cb3, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0x6, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000ccb, 8), (unique, 0x10000ccb, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000cc3, 8), (unique, 0x10000cc3, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0x7, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000cdb, 8), (unique, 0x10000cdb, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000cd3, 8), (unique, 0x10000cd3, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x7, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0x8, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000ceb, 8), (unique, 0x10000ceb, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000ce3, 8), (unique, 0x10000ce3, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0x9, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000cfb, 8), (unique, 0x10000cfb, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000cf3, 8), (unique, 0x10000cf3, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x9, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0xa, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d0b, 8), (unique, 0x10000d0b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d03, 8), (unique, 0x10000d03, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0xb, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d1b, 8), (unique, 0x10000d1b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d13, 8), (unique, 0x10000d13, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xb, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0xc, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d2b, 8), (unique, 0x10000d2b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d23, 8), (unique, 0x10000d23, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0xd, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d3b, 8), (unique, 0x10000d3b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d33, 8), (unique, 0x10000d33, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xd, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0xe, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d4b, 8), (unique, 0x10000d4b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d43, 8), (unique, 0x10000d43, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xe, 4)]
[ ---  CBRANCH (ram, 0x1ef07a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0xf, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d5b, 8), (unique, 0x10000d5b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d53, 8), (unique, 0x10000d53, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xf, 4)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[ ---  BRANCH (ram, 0x1eeba6, 1)]
[(register, 0x28, 8) CAST (unique, 0x10000d6b, 8), (unique, 0x10000d6b, 8) INT_ADD (register, 0x28, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0xa0, 4), (register, 0x28, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000d63, 8), (unique, 0x10000d63, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x119, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x119, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x119, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x119, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x119, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x119, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x119, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x119, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x119, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x119, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x119, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x119, 4)]
[(unique, 0x10000a47, 4) COPY (stack, 0xffffffffffffff9c, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x119, 4)]
[ ---  CBRANCH (ram, 0x1ef0c3, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x3, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) CALL (ram, 0x1bda00, 8) , (unique, 0x10000d73, 8) , (register, 0x28, 8) , (stack, 0xffffffffffffff60, 8) , (unique, 0x3100, 8), (unique, 0x10000d73, 8) CAST (stack, 0xffffffffffffff70, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x3800, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x133, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x133, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x133, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x133, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x133, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x133, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x133, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x133, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x133, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x133, 4)]
[(register, 0x88, 8) INT_SEXT (register, 0xb0, 4)]
[(register, 0x80, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ef090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x225190, 8) , (stack, 0xffffffffffffff9c, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcaf, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xcaf, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xcaf, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xcaf, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xcaf, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xcaf, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xcaf, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xcaf, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xcaf, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0xcaf, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcaf, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (register, 0x28, 8) , (register, 0x0, 8), (register, 0x38, 8) CAST (unique, 0x10000d7b, 8), (unique, 0x10000d7b, 8) INT_ADD (register, 0x88, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1eec5f, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14c, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x15b, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x14c, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x15b, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x14c, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x15b, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x14c, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x15b, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x14c, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x15b, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x14c, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x15b, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x14c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x15b, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x14c, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x15b, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x14c, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x15b, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x15b, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x15b, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x14c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x14c, 4)]
[ ---  CBRANCH (ram, 0x1ef2c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1bdc20, 8) , (unique, 0x3800, 8) , (register, 0x0, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (register, 0x0, 4) CALL (ram, 0x225630, 8) , (unique, 0x10000a47, 4)]
[ ---  CBRANCH (ram, 0x1ef8e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1ef2b3, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x10000d93, 8) , (unique, 0x3400, 8), (unique, 0x10000d93, 8) CAST (register, 0x0, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0x88, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d8b, 8), (unique, 0x10000d8b, 8) INT_ADD (unique, 0x10000d83, 8) , (const, 0x34, 8), (unique, 0x10000d83, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1ef939, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0xc53, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc53, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xc5f, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xc53, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xc5f, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xc53, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xc5f, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xc53, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xc5f, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xc53, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xc5f, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xc53, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xc5f, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xc53, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xc5f, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xc53, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xc5f, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xc53, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xc5f, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xc53, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000d9b, 8), (unique, 0x10000d9b, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ef2e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) COPY (const, 0xc, 8)]
[ ---  BRANCH (ram, 0x1eeb3d, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1)]
[(stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1)]
[(stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1)]
[(stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1)]
[(stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1)]
[(stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1)]
[(stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1)]
[(stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1)]
[(stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1)]
[(stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1)]
[(stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1)]
[(stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1ef411, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000dab, 8), (unique, 0x10000dab, 8) INT_ADD (unique, 0x10000da3, 8) , (const, 0x64, 8), (unique, 0x10000da3, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1ef40c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ef31e, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x5, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x3, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) INT_2COMP (unique, 0x100002dc, 4), (unique, 0x100002dc, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_RIGHT (unique, 0x10000dbb, 8) , (const, 0x2, 4), (unique, 0x10000dbb, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000db3, 8), (unique, 0x10000db3, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) COPY (const, 0x5, 8)]
[ ---  CBRANCH (ram, 0x1efa25, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ef3cd, 1)]
[ ---  CBRANCH (ram, 0x1efa1e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ef35d, 1)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x48d, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x48d, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x48d, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x48d, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x48d, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x48d, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x48d, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x48d, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x48d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1efa14, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1ef35d, 1)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x49a, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x49a, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x49a, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x49a, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x49a, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x49a, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x49a, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x49a, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x49a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1efa0a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x3, 8)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1ef35d, 1)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x49f, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x49f, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x49f, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x49f, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x49f, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x49f, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x49f, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x49f, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x49f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) COPY (const, 0x3, 8)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(unique, 0x10000a37, 4) COPY (ram, 0x2bc138, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(unique, 0x10000a2b, 4) COPY (ram, 0x2bc130, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(unique, 0x10000a17, 8) COPY (ram, 0x2bc128, 8), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(unique, 0x100009ff, 8) COPY (ram, 0x2bc120, 8), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(register, 0x18, 8) INT_RIGHT (register, 0x98, 8) , (const, 0x2, 4), (register, 0x98, 8) INT_SUB (register, 0x88, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000a8f, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x10000b23, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000b33, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x1000060d, 4), (unique, 0x1000060d, 4) SUBPIECE (register, 0x1200, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000a8f, 8) , (unique, 0x10000a97, 8), (register, 0x1200, 8) MULTIEQUAL (unique, 0x10000b23, 8) , (unique, 0x10000b2b, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000588, 8) , (unique, 0x10000615, 4), (unique, 0x10000588, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000615, 4) SUBPIECE (register, 0x1208, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000a8f, 8) , (unique, 0x10000a97, 8), (register, 0x1208, 8) MULTIEQUAL (unique, 0x10000b33, 8) , (unique, 0x10000b3b, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000590, 8) , (unique, 0xab780, 4), (unique, 0x10000590, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xab780, 4) INT_ADD (unique, 0x1000060d, 4) , (unique, 0x10000a2b, 4), (unique, 0x1000060d, 4) SUBPIECE (register, 0x1200, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000a8f, 8) , (unique, 0x10000a97, 8), (register, 0x1200, 8) MULTIEQUAL (unique, 0x10000b23, 8) , (unique, 0x10000b2b, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x232f, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x232d, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x232b, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x232a, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x232f, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x232d, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x232b, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x232a, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x232f, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x232d, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x232b, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x232a, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x232f, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x232d, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x232b, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x232a, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x232f, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x232d, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x232b, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x232a, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x232f, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x232d, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x232b, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x232a, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x232f, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x232d, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x232b, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x232a, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x232f, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x232d, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x232b, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x232a, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x232f, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x232d, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x232b, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x232a, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000598, 8) , (unique, 0xab900, 4), (unique, 0x10000598, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0xab900, 4) INT_ADD (unique, 0x10000615, 4) , (unique, 0x10000a37, 4), (unique, 0x10000615, 4) SUBPIECE (register, 0x1208, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000a8f, 8) , (unique, 0x10000a97, 8), (register, 0x1208, 8) MULTIEQUAL (unique, 0x10000b33, 8) , (unique, 0x10000b3b, 8)]
[(unique, 0x10000a97, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000a8f, 8) , (unique, 0x10000a97, 8)]
[(unique, 0x10000b2b, 8) COPY (register, 0x1200, 8), (register, 0x1200, 8) INT_ADD (register, 0x1200, 8) , (unique, 0x100009ff, 8), (register, 0x1200, 8) MULTIEQUAL (unique, 0x10000b23, 8) , (unique, 0x10000b2b, 8)]
[(unique, 0x10000b3b, 8) COPY (register, 0x1208, 8), (register, 0x1208, 8) INT_ADD (register, 0x1208, 8) , (unique, 0x10000a17, 8), (register, 0x1208, 8) MULTIEQUAL (unique, 0x10000b33, 8) , (unique, 0x10000b3b, 8)]
[ ---  CBRANCH (ram, 0x1ef399, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (register, 0x18, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (register, 0x98, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x1ef40c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (register, 0x98, 8) , (const, 0xfffffffffffffffc, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x543, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x543, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x543, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x543, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x543, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x543, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x543, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x543, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x543, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ef40c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x552, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x552, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x552, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x552, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x552, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x552, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x552, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x552, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x552, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 4), (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ef40c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x563, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x563, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x563, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x563, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x563, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x563, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x563, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x563, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x563, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 4), (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ef40c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x574, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x574, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x574, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x574, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x574, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x574, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x574, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x574, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x574, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 4), (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ef40c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x58e, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x58e, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x58e, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x58e, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x58e, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x58e, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x58e, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x58e, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x58e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 4), (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ef40c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (register, 0x88, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x5, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x59d, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x59d, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x59d, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x59d, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x59d, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x59d, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x59d, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x59d, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x59d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x4, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x5a0, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x5a0, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x5a0, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x5a0, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x5a0, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x5a0, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x5a0, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x5a0, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x5a0, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 1), (unique, 0x3100, 8) CAST (unique, 0x10000dcb, 8), (unique, 0x10000dcb, 8) INT_ADD (unique, 0x10000dc3, 8) , (const, 0x64, 8), (unique, 0x10000dc3, 8) CAST (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x5bc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5bc, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (register, 0x0, 8), (register, 0x38, 8) CAST (unique, 0x10000dd3, 8), (unique, 0x10000dd3, 8) INT_ADD (register, 0x88, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x10000ddb, 8), (unique, 0x10000ddb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x5e9, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x5de, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x5bc, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x5e9, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x5de, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x5bc, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x5e9, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x5de, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x5bc, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x5e9, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x5de, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x5bc, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x5e9, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x5de, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x5bc, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x5e9, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x5de, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x5bc, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x5e9, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x5de, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x5bc, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x5e9, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x5de, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x5bc, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x5e9, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x5de, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x5bc, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xa0, 4), (unique, 0x3400, 8) CAST (unique, 0x10000de3, 8), (unique, 0x10000de3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1ef68d, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ef6ba, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) INT_ADD (unique, 0x3680, 8) , (const, 0x4, 8)]
[(unique, 0x10000aaf, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ef6c8, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000ab7, 8) COPY (register, 0x0, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x10000aaf, 8) , (unique, 0x10000ab7, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ef985, 1) , (unique, 0x10000447, 1), (unique, 0x10000447, 1) BOOL_AND (unique, 0xc780, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x10000df3, 8) , (unique, 0x10000dfb, 8), (unique, 0x10000dfb, 8) CAST (register, 0x38, 8), (unique, 0x10000df3, 8) CAST (register, 0x0, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xc780, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x10000deb, 8), (unique, 0x10000deb, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (unique, 0x3680, 8) , (const, 0x14, 8)]
[ ---  CBRANCH (ram, 0x1ef985, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x9, 8), (unique, 0x3100, 8) INT_SUB (register, 0x90, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x38, 4), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x38, 4) INT_ADD (register, 0xa0, 4) , (unique, 0x10000504, 4), (unique, 0x10000504, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xc12, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xc0b, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xc12, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xc0b, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xc12, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xc0b, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xc12, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xc0b, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xc12, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xc0b, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xc12, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xc0b, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xc12, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xc0b, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xc12, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xc0b, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xc12, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xc0b, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ef98a, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0x90, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_2COMP (unique, 0x10000456, 4), (unique, 0x10000456, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1ef9ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_2COMP (unique, 0x10000456, 4), (unique, 0x10000456, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x2, 4)]
[(register, 0x38, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1ef765, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x38, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e03, 8), (unique, 0x10000e03, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x4, 8), (register, 0x38, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xa00, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x9fc, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xa00, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x9fc, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xa00, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x9fc, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xa00, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x9fc, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xa00, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x9fc, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xa00, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x9fc, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xa00, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x9fc, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xa00, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x9fc, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xa00, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x9fc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e0b, 8), (unique, 0x10000e0b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ef9e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1ef765, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x98, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e13, 8), (unique, 0x10000e13, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x4, 8), (register, 0x98, 4) INT_ADD (register, 0xa0, 4) , (const, 0x2, 4), (unique, 0x3100, 8) INT_ADD (register, 0x88, 8) , (const, 0x2, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xa17, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xa13, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xa17, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xa13, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xa17, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xa13, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xa17, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xa13, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xa17, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xa13, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xa17, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xa13, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xa17, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xa13, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xa17, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xa13, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xa17, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xa13, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e1b, 8), (unique, 0x10000e1b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0x3100, 8) INT_ADD (register, 0x88, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1ef92f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x2, 8)]
[(register, 0x38, 8) COPY (const, 0x3, 8)]
[ ---  BRANCH (ram, 0x1ef765, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x98, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e23, 8), (unique, 0x10000e23, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x4, 8), (register, 0x98, 4) INT_ADD (register, 0xa0, 4) , (const, 0x3, 4), (unique, 0x3100, 8) INT_ADD (register, 0x88, 8) , (const, 0x3, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xa25, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xa21, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xa25, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xa21, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xa25, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xa21, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xa25, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xa21, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xa25, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xa21, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xa25, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xa21, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xa25, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xa21, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xa25, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xa21, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xa25, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xa21, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e2b, 8), (unique, 0x10000e2b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0x3100, 8) INT_ADD (register, 0x88, 8) , (const, 0x3, 8)]
[(register, 0x38, 8) COPY (const, 0x4, 8)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(unique, 0x10000a3f, 8) COPY (ram, 0x2bc148, 8), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(unique, 0x10000a3b, 4) COPY (ram, 0x2bc138, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(unique, 0x10000a2f, 4) COPY (ram, 0x2bc130, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(unique, 0x10000a1f, 8) COPY (ram, 0x2bc128, 8), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(unique, 0x10000a07, 8) COPY (ram, 0x2bc120, 8), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(register, 0x1280, 16) INT_ADD (unique, 0x100009e7, 16) , (register, 0x1280, 12), (unique, 0x100009e7, 16) INT_LEFT (unique, 0x100009d7, 16) , (const, 0x60, 16), (unique, 0x100009d7, 16) INT_SEXT (const, 0xffffffff, 4), (register, 0x1280, 12) INT_ADD (unique, 0x100009cb, 12) , (const, 0xffffffffffffffff, 8), (unique, 0x100009cb, 12) INT_LEFT (unique, 0x100009bf, 12) , (const, 0x40, 12), (unique, 0x100009bf, 12) INT_SEXT (const, 0xffffffff, 4)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(register, 0x28, 8) INT_RIGHT (register, 0x98, 8) , (const, 0x2, 4), (register, 0x98, 8) INT_ADD (register, 0x98, 8) , (register, 0x90, 8), (register, 0x98, 8) INT_NEGATE (register, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3100, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3100, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000b43, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000b4b, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (register, 0x1220, 4), (unique, 0x3b80, 8) CAST (unique, 0x10000e33, 8), (unique, 0x10000e33, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x1220, 4) INT_ADD (unique, 0x10000548, 4) , (register, 0xa0, 4), (unique, 0x10000548, 4) SUBPIECE (register, 0x1200, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x1200, 8) MULTIEQUAL (unique, 0x10000b43, 8) , (register, 0x1200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000570, 8) , (register, 0x1224, 4), (unique, 0x10000570, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10000e33, 8), (unique, 0x10000e33, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x1224, 4) INT_ADD (unique, 0x10000550, 4) , (register, 0xa0, 4), (unique, 0x10000550, 4) SUBPIECE (register, 0x1208, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x1208, 8) MULTIEQUAL (unique, 0x10000b4b, 8) , (unique, 0x10000b53, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000578, 8) , (register, 0x1228, 4), (unique, 0x10000578, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10000e33, 8), (unique, 0x10000e33, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x1228, 4) INT_ADD (unique, 0xab780, 4) , (register, 0xa0, 4), (unique, 0xab780, 4) INT_ADD (unique, 0x10000548, 4) , (unique, 0x10000a2f, 4), (unique, 0x10000548, 4) SUBPIECE (register, 0x1200, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x1200, 8) MULTIEQUAL (unique, 0x10000b43, 8) , (register, 0x1200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000580, 8) , (register, 0x122c, 4), (unique, 0x10000580, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10000e33, 8), (unique, 0x10000e33, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x122c, 4) INT_ADD (unique, 0xab900, 4) , (register, 0xa0, 4), (unique, 0xab900, 4) INT_ADD (unique, 0x10000550, 4) , (unique, 0x10000a3b, 4), (unique, 0x10000550, 4) SUBPIECE (register, 0x1208, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x1208, 8) MULTIEQUAL (unique, 0x10000b4b, 8) , (unique, 0x10000b53, 8)]
[(register, 0x1200, 8) INT_ADD (register, 0x1200, 8) , (unique, 0x10000a07, 8), (register, 0x1200, 8) MULTIEQUAL (unique, 0x10000b43, 8) , (register, 0x1200, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xaf7, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x230f, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x230d, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x230b, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x230a, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xaf7, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x230f, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x230d, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x230b, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x230a, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xaf7, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x230f, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x230d, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x230b, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x230a, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xaf7, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x230f, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x230d, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x230b, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x230a, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xaf7, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x230f, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x230d, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x230b, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x230a, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xaf7, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x230f, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x230d, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x230b, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x230a, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xaf7, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x230f, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x230d, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x230b, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x230a, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xaf7, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x230f, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x230d, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x230b, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x230a, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xaf7, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x230f, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x230d, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x230b, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x230a, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (register, 0x1280, 16), (unique, 0x3b80, 8) CAST (unique, 0x10000e3b, 8), (unique, 0x10000e3b, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x1228, 8) INT_ADD (register, 0x1208, 8) , (unique, 0x10000a3f, 8), (register, 0x1208, 8) MULTIEQUAL (unique, 0x10000b4b, 8) , (unique, 0x10000b53, 8)]
[(unique, 0x10000b53, 8) COPY (register, 0x1208, 8), (register, 0x1208, 8) INT_ADD (register, 0x1208, 8) , (unique, 0x10000a1f, 8), (register, 0x1208, 8) MULTIEQUAL (unique, 0x10000b4b, 8) , (unique, 0x10000b53, 8)]
[ ---  CBRANCH (ram, 0x1ef7d2, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x18, 8) , (register, 0x28, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x98, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x1ef8d2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x98, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x98, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e43, 8), (unique, 0x10000e43, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (register, 0x98, 4) INT_ADD (register, 0xa0, 4) , (unique, 0x100004ac, 4), (unique, 0x100004ac, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (register, 0x38, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xb40, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xb3c, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xb40, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xb3c, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xb40, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xb3c, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xb40, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xb3c, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xb40, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xb3c, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xb40, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xb3c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xb40, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xb3c, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xb40, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xb3c, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xb40, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xb3c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e4b, 8), (unique, 0x10000e4b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1ef8d2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e53, 8), (unique, 0x10000e53, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0xa0, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xb64, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xb5e, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xb64, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xb5e, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xb64, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xb5e, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xb64, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xb5e, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xb64, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xb5e, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xb64, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xb5e, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xb64, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xb5e, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xb64, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xb5e, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xb64, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xb5e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e5b, 8), (unique, 0x10000e5b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1ef8d2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e63, 8), (unique, 0x10000e63, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0xa0, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xb86, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xb80, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xb86, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xb80, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xb86, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xb80, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xb86, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xb80, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xb86, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xb80, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xb86, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xb80, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xb86, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xb80, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xb86, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xb80, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xb86, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xb80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e6b, 8), (unique, 0x10000e6b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1ef8d2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e73, 8), (unique, 0x10000e73, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0xa0, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xba8, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xba2, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xba8, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xba2, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xba8, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xba2, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xba8, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xba2, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xba8, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xba2, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xba8, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xba2, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xba8, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xba2, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xba8, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xba2, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xba8, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xba2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e7b, 8), (unique, 0x10000e7b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1ef8d2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e83, 8), (unique, 0x10000e83, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0xa0, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xbca, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xbc4, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xbca, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xbc4, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xbca, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xbc4, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xbca, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xbc4, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xbca, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xbc4, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xbca, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xbc4, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xbca, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xbc4, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xbca, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xbc4, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xbca, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xbc4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e8b, 8), (unique, 0x10000e8b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1ef8d2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x5, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e93, 8), (unique, 0x10000e93, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0xa0, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x6, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xbec, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xbe6, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xbec, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xbe6, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xbec, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xbe6, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xbec, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xbe6, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xbec, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xbe6, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xbec, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xbe6, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xbec, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xbe6, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xbec, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xbe6, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xbec, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xbe6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000e9b, 8), (unique, 0x10000e9b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[ ---  CBRANCH (ram, 0x1ef487, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x1228, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x0, 8)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(register, 0x18, 8) INT_SUB (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ef9b0, 1) , (register, 0x206, 1), (register, 0x206, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x28, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000ebb, 8), (unique, 0x10000ebb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3680, 8), (register, 0x200, 1) INT_LESS (register, 0x28, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000eb3, 8), (unique, 0x10000eb3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3680, 8), (register, 0x28, 8) CAST (unique, 0x10000eab, 8), (unique, 0x10000eab, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0xbd80, 8), (register, 0x28, 8) CAST (unique, 0x10000ea3, 8), (unique, 0x10000ea3, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0xbd80, 8), (unique, 0x3680, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3680, 8) INT_MULT (unique, 0x3a00, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (register, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x88, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ef9b0, 1) , (unique, 0x1000052a, 1), (unique, 0x1000052a, 1) BOOL_OR (unique, 0xc800, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3100, 8), (unique, 0xc800, 1) INT_LESS (register, 0x18, 8) , (const, 0x9, 8)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x80, 4), (register, 0x10, 4) INT_ADD (register, 0xa0, 4) , (const, 0xffffffff, 4)]
[(unique, 0x10000a5f, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000a9f, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x1ef9bf, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 4), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a5f, 8) , (unique, 0x10000a67, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x946, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x93f, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x946, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x93f, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x946, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x93f, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x946, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x93f, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x946, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x93f, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x946, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x93f, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x946, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x93f, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x946, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x93f, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x946, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x93f, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a5f, 8) , (unique, 0x10000a67, 8)]
[ ---  CBRANCH (ram, 0x1ef9bb, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x10000a9f, 8) , (unique, 0x10000aa7, 8)]
[(unique, 0x10000a67, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000aa7, 8) COPY (register, 0x90, 8), (register, 0x90, 8) INT_ADD (register, 0x90, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x10000a7f, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ef519, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[(unique, 0x10000a87, 8) COPY (register, 0x18, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000a7f, 8) , (unique, 0x10000a87, 8)]
[(register, 0xa8, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8)]
[(register, 0x28, 8) INT_ZEXT (register, 0x28, 4), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x3, 4), (register, 0x28, 4) INT_2COMP (unique, 0x1000037e, 4), (unique, 0x1000037e, 4) SUBPIECE (register, 0x28, 8) , (const, 0x0, 4), (register, 0x28, 8) INT_RIGHT (unique, 0x10000ec3, 8) , (const, 0x2, 4), (unique, 0x10000ec3, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1ef53c, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3100, 8)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ef60a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x3, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0x10000a4f, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ef599, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (register, 0x90, 4), (register, 0x90, 4) INT_ADD (unique, 0x10000392, 4) , (register, 0x80, 4), (unique, 0x10000392, 4) INT_ADD (register, 0xa0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x717, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x715, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x717, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x715, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x717, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x715, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x717, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x715, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x717, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x715, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x717, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x715, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x717, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x715, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x717, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x715, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x717, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x715, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (const, 0xffffffff, 4)]
[(unique, 0x10000a57, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1ef596, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x90, 4), (unique, 0x3400, 8) CAST (unique, 0x10000ecb, 8), (unique, 0x10000ecb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x732, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x72e, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x732, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x72e, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x732, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x72e, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x732, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x72e, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x732, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x72e, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x732, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x72e, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x732, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x72e, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x732, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x72e, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x732, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x72e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000ed3, 8), (unique, 0x10000ed3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1ef596, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x90, 4), (unique, 0x3400, 8) CAST (unique, 0x10000edb, 8), (unique, 0x10000edb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x747, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x743, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x747, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x743, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x747, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x743, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x747, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x743, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x747, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x743, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x747, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x743, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x747, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x743, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x747, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x743, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x747, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x743, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000ee3, 8), (unique, 0x10000ee3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000a4f, 8) , (unique, 0x10000a57, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x1220, 16) INT_ADD (unique, 0x100009af, 16) , (register, 0x1220, 12), (unique, 0x100009af, 16) INT_LEFT (unique, 0x1000099f, 16) , (const, 0x60, 16), (unique, 0x1000099f, 16) INT_SEXT (const, 0xffffffff, 4), (register, 0x1220, 12) INT_ADD (unique, 0x10000993, 12) , (const, 0xffffffffffffffff, 8), (unique, 0x10000993, 12) INT_LEFT (unique, 0x10000987, 12) , (const, 0x40, 12), (unique, 0x10000987, 12) INT_SEXT (const, 0xffffffff, 4)]
[(register, 0x38, 4) INT_ADD (unique, 0x100003b2, 4) , (register, 0x80, 4), (unique, 0x100003b2, 4) INT_ADD (register, 0xa0, 4) , (const, 0xffffffff, 4)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x28, 8) , (const, 0x4, 8)]
[(register, 0xa8, 8) INT_RIGHT (register, 0x98, 8) , (const, 0x2, 4), (register, 0x98, 8) INT_SUB (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x90, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0xbd80, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x28, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (register, 0x38, 4), (unique, 0x3b80, 8) CAST (unique, 0x10000eeb, 8), (unique, 0x10000eeb, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000558, 8) , (register, 0x38, 4), (unique, 0x10000558, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10000eeb, 8), (unique, 0x10000eeb, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000560, 8) , (register, 0x38, 4), (unique, 0x10000560, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10000eeb, 8), (unique, 0x10000eeb, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000568, 8) , (register, 0x38, 4), (unique, 0x10000568, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10000eeb, 8), (unique, 0x10000eeb, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x7d7, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x22ff, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x22fd, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x22fb, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x22fa, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x7d7, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x22ff, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x22fd, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x22fb, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x22fa, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x7d7, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x22ff, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x22fd, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x22fb, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x22fa, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x7d7, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x22ff, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x22fd, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x22fb, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x22fa, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x7d7, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x22ff, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x22fd, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x22fb, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x22fa, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x7d7, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x22ff, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x22fd, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x22fb, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x22fa, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x7d7, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x22ff, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x22fd, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x22fb, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x22fa, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x7d7, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x22ff, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x22fd, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x22fb, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x22fa, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x7d7, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x22ff, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x22fd, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x22fb, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x22fa, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x1220, 16), (unique, 0x3400, 8) CAST (unique, 0x10000ef3, 8), (unique, 0x10000ef3, 8) INT_ADD (register, 0x90, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1ef5d8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 8) , (register, 0xa8, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_AND (register, 0x98, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x1ef68d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_AND (register, 0x98, 8) , (const, 0xfffffffffffffffc, 8)]
[(unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x38, 4), (unique, 0x3400, 8) CAST (unique, 0x10000efb, 8), (unique, 0x10000efb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x98, 8) , (const, 0x4, 8), (register, 0x38, 4) INT_ADD (unique, 0x100003e2, 4) , (register, 0x80, 4), (unique, 0x100003e2, 4) INT_ADD (register, 0xa0, 4) , (const, 0xffffffff, 4), (register, 0x98, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x824, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x820, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x824, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x820, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x824, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x820, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x824, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x820, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x824, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x820, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x824, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x820, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x824, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x820, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x824, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x820, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x824, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x820, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000f03, 8), (unique, 0x10000f03, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x98, 8) , (const, 0x4, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1ef68d, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x90, 8) , (register, 0x0, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x38, 4), (unique, 0x3400, 8) CAST (unique, 0x10000f0b, 8), (unique, 0x10000f0b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ADD (register, 0x90, 8) , (register, 0x88, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x837, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x833, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x837, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x833, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x837, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x833, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x837, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x833, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x837, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x833, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x837, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x833, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x837, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x833, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x837, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x833, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x837, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x833, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000f13, 8), (unique, 0x10000f13, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ADD (register, 0x90, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1ef68d, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x38, 4), (unique, 0x3400, 8) CAST (unique, 0x10000f1b, 8), (unique, 0x10000f1b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x855, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x851, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x855, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x851, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x855, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x851, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x855, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x851, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x855, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x851, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x855, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x851, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x855, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x851, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x855, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x851, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x855, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x851, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000f23, 8), (unique, 0x10000f23, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1ef68d, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x38, 4), (unique, 0x3400, 8) CAST (unique, 0x10000f2b, 8), (unique, 0x10000f2b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x873, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x86f, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x873, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x86f, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x873, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x86f, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x873, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x86f, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x873, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x86f, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x873, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x86f, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x873, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x86f, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x873, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x86f, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x873, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x86f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000f33, 8), (unique, 0x10000f33, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1ef68d, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x38, 4), (unique, 0x3400, 8) CAST (unique, 0x10000f3b, 8), (unique, 0x10000f3b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x8a3, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x89f, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x8a3, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x89f, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x8a3, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x89f, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x8a3, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x89f, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x8a3, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x89f, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x8a3, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x89f, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x8a3, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x89f, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x8a3, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x89f, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x8a3, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x89f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000f43, 8), (unique, 0x10000f43, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1ef68d, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x5, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x38, 4), (unique, 0x3400, 8) CAST (unique, 0x10000f4b, 8), (unique, 0x10000f4b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x88, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x8b6, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x8b2, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x8b6, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x8b2, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x8b6, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x8b2, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x8b6, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x8b2, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x8b6, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x8b2, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x8b6, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x8b2, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x8b6, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x8b2, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x8b6, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x8b2, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x8b6, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x8b2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffff, 4), (unique, 0x3400, 8) CAST (unique, 0x10000f53, 8), (unique, 0x10000f53, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x88, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x8e0, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x8e0, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x8e0, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x8e0, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x8e0, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x8e0, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x8e0, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x8e0, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x8e0, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000f73, 8) , (register, 0x18, 4), (unique, 0x10000f73, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x18, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x8, 4) , (register, 0x80, 4), (register, 0x8, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000f5b, 8), (unique, 0x10000f5b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1ef6a6, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0xa0, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000f6b, 8), (unique, 0x10000f6b, 8) INT_ADD (unique, 0x10000f63, 8) , (const, 0x44, 8), (unique, 0x10000f63, 8) CAST (register, 0x38, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x8ea, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x8ea, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x8ea, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x8ea, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x8ea, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x8ea, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x8ea, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x8ea, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x8ea, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000f83, 8) , (unique, 0xbc80, 4), (unique, 0x10000f83, 8) CAST (unique, 0x3100, 8), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000f7b, 8), (unique, 0x10000f7b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x8, 8)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000fa3, 8), (unique, 0x10000fa3, 8) INT_ADD (unique, 0x10000f9b, 8) , (const, 0x34, 8), (unique, 0x10000f9b, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1ef6af, 1) , (unique, 0x1000065f, 1), (unique, 0x1000065f, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x18, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000f93, 8), (unique, 0x10000f93, 8) INT_ADD (unique, 0x10000f8b, 8) , (const, 0x34, 8), (unique, 0x10000f8b, 8) CAST (register, 0x38, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)]
[(unique, 0x10000428, 4) MULTIEQUAL (register, 0x18, 4) , (unique, 0xbc80, 4)]
[(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (register, 0x80, 4)]
[(unique, 0x10000ac7, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (register, 0x8, 4)]
[ ---  BRANCH (ram, 0x1eeb2e, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc8f, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xc8f, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xc8f, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xc8f, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xc8f, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xc8f, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xc8f, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xc8f, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xc8f, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0xc8f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc8f, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (register, 0x28, 8) , (register, 0x0, 8), (register, 0x38, 8) CAST (unique, 0x10000fab, 8), (unique, 0x10000fab, 8) INT_ADD (register, 0x88, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1eec5f, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x189, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x189, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x189, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x189, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x189, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x189, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x189, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x189, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x189, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x189, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x189, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x189, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (register, 0x0, 8), (register, 0x38, 8) CAST (unique, 0x10000fb3, 8), (unique, 0x10000fb3, 8) INT_ADD (register, 0x88, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1)]
[(stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1)]
[(stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1)]
[(stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1)]
[(stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1)]
[(stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1)]
[(stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1)]
[(stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1)]
[(stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1)]
[(stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1)]
[(stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1)]
[(stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (unique, 0x10000a47, 4)]
[ ---  CBRANCH (ram, 0x1ef130, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000fc3, 8), (unique, 0x10000fc3, 8) INT_ADD (unique, 0x10000fbb, 8) , (const, 0x64, 8), (unique, 0x10000fbb, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1ef156, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x3, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) INT_2COMP (unique, 0x10000263, 4), (unique, 0x10000263, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_RIGHT (unique, 0x10000fd3, 8) , (const, 0x2, 4), (unique, 0x10000fd3, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000fcb, 8), (unique, 0x10000fcb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) COPY (const, 0x4, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ef230, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ef19f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x25c, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x25c, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x25c, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x25c, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x25c, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x25c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x25c, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x25c, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x25c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xa0, 4)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ef19f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x1, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x26f, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x26f, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x26f, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x26f, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x26f, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x26f, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x26f, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x26f, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x26f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x0, 4), (unique, 0x3a00, 8) CAST (unique, 0x10000fdb, 8), (unique, 0x10000fdb, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1ef19f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x3, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x27a, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x27a, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x27a, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x27a, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x27a, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x27a, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x27a, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x27a, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x27a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x0, 4), (unique, 0x3a00, 8) CAST (unique, 0x10000fe3, 8), (unique, 0x10000fe3, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x2, 4)]
[(register, 0x0, 8) COPY (const, 0x3, 8)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(unique, 0x10000a33, 4) COPY (ram, 0x2bc138, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(unique, 0x10000a27, 4) COPY (ram, 0x2bc130, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(unique, 0x10000a0f, 8) COPY (ram, 0x2bc128, 8), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(unique, 0x100009f7, 8) COPY (ram, 0x2bc120, 8), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(register, 0x90, 8) INT_RIGHT (register, 0x38, 8) , (const, 0x2, 4), (register, 0x38, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000a6f, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000feb, 8), (unique, 0x10000feb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x88, 8)]
[(unique, 0x10000b03, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000b13, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x30c, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x30c, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x30c, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x30c, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x30c, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x30c, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x30c, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x30c, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x30c, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x1220, 16), (register, 0x1220, 16) INT_ADD (unique, 0x10000977, 16) , (register, 0x1220, 12), (unique, 0x10000977, 16) INT_LEFT (unique, 0x10000967, 16) , (const, 0x60, 16), (unique, 0x10000967, 16) INT_SEXT (register, 0x122c, 4), (register, 0x122c, 4) INT_ADD (unique, 0xab900, 4) , (register, 0xa0, 4), (register, 0x1220, 12) INT_ADD (unique, 0x1000095b, 12) , (register, 0x1220, 8), (unique, 0x1000095b, 12) INT_LEFT (unique, 0x1000094f, 12) , (const, 0x40, 12), (unique, 0x1000094f, 12) INT_SEXT (register, 0x1228, 4), (register, 0x1228, 4) INT_ADD (unique, 0xab780, 4) , (register, 0xa0, 4), (register, 0x1220, 8) INT_ADD (unique, 0x10000947, 8) , (register, 0x1220, 4), (unique, 0x10000947, 8) INT_LEFT (unique, 0x1000093f, 8) , (const, 0x20, 8), (unique, 0x1000093f, 8) INT_SEXT (register, 0x1224, 4), (register, 0x1224, 4) INT_ADD (unique, 0x1000053e, 4) , (register, 0xa0, 4), (register, 0x1220, 4) INT_ADD (unique, 0x10000536, 4) , (register, 0xa0, 4), (unique, 0xab900, 4) INT_ADD (unique, 0x1000053e, 4) , (unique, 0x10000a33, 4), (unique, 0x1000053e, 4) SUBPIECE (register, 0x1208, 8) , (const, 0x0, 4), (unique, 0xab780, 4) INT_ADD (unique, 0x10000536, 4) , (unique, 0x10000a27, 4), (unique, 0x10000536, 4) SUBPIECE (register, 0x1200, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000a6f, 8) , (unique, 0x10000a77, 8), (register, 0x1200, 8) MULTIEQUAL (unique, 0x10000b03, 8) , (unique, 0x10000b0b, 8), (register, 0x1208, 8) MULTIEQUAL (unique, 0x10000b13, 8) , (unique, 0x10000b1b, 8)]
[(unique, 0x10000a77, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000a6f, 8) , (unique, 0x10000a77, 8)]
[(unique, 0x10000b0b, 8) COPY (register, 0x1200, 8), (register, 0x1200, 8) INT_ADD (register, 0x1200, 8) , (unique, 0x100009f7, 8), (register, 0x1200, 8) MULTIEQUAL (unique, 0x10000b03, 8) , (unique, 0x10000b0b, 8)]
[(unique, 0x10000b1b, 8) COPY (register, 0x1208, 8), (register, 0x1208, 8) INT_ADD (register, 0x1208, 8) , (unique, 0x10000a0f, 8), (register, 0x1208, 8) MULTIEQUAL (unique, 0x10000b13, 8) , (unique, 0x10000b1b, 8)]
[ ---  CBRANCH (ram, 0x1ef1f0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (register, 0x90, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x1eec6a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x38, 8), (register, 0x10, 8) INT_AND (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x340, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x340, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x340, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x340, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x340, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x340, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x340, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x340, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x340, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x8, 4), (unique, 0x3400, 8) CAST (unique, 0x10000ff3, 8), (unique, 0x10000ff3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (register, 0x8, 4) INT_ADD (register, 0xa0, 4) , (unique, 0x100002b7, 4), (unique, 0x100002b7, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0x88, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1eec6a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x35e, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x35e, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x35e, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x35e, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x35e, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x35e, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x35e, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x35e, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x35e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 4), (unique, 0x3400, 8) CAST (unique, 0x10000ffb, 8), (unique, 0x10000ffb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xa0, 4), (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1eec6a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x37c, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x37c, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x37c, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x37c, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x37c, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x37c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x37c, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x37c, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x37c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 4), (unique, 0x3400, 8) CAST (unique, 0x10001003, 8), (unique, 0x10001003, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xa0, 4), (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1eec6a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x39a, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x39a, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x39a, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x39a, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x39a, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x39a, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x39a, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x39a, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x39a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 4), (unique, 0x3400, 8) CAST (unique, 0x1000100b, 8), (unique, 0x1000100b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xa0, 4), (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1eec6a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x3ca, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x3ca, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x3ca, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x3ca, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x3ca, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x3ca, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x3ca, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x3ca, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x3ca, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 4), (unique, 0x3400, 8) CAST (unique, 0x10001013, 8), (unique, 0x10001013, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xa0, 4), (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1eec6a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x5, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x3dd, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x3dd, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x3dd, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x3dd, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x3dd, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x3dd, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x3dd, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x3dd, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x3dd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x1000101b, 8), (unique, 0x1000101b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0xa0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x1eec6a, 1)]
[(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (register, 0x80, 4)]
[(unique, 0x3680, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x1c1, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x1c1, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x1c1, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x1c1, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x1c1, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x1c1, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x1c1, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x1c1, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1c1, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xa8, 4), (unique, 0x3400, 8) CAST (unique, 0x10001023, 8), (unique, 0x10001023, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x10000ad3, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1ef0bb, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x10, 4) , (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0xb0, 4) , (register, 0x80, 4), (register, 0x10, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1e6, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x1e6, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x1e6, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x1e6, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x1e6, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x1e6, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x1e6, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x1e6, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x1e6, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e6, 4)]
[ ---  CALL (ram, 0x1211f0, 8) , (unique, 0x3a00, 8) , (const, 0xff, 4) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x4, 8), (unique, 0x3480, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4), (register, 0x10, 4) INT_SUB (register, 0x28, 4) , (register, 0xb0, 4), (unique, 0x3a00, 8) CAST (unique, 0x1000102b, 8), (unique, 0x1000102b, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0x10000ac3, 4) COPY (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x1eeb2e, 1)]
[ ---  CBRANCH (ram, 0x1ef0d7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8)]
[ ---  CBRANCH (ram, 0x1ef2b3, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001043, 8), (unique, 0x10001043, 8) INT_ADD (unique, 0x1000103b, 8) , (const, 0x34, 8), (unique, 0x1000103b, 8) CAST (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001033, 8), (unique, 0x10001033, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1)]
[(stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1)]
[(stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1)]
[(stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1)]
[(stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1)]
[(stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1)]
[(stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1)]
[(stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1)]
[(stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1)]
[(stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1)]
[(stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1)]
[(stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xc75, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xc75, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xc75, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xc75, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xc75, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xc75, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xc75, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xc75, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xc75, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000104b, 8), (unique, 0x1000104b, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[ ---  BRANCH (ram, 0x1eeb33, 1)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000105b, 8), (unique, 0x1000105b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0xa0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001053, 8), (unique, 0x10001053, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1efa01, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001063, 8), (unique, 0x10001063, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ef0f4, 1)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xd00, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xd00, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xd00, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xd00, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xd00, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xd00, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xd00, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xd00, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xd00, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0x3400, 8) CAST (unique, 0x1000106b, 8), (unique, 0x1000106b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0xb0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ef9f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000107b, 8), (unique, 0x1000107b, 8) INT_ADD (unique, 0x10001073, 8) , (const, 0x64, 8), (unique, 0x10001073, 8) CAST (register, 0x38, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xd43, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xd43, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xd43, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xd43, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xd43, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xd43, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xd43, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xd43, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xd43, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xa0, 4), (unique, 0x3400, 8) CAST (unique, 0x10001083, 8), (unique, 0x10001083, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1ef109, 1)]
[(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xd33, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xd33, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xd33, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xd33, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xd33, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xd33, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xd33, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xd33, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xd33, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x1000108b, 8), (unique, 0x1000108b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x10000acb, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1eeb2e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xd3b, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xd3b, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xd3b, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xd3b, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xd3b, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xd3b, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xd3b, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xd3b, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xd3b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3100, 8) CAST (unique, 0x10001093, 8), (unique, 0x10001093, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1eeb2e, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1)]
[(stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1)]
[(stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1)]
[(stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1)]
[(stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1)]
[(stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1)]
[(stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1)]
[(stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1)]
[(stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1)]
[(stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1)]
[(stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1)]
[(stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x1eeb60, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (register, 0x18, 4) , (register, 0xb0, 4), (register, 0xb0, 4) COPY (unique, 0x10000ad7, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x100000f6, 4) , (register, 0x18, 4) , (unique, 0x10000428, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4), (unique, 0x10000ad7, 4) MULTIEQUAL (unique, 0x10000abf, 4) , (unique, 0x10000ac3, 4) , (unique, 0x10000ac7, 4) , (unique, 0x10000acb, 4) , (unique, 0x10000acb, 4) , (unique, 0x10000ad3, 4)]
[(register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x18, 4) , (register, 0xb0, 4)]
[(unique, 0x10000afb, 4) COPY (register, 0xa0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1)]
[(stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1)]
[(stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1)]
[(stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1)]
[(stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1)]
[(stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1)]
[(stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1)]
[(stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1)]
[(stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1)]
[(stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1)]
[(stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1)]
[(stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 4), (unique, 0x3100, 8) CAST (unique, 0x100010a3, 8), (unique, 0x100010a3, 8) INT_ADD (unique, 0x1000109b, 8) , (const, 0x2c, 8), (unique, 0x1000109b, 8) CAST (register, 0x38, 8), (register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x8b, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x88, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x8b, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x88, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x8b, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x88, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x8b, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x88, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x8b, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x88, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x8b, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x88, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x8b, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x88, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x8b, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x88, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x8b, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x88, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100010ab, 8) , (register, 0xa0, 4), (unique, 0x100010ab, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1094, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x1094, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x1094, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x1094, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x1094, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x1094, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x1094, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x1094, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x1094, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1094, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1094, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (register, 0x0, 8), (register, 0x38, 8) CAST (unique, 0x100010b3, 8), (unique, 0x100010b3, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1000, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x1000, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x1000, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x1000, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x1000, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x1000, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x1000, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x1000, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x1000, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1000, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1000, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x30, 8) CAST (unique, 0x100010cb, 8), (unique, 0x100010cb, 8) INT_ADD (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0xa0, 8), (register, 0x38, 8) CAST (unique, 0x100010c3, 8), (unique, 0x100010c3, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100010bb, 8), (unique, 0x100010bb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1eed29, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1)]
[(stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1)]
[(stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1)]
[(stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1)]
[(stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1)]
[(stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1)]
[(stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1)]
[(stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1)]
[(stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1)]
[(stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1)]
[(stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1)]
[(stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x1020, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x1020, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x1020, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x1020, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x1020, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x1020, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x1020, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x1020, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1020, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xa8, 4), (unique, 0x3400, 8) CAST (unique, 0x100010d3, 8), (unique, 0x100010d3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0xa8, 4) MULTIEQUAL (unique, 0x10000a4b, 4) , (register, 0x0, 4)]
[(unique, 0x10000aeb, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1eee40, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x10, 4) , (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (register, 0xb0, 4), (register, 0x28, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1044, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x1044, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x1044, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x1044, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x1044, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x1044, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x1044, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x1044, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x1044, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1044, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1044, 4)]
[ ---  CALL (ram, 0x1211f0, 8) , (unique, 0x3a00, 8) , (const, 0xff, 4) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x4, 8), (unique, 0x3480, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x100010e3, 4), (unique, 0x100010e3, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x28, 4), (register, 0x10, 4) INT_SUB (const, 0xfffffffe, 4) , (register, 0xb0, 4), (unique, 0x3a00, 8) CAST (unique, 0x100010db, 8), (unique, 0x100010db, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0x10000adb, 4) COPY (register, 0x28, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x100010f7, 8), (unique, 0x100010f7, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100010ef, 8), (unique, 0x100010ef, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100010e7, 8), (unique, 0x100010e7, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaed8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x1124, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x1115, 4)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x1124, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x1115, 4)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x1124, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x1115, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x1124, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x1115, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x1124, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x1115, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x1124, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x1115, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x1124, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x1115, 4)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x1124, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x1115, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1124, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1115, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0x3400, 8) CAST (unique, 0x10001107, 8), (unique, 0x10001107, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100010ff, 8), (unique, 0x100010ff, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000ae7, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1eed6c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1)]
[(stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1)]
[(stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1)]
[(stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1)]
[(stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1)]
[(stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1)]
[(stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1)]
[(stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1)]
[(stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1)]
[(stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1)]
[(stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1)]
[(stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1eee70, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0xb0, 4) , (unique, 0x100000f6, 4), (register, 0xb0, 4) COPY (unique, 0x10000aef, 4), (unique, 0x10000aef, 4) MULTIEQUAL (unique, 0x10000adb, 4) , (unique, 0x10000adf, 4) , (unique, 0x10000adf, 4) , (unique, 0x10000ae7, 4) , (unique, 0x10000aeb, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1)]
[(stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1)]
[(stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1)]
[(stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1)]
[(stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1)]
[(stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1)]
[(stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1)]
[(stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1)]
[(stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1)]
[(stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1)]
[(stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1)]
[(stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 4), (unique, 0x3100, 8) CAST (unique, 0x10001117, 8), (unique, 0x10001117, 8) INT_ADD (unique, 0x1000110f, 8) , (const, 0x2c, 8), (unique, 0x1000110f, 8) CAST (register, 0x38, 8), (register, 0xb0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x1056, 4), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0x1053, 4), (ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x1056, 4), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0x1053, 4), (ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x1056, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0x1053, 4), (ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x1056, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0x1053, 4), (ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x1056, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0x1053, 4), (ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x1056, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0x1053, 4), (ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x1056, 4), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0x1053, 4), (ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x1056, 4), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0x1053, 4), (ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1056, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1053, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000111f, 8) , (register, 0xb0, 4), (unique, 0x1000111f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0xb0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1eeb3d, 1)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffb6, 1) MULTIEQUAL (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1) , (stack, 0xffffffffffffffb6, 1)]
[(stack, 0xffffffffffffffb5, 1) MULTIEQUAL (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1) , (stack, 0xffffffffffffffb5, 1)]
[(stack, 0xffffffffffffffb4, 1) MULTIEQUAL (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1) , (stack, 0xffffffffffffffb4, 1)]
[(stack, 0xffffffffffffffb3, 1) MULTIEQUAL (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1) , (stack, 0xffffffffffffffb3, 1)]
[(stack, 0xffffffffffffffb2, 1) MULTIEQUAL (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1) , (stack, 0xffffffffffffffb2, 1)]
[(stack, 0xffffffffffffffb1, 1) MULTIEQUAL (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1) , (stack, 0xffffffffffffffb1, 1)]
[(stack, 0xffffffffffffffb0, 1) MULTIEQUAL (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb0, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffae, 1) MULTIEQUAL (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1) , (stack, 0xffffffffffffffae, 1)]
[(stack, 0xffffffffffffffad, 1) MULTIEQUAL (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1) , (stack, 0xffffffffffffffad, 1)]
[(stack, 0xffffffffffffffac, 1) MULTIEQUAL (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1) , (stack, 0xffffffffffffffac, 1)]
[(stack, 0xffffffffffffffab, 1) MULTIEQUAL (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1) , (stack, 0xffffffffffffffab, 1)]
[(stack, 0xffffffffffffffaa, 1) MULTIEQUAL (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1) , (stack, 0xffffffffffffffaa, 1)]
[(stack, 0xffffffffffffffa9, 1) MULTIEQUAL (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1) , (stack, 0xffffffffffffffa9, 1)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x2bc148, 8) MULTIEQUAL (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8) , (ram, 0x2bc148, 8)]
[(ram, 0x2bc140, 8) MULTIEQUAL (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8) , (ram, 0x2bc140, 8)]
[(ram, 0x2bc13c, 4) MULTIEQUAL (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4) , (ram, 0x2bc13c, 4)]
[(ram, 0x2bc138, 4) MULTIEQUAL (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4) , (ram, 0x2bc138, 4)]
[(ram, 0x2bc134, 4) MULTIEQUAL (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4) , (ram, 0x2bc134, 4)]
[(ram, 0x2bc130, 4) MULTIEQUAL (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4) , (ram, 0x2bc130, 4)]
[(ram, 0x2bc128, 8) MULTIEQUAL (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8) , (ram, 0x2bc128, 8)]
[(ram, 0x2bc120, 8) MULTIEQUAL (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8) , (ram, 0x2bc120, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ef92a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10001127, 8), (unique, 0x10001127, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x2bc120, 8) COPY (ram, 0x2bc120, 8)]
[(ram, 0x2bc128, 8) COPY (ram, 0x2bc128, 8)]
[(ram, 0x2bc130, 4) COPY (ram, 0x2bc130, 4)]
[(ram, 0x2bc134, 4) COPY (ram, 0x2bc134, 4)]
[(ram, 0x2bc138, 4) COPY (ram, 0x2bc138, 4)]
[(ram, 0x2bc13c, 4) COPY (ram, 0x2bc13c, 4)]
[(ram, 0x2bc140, 8) COPY (ram, 0x2bc140, 8)]
[(ram, 0x2bc148, 8) COPY (ram, 0x2bc148, 8)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffa9, 1) INDIRECT (stack, 0xffffffffffffffa9, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffaa, 1) INDIRECT (stack, 0xffffffffffffffaa, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffab, 1) INDIRECT (stack, 0xffffffffffffffab, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffac, 1) INDIRECT (stack, 0xffffffffffffffac, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffad, 1) INDIRECT (stack, 0xffffffffffffffad, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffae, 1) INDIRECT (stack, 0xffffffffffffffae, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffb1, 1) INDIRECT (stack, 0xffffffffffffffb1, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffb2, 1) INDIRECT (stack, 0xffffffffffffffb2, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffb3, 1) INDIRECT (stack, 0xffffffffffffffb3, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffb4, 1) INDIRECT (stack, 0xffffffffffffffb4, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffb5, 1) INDIRECT (stack, 0xffffffffffffffb5, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffb6, 1) INDIRECT (stack, 0xffffffffffffffb6, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc0, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x2bc120, 8) COPY (ram, 0x2bc120, 8), (ram, 0x2bc120, 8) INDIRECT (ram, 0x2bc120, 8) , (const, 0xc0, 4)]
[(ram, 0x2bc128, 8) COPY (ram, 0x2bc128, 8), (ram, 0x2bc128, 8) INDIRECT (ram, 0x2bc128, 8) , (const, 0xc0, 4)]
[(ram, 0x2bc130, 4) COPY (ram, 0x2bc130, 4), (ram, 0x2bc130, 4) INDIRECT (ram, 0x2bc130, 4) , (const, 0xc0, 4)]
[(ram, 0x2bc134, 4) COPY (ram, 0x2bc134, 4), (ram, 0x2bc134, 4) INDIRECT (ram, 0x2bc134, 4) , (const, 0xc0, 4)]
[(ram, 0x2bc138, 4) COPY (ram, 0x2bc138, 4), (ram, 0x2bc138, 4) INDIRECT (ram, 0x2bc138, 4) , (const, 0xc0, 4)]
[(ram, 0x2bc13c, 4) COPY (ram, 0x2bc13c, 4), (ram, 0x2bc13c, 4) INDIRECT (ram, 0x2bc13c, 4) , (const, 0xc0, 4)]
[(ram, 0x2bc140, 8) COPY (ram, 0x2bc140, 8), (ram, 0x2bc140, 8) INDIRECT (ram, 0x2bc140, 8) , (const, 0xc0, 4)]
[(ram, 0x2bc148, 8) COPY (ram, 0x2bc148, 8), (ram, 0x2bc148, 8) INDIRECT (ram, 0x2bc148, 8) , (const, 0xc0, 4)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xc0, 4)]
[ ---  RETURN (const, 0x1, 4)]
