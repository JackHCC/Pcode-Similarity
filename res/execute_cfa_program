[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x24, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4931e0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x30, 8) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x492b09, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x1000089b, 8) , (unique, 0xbd80, 8), (unique, 0x1000089b, 8) CAST (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100002bd, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000893, 8), (unique, 0x10000893, 8) INT_ADD (register, 0x10, 8) , (const, 0x98, 8), (unique, 0x100002bd, 8) INT_SRIGHT (unique, 0xbd80, 8) , (const, 0x3f, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x29, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000088b, 8), (unique, 0x1000088b, 8) INT_ADD (register, 0x10, 8) , (const, 0xc0, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x493018, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x40, 1), (register, 0x10, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xc0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x29, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x2c, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3f, 4)]
[(unique, 0x100005bb, 8) COPY (register, 0x20, 8)]
[(unique, 0x100006ab, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007a3, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x493060, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x80, 1)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3f, 4)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0x38, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x3f, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x88, 8) INT_OR (register, 0x88, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x493070, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008a3, 1) , (const, 0x0, 1), (unique, 0x100008a3, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x88, 8) INT_MULT (register, 0x88, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x2b, 8) , (const, 0x8, 8)]
[(unique, 0x100005ab, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000069b, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000793, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492acf, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x38, 1) , (const, 0x12, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008a4, 8) , (const, 0x1, 4), (unique, 0x100008a4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x1000045d, 8) , (const, 0x8, 8), (unique, 0x1000045d, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x88, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x1000045d, 8) , (const, 0x8, 8), (unique, 0x1000045d, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0x100005b3, 8) COPY (register, 0x20, 8)]
[(unique, 0x100006a3, 8) COPY (register, 0x80, 8)]
[(unique, 0x1000079b, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[ ---  CBRANCH (ram, 0x493038, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0xc0, 1)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3f, 4)]
[(unique, 0x1000059b, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000068b, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000783, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x492acf, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x11, 1) , (register, 0x10, 1), (register, 0x10, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x3f, 1)]
[(unique, 0x10000593, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000683, 8) COPY (register, 0x80, 8)]
[(unique, 0x1000077b, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCHIND (unique, 0xbb00, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492a6f, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008ac, 1) , (const, 0x0, 1), (unique, 0x100008ac, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x38, 8) INT_OR (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492a90, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008ad, 1) , (const, 0x0, 1), (unique, 0x100008ad, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x38, 8) INT_MULT (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x2b, 8) , (const, 0x8, 8)]
[(unique, 0x100005c3, 8) COPY (register, 0x20, 8)]
[(unique, 0x100006b3, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007ab, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492acf, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x12, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008ae, 8) , (const, 0x1, 4), (unique, 0x100008ae, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x10000305, 8) , (const, 0x8, 8), (unique, 0x10000305, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x10000305, 8) , (const, 0x8, 8), (unique, 0x10000305, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x38, 8) INT_2COMP (register, 0x38, 8)]
[(unique, 0x100005cb, 8) COPY (register, 0x20, 8)]
[(unique, 0x100006bb, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007b3, 8) COPY (register, 0xa0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(unique, 0x1000087b, 8) COPY (unique, 0x3100, 8)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x1000087b, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x1000087b, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492ae0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008b6, 1) , (const, 0x0, 1), (unique, 0x100008b6, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x1000087b, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x100008b7, 8), (unique, 0x100008b7, 8) INT_ADD (register, 0x10, 8) , (const, 0xd0, 8)]
[ ---  CBRANCH (ram, 0x492ad4, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x30, 8) , (register, 0xa0, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x100002dd, 8), (unique, 0x100002dd, 8) PTRSUB (const, 0x0, 8) , (const, 0x401780, 8), (register, 0x20, 8) CAST (unique, 0x100008c7, 8), (unique, 0x100008c7, 8) INT_ADD (unique, 0x100008bf, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100008bf, 8) CAST (register, 0x20, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xc8, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xc8, 4)]
[ ---  CALL (ram, 0x4011c4, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492b1c, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008cf, 1) , (const, 0x0, 1), (unique, 0x100008cf, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492b50, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x12, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008d0, 8) , (const, 0x5, 4), (unique, 0x100008d0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x1000031d, 8) , (const, 0x8, 8), (unique, 0x1000031d, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0xa0, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x1000031d, 8) , (const, 0x8, 8), (unique, 0x1000031d, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492b58, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008d8, 1) , (const, 0x0, 1), (unique, 0x100008d8, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0x100005d3, 8) COPY (register, 0x20, 8)]
[(unique, 0x100006c3, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007bb, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492b80, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008d9, 1) , (const, 0x0, 1), (unique, 0x100008d9, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x38, 8) INT_OR (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492ba8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008da, 1) , (const, 0x0, 1), (unique, 0x100008da, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492bd8, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (const, 0x40, 4)]
[ ---  CBRANCH (ram, 0x4931f3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002c5, 1) , (const, 0x0, 1), (unique, 0x100002c5, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1)]
[(register, 0x38, 8) INT_OR (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x492bd8, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492c04, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008db, 1) , (const, 0x0, 1), (unique, 0x100008db, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x38, 8) INT_OR (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492c28, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008dc, 1) , (const, 0x0, 1), (unique, 0x100008dc, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x38, 8) INT_MULT (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x2b, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x100005db, 8) COPY (register, 0x20, 8)]
[(unique, 0x100006cb, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007c3, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492acf, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x12, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008dd, 8) , (const, 0x4, 4), (unique, 0x100008dd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x1000033d, 8) , (const, 0x8, 8), (unique, 0x1000033d, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x1000033d, 8) , (const, 0x8, 8), (unique, 0x1000033d, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0x100005e3, 8) COPY (register, 0x20, 8)]
[(unique, 0x100006d3, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007cb, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492c4b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008e5, 1) , (const, 0x0, 1), (unique, 0x100008e5, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492c7f, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (const, 0x40, 4)]
[ ---  CBRANCH (ram, 0x492c7f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002c6, 1) , (const, 0x0, 1), (unique, 0x100002c6, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x25, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x2b, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100005eb, 8) COPY (register, 0x20, 8)]
[(unique, 0x100006db, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007d3, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492c97, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008e6, 1) , (const, 0x0, 1), (unique, 0x100008e6, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x26, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492cc0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008e7, 1) , (const, 0x0, 1), (unique, 0x100008e7, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492cf3, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (const, 0x40, 4)]
[ ---  CBRANCH (ram, 0x492cf3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002c7, 1) , (const, 0x0, 1), (unique, 0x100002c7, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008e8, 8) , (const, 0x1, 4), (unique, 0x100008e8, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x28, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x30, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x25, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_MULT (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x2b, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x100005f3, 8) COPY (register, 0x20, 8)]
[(unique, 0x100006e3, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007db, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492d15, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008f0, 1) , (const, 0x0, 1), (unique, 0x100008f0, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x38, 8) INT_OR (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492d40, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008f1, 1) , (const, 0x0, 1), (unique, 0x100008f1, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492d70, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (const, 0x40, 4)]
[ ---  CBRANCH (ram, 0x4931e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002c8, 1) , (const, 0x0, 1), (unique, 0x100002c8, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1)]
[(register, 0x38, 8) INT_OR (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x492d70, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492d9c, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008f2, 1) , (const, 0x0, 1), (unique, 0x100008f2, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492dd0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x12, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008f3, 8) , (const, 0x3, 4), (unique, 0x100008f3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x100003a5, 8) , (const, 0x8, 8), (unique, 0x100003a5, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0xa0, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x100003a5, 8) , (const, 0x8, 8), (unique, 0x100003a5, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492dd8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008fb, 1) , (const, 0x0, 1), (unique, 0x100008fb, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0x1000060b, 8) COPY (register, 0x20, 8)]
[(unique, 0x100006fb, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007f3, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x3100, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x27, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008fc, 8) , (const, 0x2, 4), (unique, 0x100008fc, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x28, 8) , (const, 0x8, 8)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x4930d0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000904, 1) , (const, 0x0, 1), (unique, 0x10000904, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(unique, 0x10000613, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000703, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007fb, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492e00, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000905, 1) , (const, 0x0, 1), (unique, 0x10000905, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x25, 8) , (const, 0x8, 8)]
[(unique, 0x1000061b, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000070b, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000803, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492e2d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000906, 1) , (const, 0x0, 1), (unique, 0x10000906, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x26, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000907, 8) , (const, 0x1, 4), (unique, 0x10000907, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x28, 8) , (const, 0x8, 8)]
[(unique, 0x10000623, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000713, 8) COPY (register, 0x80, 8)]
[(unique, 0x1000080b, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492e64, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000090f, 1) , (const, 0x0, 1), (unique, 0x1000090f, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x26, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7f, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492e90, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000910, 1) , (const, 0x0, 1), (unique, 0x10000910, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x30, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x25, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000911, 8) , (const, 0x1, 4), (unique, 0x10000911, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x28, 8) , (const, 0x8, 8)]
[(unique, 0x1000062b, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000071b, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000813, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(unique, 0x10000653, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000919, 8), (unique, 0x10000919, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x24, 8) , (const, 0x8, 8)]
[(unique, 0x10000673, 8) COPY (register, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x29, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000673, 8) , (unique, 0x1000067b, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000653, 8) , (unique, 0x1000065b, 8)]
[ ---  CBRANCH (ram, 0x4931b2, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xae00, 8), (unique, 0xae00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000065b, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000545, 8) , (const, 0x8, 8), (unique, 0x10000545, 8) INT_ADD (unique, 0x1000053d, 8) , (const, 0x1, 8), (unique, 0x1000053d, 8) INT_MULT (unique, 0xac80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xac80, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x1000067b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000525, 8) , (const, 0x8, 8), (unique, 0x10000525, 8) INT_ADD (unique, 0x1000051d, 8) , (const, 0x1, 8), (unique, 0x1000051d, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x4931af, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x80, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x24, 8) , (const, 0x8, 8)]
[(unique, 0x10000633, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000723, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x1000081b, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[ ---  CBRANCH (ram, 0x493205, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(register, 0x20, 8) CAST (unique, 0x10000929, 8), (unique, 0x10000929, 8) INT_ADD (unique, 0x10000921, 8) , (const, 0xfffffffffffffeb0, 8), (unique, 0x10000921, 8) CAST (register, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000939, 8), (unique, 0x10000939, 8) INT_ADD (unique, 0x10000931, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000931, 8) CAST (register, 0x20, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000951, 8), (unique, 0x10000951, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) CAST (unique, 0x10000949, 8), (unique, 0x10000949, 8) INT_ADD (unique, 0x10000941, 8) , (const, 0xfffffffffffffebf, 8), (unique, 0x10000941, 8) CAST (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x493183, 1)]
[(unique, 0x10000583, 8) COPY (register, 0x80, 8)]
[(unique, 0x1000058b, 8) COPY (unique, 0x10000961, 8), (unique, 0x10000961, 8) CAST (register, 0x20, 8)]
[(unique, 0x10000773, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000959, 8), (unique, 0x10000959, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x80, 8) , (const, 0x24, 8) , (const, 0x8, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000773, 8) , (register, 0x80, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x1000058b, 8) , (register, 0x20, 8)]
[(unique, 0x10000643, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000663, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000583, 8) , (register, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x29, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000663, 8) , (unique, 0x1000066b, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000643, 8) , (unique, 0x1000064b, 8)]
[ ---  CBRANCH (ram, 0x493191, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xae00, 8), (unique, 0xae00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000064b, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100004f5, 8) , (const, 0x8, 8), (unique, 0x100004f5, 8) INT_ADD (unique, 0x100004ed, 8) , (const, 0x1, 8), (unique, 0x100004ed, 8) INT_MULT (unique, 0xac80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xac80, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x1000066b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100004d5, 8) , (const, 0x8, 8), (unique, 0x100004d5, 8) INT_ADD (unique, 0x100004cd, 8) , (const, 0x1, 8), (unique, 0x100004cd, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x49318e, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x24, 8) , (const, 0x8, 8)]
[(unique, 0x1000063b, 8) COPY (unique, 0x10000969, 8), (unique, 0x10000969, 8) CAST (register, 0x20, 8)]
[(unique, 0x1000072b, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000823, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492ec6, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000971, 1) , (const, 0x0, 1), (unique, 0x10000971, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492ef0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000972, 1) , (const, 0x0, 1), (unique, 0x10000972, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0x10000733, 8) COPY (register, 0x80, 8)]
[(unique, 0x1000082b, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492acf, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x12, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000973, 8) , (const, 0x2, 4), (unique, 0x10000973, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x100003ed, 8) , (const, 0x8, 8), (unique, 0x100003ed, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x100003ed, 8) , (const, 0x8, 8), (unique, 0x100003ed, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0x1000073b, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000833, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492f31, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000097b, 1) , (const, 0x0, 1), (unique, 0x1000097b, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492f61, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000097c, 1) , (const, 0x0, 1), (unique, 0x1000097c, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(unique, 0x10000743, 8) COPY (register, 0x80, 8)]
[(unique, 0x1000083b, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492acf, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x12, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000097d, 8) , (const, 0x6, 4), (unique, 0x1000097d, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x8, 8) , (unique, 0x10000415, 8) , (const, 0x8, 8), (unique, 0x10000415, 8) INT_ADD (unique, 0x1000040d, 8) , (const, 0x1, 8), (unique, 0x1000040d, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0x1000074b, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000843, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492f9d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000985, 1) , (const, 0x0, 1), (unique, 0x10000985, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(unique, 0x1000086b, 8) COPY (unique, 0x1000056d, 8), (unique, 0x1000056d, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x493049, 1) , (unique, 0x1000057d, 1), (unique, 0x1000057d, 1) INT_LESS (unique, 0x10000575, 8) , (const, 0x12, 8), (unique, 0x10000575, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000986, 8) , (const, 0x0, 4), (unique, 0x10000986, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x8, 8) , (unique, 0x10000445, 8) , (const, 0x8, 8), (unique, 0x10000445, 8) INT_ADD (unique, 0x1000043d, 8) , (const, 0x1, 8), (unique, 0x1000043d, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x10000575, 8)]
[(unique, 0x100005a3, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000693, 8) COPY (register, 0x80, 8)]
[(unique, 0x1000078b, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x1000056d, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492fcd, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000098e, 1) , (const, 0x0, 1), (unique, 0x1000098e, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x38, 8) INT_OR (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492ff0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000098f, 1) , (const, 0x0, 1), (unique, 0x1000098f, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x38, 8) INT_MULT (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x2b, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x100005fb, 8) COPY (register, 0x20, 8)]
[(unique, 0x100006eb, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007e3, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x492acf, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x12, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000990, 8) , (const, 0x1, 4), (unique, 0x10000990, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x1000038d, 8) , (const, 0x8, 8), (unique, 0x1000038d, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) PTRADD (register, 0x8, 8) , (unique, 0x1000038d, 8) , (const, 0x8, 8), (unique, 0x1000038d, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0x10000603, 8) COPY (register, 0x20, 8)]
[(unique, 0x100006f3, 8) COPY (register, 0x80, 8)]
[(unique, 0x100007eb, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x29, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x2c, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000998, 8), (unique, 0x10000998, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000753, 8) COPY (register, 0x80, 8)]
[(unique, 0x1000084b, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x29, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x2c, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100009a0, 8), (unique, 0x100009a0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000075b, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000853, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x29, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x2c, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000763, 8) COPY (register, 0x80, 8)]
[(unique, 0x1000085b, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x49310a, 8), (register, 0x20, 8) CAST (unique, 0x100009b8, 8), (unique, 0x100009b8, 8) INT_ADD (unique, 0x100009b0, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100009b0, 8) CAST (register, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x49311c, 8), (register, 0x20, 8) CAST (unique, 0x100009c8, 8), (unique, 0x100009c8, 8) INT_ADD (unique, 0x100009c0, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100009c0, 8) CAST (register, 0x20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x12a5, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x129a, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x12a5, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (register, 0x38, 4) , (const, 0x129a, 4), (register, 0x38, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100009a8, 8), (unique, 0x100009a8, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x2e, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (stack, 0xffffffffffffffc0, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x29, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12a5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x129a, 4)]
[(unique, 0x1000076b, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x12a5, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x10000883, 8) , (const, 0x129a, 4), (unique, 0x10000883, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000863, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100009d0, 8), (unique, 0x100009d0, 8) CALL (ram, 0x4927f0, 8) , (stack, 0xffffffffffffffb4, 4) , (register, 0x0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x492940, 8) , (unique, 0xbb00, 1) , (register, 0x10, 8), (stack, 0xffffffffffffffb4, 4) INDIRECT (register, 0x38, 4) , (const, 0x129a, 4), (register, 0x38, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100009a8, 8), (unique, 0x100009a8, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x2e, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x492acf, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000683, 8) , (unique, 0x1000068b, 8) , (unique, 0x10000693, 8) , (unique, 0x1000069b, 8) , (unique, 0x100006a3, 8) , (unique, 0x100006ab, 8) , (unique, 0x100006b3, 8) , (unique, 0x100006bb, 8) , (unique, 0x100006c3, 8) , (unique, 0x100006cb, 8) , (unique, 0x100006d3, 8) , (unique, 0x100006db, 8) , (unique, 0x100006e3, 8) , (unique, 0x100006eb, 8) , (unique, 0x100006f3, 8) , (unique, 0x100006fb, 8) , (unique, 0x10000703, 8) , (unique, 0x1000070b, 8) , (unique, 0x10000713, 8) , (unique, 0x1000071b, 8) , (unique, 0x10000723, 8) , (unique, 0x1000072b, 8) , (unique, 0x10000733, 8) , (unique, 0x1000073b, 8) , (unique, 0x10000743, 8) , (unique, 0x1000074b, 8) , (unique, 0x10000753, 8) , (unique, 0x1000075b, 8) , (unique, 0x10000763, 8) , (unique, 0x1000076b, 8) , (register, 0x80, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000593, 8) , (unique, 0x1000059b, 8) , (unique, 0x100005a3, 8) , (unique, 0x100005ab, 8) , (unique, 0x100005b3, 8) , (unique, 0x100005bb, 8) , (unique, 0x100005c3, 8) , (unique, 0x100005cb, 8) , (unique, 0x100005d3, 8) , (unique, 0x100005db, 8) , (unique, 0x100005e3, 8) , (unique, 0x100005eb, 8) , (unique, 0x100005f3, 8) , (unique, 0x100005fb, 8) , (unique, 0x10000603, 8) , (unique, 0x1000060b, 8) , (unique, 0x10000613, 8) , (unique, 0x1000061b, 8) , (unique, 0x10000623, 8) , (unique, 0x1000062b, 8) , (unique, 0x10000633, 8) , (unique, 0x1000063b, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x492b09, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x30, 8) , (register, 0xa0, 8), (register, 0xa0, 8) COPY (unique, 0x10000873, 8), (unique, 0x10000873, 8) MULTIEQUAL (unique, 0x1000077b, 8) , (unique, 0x10000783, 8) , (unique, 0x1000078b, 8) , (unique, 0x10000793, 8) , (unique, 0x1000079b, 8) , (unique, 0x100007a3, 8) , (unique, 0x100007ab, 8) , (unique, 0x100007b3, 8) , (unique, 0x100007bb, 8) , (unique, 0x100007c3, 8) , (unique, 0x100007cb, 8) , (unique, 0x100007d3, 8) , (unique, 0x100007db, 8) , (unique, 0x100007e3, 8) , (unique, 0x100007eb, 8) , (unique, 0x100007f3, 8) , (unique, 0x100007fb, 8) , (unique, 0x10000803, 8) , (unique, 0x1000080b, 8) , (unique, 0x10000813, 8) , (unique, 0x1000081b, 8) , (unique, 0x10000823, 8) , (unique, 0x1000082b, 8) , (unique, 0x10000833, 8) , (unique, 0x1000083b, 8) , (unique, 0x10000843, 8) , (unique, 0x1000084b, 8) , (unique, 0x10000853, 8) , (unique, 0x1000085b, 8) , (unique, 0x10000863, 8) , (unique, 0x1000086b, 8)]
[ ---  RETURN (const, 0x0, 8)]
