[ ---  CBRANCH (ram, 0x4971a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 1) , (const, 0x50, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000093, 8), (unique, 0x10000093, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) CAST (unique, 0x1000008b, 8), (unique, 0x1000008b, 8) INT_ADD (unique, 0x10000083, 8) , (const, 0x7, 8), (unique, 0x10000083, 8) CAST (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000093, 8), (unique, 0x10000093, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) CAST (unique, 0x1000008b, 8), (unique, 0x1000008b, 8) INT_ADD (unique, 0x10000083, 8) , (const, 0x7, 8), (unique, 0x10000083, 8) CAST (register, 0x10, 8)]
[(unique, 0x1000007b, 8) COPY (register, 0x10, 8)]
[ ---  BRANCHIND (register, 0x0, 1), (register, 0x0, 1) INT_AND (register, 0x38, 1) , (const, 0xf, 1)]
[(register, 0x80, 8) CAST (unique, 0x100000a7, 8), (unique, 0x100000a7, 8) INT_SEXT (unique, 0x100000a3, 4), (unique, 0x100000a3, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000009b, 8), (unique, 0x1000009b, 8) CAST (register, 0x10, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100000b7, 8), (unique, 0x100000b7, 8) INT_ADD (unique, 0x100000af, 8) , (const, 0x4, 8), (unique, 0x100000af, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x497177, 1)]
[(register, 0x80, 8) CAST (unique, 0x100000c9, 8), (unique, 0x100000c9, 8) INT_SEXT (unique, 0x100000c7, 2), (unique, 0x100000c7, 2) CAST (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100000bf, 8), (unique, 0x100000bf, 8) CAST (register, 0x10, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100000d9, 8), (unique, 0x100000d9, 8) INT_ADD (unique, 0x100000d1, 8) , (const, 0x2, 8), (unique, 0x100000d1, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x497177, 1)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 8) CAST (unique, 0x100000f1, 8), (unique, 0x100000f1, 8) INT_ADD (unique, 0x100000e9, 8) , (const, 0x1, 8), (unique, 0x100000e9, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000007b, 8) , (register, 0x0, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x80, 8) CAST (unique, 0x10000101, 8), (unique, 0x10000101, 8) INT_OR (unique, 0x100000f9, 8) , (register, 0x90, 8), (unique, 0x100000f9, 8) CAST (register, 0x80, 8), (register, 0x90, 8) INT_LEFT (register, 0x90, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x90, 8) INT_ZEXT (register, 0x90, 4), (register, 0x90, 4) INT_AND (register, 0x90, 4) , (const, 0x7f, 4), (register, 0x90, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100000e1, 8), (unique, 0x100000e1, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000007b, 8) , (register, 0x0, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x497240, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000109, 1) , (const, 0x0, 1), (unique, 0x10000109, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100000e1, 8), (unique, 0x100000e1, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000007b, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x497177, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x3f, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x497177, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000048, 1) , (const, 0x0, 1), (unique, 0x10000048, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1)]
[(register, 0x80, 8) CAST (unique, 0x10000112, 8), (unique, 0x10000112, 8) INT_OR (unique, 0x1000010a, 8) , (register, 0x90, 8), (unique, 0x1000010a, 8) CAST (register, 0x80, 8), (register, 0x90, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x49717c, 1)]
[ ---  CALL (ram, 0x4011c4, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x80, 8) CAST (unique, 0x10000122, 8), (unique, 0x10000122, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000011a, 8), (unique, 0x1000011a, 8) CAST (register, 0x10, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000132, 8), (unique, 0x10000132, 8) INT_ADD (unique, 0x1000012a, 8) , (const, 0x4, 8), (unique, 0x1000012a, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x497177, 1)]
[(register, 0x80, 8) CAST (unique, 0x10000142, 8), (unique, 0x10000142, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000013a, 8), (unique, 0x1000013a, 8) CAST (register, 0x10, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000152, 8), (unique, 0x10000152, 8) INT_ADD (unique, 0x1000014a, 8) , (const, 0x2, 8), (unique, 0x1000014a, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x497177, 1)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0x0, 8) CAST (unique, 0x1000016a, 8), (unique, 0x1000016a, 8) INT_ADD (unique, 0x10000162, 8) , (const, 0x1, 8), (unique, 0x10000162, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000007b, 8) , (register, 0x0, 8)]
[(register, 0x8, 1) INT_ADD (register, 0x8, 1) , (const, 0x7, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x80, 8) CAST (unique, 0x1000017a, 8), (unique, 0x1000017a, 8) INT_OR (unique, 0x10000172, 8) , (register, 0x90, 8), (unique, 0x10000172, 8) CAST (register, 0x80, 8), (register, 0x90, 8) INT_LEFT (register, 0x90, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x90, 8) INT_ZEXT (register, 0x90, 4), (register, 0x90, 4) INT_AND (register, 0x90, 4) , (const, 0x7f, 4), (register, 0x90, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000015a, 8), (unique, 0x1000015a, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000007b, 8) , (register, 0x0, 8), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x497210, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000182, 1) , (const, 0x0, 1), (unique, 0x10000182, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000015a, 8), (unique, 0x1000015a, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000007b, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000183, 8), (unique, 0x10000183, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x497190, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x1000006b, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x497188, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x10, 1), (register, 0x8, 1) INT_AND (register, 0x38, 1) , (const, 0x70, 1)]
[(unique, 0x10000073, 8) COPY (register, 0x10, 8)]
[(register, 0x80, 8) CAST (unique, 0x1000019b, 8), (unique, 0x1000019b, 8) INT_ADD (unique, 0x1000018b, 8) , (unique, 0x10000193, 8), (unique, 0x10000193, 8) CAST (register, 0x30, 8), (unique, 0x1000018b, 8) CAST (register, 0x80, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000006b, 8) , (unique, 0x10000073, 8)]
[ ---  CBRANCH (ram, 0x4971b8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100001a3, 1) , (const, 0x0, 1), (unique, 0x100001a3, 1) CAST (register, 0x38, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
