[ ---  CBRANCH (ram, 0x478f28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000005c, 8), (unique, 0x1000005c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000054, 8), (unique, 0x10000054, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xa0, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x478fa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000064, 8), (unique, 0x10000064, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x74, 8) , (const, 0x1, 8)]
[(unique, 0x3200, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xdc, 8)]
[(unique, 0x3200, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xd8, 8)]
[ ---  BRANCH (ram, 0x478f69, 1)]
[ ---  CBRANCH (ram, 0x478f81, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000074, 8), (unique, 0x10000074, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x68, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000006c, 8), (unique, 0x1000006c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xe0, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000084, 8), (unique, 0x10000084, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x74, 8) , (const, 0x1, 8)]
[(unique, 0x3200, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xdc, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000007c, 8), (unique, 0x1000007c, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xa0, 8) , (const, 0x1, 8)]
[(unique, 0x3200, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xd8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000007c, 8), (unique, 0x1000007c, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xa0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x478f69, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000008c, 8), (unique, 0x1000008c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000007c, 8), (unique, 0x1000007c, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xa0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x478f90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000003e, 4) , (const, 0x0, 4), (unique, 0x1000003e, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000094, 8), (unique, 0x10000094, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xa0, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000009c, 8), (unique, 0x1000009c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x74, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x478f69, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0x3100, 8) CAST (unique, 0x100000a4, 8), (unique, 0x100000a4, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3200, 8) , (unique, 0x3200, 8) , (unique, 0x3200, 8) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000004a, 8) , (register, 0x28, 8), (unique, 0x1000004a, 8) CAST (unique, 0x100000ac, 8), (unique, 0x100000ac, 8) INT_ADD (register, 0x0, 8) , (const, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x3200, 8) , (unique, 0x3200, 8) , (unique, 0x3200, 8) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000b4, 8) , (register, 0x10, 4), (unique, 0x100000b4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x74, 8) , (const, 0x1, 8), (register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x8, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  RETURN (const, 0x0, 8)]
