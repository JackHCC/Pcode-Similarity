[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000016a, 8), (unique, 0x1000016a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0x1000015e, 8) COPY (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3a, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3a, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x3a, 4), (stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffbc, 2) INDIRECT (stack, 0xffffffffffffffbc, 2) , (const, 0x3a, 4), (stack, 0xffffffffffffffbc, 2) MULTIEQUAL (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000136, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x261c30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x210070, 8) , (register, 0x38, 4) , (register, 0x28, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000015e, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x261c90, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000172, 8) , (const, 0x1, 8), (unique, 0x10000172, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x261d83, 1) , (register, 0x206, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000017a, 8), (unique, 0x1000017a, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x261c40, 1)]
[(register, 0xa8, 8) INT_SUB (register, 0x10, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x261c00, 1)]
[(register, 0x28, 8) CAST (unique, 0x1000018a, 8), (unique, 0x1000018a, 8) INT_ADD (unique, 0x10000182, 8) , (register, 0x0, 8), (unique, 0x10000182, 8) CAST (register, 0x28, 8)]
[(unique, 0x10000156, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x261bd4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x261bd4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000192, 8), (unique, 0x10000192, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x1000013e, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x261c03, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xb, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc4, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xc4, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xc4, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (unique, 0x10000166, 4) , (const, 0xc4, 4), (unique, 0x10000166, 4) COPY (register, 0x38, 4)]
[(stack, 0xffffffffffffffbc, 2) INDIRECT (stack, 0xffffffffffffffbc, 2) , (const, 0xc4, 4), (stack, 0xffffffffffffffbc, 2) COPY (const, 0x19, 2)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc4, 4)]
[ ---  CBRANCH (ram, 0x261c9e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x214bb0, 8) , (unique, 0x3800, 8) , (const, 0x1, 8) , (const, 0xc8, 4)]
[(unique, 0x10000146, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x261c03, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000019a, 8), (unique, 0x1000019a, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000136, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x105, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x105, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x105, 4)]
[(stack, 0xffffffffffffffbc, 2) INDIRECT (stack, 0xffffffffffffffbc, 2) , (const, 0x105, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x105, 4)]
[ ---  CALL (ram, 0x120ff0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0xc8, 8)]
[(unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (register, 0x0, 8), (unique, 0x3d00, 8) INT_ADD (register, 0x30, 8) , (const, 0xc8, 8), (register, 0x0, 8) INT_SDIV (register, 0x0, 8) , (const, 0x3e8, 8), (register, 0x0, 8) INT_ADD (stack, 0xffffffffffffffb0, 8) , (const, 0x1f4, 8), (register, 0x30, 8) INT_MULT (stack, 0xffffffffffffffa8, 8) , (const, 0x3e8, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x105, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x105, 4)]
[ ---  BRANCH (ram, 0x261d58, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x143, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x143, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x143, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x143, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x143, 4), (stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffbc, 2) INDIRECT (stack, 0xffffffffffffffbc, 2) , (const, 0x143, 4), (stack, 0xffffffffffffffbc, 2) MULTIEQUAL (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x143, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x261cf9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x214bb0, 8) , (unique, 0x3800, 8) , (const, 0x1, 8) , (register, 0x10, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x1000014e, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x261c03, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001a2, 8), (unique, 0x100001a2, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000136, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x171, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x171, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x171, 4)]
[(stack, 0xffffffffffffffbc, 2) INDIRECT (stack, 0xffffffffffffffbc, 2) , (const, 0x171, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x171, 4)]
[ ---  CALL (ram, 0x120ff0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0x3e80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x1000010e, 8) , (register, 0x10, 8), (unique, 0x1000010e, 8) INT_SDIV (unique, 0x3200, 8) , (const, 0x3e8, 8), (register, 0x10, 8) INT_MULT (stack, 0xffffffffffffffa8, 8) , (const, 0x3e8, 8), (unique, 0x3200, 8) INT_ADD (stack, 0xffffffffffffffb0, 8) , (const, 0x1f4, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x171, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x171, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 2) MULTIEQUAL (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x261bd4, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffbc, 2) MULTIEQUAL (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x1000013e, 8) , (unique, 0x10000146, 8) , (unique, 0x1000014e, 8) , (unique, 0x10000156, 8) , (register, 0xa8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x261d7e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001aa, 8), (unique, 0x100001aa, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x92, 4)]
[(stack, 0xffffffffffffffbc, 2) INDIRECT (stack, 0xffffffffffffffbc, 2) , (const, 0x92, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x92, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x92, 4)]
[ ---  RETURN (const, 0x1, 4)]
