[(stack, 0xffffffffffffffcc, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21a733, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7390, 4) , (const, 0x0, 4)]
[(ram, 0x4c7390, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7390, 4) , (const, 0x0, 4)]
[(ram, 0x4c7390, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x21a756, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x127, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x127, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x127, 4)]
[(ram, 0x4c4810, 8) INDIRECT (ram, 0x4c4810, 8) , (const, 0x127, 4)]
[(ram, 0x4c7388, 8) INDIRECT (ram, 0x4c7388, 8) , (const, 0x127, 4)]
[(ram, 0x4c7390, 4) INDIRECT (ram, 0x4c7390, 4) , (const, 0x127, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x127, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x127, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x127, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x100000f5, 8), (unique, 0x100000f5, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7390, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffcc, 4) MULTIEQUAL (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7390, 4) MULTIEQUAL (ram, 0x4c7390, 4) , (ram, 0x4c7390, 4) , (ram, 0x4c7390, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000123, 8) COPY (ram, 0x4c7388, 8), (ram, 0x4c7388, 8) MULTIEQUAL (ram, 0x4c7388, 8) , (ram, 0x4c7388, 8) , (ram, 0x4c7388, 8)]
[ ---  CBRANCH (ram, 0x21a878, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4810, 8) , (const, 0x0, 8), (ram, 0x4c4810, 8) MULTIEQUAL (ram, 0x4c4810, 8) , (ram, 0x4c4810, 8) , (ram, 0x4c4810, 8)]
[(register, 0x18, 8) COPY (const, 0x400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10c, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x10c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x10c, 4)]
[(ram, 0x4c4810, 8) INDIRECT (ram, 0x4c4810, 8) , (const, 0x10c, 4)]
[(ram, 0x4c7388, 8) INDIRECT (ram, 0x4c7388, 8) , (const, 0x10c, 4), (ram, 0x4c7388, 8) COPY (const, 0x400, 8)]
[(ram, 0x4c7390, 4) INDIRECT (ram, 0x4c7390, 4) , (const, 0x10c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x10c, 4)]
[ ---  CBRANCH (ram, 0x21a76d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000157, 8), (unique, 0x10000157, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x400, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffcc, 4) MULTIEQUAL (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7390, 4) MULTIEQUAL (ram, 0x4c7390, 4) , (ram, 0x4c7390, 4)]
[(ram, 0x4c7388, 8) MULTIEQUAL (ram, 0x4c7388, 8) , (ram, 0x4c7388, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000123, 8) , (register, 0x18, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffcc, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(unique, 0x1000012b, 8) COPY (ram, 0x4c4810, 8), (ram, 0x4c4810, 8) MULTIEQUAL (ram, 0x4c4810, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x21a78a, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x5c, 4), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5c, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7388, 8) INDIRECT (ram, 0x4c7388, 8) , (const, 0x5c, 4), (ram, 0x4c7388, 8) MULTIEQUAL (ram, 0x4c7388, 8) , (ram, 0x4c7388, 8)]
[(ram, 0x4c7390, 4) INDIRECT (ram, 0x4c7390, 4) , (const, 0x5c, 4), (ram, 0x4c7390, 4) MULTIEQUAL (ram, 0x4c7390, 4) , (ram, 0x4c7390, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x5c, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x5c, 4), (stack, 0xffffffffffffffcc, 4) MULTIEQUAL (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x5c, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x1000011b, 8) COPY (ram, 0x4c4810, 8), (ram, 0x4c4810, 8) INDIRECT (ram, 0x4c4810, 8) , (const, 0x5c, 4), (ram, 0x4c4810, 8) COPY (unique, 0x1000013b, 8), (unique, 0x1000013b, 8) MULTIEQUAL (unique, 0x1000012b, 8) , (unique, 0x10000133, 8)]
[ ---  CBRANCH (ram, 0x21a868, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x21ac00, 8) , (register, 0x38, 8) , (unique, 0x100000e5, 8) , (ram, 0x4c4810, 8) , (register, 0x18, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x100000e5, 8) CAST (unique, 0x1000015f, 8), (unique, 0x1000015f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7370, 8), (ram, 0x4c4810, 8) COPY (unique, 0x1000013b, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100000d6, 8), (unique, 0x1000013b, 8) MULTIEQUAL (unique, 0x1000012b, 8) , (unique, 0x10000133, 8)]
[ ---  CBRANCH (ram, 0x21a868, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffcc, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x21a809, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4810, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x81, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x81, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x81, 4)]
[(ram, 0x4c4810, 8) INDIRECT (ram, 0x4c4810, 8) , (const, 0x81, 4)]
[(ram, 0x4c7388, 8) INDIRECT (unique, 0x10000143, 8) , (const, 0x81, 4), (unique, 0x10000143, 8) COPY (unique, 0x100000d6, 8), (unique, 0x100000d6, 8) INT_MULT (ram, 0x4c7388, 8) , (const, 0x2, 8)]
[(ram, 0x4c7390, 4) INDIRECT (ram, 0x4c7390, 4) , (const, 0x81, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x81, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x81, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x81, 4)]
[(unique, 0x10000133, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000167, 8), (unique, 0x10000167, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c4810, 8) , (unique, 0x100000d6, 8), (unique, 0x100000d6, 8) INT_MULT (ram, 0x4c7388, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x21a780, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000167, 8), (unique, 0x10000167, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c4810, 8) , (unique, 0x100000d6, 8), (unique, 0x100000d6, 8) INT_MULT (ram, 0x4c7388, 8) , (const, 0x2, 8)]
[(ram, 0x4c4810, 8) INDIRECT (ram, 0x4c4810, 8) , (const, 0x90, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x90, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x1000011b, 8)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x95, 4), (ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x90, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x95, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x90, 4)]
[(ram, 0x4c4810, 8) INDIRECT (ram, 0x4c4810, 8) , (const, 0x95, 4), (ram, 0x4c4810, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c7388, 8) INDIRECT (ram, 0x4c7388, 8) , (const, 0x95, 4), (ram, 0x4c7388, 8) INDIRECT (ram, 0x4c7388, 8) , (const, 0x90, 4)]
[(ram, 0x4c7390, 4) INDIRECT (ram, 0x4c7390, 4) , (const, 0x95, 4), (ram, 0x4c7390, 4) INDIRECT (ram, 0x4c7390, 4) , (const, 0x90, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x95, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x90, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000016f, 8) , (const, 0xc, 4), (unique, 0x1000016f, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x90, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x90, 4)]
[(stack, 0xffffffffffffffcc, 4) MULTIEQUAL (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7390, 4) MULTIEQUAL (ram, 0x4c7390, 4) , (ram, 0x4c7390, 4) , (ram, 0x4c7390, 4)]
[(ram, 0x4c7388, 8) MULTIEQUAL (ram, 0x4c7388, 8) , (ram, 0x4c7388, 8) , (ram, 0x4c7388, 8)]
[(ram, 0x4c4810, 8) MULTIEQUAL (ram, 0x4c4810, 8) , (register, 0x0, 8) , (ram, 0x4c4810, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffd0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffcc, 4) MULTIEQUAL (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4)]
[(ram, 0x4c7390, 4) MULTIEQUAL (ram, 0x4c7390, 4) , (ram, 0x4c7390, 4)]
[(ram, 0x4c7388, 8) MULTIEQUAL (ram, 0x4c7388, 8) , (ram, 0x4c7388, 8)]
[(ram, 0x4c4810, 8) MULTIEQUAL (ram, 0x4c4810, 8) , (ram, 0x4c4810, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x21a81d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000014f, 4) COPY (unique, 0x1000010d, 4), (unique, 0x1000010d, 4) INT_ADD (ram, 0x4c7390, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x21a83f, 1) , (unique, 0x10000111, 1), (unique, 0x10000111, 1) INT_NOTEQUAL (unique, 0x1000010d, 4) , (const, 0x0, 4), (unique, 0x1000010d, 4) INT_ADD (ram, 0x4c7390, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe6, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xe6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe6, 4)]
[(ram, 0x4c4810, 8) INDIRECT (ram, 0x4c4810, 8) , (const, 0xe6, 4)]
[(ram, 0x4c7388, 8) INDIRECT (ram, 0x4c7388, 8) , (const, 0xe6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe6, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x100000ed, 8), (unique, 0x100000ed, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7390, 8)]
[(unique, 0x1000014b, 4) COPY (ram, 0x4c7390, 4), (ram, 0x4c7390, 4) INDIRECT (ram, 0x4c7390, 4) , (const, 0xe6, 4), (ram, 0x4c7390, 4) INT_ADD (ram, 0x4c7390, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7388, 8) MULTIEQUAL (ram, 0x4c7388, 8) , (ram, 0x4c7388, 8)]
[(ram, 0x4c4810, 8) MULTIEQUAL (ram, 0x4c4810, 8) , (ram, 0x4c4810, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7390, 4) COPY (unique, 0x10000153, 4), (unique, 0x10000153, 4) MULTIEQUAL (unique, 0x1000014b, 4) , (unique, 0x1000014f, 4)]
[ ---  CBRANCH (ram, 0x21a851, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffcc, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffcc, 4) MULTIEQUAL (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xc0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc0, 4)]
[(ram, 0x4c4810, 8) INDIRECT (ram, 0x4c4810, 8) , (const, 0xc0, 4)]
[(ram, 0x4c7388, 8) INDIRECT (ram, 0x4c7388, 8) , (const, 0xc0, 4)]
[(ram, 0x4c7390, 4) INDIRECT (ram, 0x4c7390, 4) , (const, 0xc0, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000177, 8) , (stack, 0xffffffffffffffcc, 4), (unique, 0x10000177, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e68, 8) COPY (ram, 0x4c2e68, 8), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c4810, 8) COPY (ram, 0x4c4810, 8), (ram, 0x4c4810, 8) MULTIEQUAL (ram, 0x4c4810, 8) , (ram, 0x4c4810, 8)]
[(ram, 0x4c7388, 8) COPY (ram, 0x4c7388, 8), (ram, 0x4c7388, 8) MULTIEQUAL (ram, 0x4c7388, 8) , (ram, 0x4c7388, 8)]
[(ram, 0x4c7390, 4) COPY (ram, 0x4c7390, 4), (ram, 0x4c7390, 4) MULTIEQUAL (ram, 0x4c7390, 4) , (ram, 0x4c7390, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffd0, 8)]
