[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000016d, 8), (unique, 0x1000016d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffb4, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2370c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ef470, 4) , (const, 0x0, 4)]
[(ram, 0x4ef470, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ef470, 4) , (const, 0x0, 4)]
[(ram, 0x4ef470, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2370e6, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x148, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x148, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x148, 4)]
[(ram, 0x4ec950, 8) INDIRECT (ram, 0x4ec950, 8) , (const, 0x148, 4)]
[(ram, 0x4ef468, 8) INDIRECT (ram, 0x4ef468, 8) , (const, 0x148, 4)]
[(ram, 0x4ef470, 4) INDIRECT (ram, 0x4ef470, 4) , (const, 0x148, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x148, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x148, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x148, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x148, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000108, 8), (unique, 0x10000108, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef470, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef470, 4) MULTIEQUAL (ram, 0x4ef470, 4) , (ram, 0x4ef470, 4) , (ram, 0x4ef470, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000139, 8) COPY (ram, 0x4ef468, 8), (ram, 0x4ef468, 8) MULTIEQUAL (ram, 0x4ef468, 8) , (ram, 0x4ef468, 8) , (ram, 0x4ef468, 8)]
[ ---  CBRANCH (ram, 0x237218, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ec950, 8) , (const, 0x0, 8), (ram, 0x4ec950, 8) MULTIEQUAL (ram, 0x4ec950, 8) , (ram, 0x4ec950, 8) , (ram, 0x4ec950, 8)]
[(register, 0x18, 8) COPY (const, 0x400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12d, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x12d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12d, 4)]
[(ram, 0x4ec950, 8) INDIRECT (ram, 0x4ec950, 8) , (const, 0x12d, 4)]
[(ram, 0x4ef468, 8) INDIRECT (ram, 0x4ef468, 8) , (const, 0x12d, 4), (ram, 0x4ef468, 8) COPY (const, 0x400, 8)]
[(ram, 0x4ef470, 4) INDIRECT (ram, 0x4ef470, 4) , (const, 0x12d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x12d, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x12d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x12d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12d, 4)]
[ ---  CBRANCH (ram, 0x2370fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000175, 8), (unique, 0x10000175, 8) CALL (ram, 0x1212c0, 8) , (const, 0x400, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef470, 4) MULTIEQUAL (ram, 0x4ef470, 4) , (ram, 0x4ef470, 4)]
[(ram, 0x4ef468, 8) MULTIEQUAL (ram, 0x4ef468, 8) , (ram, 0x4ef468, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000139, 8) , (register, 0x18, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb4, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x10000141, 8) COPY (ram, 0x4ec950, 8), (ram, 0x4ec950, 8) MULTIEQUAL (ram, 0x4ec950, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x237117, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x66, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x66, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x66, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef468, 8) INDIRECT (ram, 0x4ef468, 8) , (const, 0x66, 4), (ram, 0x4ef468, 8) MULTIEQUAL (ram, 0x4ef468, 8) , (ram, 0x4ef468, 8)]
[(ram, 0x4ef470, 4) INDIRECT (ram, 0x4ef470, 4) , (const, 0x66, 4), (ram, 0x4ef470, 4) MULTIEQUAL (ram, 0x4ef470, 4) , (ram, 0x4ef470, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x66, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x66, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x66, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x66, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000131, 8) COPY (ram, 0x4ec950, 8), (ram, 0x4ec950, 8) INDIRECT (ram, 0x4ec950, 8) , (const, 0x66, 4), (ram, 0x4ec950, 8) COPY (unique, 0x10000151, 8), (unique, 0x10000151, 8) MULTIEQUAL (unique, 0x10000141, 8) , (unique, 0x10000149, 8)]
[ ---  CBRANCH (ram, 0x237208, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x2375b0, 8) , (register, 0x38, 8) , (unique, 0x100000f8, 8) , (ram, 0x4ec950, 8) , (register, 0x18, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x100000f8, 8) CAST (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef450, 8), (ram, 0x4ec950, 8) COPY (unique, 0x10000151, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100000e7, 8), (unique, 0x10000151, 8) MULTIEQUAL (unique, 0x10000141, 8) , (unique, 0x10000149, 8)]
[ ---  CBRANCH (ram, 0x237208, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb4, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x237195, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ec950, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8b, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x8b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8b, 4)]
[(ram, 0x4ec950, 8) INDIRECT (ram, 0x4ec950, 8) , (const, 0x8b, 4)]
[(ram, 0x4ef468, 8) INDIRECT (unique, 0x10000159, 8) , (const, 0x8b, 4), (unique, 0x10000159, 8) COPY (unique, 0x100000e7, 8), (unique, 0x100000e7, 8) INT_MULT (ram, 0x4ef468, 8) , (const, 0x2, 8)]
[(ram, 0x4ef470, 4) INDIRECT (ram, 0x4ef470, 4) , (const, 0x8b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x8b, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x8b, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x8b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8b, 4)]
[(unique, 0x10000149, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000185, 8), (unique, 0x10000185, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec950, 8) , (unique, 0x100000e7, 8), (unique, 0x100000e7, 8) INT_MULT (ram, 0x4ef468, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x237110, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000185, 8), (unique, 0x10000185, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec950, 8) , (unique, 0x100000e7, 8), (unique, 0x100000e7, 8) INT_MULT (ram, 0x4ef468, 8) , (const, 0x2, 8)]
[(ram, 0x4ec950, 8) INDIRECT (ram, 0x4ec950, 8) , (const, 0x9b, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x9b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9b, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0x10000131, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xa0, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x9b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa0, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9b, 4)]
[(ram, 0x4ec950, 8) INDIRECT (ram, 0x4ec950, 8) , (const, 0xa0, 4), (ram, 0x4ec950, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ef468, 8) INDIRECT (ram, 0x4ef468, 8) , (const, 0xa0, 4), (ram, 0x4ef468, 8) INDIRECT (ram, 0x4ef468, 8) , (const, 0x9b, 4)]
[(ram, 0x4ef470, 4) INDIRECT (ram, 0x4ef470, 4) , (const, 0xa0, 4), (ram, 0x4ef470, 4) INDIRECT (ram, 0x4ef470, 4) , (const, 0x9b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xa0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x9b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000018d, 8) , (const, 0xc, 4), (unique, 0x1000018d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9b, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef470, 4) MULTIEQUAL (ram, 0x4ef470, 4) , (ram, 0x4ef470, 4) , (ram, 0x4ef470, 4)]
[(ram, 0x4ef468, 8) MULTIEQUAL (ram, 0x4ef468, 8) , (ram, 0x4ef468, 8) , (ram, 0x4ef468, 8)]
[(ram, 0x4ec950, 8) MULTIEQUAL (ram, 0x4ec950, 8) , (register, 0x0, 8) , (ram, 0x4ec950, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4ef470, 4) MULTIEQUAL (ram, 0x4ef470, 4) , (ram, 0x4ef470, 4)]
[(ram, 0x4ef468, 8) MULTIEQUAL (ram, 0x4ef468, 8) , (ram, 0x4ef468, 8)]
[(ram, 0x4ec950, 8) MULTIEQUAL (ram, 0x4ec950, 8) , (ram, 0x4ec950, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x2371a9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000165, 4) COPY (unique, 0x10000120, 4), (unique, 0x10000120, 4) INT_ADD (ram, 0x4ef470, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x2371cb, 1) , (unique, 0x10000124, 1), (unique, 0x10000124, 1) INT_NOTEQUAL (unique, 0x10000120, 4) , (const, 0x0, 4), (unique, 0x10000120, 4) INT_ADD (ram, 0x4ef470, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x108, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x108, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x108, 4)]
[(ram, 0x4ec950, 8) INDIRECT (ram, 0x4ec950, 8) , (const, 0x108, 4)]
[(ram, 0x4ef468, 8) INDIRECT (ram, 0x4ef468, 8) , (const, 0x108, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x108, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000100, 8), (unique, 0x10000100, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef470, 8)]
[(unique, 0x10000161, 4) COPY (ram, 0x4ef470, 4), (ram, 0x4ef470, 4) INDIRECT (ram, 0x4ef470, 4) , (const, 0x108, 4), (ram, 0x4ef470, 4) INT_ADD (ram, 0x4ef470, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef468, 8) MULTIEQUAL (ram, 0x4ef468, 8) , (ram, 0x4ef468, 8)]
[(ram, 0x4ec950, 8) MULTIEQUAL (ram, 0x4ec950, 8) , (ram, 0x4ec950, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ef470, 4) COPY (unique, 0x10000169, 4), (unique, 0x10000169, 4) MULTIEQUAL (unique, 0x10000161, 4) , (unique, 0x10000165, 4)]
[ ---  CBRANCH (ram, 0x2371dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb4, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xcb, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xcb, 4)]
[(ram, 0x4ec950, 8) INDIRECT (ram, 0x4ec950, 8) , (const, 0xcb, 4)]
[(ram, 0x4ef468, 8) INDIRECT (ram, 0x4ef468, 8) , (const, 0xcb, 4)]
[(ram, 0x4ef470, 4) INDIRECT (ram, 0x4ef470, 4) , (const, 0xcb, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xcb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000195, 8) , (stack, 0xffffffffffffffb4, 4), (unique, 0x10000195, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae50, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef470, 4) MULTIEQUAL (ram, 0x4ef470, 4) , (ram, 0x4ef470, 4)]
[(ram, 0x4ef468, 8) MULTIEQUAL (ram, 0x4ef468, 8) , (ram, 0x4ef468, 8)]
[(ram, 0x4ec950, 8) MULTIEQUAL (ram, 0x4ec950, 8) , (ram, 0x4ec950, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x0, 8) COPY (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x23724a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000019d, 8), (unique, 0x1000019d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf9, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xf9, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf9, 4)]
[(ram, 0x4ec950, 8) COPY (ram, 0x4ec950, 8), (ram, 0x4ec950, 8) INDIRECT (ram, 0x4ec950, 8) , (const, 0xf9, 4)]
[(ram, 0x4ef468, 8) COPY (ram, 0x4ef468, 8), (ram, 0x4ef468, 8) INDIRECT (ram, 0x4ef468, 8) , (const, 0xf9, 4)]
[(ram, 0x4ef470, 4) COPY (ram, 0x4ef470, 4), (ram, 0x4ef470, 4) INDIRECT (ram, 0x4ef470, 4) , (const, 0xf9, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf9, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ec950, 8) COPY (ram, 0x4ec950, 8)]
[(ram, 0x4ef468, 8) COPY (ram, 0x4ef468, 8)]
[(ram, 0x4ef470, 4) COPY (ram, 0x4ef470, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
