[(register, 0x1200, 32) CALLOTHER (const, 0x274, 4) , (unique, 0xbaa00, 16), (unique, 0xbaa00, 16) CALLOTHER (const, 0x147, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x28ab00, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x20, 8), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28aac3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 4) INT_AND (unique, 0x100000d2, 4) , (const, 0x1f, 4), (unique, 0x100000d2, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(register, 0x8, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x28aad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ea, 8) , (const, 0x0, 8), (unique, 0x100000ea, 8) INT_AND (unique, 0x100002b0, 8) , (const, 0x1f, 8), (unique, 0x100002b0, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28aac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x10, 4) INT_SUB (unique, 0x100000a0, 4) , (const, 0x1, 4), (unique, 0x100000a0, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_SUB (unique, 0x1b080, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x10000245, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000245, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(register, 0x80, 8) INT_ZEXT (register, 0x8, 4)]
[(register, 0x38, 8) CAST (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) INT_AND (unique, 0x100002b8, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x100002b8, 8) CAST (register, 0x38, 8)]
[(register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x28ab50, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_SUB (register, 0x30, 4) , (const, 0x20, 4), (register, 0x200, 1) INT_LESS (register, 0x30, 4) , (const, 0x20, 4), (register, 0x30, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x28aa50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_LEFT (const, 0x1, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x8, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28aac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (register, 0x8, 1), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_SUB (unique, 0x1b080, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x1000027d, 8) , (unique, 0x10000275, 8) , (const, 0x1, 8), (unique, 0x1000027d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x10000275, 8) INT_ADD (register, 0x80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  CBRANCH (ram, 0x28aac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_LEFT (const, 0x1, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (register, 0x8, 1), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_SUB (unique, 0x1b080, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x1000025d, 8) , (unique, 0x10000255, 8) , (const, 0x1, 8), (unique, 0x1000025d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x10000255, 8) INT_ADD (register, 0x80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x100002a8, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) PTRADD (unique, 0x1000012d, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000012d, 8) PTRSUB (unique, 0x10000125, 8) , (const, 0x0, 8), (unique, 0x10000125, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28aa40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) PTRADD (unique, 0x1000012d, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000012d, 8) PTRSUB (unique, 0x10000125, 8) , (const, 0x0, 8), (unique, 0x10000125, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x100000c2, 4) , (const, 0x1f, 4), (unique, 0x100000c2, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28a880, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000da, 8) , (const, 0x0, 8), (unique, 0x100000da, 8) INT_AND (unique, 0x100002d0, 8) , (const, 0x1f, 8), (unique, 0x100002d0, 8) CAST (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) CAST (unique, 0x100002e0, 8), (unique, 0x100002e0, 8) INT_AND (unique, 0x100002d8, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x100002d8, 8) CAST (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x20, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x8, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28a970, 1) , (unique, 0x1000028d, 1), (unique, 0x1000028d, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x80, 8), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x28aa70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28aa60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28aa50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28aa40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1280, 32), (register, 0x1280, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100002a8, 8) , (register, 0x38, 8)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_SUB (unique, 0x1b080, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x100001e5, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100001e5, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x100000ca, 4) , (const, 0x7f, 4), (unique, 0x100000ca, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(unique, 0x10000290, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28a8f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000e2, 8) , (const, 0x0, 8), (unique, 0x100000e2, 8) INT_AND (unique, 0x100002e8, 8) , (const, 0x7f, 8), (unique, 0x100002e8, 8) CAST (register, 0x38, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x8, 8)]
[(unique, 0x10000298, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) INT_AND (unique, 0x100002f0, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x100002f0, 8) CAST (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x20, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000290, 8) , (unique, 0x10000298, 8) , (unique, 0x100002a0, 8)]
[ ---  CBRANCH (ram, 0x28a970, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x80, 8), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100002a0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28a8f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x12a0, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x12c0, 32) , (register, 0x12a0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1280, 32) , (register, 0x1260, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1240, 32) , (register, 0x1220, 32), (register, 0x1280, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1280, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1260, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1240, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1220, 32), (register, 0x1280, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x20, 8), (register, 0x1240, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x20, 8), (register, 0x1220, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28aa70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1280, 32)]
[ ---  CBRANCH (ram, 0x28aa60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32)]
[ ---  CBRANCH (ram, 0x28aa50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_SUB (unique, 0x1b080, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x1000018d, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000018d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x100001f5, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100001f5, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0x20, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x80, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x28a9f0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 4) , (const, 0x41, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x80, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x28aaa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_SUB (unique, 0x1b080, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CBRANCH (ram, 0x28aac0, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000300, 8) , (const, 0x0, 8), (unique, 0x10000300, 8) CAST (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x10000235, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000235, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0x60, 4)]
[ ---  CBRANCH (ram, 0x28aac0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x20, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x28aac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_SUB (unique, 0x1b080, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CBRANCH (ram, 0x28aac0, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000308, 8) , (const, 0x0, 8), (unique, 0x10000308, 8) CAST (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x40, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x100001d5, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100001d5, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0x40, 4)]
[ ---  CBRANCH (ram, 0x28aa70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x10000215, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000215, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0x60, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  CBRANCH (ram, 0x28aa60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x10000205, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000205, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0x40, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  CBRANCH (ram, 0x28aa80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_SUB (unique, 0x1b080, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CBRANCH (ram, 0x28aac0, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000318, 8) , (const, 0x0, 8), (unique, 0x10000318, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x20b, 1) INT_SCARRY (unique, 0x10000310, 8) , (register, 0x0, 8), (unique, 0x10000310, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (unique, 0x1000011d, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000011d, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffa0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x10000225, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000225, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x28aac0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x60, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x28aac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1280, 32), (register, 0x1280, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_SUB (unique, 0x1b080, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CBRANCH (ram, 0x28aac0, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000320, 8) , (const, 0x0, 8), (unique, 0x10000320, 8) CAST (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x80, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x100001b5, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100001b5, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
