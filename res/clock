[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x1d, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x1d, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1d, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000004c, 8), (unique, 0x1000004c, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1d1497, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x230e80, 8) , (const, 0x2, 4) , (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0x10000022, 8) , (register, 0x8, 8), (unique, 0x10000022, 8) INT_SDIV (stack, 0xffffffffffffffe0, 8) , (const, 0x3e8, 8), (register, 0x8, 8) INT_MULT (stack, 0xffffffffffffffd8, 8) , (const, 0xf4240, 8)]
[(register, 0x0, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1d14af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000054, 8), (unique, 0x10000054, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xb7, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
