[ ---  CBRANCH (ram, 0x1959b8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x11, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003b4, 8), (unique, 0x100003b4, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1959b8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003bc, 8), (unique, 0x100003bc, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x222, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000291, 8), (unique, 0x10000291, 8) COPY (const, 0x2b4e9e, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x43d, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x43d, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4), (register, 0xa8, 4) INT_AND (register, 0xa8, 4) , (const, 0x2, 4), (register, 0xa8, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1957b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000023b, 8) , (const, 0x0, 8), (unique, 0x1000023b, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0x11b0, 8)]
[ ---  CBRANCH (ram, 0x1957e4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003c4, 8), (unique, 0x100003c4, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b4eba, 8)]
[(register, 0x38, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x100003cc, 8), (unique, 0x100003cc, 8) INT_ADD (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1959a8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x11, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x100003cc, 8), (unique, 0x100003cc, 8) INT_ADD (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1959a8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000299, 8), (unique, 0x10000299, 8) COPY (const, 0x2b4ed3, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x40d, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x40d, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x100003a4, 8) COPY (register, 0x10, 8)]
[(unique, 0x100003ac, 8) COPY (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x195828, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1958d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003d4, 8), (unique, 0x100003d4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1959c8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (register, 0x10, 8), (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x20, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0xa8, 4) , (const, 0x7, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100003dc, 8), (unique, 0x100003dc, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1959e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100002c9, 8), (unique, 0x100002c9, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(register, 0xa8, 8) COPY (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100003e4, 8), (unique, 0x100003e4, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003ec, 8) , (unique, 0x3400, 8), (unique, 0x100003ec, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) CAST (unique, 0x100003f4, 8), (unique, 0x100003f4, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8), (register, 0x38, 8) INT_OR (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_SUB (register, 0x38, 8) , (register, 0x8, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x408, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x405, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x3ff, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x408, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x405, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3ff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1958e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000040c, 8), (unique, 0x1000040c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000404, 8), (unique, 0x10000404, 8) INT_ADD (unique, 0x100003fc, 8) , (register, 0x38, 8), (unique, 0x100003fc, 8) CAST (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1958e0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x195ac3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000279, 8), (unique, 0x10000279, 8) COPY (const, 0x2b4c9d, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x228, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x228, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x195ab7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000414, 8), (unique, 0x10000414, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x195ab7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000041c, 8), (unique, 0x1000041c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000281, 8), (unique, 0x10000281, 8) COPY (const, 0x2b4cba, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x222, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x222, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000424, 8), (unique, 0x10000424, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x19d, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x19a, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x19d, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x19a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x1000042c, 8), (unique, 0x1000042c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x195893, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x400, 8)]
[ ---  CBRANCH (ram, 0x195acf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000434, 8), (unique, 0x10000434, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x1000043c, 8), (unique, 0x1000043c, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3400, 8)]
[ ---  BRANCH (ram, 0x195749, 1)]
[ ---  CBRANCH (ram, 0x195b03, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000444, 8), (unique, 0x10000444, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x195b03, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000044c, 8), (unique, 0x1000044c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x100002a1, 8), (unique, 0x100002a1, 8) COPY (const, 0x2b8420, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x21c, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x21c, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x3400, 8) CAST (unique, 0x1000045c, 8), (unique, 0x1000045c, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x195b0f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000454, 8), (unique, 0x10000454, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x195b39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000464, 8), (unique, 0x10000464, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x215, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x212, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x215, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x212, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x1000046c, 8), (unique, 0x1000046c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x195749, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000474, 8), (unique, 0x10000474, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x1000047c, 8), (unique, 0x1000047c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000484, 8), (unique, 0x10000484, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x20d, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x206, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x203, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1fd, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x20d, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x206, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x203, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1fd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x1000048c, 8), (unique, 0x1000048c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x195749, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1ee, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1e7, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1ee, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1e7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000494, 8), (unique, 0x10000494, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x3400, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x195749, 1)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x235, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x235, 4)]
[ ---  CBRANCH (ram, 0x1957a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000049c, 8), (unique, 0x1000049c, 8) CALL (ram, 0x1942d0, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0xf, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x195a20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3400, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x195a78, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 4) , (register, 0x8, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x3, 4), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0x11f5, 8)]
[ ---  CBRANCH (ram, 0x195aa4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004a4, 8), (unique, 0x100004a4, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b4ef0, 8)]
[ ---  BRANCH (ram, 0x1957f2, 1)]
[ ---  CBRANCH (ram, 0x195a08, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2fc, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2fc, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) CAST (unique, 0x100004ac, 8), (unique, 0x100004ac, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x195990, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004b4, 8), (unique, 0x100004b4, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004bc, 8), (unique, 0x100004bc, 8) INT_ADD (register, 0x30, 8) , (const, 0x18, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2b1, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2ab, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2a5, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2b1, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2ab, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2a5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004c4, 8), (unique, 0x100004c4, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x195990, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x4, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004cc, 8), (unique, 0x100004cc, 8) INT_ADD (register, 0x30, 8) , (const, 0x28, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2c8, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2c2, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2c8, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2c2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004d4, 8), (unique, 0x100004d4, 8) INT_ADD (register, 0x30, 8) , (const, 0x30, 8)]
[ ---  CBRANCH (ram, 0x195990, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x6, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004dc, 8), (unique, 0x100004dc, 8) INT_ADD (register, 0x30, 8) , (const, 0x38, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2df, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2d9, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2df, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2d9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004e4, 8), (unique, 0x100004e4, 8) INT_ADD (register, 0x30, 8) , (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x195990, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004ec, 8), (unique, 0x100004ec, 8) INT_ADD (register, 0x30, 8) , (const, 0x48, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2ed, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2e7, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2ed, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2e7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004f4, 8), (unique, 0x100004f4, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8)]
[ ---  CALL (ram, 0x192c60, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2f5, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2f5, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x195b4c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0x1219, 8)]
[ ---  CBRANCH (ram, 0x195a60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004fc, 8), (unique, 0x100004fc, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b8ce0, 8)]
[ ---  BRANCH (ram, 0x1957f2, 1)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x100002a9, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (unique, 0x10000289, 8) , (register, 0x88, 8) , (unique, 0x100002b1, 8) , (unique, 0x10000271, 8) , (stack, 0xffffffffffffffb8, 8), (unique, 0x100002b1, 8) COPY (const, 0x2b9048, 8), (unique, 0x100002a9, 8) COPY (const, 0x2b8758, 8), (unique, 0x10000289, 8) COPY (const, 0x2b4cf8, 8), (unique, 0x10000271, 8) COPY (const, 0x2b3ed0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000504, 8), (unique, 0x10000504, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x341, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x353, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x350, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x341, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x353, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x350, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x341, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000050c, 8), (unique, 0x1000050c, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000514, 8), (unique, 0x10000514, 8) INT_ADD (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x195749, 1)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100003ac, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1958a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (const, 0x20, 8), (register, 0x38, 8) INT_SUB (register, 0x10, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100003a4, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1958b3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100002c1, 8), (unique, 0x100002c1, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(register, 0xa8, 8) COPY (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000051c, 8), (unique, 0x1000051c, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x125, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x11f, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x125, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x11f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x19579e, 1)]
[(unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x195773, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100002b9, 8), (unique, 0x100002b9, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(register, 0xa8, 8) COPY (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000524, 8), (unique, 0x10000524, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000052c, 8), (unique, 0x1000052c, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_OR (register, 0x38, 8) , (const, 0x1, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xe2, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xd6, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xd0, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xb9, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xe2, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xd6, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xd0, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xb9, 4)]
[ ---  CALL (ram, 0x192c60, 8) , (register, 0x38, 8) , (unique, 0x3400, 8) , (const, 0x1, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000534, 8), (unique, 0x10000534, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)]
