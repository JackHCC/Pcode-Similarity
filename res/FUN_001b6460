[(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b6486, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000004, 8) , (const, 0x0, 8), (unique, 0x10000004, 8) INT_AND (unique, 0x10000065, 8) , (const, 0x7, 8), (unique, 0x10000065, 8) CAST (register, 0x30, 8)]
[(register, 0x8, 4) INT_SUB (const, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000075, 8) , (unique, 0xba80, 1), (unique, 0x10000075, 8) CAST (register, 0x10, 8), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000006d, 8), (unique, 0x1000006d, 8) CAST (register, 0x30, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b6538, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (const, 0x0, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000006d, 8), (unique, 0x1000006d, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10000085, 8), (unique, 0x10000085, 8) INT_ADD (unique, 0x1000007d, 8) , (const, 0x1, 8), (unique, 0x1000007d, 8) CAST (register, 0x30, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000095, 8), (unique, 0x10000095, 8) INT_ADD (unique, 0x1000008d, 8) , (const, 0x1, 8), (unique, 0x1000008d, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b6470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000055, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x38, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b6520, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b6520, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x88, 8) INT_XOR (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b6520, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b6520, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x88, 8) INT_XOR (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b6520, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b6520, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x88, 8) INT_XOR (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b6520, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b6520, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x88, 8) INT_XOR (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000009d, 8) , (register, 0x0, 1), (unique, 0x1000009d, 8) CAST (register, 0x10, 8), (register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000055, 8) , (unique, 0x10000055, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b6538, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000b5, 8) , (register, 0x1, 1), (unique, 0x100000b5, 8) CAST (register, 0x10, 8), (register, 0x1, 1) SUBPIECE (unique, 0x1000004d, 8) , (const, 0x0, 4), (unique, 0x1000004d, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4), (register, 0x10, 8) CAST (unique, 0x100000ad, 8), (unique, 0x100000ad, 8) INT_ADD (unique, 0x100000a5, 8) , (const, 0x1, 8), (unique, 0x100000a5, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b6538, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x1, 1) , (const, 0x0, 1), (register, 0x1, 1) SUBPIECE (unique, 0x1000004d, 8) , (const, 0x0, 4), (unique, 0x1000004d, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x100000c5, 8), (unique, 0x100000c5, 8) INT_ADD (unique, 0x100000bd, 8) , (const, 0x2, 8), (unique, 0x100000bd, 8) CAST (register, 0x10, 8)]
[(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x10, 4)]
[ ---  BRANCH (ram, 0x1b6520, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1b6490, 1)]
