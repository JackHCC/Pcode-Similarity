[(unique, 0x100000f2, 8) COPY (ram, 0x4c56d8, 8)]
[(unique, 0x1000013a, 8) COPY (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) CAST (ram, 0x4c56d8, 8)]
[ ---  CBRANCH (ram, 0x4189d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000142, 8), (unique, 0x10000142, 8) CAST (ram, 0x4c56d8, 8)]
[ ---  CBRANCH (ram, 0x4189b1, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000015a, 8), (unique, 0x1000015a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c56d8, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000152, 8), (unique, 0x10000152, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c56d8, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x418aa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000172, 8), (unique, 0x10000172, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000016a, 8), (unique, 0x1000016a, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000162, 8), (unique, 0x10000162, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c56d8, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x418ab0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000017a, 8), (unique, 0x1000017a, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x19d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a2, 4)]
[(ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x1a2, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x418990, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x51, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x58, 4), (ram, 0x4c56d8, 8) MULTIEQUAL (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000192, 8) , (unique, 0xbd80, 8), (unique, 0x10000192, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000018a, 8), (unique, 0x1000018a, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x100000f2, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[(unique, 0x1000010a, 8) COPY (unique, 0x100000fa, 8), (unique, 0x100000fa, 8) COPY (unique, 0x10000182, 8), (unique, 0x10000182, 8) CAST (ram, 0x4c56d8, 8), (ram, 0x4c56d8, 8) MULTIEQUAL (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x60, 4), (ram, 0x4c56d8, 8) MULTIEQUAL (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000011a, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000010a, 8) , (unique, 0x1000013a, 8)]
[(unique, 0x1000012a, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000010a, 8) , (unique, 0x1000013a, 8)]
[ ---  CBRANCH (ram, 0x4189dd, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000019a, 8), (unique, 0x1000019a, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000010a, 8) , (unique, 0x1000013a, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x7d, 4), (ram, 0x4c56d8, 8) MULTIEQUAL (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8)]
[ ---  CBRANCH (ram, 0x4189e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x41ec20, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000012a, 8) , (unique, 0x1000013a, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x182, 4), (ram, 0x4c56d8, 8) MULTIEQUAL (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001a2, 8), (unique, 0x100001a2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000011a, 8) , (unique, 0x1000013a, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c56d8, 8) MULTIEQUAL (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000102, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x418a40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001b2, 8) , (register, 0x10, 4), (unique, 0x100001b2, 8) CAST (ram, 0x4c56d8, 8), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffffdf, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001aa, 8), (unique, 0x100001aa, 8) CAST (ram, 0x4c56d8, 8)]
[(register, 0xa0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x20, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001aa, 8), (unique, 0x100001aa, 8) CAST (ram, 0x4c56d8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x155, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x478390, 8) , (ram, 0x4c56d8, 8) , (unique, 0x3100, 8) , (const, 0x7fffffff, 8) , (const, 0xa, 8), (ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x151, 4), (ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x143, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4189bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000006f, 4) , (const, 0x0, 4), (unique, 0x1000006f, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x20, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ba, 8), (unique, 0x100001ba, 8) CAST (ram, 0x4c56d8, 8), (ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x155, 4), (ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x151, 4), (ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x143, 4)]
[(ram, 0x4c56d8, 8) MULTIEQUAL (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001c2, 8), (unique, 0x100001c2, 8) CAST (unique, 0x100000f2, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x17c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ca, 8) , (register, 0xa0, 4), (unique, 0x100001ca, 8) CAST (ram, 0x4c56d8, 8), (register, 0xa0, 4) INT_OR (register, 0xa0, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x4189f0, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0x118, 4), (ram, 0x4c56d8, 8) MULTIEQUAL (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 1), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000102, 8) , (unique, 0x3400, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001d2, 8), (unique, 0x100001d2, 8) CAST (unique, 0x100000f2, 8)]
[(unique, 0x1000008a, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x38, 8)]
[(unique, 0x10000092, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000009a, 8) MULTIEQUAL (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8)]
[ ---  CBRANCH (ram, 0x418a03, 1) , (unique, 0x10000089, 1), (unique, 0x10000089, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c56d8, 8) INDIRECT (unique, 0x1000009a, 8) , (const, 0xbb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001da, 8), (unique, 0x100001da, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x100000f2, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4189c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001da, 8), (unique, 0x100001da, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x100000f2, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[(ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0xc0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001e2, 8) , (const, 0x0, 8), (unique, 0x100001e2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x418ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ea, 8), (unique, 0x100001ea, 8) INT_ADD (unique, 0x10000092, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c56d8, 8) COPY (ram, 0x4c56d8, 8), (ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0xd6, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x1000008a, 8)]
[(ram, 0x4c56d8, 8) INDIRECT (ram, 0x4c56d8, 8) , (const, 0xed, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4189c7, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x4189c7, 1)]
[(ram, 0x4c56d8, 8) COPY (ram, 0x4c56d8, 8), (ram, 0x4c56d8, 8) MULTIEQUAL (unique, 0x1000009a, 8) , (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8) , (ram, 0x4c56d8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x1000008a, 8)]
