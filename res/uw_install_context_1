[ ---  CBRANCH (ram, 0x49396c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000141, 8), (unique, 0x10000141, 8) INT_ADD (register, 0x30, 8) , (const, 0xc7, 8)]
[(unique, 0x10000129, 8) COPY (stack, 0xfffffffffffffff0, 8)]
[ ---  CBRANCH (ram, 0x493977, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000149, 8), (unique, 0x10000149, 8) INT_ADD (register, 0x30, 8) , (const, 0xdf, 8)]
[(unique, 0x10000131, 8) COPY (stack, 0xfffffffffffffff0, 8)]
[ ---  CBRANCH (ram, 0x493a6a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000151, 8), (unique, 0x10000151, 8) INT_ADD (register, 0x30, 8) , (const, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000159, 8), (unique, 0x10000159, 8) INT_ADD (register, 0x30, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x401785, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8107, 1) , (const, 0x8, 1)]
[ ---  CBRANCH (ram, 0x493a95, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000161, 8), (unique, 0x10000161, 8) INT_ADD (register, 0x30, 8) , (const, 0xc7, 8)]
[(ram, 0x4c8107, 1) INDIRECT (ram, 0x4c8107, 1) , (const, 0x23d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x0, 1), (unique, 0x3200, 8) CAST (unique, 0x10000169, 8), (unique, 0x10000169, 8) INT_ADD (register, 0x30, 8) , (const, 0xdf, 8)]
[(ram, 0x4c8107, 1) INDIRECT (ram, 0x4c8107, 1) , (const, 0x242, 4), (ram, 0x4c8107, 1) MULTIEQUAL (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3800, 8), (unique, 0x3100, 8) CAST (unique, 0x10000171, 8), (unique, 0x10000171, 8) INT_ADD (register, 0x30, 8) , (const, 0x38, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffff0, 8)]
[(unique, 0x10000139, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493977, 1)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (unique, 0x10000129, 8) , (unique, 0x10000131, 8) , (unique, 0x10000139, 8)]
[(ram, 0x4c8107, 1) MULTIEQUAL (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x4939a9, 1)]
[(ram, 0x4c8107, 1) MULTIEQUAL (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000181, 8), (unique, 0x10000181, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000189, 8), (unique, 0x10000189, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x401785, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8), (unique, 0x3e80, 8) CAST (unique, 0x10000179, 8), (unique, 0x10000179, 8) INT_ADD (unique, 0x3d00, 8) , (register, 0x0, 8), (unique, 0x3d00, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x493988, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8), (unique, 0x3e80, 8) CAST (unique, 0x10000191, 8), (unique, 0x10000191, 8) INT_ADD (unique, 0x3d00, 8) , (register, 0x0, 8), (unique, 0x3d00, 8) INT_ADD (register, 0x30, 8) , (const, 0xd8, 8)]
[ ---  CBRANCH (ram, 0x49399b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x401785, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000a1, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000a1, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8100, 8)]
[(ram, 0x4c8107, 1) INDIRECT (ram, 0x4c8107, 1) , (const, 0x21d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x49399b, 1) , (unique, 0x10000092, 1), (unique, 0x10000092, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x49399b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000a9, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000a9, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8100, 8)]
[ ---  CBRANCH (ram, 0x493a10, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (const, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000a9, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000a9, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8100, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c8107, 1) INDIRECT (ram, 0x4c8107, 1) , (const, 0x198, 4), (ram, 0x4c8107, 1) INDIRECT (ram, 0x4c8107, 1) , (const, 0x18e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) INT_ADD (unique, 0x100001a9, 8) , (unique, 0x100000c9, 8), (unique, 0x100001a9, 8) CAST (unique, 0xbd80, 8), (unique, 0x100000c9, 8) INT_SUB (register, 0x8, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) INT_ADD (unique, 0x10000199, 8) , (unique, 0x100000c1, 8), (unique, 0x10000199, 8) CAST (unique, 0xbd80, 8), (unique, 0x100000c1, 8) INT_SUB (register, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0x10000109, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x100001f1, 8), (unique, 0x100001f1, 8) INT_SUB (unique, 0x100001e1, 8) , (unique, 0x100001e9, 8), (unique, 0x100001e9, 8) CAST (register, 0x10, 8), (unique, 0x100001e1, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 8) CAST (unique, 0x100001d9, 8), (unique, 0x100001d9, 8) INT_SUB (unique, 0x100001c9, 8) , (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) CAST (register, 0x38, 8), (unique, 0x100001c9, 8) CAST (unique, 0xbd80, 8), (register, 0x38, 8) CAST (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) INT_AND (unique, 0x100001b9, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001b9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000119, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) INT_AND (unique, 0x100001b9, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001b9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) CAST (unique, 0x100001d9, 8), (unique, 0x100001d9, 8) INT_SUB (unique, 0x100001c9, 8) , (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) CAST (register, 0x38, 8), (unique, 0x100001c9, 8) CAST (unique, 0xbd80, 8), (register, 0x38, 8) CAST (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) INT_AND (unique, 0x100001b9, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001b9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c8107, 1) MULTIEQUAL (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000119, 8) , (unique, 0x10000121, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000109, 8) , (unique, 0x10000111, 8)]
[ ---  CBRANCH (ram, 0x493a3a, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4939a9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x11, 8)]
[(ram, 0x4c8107, 1) INDIRECT (ram, 0x4c8107, 1) , (const, 0x1f5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xae00, 8), (unique, 0xae00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x10000111, 8) COPY (unique, 0xac00, 8), (unique, 0xac00, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000121, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x493a37, 1)]
[ ---  CBRANCH (ram, 0x493aa3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000096, 1) , (const, 0x0, 1), (unique, 0x10000096, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000201, 8) , (unique, 0xbc80, 4), (unique, 0x10000201, 8) CAST (unique, 0xbd80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f9, 8), (unique, 0x100001f9, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4c8107, 1) INDIRECT (ram, 0x4c8107, 1) , (const, 0x180, 4), (ram, 0x4c8107, 1) INDIRECT (ram, 0x4c8107, 1) , (const, 0x175, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) CAST (unique, 0x10000221, 8), (unique, 0x10000221, 8) INT_ADD (unique, 0x10000219, 8) , (unique, 0x100000f9, 8), (unique, 0x10000219, 8) CAST (unique, 0xbd80, 8), (unique, 0x100000f9, 8) INT_SUB (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000211, 8), (unique, 0x10000211, 8) INT_ADD (unique, 0x10000209, 8) , (unique, 0x100000f1, 8), (unique, 0x10000209, 8) CAST (unique, 0xbd80, 8), (unique, 0x100000f1, 8) INT_SUB (register, 0x8, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x49399b, 1)]
[ ---  CBRANCH (ram, 0x49399b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(ram, 0x4c8107, 1) INDIRECT (ram, 0x4c8107, 1) , (const, 0xbd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000231, 8) , (unique, 0xbb00, 1), (unique, 0x10000231, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000229, 8), (unique, 0x10000229, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x49399b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1)]
[(ram, 0x4c8107, 1) INDIRECT (ram, 0x4c8107, 1) , (const, 0xd2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc00, 2), (unique, 0x3a00, 8) CAST (unique, 0x10000251, 8), (unique, 0x10000251, 8) INT_ADD (unique, 0x10000249, 8) , (unique, 0x100000b9, 8), (unique, 0x10000249, 8) CAST (unique, 0xbd80, 8), (unique, 0x100000b9, 8) INT_SUB (register, 0x8, 8) , (const, 0x2, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000241, 8), (unique, 0x10000241, 8) INT_ADD (unique, 0x10000239, 8) , (unique, 0x100000b1, 8), (unique, 0x10000239, 8) CAST (unique, 0xbd80, 8), (unique, 0x100000b1, 8) INT_SUB (register, 0x8, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x49399b, 1)]
[(ram, 0x4c8107, 1) MULTIEQUAL (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1)]
[ ---  CBRANCH (ram, 0x493a48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x11, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(ram, 0x4c8107, 1) MULTIEQUAL (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x493a5e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000259, 8), (unique, 0x10000259, 8) INT_ADD (register, 0x38, 8) , (const, 0xc7, 8)]
[ ---  CBRANCH (ram, 0x493a65, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000261, 8), (unique, 0x10000261, 8) INT_ADD (register, 0x38, 8) , (const, 0xdf, 8)]
[ ---  CBRANCH (ram, 0x493ab4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000269, 8), (unique, 0x10000269, 8) INT_ADD (register, 0x38, 8) , (const, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000271, 8), (unique, 0x10000271, 8) INT_ADD (register, 0x30, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x493acc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000279, 8), (unique, 0x10000279, 8) INT_ADD (register, 0x30, 8) , (const, 0xc7, 8)]
[ ---  CBRANCH (ram, 0x493adc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000281, 8), (unique, 0x10000281, 8) INT_ADD (register, 0x30, 8) , (const, 0xdf, 8)]
[ ---  CBRANCH (ram, 0x401785, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8107, 1) , (const, 0x8, 1)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x16e, 4), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[ ---  CALL (ram, 0x4011c4, 8)]
[(ram, 0x4c8107, 1) COPY (ram, 0x4c8107, 1), (ram, 0x4c8107, 1) INDIRECT (ram, 0x4c8107, 1) , (const, 0x16e, 4), (ram, 0x4c8107, 1) MULTIEQUAL (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1) , (ram, 0x4c8107, 1)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000289, 8), (unique, 0x10000289, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) INT_ADD (unique, 0x100002a1, 8) , (unique, 0x10000101, 8), (unique, 0x100002a1, 8) CAST (register, 0x0, 8), (unique, 0x10000101, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000299, 8), (unique, 0x10000299, 8) INT_ADD (register, 0x30, 8) , (const, 0xd0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000291, 8), (unique, 0x10000291, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x493a65, 1)]
[(ram, 0x4c8107, 1) COPY (ram, 0x4c8107, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
