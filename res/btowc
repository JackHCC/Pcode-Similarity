[ ---  CBRANCH (ram, 0x1ac0e8, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (const, 0x180, 4), (register, 0x0, 4) INT_ADD (register, 0x38, 4) , (const, 0x80, 4)]
[ ---  CBRANCH (ram, 0x1ac0e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1ac0e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (register, 0x38, 4) , (const, 0xffffff80, 4)]
[ ---  CBRANCH (ram, 0x1ac1b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000166, 8) , (const, 0x0, 8), (unique, 0x10000166, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000015e, 8), (unique, 0x1000015e, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000156, 8), (unique, 0x10000156, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000014e, 8), (unique, 0x1000014e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2dd8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c1200, 8)]
[ ---  CBRANCH (ram, 0x1ac0a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x100000e2, 8), (unique, 0x100000e2, 8) PTRSUB (const, 0x0, 8) , (const, 0x4bf9a0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x160, 4)]
[(ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x160, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x160, 4)]
[ ---  CALL (ram, 0x1b95f0, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000016e, 8), (unique, 0x1000016e, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1ac0a2, 1)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4c2dd8, 8) MULTIEQUAL (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000186, 8), (unique, 0x10000186, 8) INT_ADD (unique, 0x1000017e, 8) , (const, 0x30, 8), (unique, 0x1000017e, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1ac0f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000176, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x10000176, 8) CAST (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1ac0f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa3, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffe0, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 1) SUBPIECE (register, 0x38, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffcc, 4) COPY (const, 0x0, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa4, 8)]
[(stack, 0xffffffffffffffd0, 4) COPY (const, 0x1, 4)]
[(stack, 0xffffffffffffffc8, 4) COPY (const, 0x1, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000019e, 8), (unique, 0x1000019e, 8) INT_ADD (unique, 0x10000196, 8) , (const, 0x28, 8), (unique, 0x10000196, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1ac15d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(register, 0x18, 8) CAST (unique, 0x100001be, 8), (unique, 0x100001be, 8) INT_XOR (register, 0x18, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001b6, 8), (unique, 0x100001b6, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x18, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x100001ae, 8) , (const, 0x2f, 4), (unique, 0x100001ae, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x100001a6, 8) , (const, 0x11, 4), (unique, 0x100001a6, 8) CAST (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x242d60, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8)]
[(ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x12b, 4), (ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffa3, 1) INDIRECT (stack, 0xffffffffffffffa3, 1) , (const, 0x12b, 4), (stack, 0xffffffffffffffa3, 1) INDIRECT (register, 0x18, 1) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x12b, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x3800, 8) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x3800, 8) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x3800, 8) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffc8, 4) INDIRECT (stack, 0xffffffffffffffc8, 4) , (const, 0x12b, 4), (stack, 0xffffffffffffffc8, 4) INDIRECT (stack, 0xffffffffffffffc8, 4) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x12b, 4), (stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffd0, 4) INDIRECT (stack, 0xffffffffffffffd0, 4) , (const, 0x12b, 4), (stack, 0xffffffffffffffd0, 4) INDIRECT (stack, 0xffffffffffffffd0, 4) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (unique, 0x3800, 8) , (const, 0x10c, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x10c, 4)]
[ ---  CBRANCH (ram, 0x1ac1a1, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x4, 4), (register, 0x0, 4) CALLIND (register, 0x18, 8) , (unique, 0xbd80, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8) , (const, 0x1, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffa8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x3800, 8) , (const, 0x10c, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1ac0db, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(unique, 0x1000014a, 4) COPY (stack, 0xffffffffffffffa4, 4)]
[ ---  BRANCH (ram, 0x1ac0db, 1)]
[ ---  CBRANCH (ram, 0x1ac0c9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001c6, 8), (unique, 0x100001c6, 8) CAST (unique, 0xbd80, 8)]
[(register, 0xa0, 8) CAST (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) INT_XOR (register, 0xa0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001de, 8), (unique, 0x100001de, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0xa0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x100001d6, 8) , (const, 0x2f, 4), (unique, 0x100001d6, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x100001ce, 8) , (const, 0x11, 4), (unique, 0x100001ce, 8) CAST (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x242d60, 8) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[(ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0xa0, 4), (ram, 0x4c2dd8, 8) INDIRECT (ram, 0x4c2dd8, 8) , (const, 0x99, 4)]
[(register, 0x0, 4) CALLIND (register, 0xa0, 8) , (unique, 0xbd80, 8) , (register, 0x30, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x30, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8), (ram, 0x4c2dd8, 8) MULTIEQUAL (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8) , (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100001ee, 4), (unique, 0x100001ee, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (unique, 0x1000014a, 4)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
