[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002a4, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x46b068, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x46b11e, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100002ec, 1) , (const, 0x7e, 1), (unique, 0x100002ec, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002e4, 8), (unique, 0x100002e4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x50, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002bc, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x46ad88, 1)]
[(unique, 0x100002ac, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002ed, 8), (unique, 0x100002ed, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x48, 8)]
[ ---  CBRANCH (ram, 0x46ad88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002ed, 8), (unique, 0x100002ed, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x48, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002b4, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x46ad88, 1)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0xbd80, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100002a4, 8) , (unique, 0x100002ac, 8) , (unique, 0x100002b4, 8) , (unique, 0x100002bc, 8)]
[ ---  CBRANCH (ram, 0x46af10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x46af10, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x24, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x100002f5, 8), (unique, 0x100002f5, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8), (ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x510, 4)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8), (ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x510, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000306, 8), (unique, 0x10000306, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002fe, 8), (unique, 0x100002fe, 8) INT_ADD (register, 0x80, 8) , (const, 0x68, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100002fd, 1), (unique, 0x100002fd, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100002c4, 8) COPY (register, 0x38, 8)]
[(unique, 0x1000021e, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000227, 8) MULTIEQUAL (unique, 0x100002c4, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x46adc3, 1) , (unique, 0x10000226, 1), (unique, 0x10000226, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x18, 8) PTRADD (unique, 0x10000227, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000030f, 8), (unique, 0x1000030f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000030e, 1), (unique, 0x1000030e, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000227, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x46b189, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x0, 1), (register, 0x8, 1) SUBPIECE (unique, 0x1000021e, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x46b0ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x46b050, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x2d, 1)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000227, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffbc, 4) COPY (const, 0x1, 4)]
[(register, 0x18, 8) PTRADD (unique, 0x10000227, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x46ade5, 1)]
[(stack, 0xffffffffffffffbc, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x46af68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x2b, 1)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000227, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) PTRADD (unique, 0x10000227, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x46ade5, 1)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000227, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x46b000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x30, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x1000021e, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x46b0e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000fe, 4) , (const, 0x0, 4), (unique, 0x100000fe, 4) INT_AND (register, 0x10, 4) , (const, 0xffffffef, 4)]
[ ---  CBRANCH (ram, 0x46b126, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x58, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000318, 8), (unique, 0x10000318, 8) INT_ADD (ram, 0x4c4e38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000317, 1), (unique, 0x10000317, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffba, 1) COPY (const, 0xf, 1)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 8) COPY (const, 0xfffffffffffffff, 8)]
[(register, 0x10, 4) COPY (const, 0x10, 4)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x46ae15, 1)]
[ ---  CBRANCH (ram, 0x46b00c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffba, 1) COPY (const, 0x7, 1)]
[(register, 0x10, 4) COPY (const, 0x8, 4)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 8) COPY (const, 0x1fffffffffffffff, 8)]
[(register, 0x8, 8) COPY (const, 0x30, 8)]
[ ---  BRANCH (ram, 0x46ae2d, 1)]
[ ---  CBRANCH (ram, 0x46b169, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x46b1a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffba, 1) COPY (const, 0x5, 1)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x30, 8)]
[(register, 0x80, 8) COPY (const, 0x1999999999999999, 8)]
[ ---  BRANCH (ram, 0x46ae26, 1)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000324, 8), (unique, 0x10000324, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000271, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000271, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ae180, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000320, 4), (unique, 0x10000320, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000261, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000261, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ae140, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000320, 4), (unique, 0x10000320, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[(register, 0x8, 8) COPY (const, 0x30, 8)]
[ ---  BRANCH (ram, 0x46ae2d, 1)]
[ ---  CBRANCH (ram, 0x46af30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x46adf6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x46b1a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffba, 1) COPY (const, 0x5, 1)]
[(register, 0x10, 4) COPY (const, 0xa, 4)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 8) COPY (const, 0x1999999999999999, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x308, 4)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x308, 4)]
[(ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x308, 4)]
[ ---  CBRANCH (ram, 0x46b0a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x46b1d5, 1)]
[(unique, 0x100002d4, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x46b1c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x18, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x1000027b, 8) MULTIEQUAL (unique, 0x100002cc, 8) , (unique, 0x100002d4, 8)]
[ ---  CBRANCH (ram, 0x46b247, 1) , (unique, 0x1000027a, 1), (unique, 0x1000027a, 1) INT_NOTEQUAL (unique, 0x10000279, 1) , (const, 0x0, 1), (unique, 0x10000279, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x8, 1)]
[(register, 0x8, 8) INT_ZEXT (unique, 0x10000279, 1)]
[ ---  CBRANCH (ram, 0x46b200, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 1) , (unique, 0x1000032c, 1), (unique, 0x1000032c, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (unique, 0x10000279, 1) , (const, 0x30, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x46b229, 1)]
[ ---  CBRANCH (ram, 0x46b220, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000027b, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x46b200, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x46b247, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000032d, 8), (unique, 0x1000032d, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (ram, 0x4c4e28, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x46b200, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x40, 4) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000335, 8), (unique, 0x10000335, 8) INT_ADD (ram, 0x4c4e38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x46b200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000027b, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100002cc, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x1000027b, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a3, 4)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x3a3, 4)]
[(ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x3a3, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000033d, 8), (unique, 0x1000033d, 8) CALL (ram, 0x410be0, 8) , (register, 0x18, 8) , (unique, 0x1000027b, 8) , (register, 0xa0, 8)]
[(stack, 0xffffffffffffffba, 1) COPY (const, 0x5, 1)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(register, 0x80, 8) COPY (const, 0x1999999999999999, 8)]
[(register, 0x10, 4) COPY (const, 0xa, 4)]
[ ---  BRANCH (ram, 0x46ae15, 1)]
[ ---  CBRANCH (ram, 0x46b0a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000259, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000259, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ae140, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000345, 4), (unique, 0x10000345, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000349, 8), (unique, 0x10000349, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000269, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000269, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ae180, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000345, 4), (unique, 0x10000345, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x46ae15, 1)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(stack, 0xffffffffffffffba, 1) MULTIEQUAL (stack, 0xffffffffffffffba, 1) , (stack, 0xffffffffffffffba, 1) , (unique, 0xbb00, 1) , (stack, 0xffffffffffffffba, 1)]
[(ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (unique, 0xbd80, 8) , (register, 0x80, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x0, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x46b0a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x0, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x46b0a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffba, 1) MULTIEQUAL (unique, 0xbb00, 1) , (stack, 0xffffffffffffffba, 1) , (stack, 0xffffffffffffffba, 1) , (stack, 0xffffffffffffffba, 1)]
[(ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000020e, 1) COPY (const, 0x0, 1)]
[(register, 0xb8, 8) INT_SEXT (unique, 0x10000351, 4), (unique, 0x10000351, 4) CAST (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0x1000029c, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x46ae78, 1)]
[(unique, 0x1000020d, 1) MULTIEQUAL (unique, 0x1000020e, 1) , (unique, 0x10000245, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000029c, 8) , (unique, 0x1000022f, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x10000239, 8)]
[ ---  CBRANCH (ram, 0x46ae9c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 1) , (const, 0xa, 1), (register, 0x30, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_SUB (unique, 0x10000098, 4) , (const, 0x30, 4), (unique, 0x10000098, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x46af78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x46afa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x46ae8d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x46af80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (register, 0x28, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (unique, 0x3100, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x46ae67, 1)]
[ ---  CBRANCH (ram, 0x46aec0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000355, 8), (unique, 0x10000355, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (ram, 0x4c4e28, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)]
[(register, 0x30, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x37, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000035d, 8), (unique, 0x1000035d, 8) INT_ADD (ram, 0x4c4e38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[(register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x30, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x46aec0, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (unique, 0x10000365, 4) , (unique, 0x10000369, 4), (unique, 0x10000369, 4) CAST (register, 0x8, 4), (unique, 0x10000365, 4) CAST (register, 0x10, 4), (register, 0x8, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x46ae50, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x46ae59, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x46aea9, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (register, 0x30, 1) , (stack, 0xffffffffffffffba, 1)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (register, 0xb8, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3400, 8)]
[(unique, 0x1000020b, 1) COPY (const, 0x1, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000237, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x10000239, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000245, 1) MULTIEQUAL (unique, 0x1000020b, 1) , (unique, 0x1000020d, 1)]
[ ---  CBRANCH (ram, 0x46ae74, 1) , (unique, 0x10000238, 1), (unique, 0x10000238, 1) INT_EQUAL (unique, 0x1000022f, 8) , (register, 0xb0, 8), (unique, 0x1000022f, 8) PTRADD (unique, 0x1000024f, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x1000024f, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0x10000237, 1)]
[ ---  CBRANCH (ram, 0x46aec0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000237, 1) , (const, 0x0, 1)]
[(unique, 0x10000208, 1) MULTIEQUAL (unique, 0x1000020d, 1) , (unique, 0x1000020d, 1) , (unique, 0x10000245, 1) , (unique, 0x10000245, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0x10000239, 8) , (unique, 0x10000239, 8)]
[ ---  CBRANCH (ram, 0x46b0a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x18, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (unique, 0x1000022f, 8) , (unique, 0x1000022f, 8)]
[ ---  CBRANCH (ram, 0x46aed6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x182, 4)]
[(ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x182, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x38, 8)]
[(ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[ ---  CBRANCH (ram, 0x46afc0, 1) , (unique, 0x10000209, 1), (unique, 0x10000209, 1) BOOL_NEGATE (unique, 0x10000208, 1)]
[ ---  CBRANCH (ram, 0x46aedf, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x7fffffffffffffff, 8), (register, 0x10, 8) INT_SEXT (stack, 0xffffffffffffffbc, 4)]
[(register, 0x10, 8) INT_2COMP (register, 0x0, 8)]
[(unique, 0x1000028c, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x46afeb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffbc, 4) , (const, 0x0, 4)]
[(unique, 0x10000294, 8) COPY (register, 0x10, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000028c, 8) , (unique, 0x10000294, 8)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x191, 4)]
[(ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x191, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x22, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x46af0b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffbc, 4) , (const, 0x0, 4)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x7fffffffffffffff, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x8000000000000000, 8)]
[(ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x46b162, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x46b0ce, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 8) , (unique, 0x1000037d, 8), (unique, 0x1000037d, 8) CAST (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x18, 8) , (unique, 0x10000140, 8) , (const, 0x1, 8), (unique, 0x10000140, 8) INT_2COMP (unique, 0x10000375, 8), (unique, 0x10000375, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x46b14c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x58, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000386, 8), (unique, 0x10000386, 8) INT_ADD (ram, 0x4c4e38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000385, 1), (unique, 0x10000385, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x46b0ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8), (ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x269, 4)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8), (ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x269, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x38, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8), (ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x241, 4), (ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8), (ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x241, 4), (ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
