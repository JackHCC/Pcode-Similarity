[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x252db0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0070, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x26d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x26d, 4)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x26d, 4)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x26d, 4)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x26d, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x26d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x26d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x26d, 4)]
[ ---  CBRANCH (ram, 0x252e40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24b820, 8) , (unique, 0x3800, 8) , (unique, 0x10000155, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x10000155, 8) COPY (const, 0x2b71e7, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x252dfb, 1)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (unique, 0x100001be, 8) , (unique, 0xbd80, 8), (unique, 0x100001be, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (stack, 0xffffffffffffffb0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4f0060, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4f0060, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4f0070, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x252bde, 1)]
[(register, 0x0, 8) CAST (unique, 0x100001c6, 8), (unique, 0x100001c6, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0060, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0060, 8) , (const, 0x11, 4)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0068, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0068, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f0070, 1) MULTIEQUAL (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1)]
[(ram, 0x4f0068, 8) MULTIEQUAL (ram, 0x4f0068, 8) , (register, 0x0, 8)]
[(ram, 0x4f0060, 8) MULTIEQUAL (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001b6, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x252e6d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff9c, 4) , (const, 0x0, 4), (stack, 0xffffffffffffff9c, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x248, 4)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x248, 4)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x248, 4)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x248, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x252d40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001de, 8), (unique, 0x100001de, 8) INT_ADD (unique, 0x100001ce, 8) , (unique, 0x100001d6, 8), (unique, 0x100001d6, 8) CAST (unique, 0x100001b6, 8), (unique, 0x100001ce, 8) CAST (register, 0x110, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x10000144, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffff90, 8) COPY (const, 0x0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(register, 0xb8, 8) PTRADD (ram, 0x4eae68, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8)]
[ ---  BRANCH (ram, 0x252c66, 1)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x1000013d, 1) MULTIEQUAL (unique, 0x10000144, 1) , (unique, 0x10000140, 1)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xdd, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcf, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xdd, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xcf, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0xdd, 4), (ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0xcf, 4), (ram, 0x4f0060, 8) MULTIEQUAL (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0xdd, 4), (ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0xcf, 4), (ram, 0x4f0068, 8) MULTIEQUAL (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0xdd, 4), (ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0xcf, 4), (ram, 0x4f0070, 1) MULTIEQUAL (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x252c20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xfffffffe, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 4) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0xb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x252cc0, 1) , (unique, 0x1000013d, 1)]
[ ---  CBRANCH (ram, 0x252c40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001ea, 8), (unique, 0x100001ea, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffb0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100001e6, 4), (unique, 0x100001e6, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x252c40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x252c9c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x214, 4)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x214, 4)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x214, 4)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x214, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000202, 8), (unique, 0x10000202, 8) INT_ADD (unique, 0x100001f2, 8) , (unique, 0x100001fa, 8), (unique, 0x100001fa, 8) CAST (unique, 0x100001b6, 8), (unique, 0x100001f2, 8) CAST (register, 0x110, 8)]
[(unique, 0x10000141, 1) COPY (const, 0x0, 1)]
[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x252e10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x22, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000021a, 8), (unique, 0x1000021a, 8) INT_ADD (unique, 0x1000020a, 8) , (unique, 0x10000212, 8), (unique, 0x10000212, 8) CAST (unique, 0x100001b6, 8), (unique, 0x1000020a, 8) CAST (register, 0x110, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ef, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1ef, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ef, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ef, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffff90, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ef, 4)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x1f7, 4), (ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x1ef, 4)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x1f7, 4), (ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x1ef, 4)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x1f7, 4), (ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x1ef, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[(unique, 0xbc80, 4) COPY (const, 0x22, 4)]
[ ---  BRANCH (ram, 0x252d40, 1)]
[ ---  CBRANCH (ram, 0x252c40, 1) , (unique, 0x1000013d, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x108, 4)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x108, 4)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x108, 4)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x108, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000232, 8), (unique, 0x10000232, 8) INT_ADD (unique, 0x10000222, 8) , (unique, 0x1000022a, 8), (unique, 0x1000022a, 8) CAST (unique, 0x100001b6, 8), (unique, 0x10000222, 8) CAST (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x252ce0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000023a, 8), (unique, 0x1000023a, 8) INT_ADD (stack, 0xffffffffffffffb0, 8) , (const, 0x14, 8)]
[(ram, 0x4f0070, 1) MULTIEQUAL (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1)]
[(ram, 0x4f0068, 8) MULTIEQUAL (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8)]
[(ram, 0x4f0060, 8) MULTIEQUAL (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x252d78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff90, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1cb, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1cb, 4)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x1cb, 4)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x1cb, 4)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x1cb, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1cb, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1cb, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cb, 4)]
[ ---  CBRANCH (ram, 0x252cec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0xc, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000252, 8), (unique, 0x10000252, 8) INT_ADD (unique, 0x10000242, 8) , (unique, 0x1000024a, 8), (unique, 0x1000024a, 8) CAST (unique, 0x100001b6, 8), (unique, 0x10000242, 8) CAST (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1df, 4)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x1e4, 4), (ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x1df, 4)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x1e4, 4), (ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x1df, 4)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x1e4, 4), (ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x1df, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[(unique, 0xbc80, 4) COPY (const, 0xc, 4)]
[ ---  BRANCH (ram, 0x252d40, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (register, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c4, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x1c4, 4), (ram, 0x4f0060, 8) MULTIEQUAL (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x1c4, 4), (ram, 0x4f0068, 8) MULTIEQUAL (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x1c4, 4), (ram, 0x4f0070, 1) MULTIEQUAL (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000026a, 8), (unique, 0x1000026a, 8) INT_ADD (unique, 0x1000025a, 8) , (unique, 0x10000262, 8), (unique, 0x10000262, 8) CAST (unique, 0x100001b6, 8), (unique, 0x1000025a, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x10000142, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x252c40, 1)]
[(register, 0xb0, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000143, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x252c40, 1)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x10000140, 1) MULTIEQUAL (unique, 0x1000013d, 1) , (unique, 0x10000143, 1) , (unique, 0x10000142, 1) , (unique, 0x10000141, 1) , (unique, 0x1000013d, 1) , (unique, 0x1000013d, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x139, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x139, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x139, 4), (ram, 0x4f0060, 8) MULTIEQUAL (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x139, 4), (ram, 0x4f0068, 8) MULTIEQUAL (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x139, 4), (ram, 0x4f0070, 1) MULTIEQUAL (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x139, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x139, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x139, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x252d08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249490, 8) , (unique, 0x3800, 8) , (unique, 0x1000014d, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (register, 0xb0, 4) , (const, 0x0, 8), (unique, 0x1000014d, 8) COPY (const, 0x2b71e7, 8), (register, 0xb0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x14a, 4)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x14a, 4)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x14a, 4)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x14a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x14a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x14a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x14a, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffff90, 8)]
[ ---  CBRANCH (ram, 0x252d68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b3, 4)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x1b3, 4)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x1b3, 4)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x1b3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0x30, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x159, 4)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x159, 4)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x159, 4)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x159, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x252d6b, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1, 4) , (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x252e56, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000282, 8), (unique, 0x10000282, 8) INT_ADD (unique, 0x10000272, 8) , (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) CAST (unique, 0x100001b6, 8), (unique, 0x10000272, 8) CAST (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x252d40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0xfffffffe, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f0070, 1) MULTIEQUAL (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1)]
[(ram, 0x4f0068, 8) MULTIEQUAL (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8)]
[(ram, 0x4f0060, 8) MULTIEQUAL (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff9c, 4) COPY (const, 0x16, 4)]
[ ---  BRANCH (ram, 0x252d6b, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b0, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x1b0, 4), (ram, 0x4f0060, 8) MULTIEQUAL (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8)]
[(ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x1b0, 4), (ram, 0x4f0068, 8) MULTIEQUAL (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8)]
[(ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x1b0, 4), (ram, 0x4f0070, 1) MULTIEQUAL (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (stack, 0xffffffffffffff9c, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000029a, 8), (unique, 0x1000029a, 8) INT_ADD (unique, 0x1000028a, 8) , (unique, 0x10000292, 8), (unique, 0x10000292, 8) CAST (unique, 0x100001b6, 8), (unique, 0x1000028a, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[ ---  BRANCH (ram, 0x252d40, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f0070, 1) MULTIEQUAL (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1) , (ram, 0x4f0070, 1)]
[(ram, 0x4f0068, 8) MULTIEQUAL (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8) , (ram, 0x4f0068, 8)]
[(ram, 0x4f0060, 8) MULTIEQUAL (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8) , (ram, 0x4f0060, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (stack, 0xffffffffffffff9c, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x252e93, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4f0060, 8) COPY (ram, 0x4f0060, 8)]
[(ram, 0x4f0068, 8) COPY (ram, 0x4f0068, 8)]
[(ram, 0x4f0070, 1) COPY (ram, 0x4f0070, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100002a2, 4), (unique, 0x100002a2, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x199, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x199, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x199, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x199, 4)]
[(ram, 0x4f0060, 8) COPY (ram, 0x4f0060, 8), (ram, 0x4f0060, 8) INDIRECT (ram, 0x4f0060, 8) , (const, 0x199, 4)]
[(ram, 0x4f0068, 8) COPY (ram, 0x4f0068, 8), (ram, 0x4f0068, 8) INDIRECT (ram, 0x4f0068, 8) , (const, 0x199, 4)]
[(ram, 0x4f0070, 1) COPY (ram, 0x4f0070, 1), (ram, 0x4f0070, 1) INDIRECT (ram, 0x4f0070, 1) , (const, 0x199, 4)]
[ ---  RETURN (const, 0x1, 4)]
