[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x480898, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000187, 8) , (const, 0x0, 4), (unique, 0x10000187, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) COPY (const, 0x10, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x1e1, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x1de, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x1e1, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x1de, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x1e1, 4), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x1de, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x4807de, 1)]
[(register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000018f, 8), (unique, 0x1000018f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x10000197, 8), (unique, 0x10000197, 8) CAST (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffac, 4) COPY (const, 0x0, 4)]
[(unique, 0x1000016d, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000175, 1) COPY (register, 0x10, 1)]
[(unique, 0x10000177, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4808c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x1000019f, 8), (unique, 0x1000019f, 8) INT_ADD (register, 0x38, 8) , (const, 0x128, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x10000177, 8)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (unique, 0x10000175, 1)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[ ---  CBRANCH (ram, 0x4808e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001a7, 8), (unique, 0x100001a7, 8) INT_ADD (register, 0x18, 8) , (const, 0x328, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000165, 8) , (unique, 0x1000016d, 8)]
[ ---  CBRANCH (ram, 0x4808e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x14e, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x14e, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x14e, 4)]
[ ---  CBRANCH (ram, 0x4808e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x47f950, 8) , (register, 0x18, 8) , (unique, 0x3200, 8) , (const, 0xf, 8) , (unique, 0x10000105, 8), (unique, 0x10000105, 8) COPY (const, 0x4af685, 8), (unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x328, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001af, 8), (unique, 0x100001af, 8) INT_ADD (register, 0x18, 8) , (const, 0x328, 8)]
[ ---  BRANCH (ram, 0x4808e0, 1)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x160, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x160, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x160, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x160, 4), (stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x160, 4), (stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x160, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x160, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CALL (ram, 0x47cd80, 8) , (register, 0x20, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(unique, 0x1000015d, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(unique, 0x10000165, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001b7, 8), (unique, 0x100001b7, 8) INT_ADD (register, 0x18, 8) , (const, 0x2e0, 8)]
[ ---  CBRANCH (ram, 0x480930, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001b7, 8), (unique, 0x100001b7, 8) INT_ADD (register, 0x18, 8) , (const, 0x2e0, 8)]
[ ---  CBRANCH (ram, 0x480809, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100001bf, 8), (unique, 0x100001bf, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  CBRANCH (ram, 0x480809, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c6180, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x480809, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x2, 1), (register, 0x0, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) INT_ADD (ram, 0x4c6180, 8) , (const, 0x31c, 8)]
[ ---  CBRANCH (ram, 0x480809, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (ram, 0x4c6180, 8)]
[ ---  CBRANCH (ram, 0x480809, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001cf, 8), (unique, 0x100001cf, 8) INT_ADD (ram, 0x4c6180, 8) , (const, 0x328, 8)]
[ ---  CBRANCH (ram, 0x48098a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x1cd, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x1cd, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x1cd, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x1cd, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x1cd, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1cd, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1cd, 4)]
[ ---  CBRANCH (ram, 0x480809, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x47f950, 8) , (ram, 0x4c6180, 8) , (unique, 0x3200, 8) , (const, 0xf, 8) , (unique, 0x1000010d, 8), (unique, 0x1000010d, 8) COPY (const, 0x4af685, 8), (unique, 0x3200, 8) INT_ADD (ram, 0x4c6180, 8) , (const, 0x328, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001d7, 8), (unique, 0x100001d7, 8) INT_ADD (unique, 0x1000015d, 8) , (const, 0x328, 8)]
[ ---  BRANCH (ram, 0x48097d, 1)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x1c4, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x1c4, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x1c4, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x1c4, 4), (stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x1c4, 4), (stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1c4, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1c4, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CALL (ram, 0x47cd80, 8) , (register, 0x20, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x480809, 1)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x83, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x83, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x83, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x83, 4), (stack, 0xffffffffffffffa8, 1) MULTIEQUAL (unique, 0x10000175, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x83, 4), (stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x83, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000177, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x83, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CALL (ram, 0x47cd80, 8) , (register, 0x20, 8) , (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[ ---  CBRANCH (ram, 0x480833, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100001df, 8), (unique, 0x100001df, 8) INT_ADD (register, 0x38, 8) , (const, 0x3b8, 8)]
[ ---  CBRANCH (ram, 0x480868, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x11c, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x11c, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x11c, 4)]
[ ---  CBRANCH (ram, 0x480833, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x47f950, 8) , (register, 0x38, 8) , (unique, 0x3c80, 8) , (const, 0x1d, 8) , (unique, 0x10000115, 8), (unique, 0x10000115, 8) COPY (const, 0x4af68b, 8), (unique, 0x3c80, 8) INT_ADD (register, 0x38, 8) , (const, 0x3b8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100001e7, 8), (unique, 0x100001e7, 8) INT_ADD (register, 0x38, 8) , (const, 0x3b8, 8)]
[ ---  BRANCH (ram, 0x48082b, 1)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x9e, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x9e, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x9e, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x9e, 4), (stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x9e, 4), (stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x9e, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x9e, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CALL (ram, 0x47cd80, 8) , (register, 0x20, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 1) MULTIEQUAL (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffa8, 1)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[ ---  CBRANCH (ram, 0x4808b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100001ef, 8), (unique, 0x100001ef, 8) INT_ADD (register, 0x38, 8) , (const, 0x3e5, 8)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x113, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x113, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x113, 4)]
[(stack, 0xffffffffffffffa8, 1) INDIRECT (stack, 0xffffffffffffffa8, 1) , (const, 0x113, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x113, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x113, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x113, 4)]
[ ---  CALL (ram, 0x47cd80, 8) , (register, 0x20, 8) , (ram, 0x4c4eb0, 8)]
[ ---  BRANCH (ram, 0x48083e, 1)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[ ---  CBRANCH (ram, 0x480852, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x0, 1)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0xed, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0xed, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0xed, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f7, 8), (unique, 0x100001f7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[ ---  RETURN (const, 0x0, 8)]
