[ ---  CBRANCH (ram, 0x1922d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000003c, 8) , (const, 0x0, 8), (unique, 0x1000003c, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xb33, 8)]
[ ---  CBRANCH (ram, 0x1922fc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffd8, 8) COPY (const, 0x2b4d40, 8)]
[ ---  BRANCH (ram, 0x19229a, 1)]
[ ---  CBRANCH (ram, 0x192260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (unique, 0x3400, 8), (unique, 0x3100, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x18, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x19230e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3400, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (register, 0x0, 8), (register, 0x18, 8) INT_ADD (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x30, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x7, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x77, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x77, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x77, 4)]
[(ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0x77, 4)]
[(ram, 0x4eb2c0, 8) INDIRECT (ram, 0x4eb2c0, 8) , (const, 0x77, 4)]
[ ---  CBRANCH (ram, 0x19230c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x2223f0, 8) , (register, 0x38, 8) , (unique, 0x3400, 8) , (register, 0x18, 8) , (const, 0x1, 4), (register, 0x38, 8) CAST (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) INT_SUB (unique, 0x100001b9, 8) , (unique, 0xbd80, 8), (unique, 0x100001b9, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x192320, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000064, 8) , (const, 0x0, 8), (unique, 0x10000064, 8) INT_AND (unique, 0x100001d9, 8) , (const, 0xf, 8), (unique, 0x100001d9, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) INT_ADD (unique, 0x100001c9, 8) , (unique, 0xbd80, 8), (unique, 0x100001c9, 8) CAST (register, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xb45, 8)]
[ ---  CBRANCH (ram, 0x19234c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001e1, 8), (unique, 0x100001e1, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffd8, 8) COPY (const, 0x2b4d55, 8)]
[ ---  BRANCH (ram, 0x19229a, 1)]
[ ---  CBRANCH (ram, 0x192360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x11c, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x11c, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x11c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_SUB (register, 0x18, 8) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x59c80, 8) INT_ADD (ram, 0x4eb2b8, 8) , (register, 0x18, 8), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0x11c, 4), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (unique, 0xbd80, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19230e, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x18, 8) , (ram, 0x4eb2c0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (ram, 0x4eb2b8, 8), (ram, 0x4eb2c0, 8) INDIRECT (ram, 0x4eb2c0, 8) , (const, 0x11c, 4), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0x11c, 4), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (unique, 0xbd80, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (register, 0x10, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8)]
[(ram, 0x4eb2b8, 8) COPY (unique, 0x59c80, 8)]
[(ram, 0x4eb2c0, 8) COPY (register, 0x18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3400, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8)]
[(ram, 0x4eb2b8, 8) COPY (unique, 0x59c80, 8)]
[(ram, 0x4eb2c0, 8) COPY (ram, 0x4eb2c0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3400, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xb47, 8)]
[ ---  CBRANCH (ram, 0x192250, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001e9, 8), (unique, 0x100001e9, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffd8, 8) COPY (const, 0x2b4d70, 8)]
[ ---  BRANCH (ram, 0x19229a, 1)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eb2b8, 8) COPY (ram, 0x4eb2b8, 8), (ram, 0x4eb2b8, 8) MULTIEQUAL (ram, 0x4eb2b8, 8) , (ram, 0x4eb2b8, 8)]
[(ram, 0x4eb2c0, 8) COPY (ram, 0x4eb2c0, 8), (ram, 0x4eb2c0, 8) MULTIEQUAL (ram, 0x4eb2c0, 8) , (ram, 0x4eb2c0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xb34, 8)]
[ ---  CBRANCH (ram, 0x19228c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001f1, 8), (unique, 0x100001f1, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffd8, 8) COPY (const, 0x2b87c8, 8)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x10000188, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (unique, 0x10000180, 8) , (register, 0x88, 8) , (unique, 0x10000190, 8) , (unique, 0x10000178, 8) , (stack, 0xffffffffffffffd8, 8), (unique, 0x10000190, 8) COPY (const, 0x2b9058, 8), (unique, 0x10000188, 8) COPY (const, 0x2b8758, 8), (unique, 0x10000180, 8) COPY (const, 0x2b4cf8, 8), (unique, 0x10000178, 8) COPY (const, 0x2b3ed0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8), (stack, 0xffffffffffffffd8, 8) MULTIEQUAL (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001f9, 8), (unique, 0x100001f9, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xe0, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xf2, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xef, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xe0, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xf2, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xef, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xe0, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xf2, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xef, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xe0, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eb2b8, 8) COPY (ram, 0x4eb2b8, 8), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0xf2, 4), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0xef, 4), (ram, 0x4eb2b8, 8) INDIRECT (ram, 0x4eb2b8, 8) , (const, 0xe0, 4), (ram, 0x4eb2b8, 8) MULTIEQUAL (ram, 0x4eb2b8, 8) , (ram, 0x4eb2b8, 8) , (ram, 0x4eb2b8, 8) , (ram, 0x4eb2b8, 8)]
[(ram, 0x4eb2c0, 8) COPY (ram, 0x4eb2c0, 8), (ram, 0x4eb2c0, 8) INDIRECT (ram, 0x4eb2c0, 8) , (const, 0xf2, 4), (ram, 0x4eb2c0, 8) INDIRECT (ram, 0x4eb2c0, 8) , (const, 0xef, 4), (ram, 0x4eb2c0, 8) INDIRECT (ram, 0x4eb2c0, 8) , (const, 0xe0, 4), (ram, 0x4eb2c0, 8) MULTIEQUAL (ram, 0x4eb2c0, 8) , (ram, 0x4eb2c0, 8) , (ram, 0x4eb2c0, 8) , (ram, 0x4eb2c0, 8)]
[ ---  RETURN (const, 0x1, 4)]
