[(register, 0x0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1abeed, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3, 8) , (register, 0x10, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8), (register, 0x88, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x100000c0, 8) COPY (register, 0x8, 8), (register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10000000, 16), (unique, 0x10000000, 16) INT_ADD (unique, 0x100000b0, 16) , (unique, 0x10000018, 12), (unique, 0x100000b0, 16) INT_LEFT (unique, 0x100000a0, 16) , (const, 0x60, 16), (unique, 0x100000a0, 16) INT_SEXT (register, 0x30, 4), (unique, 0x10000018, 12) INT_ADD (unique, 0x10000094, 12) , (unique, 0x10000010, 8), (unique, 0x10000094, 12) INT_LEFT (unique, 0x10000088, 12) , (const, 0x40, 12), (unique, 0x10000088, 12) INT_SEXT (register, 0x30, 4), (unique, 0x10000010, 8) INT_ADD (unique, 0x10000080, 8) , (register, 0x30, 4), (unique, 0x10000080, 8) INT_LEFT (unique, 0x10000078, 8) , (const, 0x20, 8), (unique, 0x10000078, 8) INT_SEXT (register, 0x30, 4), (unique, 0x3400, 8) CAST (unique, 0x100000d0, 8), (unique, 0x100000d0, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000047, 8) , (const, 0x4, 8), (unique, 0x10000047, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100000c0, 8) , (unique, 0x100000c8, 8)]
[(unique, 0x100000c8, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100000c0, 8) , (unique, 0x100000c8, 8)]
[ ---  CBRANCH (ram, 0x1abeb0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x88, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100000c0, 8) , (unique, 0x100000c8, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[(register, 0x88, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000057, 8) , (const, 0x4, 8), (unique, 0x10000057, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1abeeb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1abeeb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1abeeb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
