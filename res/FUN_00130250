[(register, 0xb0, 8) INT_AND (register, 0x8, 8) , (const, 0xffffffff, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ab, 8), (unique, 0x100001ab, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1302a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x67, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x67, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x67, 4)]
[(ram, 0x4ecd20, 8) INDIRECT (ram, 0x4ecd20, 8) , (const, 0x67, 4)]
[(ram, 0x4f0858, 8) INDIRECT (ram, 0x4f0858, 8) , (const, 0x67, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x67, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x67, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x67, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x67, 4)]
[ ---  CALLIND (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001bb, 8), (unique, 0x100001bb, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001b3, 8), (unique, 0x100001b3, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0858, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0858, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0858, 8) MULTIEQUAL (ram, 0x4f0858, 8) , (ram, 0x4f0858, 8)]
[(ram, 0x4ecd20, 8) MULTIEQUAL (ram, 0x4ecd20, 8) , (ram, 0x4ecd20, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(unique, 0x10000173, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x2b3ed0, 8)]
[ ---  CBRANCH (ram, 0x1303b2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(unique, 0x1000017b, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x2b3c79, 8)]
[ ---  BRANCH (ram, 0x1302b2, 1)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000173, 8) , (unique, 0x1000017b, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x18, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x1302ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001c3, 8), (unique, 0x100001c3, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xa9, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xa9, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xa9, 4)]
[(ram, 0x4ecd20, 8) INDIRECT (ram, 0x4ecd20, 8) , (const, 0xa9, 4)]
[(ram, 0x4f0858, 8) INDIRECT (ram, 0x4f0858, 8) , (const, 0xa9, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xa9, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xa9, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xa9, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xa9, 4)]
[ ---  CBRANCH (ram, 0x13039a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1650c0, 8) , (unique, 0x3800, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (register, 0x8, 8) , (register, 0x10, 8) , (register, 0xb0, 8) , (register, 0x18, 8) , (register, 0x80, 8) , (register, 0x30, 8) , (unique, 0x3800, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x168, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x168, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x168, 4)]
[(ram, 0x4ecd20, 8) INDIRECT (ram, 0x4ecd20, 8) , (const, 0x168, 4)]
[(ram, 0x4f0858, 8) INDIRECT (ram, 0x4f0858, 8) , (const, 0x168, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x168, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x168, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x168, 4)]
[ ---  CALL (ram, 0x210140, 8) , (const, 0x2, 4) , (unique, 0x1000014b, 8) , (const, 0x12, 8), (unique, 0x1000014b, 8) COPY (const, 0x2bb1b0, 8)]
[ ---  BRANCH (ram, 0x130395, 1)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x10000143, 8) , (stack, 0xffffffffffffffc8, 8), (unique, 0x10000143, 8) COPY (const, 0x2b6796, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001cb, 8), (unique, 0x100001cb, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xd7, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x12a, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xdd, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xd7, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x12a, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xdd, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xd7, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x12a, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xdd, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xd7, 4)]
[(ram, 0x4f0858, 8) INDIRECT (ram, 0x4f0858, 8) , (const, 0x12a, 4), (ram, 0x4f0858, 8) INDIRECT (ram, 0x4f0858, 8) , (const, 0xdd, 4), (ram, 0x4f0858, 8) INDIRECT (ram, 0x4f0858, 8) , (const, 0xd7, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x12a, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xdd, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xd7, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (register, 0x30, 4) , (const, 0x12a, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4), (register, 0x30, 4) INT_ADD (stack, 0xffffffffffffffc4, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d3, 8), (unique, 0x100001d3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x18, 8) , (const, 0x1, 8), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xdd, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xd7, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xd7, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x12a, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xd7, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x12a, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xd7, 4)]
[(unique, 0x1000018b, 8) COPY (ram, 0x4ecd20, 8), (ram, 0x4ecd20, 8) INDIRECT (ram, 0x4ecd20, 8) , (const, 0x12a, 4), (ram, 0x4ecd20, 8) INDIRECT (ram, 0x4ecd20, 8) , (const, 0xdd, 4), (ram, 0x4ecd20, 8) INDIRECT (ram, 0x4ecd20, 8) , (const, 0xd7, 4)]
[ ---  CBRANCH (ram, 0x13038b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CAST (unique, 0x100001df, 8), (unique, 0x100001df, 8) CALL (ram, 0x21b9d0, 8) , (const, 0x0, 8) , (register, 0x30, 8) , (const, 0x3, 4) , (const, 0x22, 4) , (const, 0xffffffff, 4) , (const, 0x0, 8), (register, 0x30, 8) INT_SEXT (unique, 0x100001db, 4), (unique, 0x100001db, 4) CAST (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4), (register, 0x30, 4) INT_ADD (stack, 0xffffffffffffffc4, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d3, 8), (unique, 0x100001d3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x18, 8) , (const, 0x1, 8), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xdd, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xd7, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xd7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x143, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x140, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x143, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x140, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x143, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x140, 4)]
[(ram, 0x4f0858, 8) INDIRECT (ram, 0x4f0858, 8) , (const, 0x143, 4), (ram, 0x4f0858, 8) INDIRECT (ram, 0x4f0858, 8) , (const, 0x140, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x143, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x140, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x143, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x143, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x143, 4)]
[ ---  CALL (ram, 0x121170, 8) , (unique, 0x100001e7, 8) , (stack, 0xffffffffffffffc8, 8), (unique, 0x100001e7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x1000016b, 8) COPY (ram, 0x4ecd20, 8), (ram, 0x4ecd20, 8) INDIRECT (ram, 0x4ecd20, 8) , (const, 0x143, 4), (ram, 0x4ecd20, 8) INDIRECT (ram, 0x4ecd20, 8) , (const, 0x140, 4)]
[(unique, 0x10000193, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13038b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ecd20, 8) , (const, 0x0, 8), (ram, 0x4ecd20, 8) INDIRECT (ram, 0x4ecd20, 8) , (const, 0x143, 4), (ram, 0x4ecd20, 8) INDIRECT (ram, 0x4ecd20, 8) , (const, 0x140, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x157, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x157, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x157, 4)]
[(ram, 0x4f0858, 8) INDIRECT (ram, 0x4f0858, 8) , (const, 0x157, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x157, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x157, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x157, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x157, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (unique, 0x1000016b, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (ram, 0x4ecd20, 8)]
[(unique, 0x1000019b, 8) COPY (ram, 0x4ecd20, 8), (ram, 0x4ecd20, 8) INDIRECT (unique, 0x10000183, 8) , (const, 0x157, 4), (unique, 0x10000183, 8) COPY (register, 0x0, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x15d, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x15d, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x15d, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4ecd20, 8) INDIRECT (ram, 0x4ecd20, 8) , (const, 0x15d, 4), (ram, 0x4ecd20, 8) COPY (unique, 0x100001a3, 8), (unique, 0x100001a3, 8) MULTIEQUAL (unique, 0x1000018b, 8) , (unique, 0x10000193, 8) , (unique, 0x1000019b, 8)]
[(ram, 0x4f0858, 8) INDIRECT (ram, 0x4f0858, 8) , (const, 0x15d, 4), (ram, 0x4f0858, 8) MULTIEQUAL (ram, 0x4f0858, 8) , (ram, 0x4f0858, 8) , (ram, 0x4f0858, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x15d, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x15d, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x15d, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffc8, 8), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x160, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x160, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x160, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x160, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x160, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4ecd20, 8) COPY (ram, 0x4ecd20, 8), (ram, 0x4ecd20, 8) INDIRECT (ram, 0x4ecd20, 8) , (const, 0x160, 4), (ram, 0x4ecd20, 8) MULTIEQUAL (ram, 0x4ecd20, 8) , (ram, 0x4ecd20, 8)]
[(ram, 0x4f0858, 8) COPY (ram, 0x4f0858, 8), (ram, 0x4f0858, 8) INDIRECT (ram, 0x4f0858, 8) , (const, 0x160, 4), (ram, 0x4f0858, 8) MULTIEQUAL (ram, 0x4f0858, 8) , (ram, 0x4f0858, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x160, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[ ---  RETURN (const, 0x1, 4)]
