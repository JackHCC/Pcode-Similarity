[ ---  CBRANCH (ram, 0x48072a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000743, 8) , (const, 0x0, 8), (unique, 0x10000743, 8) CAST (register, 0x88, 8)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000570, 8) , (unique, 0x10000560, 8) , (const, 0x78f, 4) , (unique, 0x100005a0, 8), (unique, 0x100005a0, 8) COPY (const, 0x4afc08, 8), (unique, 0x10000570, 8) COPY (const, 0x4af669, 8), (unique, 0x10000560, 8) COPY (const, 0x4af47c, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x826, 4)]
[(ram, 0x4c4a70, 8) COPY (ram, 0x4c4a70, 8), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x826, 4)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x826, 4)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x826, 4)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x826, 4)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x826, 4)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x826, 4)]
[(ram, 0x4c87c0, 4) COPY (ram, 0x4c87c0, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x826, 4)]
[(ram, 0x4c8808, 4) COPY (ram, 0x4c8808, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x826, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x480789, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (ram, 0x4c6128, 8) , (register, 0x88, 8)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000578, 8) , (unique, 0x10000568, 8) , (const, 0x790, 4) , (unique, 0x100005a8, 8), (unique, 0x100005a8, 8) COPY (const, 0x4afc08, 8), (unique, 0x10000578, 8) COPY (const, 0x4af673, 8), (unique, 0x10000568, 8) COPY (const, 0x4af47c, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x81d, 4)]
[(ram, 0x4c4a70, 8) COPY (ram, 0x4c4a70, 8), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x81d, 4)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x81d, 4)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x81d, 4)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x81d, 4)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x81d, 4)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x81d, 4)]
[(ram, 0x4c87c0, 4) COPY (ram, 0x4c87c0, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x81d, 4)]
[(ram, 0x4c8808, 4) COPY (ram, 0x4c8808, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x81d, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x1000072f, 4) COPY (ram, 0x4c87c0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000074b, 8), (unique, 0x1000074b, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100005c0, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100005c0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6180, 8), (register, 0x0, 8) INT_MULT (register, 0x88, 8) , (const, 0x90, 8)]
[(unique, 0x10000651, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000659, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(unique, 0x10000661, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(unique, 0x10000669, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(unique, 0x1000066d, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(unique, 0x10000675, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(unique, 0x1000067d, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(unique, 0x10000685, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(unique, 0x10000691, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(unique, 0x10000695, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(unique, 0x10000737, 4) COPY (unique, 0x1000068d, 4), (unique, 0x1000068d, 4) MULTIEQUAL (unique, 0x1000072f, 4) , (unique, 0x10000733, 4)]
[ ---  CBRANCH (ram, 0x47fef9, 1) , (unique, 0x10000650, 1), (unique, 0x10000650, 1) INT_NOTEQUAL (unique, 0x10000648, 8) , (const, 0x0, 8), (unique, 0x10000648, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x47fef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000480, 1) , (const, 0x0, 1), (unique, 0x10000480, 1) INT_AND (unique, 0x1000047f, 1) , (const, 0x1, 1), (unique, 0x1000047f, 1) INT_OR (register, 0x0, 1) , (unique, 0x1000046d, 1), (unique, 0x1000046d, 1) INT_RIGHT (unique, 0xbb00, 1) , (const, 0x1, 4), (register, 0x0, 1) INT_RIGHT (unique, 0xbb00, 1) , (const, 0x5, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000753, 8), (unique, 0x10000753, 8) INT_ADD (unique, 0x10000648, 8) , (const, 0x31d, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000651, 8) , (const, 0x7ac, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (unique, 0x10000659, 8) , (const, 0x7ac, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (unique, 0x10000661, 8) , (const, 0x7ac, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (unique, 0x10000669, 4) , (const, 0x7ac, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (unique, 0x1000066d, 8) , (const, 0x7ac, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (unique, 0x10000675, 8) , (const, 0x7ac, 4)]
[(ram, 0x4c6128, 8) INDIRECT (unique, 0x1000067d, 8) , (const, 0x7ac, 4)]
[(ram, 0x4c6180, 8) INDIRECT (unique, 0x10000685, 8) , (const, 0x7ac, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (unique, 0x10000737, 4) , (const, 0x7ac, 4)]
[(ram, 0x4c8808, 4) INDIRECT (unique, 0x10000691, 4) , (const, 0x7ac, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (unique, 0x10000695, 8) , (const, 0x7ac, 4)]
[ ---  CBRANCH (ram, 0x47ff5f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x485520, 8) , (register, 0x30, 8) , (unique, 0x10000648, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8)]
[(ram, 0x4c4a70, 8) COPY (ram, 0x4c4a70, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8)]
[(ram, 0x4c87c0, 4) COPY (ram, 0x4c87c0, 4)]
[(ram, 0x4c8808, 4) COPY (ram, 0x4c8808, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x10000648, 8)]
[ ---  CBRANCH (ram, 0x47fef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000075b, 8), (unique, 0x1000075b, 8) INT_ADD (unique, 0x10000648, 8) , (const, 0x31d, 8)]
[ ---  CBRANCH (ram, 0x47fef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000763, 8), (unique, 0x10000763, 8) INT_ADD (unique, 0x10000648, 8) , (const, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7e8, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x7e8, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x7e8, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x7e8, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x7e8, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x7e8, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x7e8, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x7e8, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x7e8, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x7e8, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x7e8, 4)]
[ ---  CBRANCH (ram, 0x47fef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x401140, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000077b, 8), (unique, 0x1000077b, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000773, 8), (unique, 0x10000773, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000076b, 8), (unique, 0x1000076b, 8) INT_ADD (unique, 0x10000648, 8) , (const, 0x68, 8)]
[ ---  CALL (ram, 0x47cc90, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000783, 8), (unique, 0x10000783, 8) INT_ADD (unique, 0x10000648, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000078b, 8), (unique, 0x1000078b, 8) INT_ADD (unique, 0x10000648, 8) , (const, 0x31d, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x800, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x7fa, 4)]
[(ram, 0x4c4a70, 8) COPY (ram, 0x4c4a70, 8), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x800, 4), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x7fa, 4)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x800, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x7fa, 4)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x800, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x7fa, 4)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x800, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x7fa, 4)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x800, 4), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x7fa, 4)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x800, 4), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x7fa, 4)]
[(ram, 0x4c87c0, 4) COPY (ram, 0x4c87c0, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x800, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x7fa, 4)]
[(ram, 0x4c8808, 4) COPY (ram, 0x4c8808, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x800, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x7fa, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x10000648, 8)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (unique, 0x10000695, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (unique, 0x10000691, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (unique, 0x10000685, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (unique, 0x1000067d, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (unique, 0x10000675, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (unique, 0x1000066d, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (unique, 0x10000669, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (unique, 0x10000661, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (unique, 0x10000659, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000651, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000733, 4) COPY (ram, 0x4c87c0, 4), (ram, 0x4c87c0, 4) MULTIEQUAL (unique, 0x10000737, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000793, 8), (unique, 0x10000793, 8) INT_ADD (unique, 0x10000648, 8) , (const, 0x18, 8)]
[(unique, 0x100004d9, 4) INT_AND (register, 0x80, 4) , (const, 0x10000000, 4)]
[(unique, 0x100004e9, 4) INT_AND (register, 0x80, 4) , (const, 0x10000000, 4)]
[(unique, 0x100004f1, 4) INT_AND (register, 0x80, 4) , (const, 0x10000000, 4)]
[(unique, 0x100004f9, 4) INT_AND (register, 0x80, 4) , (const, 0x10000000, 4)]
[ ---  CBRANCH (ram, 0x480351, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001b4, 4) , (const, 0x0, 4), (unique, 0x100001b4, 4) INT_AND (unique, 0x1000068d, 4) , (const, 0x40, 4)]
[ ---  CBRANCH (ram, 0x480660, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x4afb60, 8)]
[ ---  CBRANCH (ram, 0x4803a1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100004d9, 4) , (const, 0x0, 4)]
[(register, 0x38, 8) COPY (const, 0x4afb88, 8)]
[ ---  CALL (ram, 0x485320, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x88, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x709, 4), (register, 0x110, 8) INDIRECT (unique, 0x10000651, 8) , (const, 0x701, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x709, 4), (ram, 0x4c4a68, 8) INDIRECT (unique, 0x10000659, 8) , (const, 0x701, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x709, 4), (ram, 0x4c4a70, 8) INDIRECT (unique, 0x10000661, 8) , (const, 0x701, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x709, 4), (ram, 0x4c4aa0, 4) INDIRECT (unique, 0x10000669, 4) , (const, 0x701, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x709, 4), (ram, 0x4c4eb0, 8) INDIRECT (unique, 0x1000066d, 8) , (const, 0x701, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x709, 4), (ram, 0x4c4ee0, 8) INDIRECT (unique, 0x10000675, 8) , (const, 0x701, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x709, 4), (ram, 0x4c6128, 8) INDIRECT (unique, 0x1000067d, 8) , (const, 0x701, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x709, 4), (ram, 0x4c6180, 8) INDIRECT (unique, 0x10000685, 8) , (const, 0x701, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x709, 4), (ram, 0x4c87c0, 4) INDIRECT (unique, 0x10000737, 4) , (const, 0x701, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x709, 4), (ram, 0x4c8808, 4) INDIRECT (unique, 0x10000691, 4) , (const, 0x701, 4)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x709, 4), (stack, 0xfffffffffffffc67, 1) COPY (const, 0x0, 1)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x709, 4), (stack, 0xfffffffffffffc68, 8) INDIRECT (unique, 0x10000695, 8) , (const, 0x701, 4)]
[ ---  CBRANCH (ram, 0x47ffb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4011a0, 8) , (register, 0x30, 8) , (const, 0x2f, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x718, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x718, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x718, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x718, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x718, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x718, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x718, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x718, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x718, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x718, 4), (stack, 0xfffffffffffffc10, 8) COPY (const, 0x4803cb, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x718, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x718, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8)]
[ ---  CBRANCH (ram, 0x480104, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100004a6, 4) , (const, 0x0, 4), (unique, 0x100004a6, 4) INT_AND (ram, 0x4c87c0, 4) , (const, 0x1, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x718, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000651, 8) , (const, 0x736, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (unique, 0x10000659, 8) , (const, 0x736, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (unique, 0x10000661, 8) , (const, 0x736, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (unique, 0x10000669, 4) , (const, 0x736, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (unique, 0x1000066d, 8) , (const, 0x736, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (unique, 0x10000675, 8) , (const, 0x736, 4)]
[(ram, 0x4c6128, 8) INDIRECT (unique, 0x1000067d, 8) , (const, 0x736, 4)]
[(ram, 0x4c6180, 8) INDIRECT (unique, 0x10000685, 8) , (const, 0x736, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (unique, 0x10000737, 4) , (const, 0x736, 4)]
[(ram, 0x4c8808, 4) INDIRECT (unique, 0x10000691, 4) , (const, 0x736, 4)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x736, 4), (stack, 0xfffffffffffffc67, 1) COPY (const, 0x0, 1)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (unique, 0x10000695, 8) , (const, 0x736, 4)]
[ ---  CBRANCH (ram, 0x480038, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4011a0, 8) , (register, 0x30, 8) , (const, 0x2f, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x745, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x745, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x745, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x745, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x745, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x745, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x745, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x745, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x745, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x745, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x745, 4), (stack, 0xfffffffffffffc10, 8) COPY (const, 0x480683, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x745, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x745, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8)]
[ ---  CBRANCH (ram, 0x4803e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4), (register, 0xb8, 4) INT_AND (unique, 0x1000068d, 4) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000651, 8) , (const, 0x97, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (unique, 0x10000659, 8) , (const, 0x97, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (unique, 0x10000661, 8) , (const, 0x97, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (unique, 0x10000669, 4) , (const, 0x97, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (unique, 0x1000066d, 8) , (const, 0x97, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (unique, 0x10000675, 8) , (const, 0x97, 4)]
[(ram, 0x4c6128, 8) INDIRECT (unique, 0x1000067d, 8) , (const, 0x97, 4)]
[(ram, 0x4c6180, 8) INDIRECT (unique, 0x10000685, 8) , (const, 0x97, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (unique, 0x10000737, 4) , (const, 0x97, 4)]
[(ram, 0x4c8808, 4) INDIRECT (unique, 0x10000691, 4) , (const, 0x97, 4)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x97, 4), (stack, 0xfffffffffffffc67, 1) COPY (const, 0x0, 1)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (unique, 0x10000695, 8) , (const, 0x97, 4)]
[ ---  CBRANCH (ram, 0x4800e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4011a0, 8) , (register, 0x30, 8) , (const, 0x2f, 8)]
[ ---  CBRANCH (ram, 0x480038, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1fb, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x1fb, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x1fb, 4), (ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x1fb, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x1fb, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x1fb, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x1fb, 4), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x1fb, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x1fb, 4), (ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x1fb, 4), (ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x1fb, 4), (stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(register, 0x0, 8) CAST (unique, 0x1000079b, 8), (unique, 0x1000079b, 8) CALL (ram, 0x429160, 8) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb0, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0xb0, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0xb0, 4), (ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0xb0, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0xb0, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0xb0, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0xb0, 4), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0xb0, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0xb0, 4), (ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0xb0, 4), (ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0xb0, 4), (stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(register, 0x0, 8) CAST (unique, 0x100007a3, 8), (unique, 0x100007a3, 8) CALL (ram, 0x47f4b0, 8) , (register, 0x38, 8) , (register, 0x30, 8)]
[(unique, 0x1000050a, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000512, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(unique, 0x1000051a, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(unique, 0x10000522, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(unique, 0x10000526, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(unique, 0x1000052e, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(unique, 0x10000536, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(unique, 0x1000053e, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(unique, 0x10000546, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(unique, 0x1000054a, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(unique, 0x1000054e, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[ ---  CBRANCH (ram, 0x47ffd0, 1) , (unique, 0x10000501, 1), (unique, 0x10000501, 1) INT_NOTEQUAL (unique, 0x10000502, 8) , (const, 0x0, 8), (unique, 0x10000502, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x1000050a, 8) , (const, 0xc6, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (unique, 0x10000512, 8) , (const, 0xc6, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (unique, 0x1000051a, 8) , (const, 0xc6, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (unique, 0x10000522, 4) , (const, 0xc6, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (unique, 0x10000526, 8) , (const, 0xc6, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (unique, 0x1000052e, 8) , (const, 0xc6, 4)]
[(ram, 0x4c6128, 8) INDIRECT (unique, 0x10000536, 8) , (const, 0xc6, 4)]
[(ram, 0x4c6180, 8) INDIRECT (unique, 0x1000053e, 8) , (const, 0xc6, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (unique, 0x10000546, 4) , (const, 0xc6, 4)]
[(ram, 0x4c8808, 4) INDIRECT (unique, 0x1000054a, 4) , (const, 0xc6, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0xc6, 4), (stack, 0xfffffffffffffc10, 8) COPY (const, 0x47ffe2, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (unique, 0x1000054e, 1) , (const, 0xc6, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (unique, 0x10000502, 8) , (const, 0xc6, 4)]
[ ---  CBRANCH (ram, 0x480615, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x47dad0, 8) , (unique, 0x10000502, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc67, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc78, 8)]
[ ---  CBRANCH (ram, 0x47fffc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100004e9, 4) , (const, 0x0, 4)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x133, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x133, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x133, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x133, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x133, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x133, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x133, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x133, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x133, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x133, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (stack, 0xfffffffffffffc68, 8)]
[ ---  BRANCH (ram, 0x48004d, 1)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (unique, 0x10000502, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (unique, 0x1000054e, 1) , (stack, 0xfffffffffffffc67, 1)]
[(ram, 0x4c8808, 4) MULTIEQUAL (unique, 0x1000054a, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (unique, 0x10000546, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (unique, 0x1000053e, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (unique, 0x10000536, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (unique, 0x1000052e, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (unique, 0x10000526, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (unique, 0x10000522, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (unique, 0x1000051a, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (unique, 0x10000512, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x1000050a, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x48005c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100004f1, 4) , (const, 0x0, 4)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x20e, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x20e, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x20e, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x20e, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x20e, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x20e, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x20e, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x20e, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x20e, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x20e, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x20e, 4), (stack, 0xfffffffffffffc10, 8) COPY (const, 0x4800e8, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x20e, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x20e, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8)]
[ ---  CBRANCH (ram, 0x4803e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4), (register, 0xb8, 4) INT_AND (unique, 0x1000068d, 4) , (const, 0x1, 4)]
[(stack, 0xfffffffffffffc30, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6b0, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x6b0, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x6b0, 4), (ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x6b0, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x6b0, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x6b0, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x6b0, 4), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x6b0, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x6b0, 4), (ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x6b0, 4), (ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x6b0, 4), (stack, 0xfffffffffffffc10, 8) COPY (const, 0x4803f5, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x6b0, 4), (stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x6b0, 4), (stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[ ---  CALL (ram, 0x485320, 8) , (unique, 0x10000590, 8) , (register, 0x30, 8) , (register, 0x88, 8), (unique, 0x10000590, 8) COPY (const, 0x4afbc0, 8)]
[ ---  BRANCH (ram, 0x4800fb, 1)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc30, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xfffffffffffffc30, 8)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x480696, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc30, 8) MULTIEQUAL (stack, 0xfffffffffffffc30, 8) , (register, 0x0, 8)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[ ---  BRANCH (ram, 0x480518, 1)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc30, 8) MULTIEQUAL (stack, 0xfffffffffffffc30, 8) , (register, 0x0, 8)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100006bb, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[ ---  CBRANCH (ram, 0x4801ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100007ab, 8), (unique, 0x100007ab, 8) INT_ADD (register, 0x38, 8) , (const, 0x128, 8)]
[ ---  CBRANCH (ram, 0x48015e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4ee0, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000553, 1) COPY (const, 0x0, 1)]
[(stack, 0xfffffffffffffc38, 8) COPY (ram, 0x4c6180, 8)]
[(unique, 0x100006cb, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x480262, 1)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000552, 1) MULTIEQUAL (unique, 0x10000553, 1) , (unique, 0x1000054f, 1)]
[(unique, 0x3c80, 8) INT_ADD (register, 0xa0, 8) , (const, 0x328, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100006cb, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x480251, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100007b3, 8), (unique, 0x100007b3, 8) INT_ADD (register, 0xa0, 8) , (const, 0x328, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100006cb, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x480210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x52e, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x52e, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x52e, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x52e, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x52e, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x52e, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x52e, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x52e, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x52e, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x52e, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x52e, 4), (stack, 0xfffffffffffffc10, 8) COPY (const, 0x480299, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x52e, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x52e, 4)]
[ ---  CBRANCH (ram, 0x480210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x47f950, 8) , (register, 0xa0, 8) , (unique, 0x3c80, 8) , (const, 0xf, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x666, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x666, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x666, 4), (ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x666, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x666, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x666, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x666, 4), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x666, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x666, 4), (ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x666, 4), (ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x666, 4), (stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x666, 4), (stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(unique, 0x10000717, 8) COPY (stack, 0xfffffffffffffc68, 8), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x666, 4), (stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[ ---  CBRANCH (ram, 0x4805e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x47d430, 8) , (register, 0x30, 8) , (stack, 0xfffffffffffffc30, 8) , (register, 0x80, 4)]
[(unique, 0x10000551, 1) CAST (unique, 0x100007bb, 1), (unique, 0x100007bb, 1) INT_OR (unique, 0x10000552, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (unique, 0x100006bb, 8)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000054f, 1) MULTIEQUAL (unique, 0x10000552, 1) , (unique, 0x10000551, 1) , (unique, 0x10000552, 1)]
[ ---  CBRANCH (ram, 0x480504, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100007bc, 8), (unique, 0x100007bc, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2e0, 8)]
[ ---  CBRANCH (ram, 0x4806c2, 1) , (unique, 0x10000550, 1), (unique, 0x10000550, 1) BOOL_NEGATE (unique, 0x1000054f, 1)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc30, 8) MULTIEQUAL (stack, 0xfffffffffffffc30, 8) , (stack, 0xfffffffffffffc30, 8)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x48059e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffc38, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffc38, 8) MULTIEQUAL (stack, 0xfffffffffffffc38, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48059e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x2, 1), (register, 0x0, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100007c4, 8), (unique, 0x100007c4, 8) INT_ADD (stack, 0xfffffffffffffc38, 8) , (const, 0x31c, 8)]
[(unique, 0x3200, 8) INT_ADD (stack, 0xfffffffffffffc38, 8) , (const, 0x328, 8)]
[ ---  CBRANCH (ram, 0x48059e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100007cc, 8), (unique, 0x100007cc, 8) INT_ADD (stack, 0xfffffffffffffc38, 8) , (const, 0x328, 8)]
[ ---  CBRANCH (ram, 0x4806d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x62c, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x62c, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x62c, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x62c, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x62c, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x62c, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x62c, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x62c, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x62c, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x62c, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x62c, 4), (stack, 0xfffffffffffffc10, 8) COPY (const, 0x4806ef, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x62c, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x62c, 4)]
[ ---  CBRANCH (ram, 0x480554, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x47f950, 8) , (stack, 0xfffffffffffffc38, 8) , (unique, 0x3200, 8) , (const, 0xf, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5d5, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x5d5, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x5d5, 4), (ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x5d5, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x5d5, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x5d5, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x5d5, 4), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x5d5, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x5d5, 4), (ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x5d5, 4), (ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x5d5, 4), (stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x5d5, 4), (stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(unique, 0x1000070f, 8) COPY (stack, 0xfffffffffffffc68, 8), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x5d5, 4), (stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[ ---  CBRANCH (ram, 0x4801bd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x47d430, 8) , (register, 0x30, 8) , (stack, 0xfffffffffffffc30, 8) , (register, 0x80, 4)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x4802c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4ee0, 8) , (const, 0xffffffffffffffff, 8), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[ ---  CBRANCH (ram, 0x48011d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48015e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48015e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4ee0, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x26a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x26a, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x26a, 4), (ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x26a, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x26a, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x26a, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x26a, 4), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x26a, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x26a, 4), (ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x26a, 4), (ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x26a, 4), (stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x26a, 4), (stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(unique, 0x100006e7, 8) COPY (stack, 0xfffffffffffffc68, 8), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x26a, 4), (stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[ ---  CBRANCH (ram, 0x4801bd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x47d430, 8) , (register, 0x30, 8) , (stack, 0xfffffffffffffc30, 8) , (register, 0x80, 4), (stack, 0xfffffffffffffc30, 8) MULTIEQUAL (stack, 0xfffffffffffffc30, 8) , (stack, 0xfffffffffffffc30, 8) , (stack, 0xfffffffffffffc30, 8)]
[ ---  CBRANCH (ram, 0x4801b4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc30, 8) MULTIEQUAL (stack, 0xfffffffffffffc30, 8) , (stack, 0xfffffffffffffc30, 8) , (stack, 0xfffffffffffffc30, 8) , (stack, 0xfffffffffffffc30, 8)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3c80, 8) INT_ADD (register, 0x38, 8) , (const, 0x3b8, 8)]
[ ---  CBRANCH (ram, 0x4802cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100007d4, 8), (unique, 0x100007d4, 8) INT_ADD (register, 0x38, 8) , (const, 0x3b8, 8)]
[ ---  CBRANCH (ram, 0x4805f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4e4, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x4e4, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x4e4, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x4e4, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x4e4, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x4e4, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x4e4, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x4e4, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x4e4, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x4e4, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x4e4, 4), (stack, 0xfffffffffffffc10, 8) COPY (const, 0x480608, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x4e4, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x4e4, 4)]
[ ---  CBRANCH (ram, 0x480181, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x47f950, 8) , (register, 0x38, 8) , (unique, 0x3c80, 8) , (const, 0x1d, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2c5, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x2c5, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x2c5, 4), (ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x2c5, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x2c5, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x2c5, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x2c5, 4), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x2c5, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x2c5, 4), (ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x2c5, 4), (ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x2c5, 4), (stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x2c5, 4), (stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x2c5, 4), (stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(register, 0x0, 4) CALL (ram, 0x47d430, 8) , (register, 0x30, 8) , (stack, 0xfffffffffffffc30, 8) , (register, 0x80, 4), (stack, 0xfffffffffffffc30, 8) MULTIEQUAL (stack, 0xfffffffffffffc30, 8) , (stack, 0xfffffffffffffc30, 8) , (stack, 0xfffffffffffffc30, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc30, 8) MULTIEQUAL (stack, 0xfffffffffffffc30, 8) , (stack, 0xfffffffffffffc30, 8)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100006ef, 8) COPY (stack, 0xfffffffffffffc68, 8), (stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[ ---  CBRANCH (ram, 0x4802cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0xffffffff, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc30, 8) MULTIEQUAL (stack, 0xfffffffffffffc30, 8) , (stack, 0xfffffffffffffc30, 8) , (stack, 0xfffffffffffffc30, 8) , (stack, 0xfffffffffffffc30, 8)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffc68, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4806fc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002fd, 4) , (const, 0x0, 4), (unique, 0x100002fd, 4) INT_AND (register, 0x80, 4) , (const, 0x4000000, 4)]
[ ---  CBRANCH (ram, 0x48049d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4aa0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x48049d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8808, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x339, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x339, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x339, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x339, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x339, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x339, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x339, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x339, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x339, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x339, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x339, 4), (stack, 0xfffffffffffffc10, 8) COPY (const, 0x4802fc, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x339, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x339, 4)]
[ ---  CBRANCH (ram, 0x48049d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100007dc, 8), (unique, 0x100007dc, 8) CALL (ram, 0x487fe0, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4803fa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x480320, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100007e4, 8), (unique, 0x100007e4, 8) INT_ADD (ram, 0x4c6180, 8) , (const, 0x3e5, 8)]
[ ---  CBRANCH (ram, 0x48040e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100007ec, 8), (unique, 0x100007ec, 8) INT_ADD (register, 0x38, 8) , (const, 0x3e5, 8)]
[ ---  CBRANCH (ram, 0x48043b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0x3638782f62696c2f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x10, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0x756e696c2d34365f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x480767, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x6e672d78, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100007f4, 8), (unique, 0x100007f4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48043b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x2f75, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000804, 8), (unique, 0x10000804, 8) INT_ADD (unique, 0x100007fc, 8) , (const, 0x14, 8), (unique, 0x100007fc, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48046f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0x62696c2f7273752f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x10, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0x2d34365f3638782f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x480778, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x6e672d78756e696c, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48046f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x2f75, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000080c, 8), (unique, 0x1000080c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48071b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x62696c2f, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000814, 8), (unique, 0x10000814, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48047b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000824, 8), (unique, 0x10000824, 8) INT_ADD (unique, 0x1000081c, 8) , (const, 0x4, 8), (unique, 0x1000081c, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x480320, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x62696c2f7273752f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x480320, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000082c, 8), (unique, 0x1000082c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x366, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x366, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x366, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x366, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x366, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x366, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x366, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x366, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x366, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x366, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x366, 4), (stack, 0xfffffffffffffc10, 8) COPY (const, 0x480337, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x366, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x366, 4)]
[(unique, 0x1000071f, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x480498, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x47ce50, 8) , (register, 0x0, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc67, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc78, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x37c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x37c, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x37c, 4), (ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x37c, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x37c, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x37c, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x37c, 4), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x37c, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x37c, 4), (ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x37c, 4), (ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x37c, 4), (stack, 0xfffffffffffffc10, 8) COPY (const, 0x48049d, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x37c, 4), (stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x37c, 4), (stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x0, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100006c3, 8) COPY (register, 0x38, 8)]
[(unique, 0x1000073b, 8) COPY (stack, 0xfffffffffffffc68, 8), (stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[ ---  CBRANCH (ram, 0x48063f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4804b6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000834, 8), (unique, 0x10000834, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100005c8, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100005c8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6180, 8), (register, 0x0, 8) INT_MULT (register, 0x88, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x480711, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000083c, 8), (unique, 0x1000083c, 8) INT_ADD (register, 0x0, 8) , (const, 0x3e5, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100006c3, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x30, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x4801bd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4eb0, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c1, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x3c1, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x3c1, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x3c1, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x3c1, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x3c1, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x3c1, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x3c1, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x3c1, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x3c1, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x3c1, 4)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x3c1, 4)]
[(register, 0x0, 4) CALL (ram, 0x47d430, 8) , (register, 0x30, 8) , (stack, 0xfffffffffffffc30, 8) , (register, 0x80, 4) , (unique, 0x100005b8, 8) , (unique, 0x3800, 8) , (unique, 0x3c80, 8) , (register, 0x0, 8) , (const, 0x40, 8) , (unique, 0x3800, 8) , (stack, 0xfffffffffffffc10, 8), (unique, 0x100005b8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4eb0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc68, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc78, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc67, 8)]
[(unique, 0x100006ff, 8) COPY (stack, 0xfffffffffffffc68, 8), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x3c1, 4)]
[ ---  BRANCH (ram, 0x4801bd, 1)]
[(register, 0x30, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x4801bd, 1)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x0, 4) , (register, 0x30, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xfffffffffffffc68, 8) COPY (unique, 0x10000727, 8), (unique, 0x10000727, 8) MULTIEQUAL (unique, 0x100006e7, 8) , (unique, 0x100006ef, 8) , (unique, 0x1000073b, 8) , (unique, 0x100006ff, 8) , (unique, 0x1000073b, 8) , (unique, 0x1000070f, 8) , (unique, 0x10000717, 8) , (unique, 0x1000071f, 8)]
[ ---  CBRANCH (ram, 0x480624, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000492, 4) , (const, 0x0, 4), (unique, 0x10000492, 4) INT_AND (ram, 0x4c87c0, 4) , (const, 0x1, 4), (ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x315, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x315, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x315, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x315, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x315, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x315, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x315, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x315, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x315, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x315, 4)]
[(stack, 0xfffffffffffffc10, 8) INDIRECT (stack, 0xfffffffffffffc10, 8) , (const, 0x315, 4), (stack, 0xfffffffffffffc10, 8) COPY (const, 0x480636, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x315, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x315, 4)]
[ ---  CALL (ram, 0x485320, 8)]
[ ---  BRANCH (ram, 0x4801ca, 1)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x4801d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100004f9, 4) , (const, 0x0, 4)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x48005c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0xffffffff, 4)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x109, 4), (stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x109, 4), (stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0x109, 4), (stack, 0xfffffffffffffc70, 8) COPY (ram, 0x4c4a70, 8), (ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x109, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c4a70, 8) COPY (ram, 0x4c4a70, 8), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x109, 4), (ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x109, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x109, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x109, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x109, 4), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x109, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c87c0, 4) COPY (ram, 0x4c87c0, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x109, 4), (ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c8808, 4) COPY (ram, 0x4c8808, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x109, 4), (ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x47e140, 8) , (register, 0x30, 8) , (register, 0x30, 4) , (register, 0xb8, 8) , (stack, 0xfffffffffffffc68, 8) , (register, 0xa0, 8) , (register, 0x10, 4) , (register, 0x80, 4) , (unique, 0x3800, 8) , (register, 0x88, 8) , (stack, 0xfffffffffffffc10, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc70, 8), (register, 0xb8, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc78, 8), (register, 0x30, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x30, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0xa0, 8) , (register, 0xa0, 8), (stack, 0xfffffffffffffc10, 8) MULTIEQUAL (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8) , (stack, 0xfffffffffffffc10, 8), (stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[(ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x4802a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4802a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000489, 4) , (const, 0x0, 4), (unique, 0x10000489, 4) INT_AND (ram, 0x4c87c0, 4) , (const, 0x800, 4)]
[ ---  CBRANCH (ram, 0x4806a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffc67, 1) , (const, 0x0, 1)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x1f5, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x1f5, 4)]
[ ---  CALL (ram, 0x489410, 8) , (unique, 0xbc80, 4) , (register, 0x30, 8) , (const, 0x0, 8) , (unique, 0x10000598, 8), (unique, 0x10000598, 8) COPY (const, 0x4afbe8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000844, 8), (unique, 0x10000844, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c4a70, 8) COPY (ram, 0x4c4a70, 8), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x1f5, 4)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c87c0, 4) COPY (ram, 0x4c87c0, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x1f5, 4)]
[(ram, 0x4c8808, 4) COPY (ram, 0x4c8808, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x1f5, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x1df, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x1df, 4)]
[ ---  CALL (ram, 0x489410, 8) , (const, 0x0, 8) , (register, 0x30, 8) , (const, 0x0, 8) , (unique, 0x10000580, 8), (unique, 0x10000580, 8) COPY (const, 0x4af693, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x1df, 4)]
[(ram, 0x4c4a70, 8) COPY (ram, 0x4c4a70, 8), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x1df, 4)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x1df, 4)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x1df, 4)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x1df, 4)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x1df, 4)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x1df, 4)]
[(ram, 0x4c87c0, 4) COPY (ram, 0x4c87c0, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x1df, 4)]
[(ram, 0x4c8808, 4) COPY (ram, 0x4c8808, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x1df, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x163, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x163, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x163, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x163, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x163, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x163, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x163, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x163, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x163, 4)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x163, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x163, 4)]
[ ---  CBRANCH (ram, 0x480749, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x429160, 8) , (register, 0x30, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x17b, 4)]
[(ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x17b, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x17b, 4)]
[(ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x17b, 4)]
[(ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x17b, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x17b, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x17b, 4)]
[(ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x17b, 4)]
[(ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x17b, 4)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x17b, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x17b, 4)]
[ ---  CBRANCH (ram, 0x480749, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x482410, 8) , (register, 0x0, 8) , (register, 0x30, 8) , (register, 0x10, 4) , (register, 0xa0, 8) , (register, 0x80, 4) , (register, 0x88, 8)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x0, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x1b6, 4), (stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x1a6, 4), (stack, 0xfffffffffffffc67, 1) MULTIEQUAL (stack, 0xfffffffffffffc67, 1) , (stack, 0xfffffffffffffc67, 1)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x1b6, 4), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x1a6, 4), (stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[ ---  CALL (ram, 0x489410, 8) , (const, 0xc, 8) , (register, 0x30, 8) , (const, 0x0, 8) , (unique, 0x10000588, 8), (unique, 0x10000588, 8) COPY (const, 0x4af7d0, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x1b6, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x1a6, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c4a70, 8) COPY (ram, 0x4c4a70, 8), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x1b6, 4), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x1a6, 4), (ram, 0x4c4a70, 8) MULTIEQUAL (ram, 0x4c4a70, 8) , (ram, 0x4c4a70, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x1b6, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x1a6, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x1b6, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x1a6, 4), (ram, 0x4c4eb0, 8) MULTIEQUAL (ram, 0x4c4eb0, 8) , (ram, 0x4c4eb0, 8)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x1b6, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x1a6, 4), (ram, 0x4c4ee0, 8) MULTIEQUAL (ram, 0x4c4ee0, 8) , (ram, 0x4c4ee0, 8)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x1b6, 4), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x1a6, 4), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x1b6, 4), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x1a6, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c87c0, 4) COPY (ram, 0x4c87c0, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x1b6, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x1a6, 4), (ram, 0x4c87c0, 4) MULTIEQUAL (ram, 0x4c87c0, 4) , (ram, 0x4c87c0, 4)]
[(ram, 0x4c8808, 4) COPY (ram, 0x4c8808, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x1b6, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x1a6, 4), (ram, 0x4c8808, 4) MULTIEQUAL (ram, 0x4c8808, 4) , (ram, 0x4c8808, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbc00, 2), (unique, 0xbc00, 2) INT_OR (unique, 0xbc00, 2) , (const, 0x204, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000084c, 8), (unique, 0x1000084c, 8) INT_ADD (register, 0x0, 8) , (const, 0x31c, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x100005b0, 8), (unique, 0x100005b0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4afd60, 8), (unique, 0x3200, 8) CAST (unique, 0x10000854, 8), (unique, 0x10000854, 8) INT_ADD (register, 0x0, 8) , (const, 0x310, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x1, 4), (unique, 0x3200, 8) CAST (unique, 0x1000085c, 8), (unique, 0x1000085c, 8) INT_ADD (register, 0x0, 8) , (const, 0x2f4, 8)]
[(stack, 0xfffffffffffffc67, 1) INDIRECT (stack, 0xfffffffffffffc67, 1) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x1a1, 4)]
[ ---  CALL (ram, 0x482350, 8) , (register, 0x0, 8) , (register, 0x88, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x1a1, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x19e, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x19b, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x18f, 4)]
[(ram, 0x4c4a70, 8) COPY (ram, 0x4c4a70, 8), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x1a1, 4), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x19e, 4), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x19b, 4), (ram, 0x4c4a70, 8) INDIRECT (ram, 0x4c4a70, 8) , (const, 0x18f, 4)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x1a1, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x19e, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x19b, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x18f, 4)]
[(ram, 0x4c4eb0, 8) COPY (ram, 0x4c4eb0, 8), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x1a1, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x19e, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x19b, 4), (ram, 0x4c4eb0, 8) INDIRECT (ram, 0x4c4eb0, 8) , (const, 0x18f, 4)]
[(ram, 0x4c4ee0, 8) COPY (ram, 0x4c4ee0, 8), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x1a1, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x19e, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x19b, 4), (ram, 0x4c4ee0, 8) INDIRECT (ram, 0x4c4ee0, 8) , (const, 0x18f, 4)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x1a1, 4), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x19e, 4), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x19b, 4), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x18f, 4)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x1a1, 4), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x19e, 4), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x19b, 4), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x18f, 4)]
[(ram, 0x4c87c0, 4) COPY (ram, 0x4c87c0, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x1a1, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x19e, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x19b, 4), (ram, 0x4c87c0, 4) INDIRECT (ram, 0x4c87c0, 4) , (const, 0x18f, 4)]
[(ram, 0x4c8808, 4) COPY (ram, 0x4c8808, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x1a1, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x19e, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x19b, 4), (ram, 0x4c8808, 4) INDIRECT (ram, 0x4c8808, 4) , (const, 0x18f, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
