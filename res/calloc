[(register, 0x28, 8) INT_MULT (register, 0x38, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1842d0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xffffffff, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_OR (register, 0x38, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1842d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x10, 8) INT_REM (register, 0x28, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x184550, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_DIV (register, 0x28, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035d, 8) , (const, 0xc, 4), (unique, 0x1000035d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x390, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x390, 4)]
[(ram, 0x4c2ef0, 8) COPY (ram, 0x4c2ef0, 8), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x390, 4)]
[(ram, 0x4c5844, 4) COPY (ram, 0x4c5844, 4), (ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x390, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x390, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x184530, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000365, 8), (unique, 0x10000365, 8) CAST (ram, 0x4c2ef0, 8)]
[ ---  CBRANCH (ram, 0x1842ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2d90, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1843d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x8c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x8c, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x8c, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x8c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x8c, 4)]
[ ---  CBRANCH (ram, 0x184568, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000375, 8), (unique, 0x10000375, 8) CALL (ram, 0x17d8c0, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x2ba, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ba, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x2ba, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x2ba, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2ba, 4)]
[ ---  CBRANCH (ram, 0x184310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000037d, 8), (unique, 0x1000037d, 8) CALL (ram, 0x17dae0, 8) , (register, 0x28, 8) , (const, 0x0, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x2d4, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2d4, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x2d4, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x2d4, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2d4, 4)]
[ ---  CBRANCH (ram, 0x184547, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000385, 8), (unique, 0x10000385, 8) CALL (ram, 0x181400, 8) , (const, 0x0, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1844f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001d4, 8) , (const, 0x0, 8), (unique, 0x100001d4, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1845a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000174, 8) , (const, 0x0, 8), (unique, 0x10000174, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1843ae, 1)]
[ ---  CBRANCH (ram, 0x1843ee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x36d, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x36d, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x36d, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x36d, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x36d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x33f, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x33f, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x33f, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x33f, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x33f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x184409, 1)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x350, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x350, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x350, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x350, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x350, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c5844, 4) MULTIEQUAL (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4)]
[(ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(unique, 0x10000345, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000038d, 8), (unique, 0x1000038d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x16, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18433f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (unique, 0x10000268, 8), (unique, 0x10000268, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000034d, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x18433f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0x100003a5, 8), (unique, 0x100003a5, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000039d, 8), (unique, 0x1000039d, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8), (register, 0x0, 8) INT_AND (unique, 0x10000395, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x10000395, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000355, 8) COPY (register, 0x0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000345, 8) , (unique, 0x1000034d, 8) , (unique, 0x10000355, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0xe2, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe2, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0xe2, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0xe2, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xe2, 4)]
[ ---  CBRANCH (ram, 0x1844c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003ad, 8), (unique, 0x100003ad, 8) CALL (ram, 0x181400, 8) , (register, 0x18, 8) , (register, 0x28, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x29f, 4), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x299, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x29f, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x299, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x29f, 4), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x299, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x29f, 4), (ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x299, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x29f, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x299, 4)]
[(register, 0x0, 8) CAST (unique, 0x100003bd, 8), (unique, 0x100003bd, 8) CALL (ram, 0x181400, 8) , (register, 0x0, 8) , (register, 0x28, 8), (register, 0x0, 8) CAST (unique, 0x100003b5, 8), (unique, 0x100003b5, 8) CALL (ram, 0x17dff0, 8) , (register, 0x18, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18437b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003b5, 8), (unique, 0x100003b5, 8) CALL (ram, 0x17dff0, 8) , (register, 0x18, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x184376, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000cc, 8) , (const, 0x0, 8), (unique, 0x100000cc, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8)]
[ ---  CBRANCH (ram, 0x184500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000d4, 8) , (const, 0x0, 8), (unique, 0x100000d4, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c5844, 4) MULTIEQUAL (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4)]
[(ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003cd, 8), (unique, 0x100003cd, 8) INT_AND (unique, 0x100003c5, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x100003c5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x18436d, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c5844, 4) MULTIEQUAL (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4)]
[(ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1845a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x18, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CALL (ram, 0x17d3b0, 8) , (unique, 0x10000250, 8) , (unique, 0x10000238, 8) , (const, 0xca9, 8) , (unique, 0x10000258, 8), (unique, 0x10000258, 8) COPY (const, 0x291100, 8), (unique, 0x10000250, 8) COPY (const, 0x290d80, 8), (unique, 0x10000238, 8) COPY (const, 0x28d3f9, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x284, 4), (ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x284, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ef0, 8) COPY (ram, 0x4c2ef0, 8), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x284, 4), (ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c5844, 4) COPY (ram, 0x4c5844, 4), (ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x284, 4), (ram, 0x4c5844, 4) MULTIEQUAL (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x284, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c5844, 4) MULTIEQUAL (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4)]
[(ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1843ae, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x4c5844, 4) MULTIEQUAL (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4)]
[(ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (unique, 0xbd80, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18438b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x273, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x273, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x273, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x273, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x273, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x12c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x12c, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x12c, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x12c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x12c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0x100002f1, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(unique, 0x100002f9, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000301, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(unique, 0x10000309, 4) MULTIEQUAL (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4)]
[(unique, 0x1000030d, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x1843a5, 1) , (unique, 0x100002f0, 1), (unique, 0x100002f0, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x80, 8) INDIRECT (register, 0x80, 8) , (const, 0x265, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (unique, 0x100002f1, 8) , (const, 0x265, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x100002f9, 8) , (const, 0x265, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (unique, 0x10000301, 8) , (const, 0x265, 4)]
[(ram, 0x4c5844, 4) INDIRECT (unique, 0x10000309, 4) , (const, 0x265, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x1000030d, 4) , (const, 0x265, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (register, 0x18, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x1000030d, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c5844, 4) MULTIEQUAL (ram, 0x4c5844, 4) , (unique, 0x10000309, 4) , (ram, 0x4c5844, 4)]
[(ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (unique, 0x10000301, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x100002f9, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (unique, 0x100002f1, 8) , (ram, 0x4c2d90, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (unique, 0xbd80, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x184547, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c5844, 4) MULTIEQUAL (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4)]
[(ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x184410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000100, 8) , (const, 0x0, 8), (unique, 0x10000100, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x0, 8)]
[(unique, 0x10000325, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x18442e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5844, 4) , (const, 0x0, 4)]
[(unique, 0x1000032d, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x18442e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(unique, 0x10000335, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x18442e, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (register, 0x10, 8)]
[(unique, 0x1000033d, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1845c6, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (const, 0x3, 8), (register, 0x8, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x3, 4), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000325, 8) , (unique, 0x1000032d, 8) , (unique, 0x10000335, 8) , (unique, 0x1000033d, 8)]
[ ---  CALL (ram, 0x17d3b0, 8) , (unique, 0x10000248, 8) , (unique, 0x10000240, 8) , (const, 0xcd4, 8) , (unique, 0x10000260, 8), (unique, 0x10000260, 8) COPY (const, 0x291100, 8), (unique, 0x10000248, 8) COPY (const, 0x28d5be, 8), (unique, 0x10000240, 8) COPY (const, 0x28d3f9, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x24b, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x24b, 4)]
[(ram, 0x4c2ef0, 8) COPY (ram, 0x4c2ef0, 8), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x24b, 4)]
[(ram, 0x4c5844, 4) COPY (ram, 0x4c5844, 4), (ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x24b, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x24b, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x18451b, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x9, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x218, 4), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x215, 4), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x212, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x218, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x215, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x212, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x218, 4), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x215, 4), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x212, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x218, 4), (ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x215, 4), (ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x212, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x218, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x215, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x212, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1843c8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x4, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x22a, 4), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x227, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x22a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x227, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x22a, 4), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x227, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x22a, 4), (ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x227, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x22a, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x227, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1843c8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x6, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x23b, 4), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x238, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x23b, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x238, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x23b, 4), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x238, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x23b, 4), (ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x238, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x23b, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x238, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1843c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x9, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x243, 4), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x240, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x243, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x240, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x243, 4), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x240, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x243, 4), (ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x240, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x243, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x240, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1843c8, 1)]
[ ---  CBRANCH (ram, 0x184518, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5844, 4) , (const, 0x0, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x375, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x375, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x375, 4)]
[(ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x375, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x375, 4)]
[ ---  CBRANCH (ram, 0x184520, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003dc, 8), (unique, 0x100003dc, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x28, 8) , (unique, 0x1000021c, 8) , (register, 0x10, 8), (unique, 0x1000021c, 8) INT_ADD (unique, 0x1000031d, 8) , (stack, 0x0, 1), (unique, 0x1000031d, 8) INT_LEFT (unique, 0x10000315, 8) , (const, 0x8, 8), (unique, 0x10000315, 8) INT_SEXT (unique, 0x100003d5, 7), (unique, 0x100003d5, 7) CAST (stack, 0x1, 7)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x18f, 4), (ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x18f, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ef0, 8) COPY (ram, 0x4c2ef0, 8), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x18f, 4), (ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c5844, 4) COPY (ram, 0x4c5844, 4), (ram, 0x4c5844, 4) INDIRECT (ram, 0x4c5844, 4) , (const, 0x18f, 4), (ram, 0x4c5844, 4) MULTIEQUAL (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x18f, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003e4, 8), (unique, 0x100003e4, 8) CALL (ram, 0x18e810, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x10, 8) , (register, 0x28, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c5844, 4) MULTIEQUAL (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4)]
[(ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1843c8, 1)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ef0, 8) COPY (ram, 0x4c2ef0, 8), (ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c5844, 4) COPY (ram, 0x4c5844, 4), (ram, 0x4c5844, 4) MULTIEQUAL (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4) , (ram, 0x4c5844, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x0, 8)]
