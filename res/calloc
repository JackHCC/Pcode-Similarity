[(register, 0x200, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) SUBPIECE (unique, 0x100002fd, 16) , (const, 0x0, 4), (unique, 0x100002fd, 16) INT_RIGHT (unique, 0x3e200, 16) , (const, 0x40, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_ZEXT (register, 0x30, 8), (unique, 0x3e080, 16) INT_ZEXT (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x427fe0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) SUBPIECE (unique, 0x3e200, 16) , (const, 0x0, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_ZEXT (register, 0x30, 8), (unique, 0x3e080, 16) INT_ZEXT (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x427fe0, 1) , (register, 0x200, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0xc, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x350, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x350, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x350, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x428010, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5790, 8) , (const, 0x0, 8)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x32c, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x32c, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x32c, 4)]
[ ---  CBRANCH (ram, 0x428000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) CALLIND (unique, 0x1000037c, 8) , (register, 0x0, 8) , (unique, 0x100001b3, 8), (unique, 0x1000037c, 8) CAST (ram, 0x4c5790, 8), (unique, 0x100001b3, 8) INT_ADD (unique, 0x10000315, 8) , (stack, 0x0, 1), (unique, 0x10000315, 8) INT_LEFT (unique, 0x1000030d, 8) , (const, 0x8, 8), (unique, 0x1000030d, 8) INT_SEXT (unique, 0x10000375, 7), (unique, 0x10000375, 7) CAST (stack, 0x1, 7)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x428090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000038c, 8), (unique, 0x1000038c, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8)]
[ ---  CBRANCH (ram, 0x427e9f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000394, 8), (unique, 0x10000394, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffd0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x324, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x324, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x324, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x324, 4)]
[ ---  CALL (ram, 0x424e50, 8)]
[ ---  BRANCH (ram, 0x427e9f, 1)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[ ---  CBRANCH (ram, 0x4280b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000039c, 8), (unique, 0x1000039c, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x428140, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100003ac, 8) , (const, 0x0, 8), (unique, 0x100003ac, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003a4, 8), (unique, 0x100003a4, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000205, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x10000205, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2d7, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x2d7, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x2d7, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x2d7, 4)]
[ ---  CBRANCH (ram, 0x4280dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100003bc, 8) , (const, 0x0, 8), (unique, 0x100003bc, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003b4, 8), (unique, 0x100003b4, 8) CALL (ram, 0x421c80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2f1, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x2f1, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x2f1, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x2f1, 4)]
[ ---  CBRANCH (ram, 0x4280dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100003cc, 8) , (const, 0x0, 8), (unique, 0x100003cc, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003c4, 8), (unique, 0x100003c4, 8) CALL (ram, 0x422050, 8) , (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000034d, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x427ec5, 1)]
[ ---  CBRANCH (ram, 0x42816d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003d4, 8), (unique, 0x100003d4, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003dc, 8), (unique, 0x100003dc, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x2ce, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x2ce, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x2ce, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003e4, 8) , (const, 0x1, 4), (unique, 0x100003e4, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2d3, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x2d3, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x2d3, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x2d3, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x4280dd, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003ec, 8), (unique, 0x100003ec, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x267, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x267, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x267, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003f4, 8) , (const, 0x1, 4), (unique, 0x100003f4, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000345, 8) COPY (register, 0x18, 8), (register, 0x18, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000040c, 8), (unique, 0x1000040c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002e5, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002e5, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000404, 8), (unique, 0x10000404, 8) INT_ADD (unique, 0x100003fc, 8) , (const, 0x60, 8), (unique, 0x100003fc, 8) CAST (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x427ec5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (unique, 0x100001fd, 8), (unique, 0x100001fd, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000355, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x428110, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0x10000424, 8), (unique, 0x10000424, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000041c, 8), (unique, 0x1000041c, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8), (register, 0x0, 8) INT_AND (unique, 0x10000414, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x10000414, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000035d, 8) COPY (register, 0x0, 8)]
[(register, 0x28, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(unique, 0x1000033d, 8) COPY (register, 0x18, 8), (register, 0x18, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000042c, 8), (unique, 0x1000042c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000020d, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000020d, 8) PTRSUB (ram, 0x4c5800, 8) , (const, 0x0, 8)]
[(unique, 0x10000365, 8) COPY (ram, 0x4c5800, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000365, 8) , (unique, 0xbd80, 8) , (register, 0xa8, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x1000033d, 8) , (unique, 0x10000345, 8) , (unique, 0x1000034d, 8) , (unique, 0x10000355, 8) , (unique, 0x1000035d, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x71, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x71, 4), (ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x71, 4), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x71, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[ ---  CBRANCH (ram, 0x427ee4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000434, 8), (unique, 0x10000434, 8) CALL (ram, 0x423fd0, 8) , (register, 0x28, 8) , (register, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x0, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x427f80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000aa, 8) , (const, 0x0, 8), (unique, 0x100000aa, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000043c, 8), (unique, 0x1000043c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000022d, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000022d, 8) PTRSUB (unique, 0x10000225, 8) , (const, 0x0, 8), (unique, 0x10000225, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x427f98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000ea, 8) , (const, 0x0, 8), (unique, 0x100000ea, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000044c, 8), (unique, 0x1000044c, 8) INT_AND (unique, 0x10000444, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x10000444, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x427ee4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x28, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x100001e5, 8) , (unique, 0x100001cd, 8) , (const, 0xd66, 8) , (unique, 0x100001ed, 8), (unique, 0x100001ed, 8) COPY (const, 0x49c218, 8), (unique, 0x100001e5, 8) COPY (const, 0x49c130, 8), (unique, 0x100001cd, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x233, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x233, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x233, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x428040, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000454, 8), (unique, 0x10000454, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x42806b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x427ef4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000045c, 8) , (const, 0x0, 8), (unique, 0x1000045c, 8) CAST (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b3, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ad, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x1b3, 4), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x1ad, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x1b3, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x1ad, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x1b3, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x1ad, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000046c, 8), (unique, 0x1000046c, 8) CALL (ram, 0x423fd0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000464, 8), (unique, 0x10000464, 8) CALL (ram, 0x4225f0, 8) , (register, 0x28, 8) , (register, 0x0, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x427ef4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000474, 8) , (const, 0x0, 8), (unique, 0x10000474, 8) CAST (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x42818c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000047c, 8), (unique, 0x1000047c, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x1ec, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x1ec, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x1ec, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000048c, 8) , (const, 0x0, 4), (unique, 0x1000048c, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x427ef4, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000484, 8), (unique, 0x10000484, 8) CAST (register, 0x28, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x427ef4, 1)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x1d4, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x1d4, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x1d4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000049c, 8) , (unique, 0xbd00, 4), (unique, 0x1000049c, 8) CAST (register, 0x28, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000494, 8), (unique, 0x10000494, 8) CAST (register, 0x28, 8)]
[ ---  BRANCH (ram, 0x427ef4, 1)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[ ---  CBRANCH (ram, 0x428000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x427f28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000b2, 8) , (const, 0x0, 8), (unique, 0x100000b2, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004a4, 8), (unique, 0x100004a4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000024d, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000024d, 8) PTRSUB (unique, 0x10000245, 8) , (const, 0x0, 8), (unique, 0x10000245, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(unique, 0x1000031d, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x427fc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7cb4, 4) , (const, 0x0, 4)]
[(unique, 0x10000325, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x427f34, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(unique, 0x1000032d, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x427fd4, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x10, 8)]
[(unique, 0x10000335, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x4281b6, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (const, 0x18, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000031d, 8) , (unique, 0x10000325, 8) , (unique, 0x1000032d, 8) , (unique, 0x10000335, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x100001dd, 8) , (unique, 0x100001d5, 8) , (const, 0xd95, 8) , (unique, 0x100001f5, 8), (unique, 0x100001f5, 8) COPY (const, 0x49c218, 8), (unique, 0x100001dd, 8) COPY (const, 0x49b3a2, 8), (unique, 0x100001d5, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x16c, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x16c, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x16c, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x428118, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x4f, 8) , (register, 0x10, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x163, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x163, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x163, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004ac, 8), (unique, 0x100004ac, 8) CALL (ram, 0x401120, 8) , (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004b4, 8) , (const, 0x0, 8), (unique, 0x100004b4, 8) CAST (unique, 0x10000265, 8), (unique, 0x10000265, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x12a, 4), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x128, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x12a, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x128, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x12a, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x128, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 16)]
[ ---  CBRANCH (ram, 0x427f14, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x27, 8) , (register, 0x10, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x80, 8)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x138, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x138, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x138, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x100004bc, 8), (unique, 0x100004bc, 8) PTRADD (unique, 0x1000027d, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000027d, 8) PTRSUB (unique, 0x10000275, 8) , (const, 0x0, 8), (unique, 0x10000275, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x427f14, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (const, 0x38, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x80, 8)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x146, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x146, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x146, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x100004c4, 8), (unique, 0x100004c4, 8) PTRADD (unique, 0x1000029d, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000029d, 8) PTRSUB (unique, 0x10000295, 8) , (const, 0x0, 8), (unique, 0x10000295, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x427f14, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x47, 8) , (register, 0x10, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x100004cc, 8), (unique, 0x100004cc, 8) PTRADD (unique, 0x100002bd, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002bd, 8) PTRSUB (unique, 0x100002b5, 8) , (const, 0x0, 8), (unique, 0x100002b5, 8) PTRADD (register, 0x80, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x154, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x154, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x154, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x428130, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7cb4, 4) , (const, 0x0, 4)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x80, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0xf0, 4), (ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0xf0, 4), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xf0, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004d4, 8), (unique, 0x100004d4, 8) CALL (ram, 0x401120, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (register, 0x0, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x80, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
