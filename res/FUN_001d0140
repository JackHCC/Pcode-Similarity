[(unique, 0x10000076, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1d0460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d01a0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (const, 0x31, 4), (register, 0x8, 4) INT_AND (unique, 0x10000076, 4) , (const, 0x3f, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000076, 4) , (const, 0xf, 4)]
[ ---  CBRANCH (ram, 0x1d01d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1200, 16), (register, 0x1200, 16) INT_ADD (unique, 0x10000790, 16) , (register, 0x1200, 12), (unique, 0x10000790, 16) INT_LEFT (unique, 0x10000780, 16) , (const, 0x60, 16), (unique, 0x10000780, 16) INT_SEXT (unique, 0x10000da0, 4), (unique, 0x10000da0, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100000ca, 4) , (register, 0x30, 4), (register, 0x1200, 12) INT_ADD (unique, 0x10000774, 12) , (register, 0x1200, 8), (unique, 0x10000774, 12) INT_LEFT (unique, 0x10000768, 12) , (const, 0x40, 12), (unique, 0x10000768, 12) INT_SEXT (unique, 0x10000d9c, 4), (unique, 0x10000d9c, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100000be, 4) , (register, 0x30, 4), (register, 0x1200, 8) INT_SUB (unique, 0x10000760, 8) , (unique, 0x90d00, 4), (unique, 0x10000760, 8) INT_LEFT (unique, 0x10000758, 8) , (const, 0x20, 8), (unique, 0x10000758, 8) INT_SEXT (unique, 0x10000d98, 4), (unique, 0x10000d98, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x100000b2, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x100000ae, 4) , (register, 0x30, 4), (unique, 0x100000ca, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000ce, 8), (unique, 0x100000ce, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x100000be, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000c2, 8), (unique, 0x100000c2, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100000b2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000b6, 8), (unique, 0x100000b6, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x100000ae, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000d90, 8), (unique, 0x10000d90, 8) INT_AND (unique, 0x10000d88, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000d88, 8) CAST (register, 0x38, 8), (register, 0x8, 4) INT_AND (unique, 0x10000076, 4) , (const, 0xf, 4)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  CBRANCH (ram, 0x1d0460, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x10000da4, 8) , (unique, 0x1000045e, 8), (unique, 0x10000da4, 8) CAST (register, 0x38, 8), (unique, 0x1000045e, 8) INT_ADD (register, 0x8, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d0460, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x8, 8), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (const, 0x10, 8) , (register, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000d78, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0350, 1) , (unique, 0x100003fe, 1), (unique, 0x100003fe, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x40, 8), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1d0420, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1200, 16), (register, 0x1200, 16) INT_ADD (unique, 0x10000748, 16) , (register, 0x1200, 12), (unique, 0x10000748, 16) INT_LEFT (unique, 0x10000738, 16) , (const, 0x60, 16), (unique, 0x10000738, 16) INT_SEXT (unique, 0x10000db4, 4), (unique, 0x10000db4, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100000a2, 4) , (register, 0x30, 4), (register, 0x1200, 12) INT_ADD (unique, 0x1000072c, 12) , (register, 0x1200, 8), (unique, 0x1000072c, 12) INT_LEFT (unique, 0x10000720, 12) , (const, 0x40, 12), (unique, 0x10000720, 12) INT_SEXT (unique, 0x10000db0, 4), (unique, 0x10000db0, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000096, 4) , (register, 0x30, 4), (register, 0x1200, 8) INT_SUB (unique, 0x10000718, 8) , (unique, 0x90d00, 4), (unique, 0x10000718, 8) INT_LEFT (unique, 0x10000710, 8) , (const, 0x20, 8), (unique, 0x10000710, 8) INT_SEXT (unique, 0x10000dac, 4), (unique, 0x10000dac, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000008a, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000086, 4) , (register, 0x30, 4), (unique, 0x100000a2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000a6, 8), (unique, 0x100000a6, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x10000096, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000009a, 8), (unique, 0x1000009a, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x1000008a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000008e, 8), (unique, 0x1000008e, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000086, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1d0460, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x10, 8), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000d80, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000dc0, 8), (unique, 0x10000dc0, 8) INT_AND (unique, 0x10000db8, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000db8, 8) CAST (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0350, 1) , (unique, 0x100003f7, 1), (unique, 0x100003f7, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x40, 8), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000076, 4) , (const, 0xf, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000d60, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000d78, 8) , (unique, 0x10000d80, 8)]
[ ---  CBRANCH (ram, 0x1d03f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1200, 16), (register, 0x1200, 16) INT_ADD (unique, 0x100007d8, 16) , (register, 0x1200, 12), (unique, 0x100007d8, 16) INT_LEFT (unique, 0x100007c8, 16) , (const, 0x60, 16), (unique, 0x100007c8, 16) INT_SEXT (unique, 0x10000dd0, 4), (unique, 0x10000dd0, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100000f2, 4) , (register, 0x30, 4), (register, 0x1200, 12) INT_ADD (unique, 0x100007bc, 12) , (register, 0x1200, 8), (unique, 0x100007bc, 12) INT_LEFT (unique, 0x100007b0, 12) , (const, 0x40, 12), (unique, 0x100007b0, 12) INT_SEXT (unique, 0x10000dcc, 4), (unique, 0x10000dcc, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100000e6, 4) , (register, 0x30, 4), (register, 0x1200, 8) INT_SUB (unique, 0x100007a8, 8) , (unique, 0x90d00, 4), (unique, 0x100007a8, 8) INT_LEFT (unique, 0x100007a0, 8) , (const, 0x20, 8), (unique, 0x100007a0, 8) INT_SEXT (unique, 0x10000dc8, 4), (unique, 0x10000dc8, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x100000da, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x100000d6, 4) , (register, 0x30, 4), (unique, 0x100000f2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000f6, 8), (unique, 0x100000f6, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x100000e6, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000ea, 8), (unique, 0x100000ea, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100000da, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000de, 8), (unique, 0x100000de, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x100000d6, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000d78, 8) , (unique, 0x10000d80, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1d0400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1240, 16), (register, 0x1240, 16) INT_ADD (unique, 0x10000820, 16) , (register, 0x1240, 12), (unique, 0x10000820, 16) INT_LEFT (unique, 0x10000810, 16) , (const, 0x60, 16), (unique, 0x10000810, 16) INT_SEXT (unique, 0x10000ddc, 4), (unique, 0x10000ddc, 4) CAST (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x1000011a, 4) , (register, 0x30, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000804, 12) , (register, 0x1240, 8), (unique, 0x10000804, 12) INT_LEFT (unique, 0x100007f8, 12) , (const, 0x40, 12), (unique, 0x100007f8, 12) INT_SEXT (unique, 0x10000dd8, 4), (unique, 0x10000dd8, 4) CAST (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x1000010e, 4) , (register, 0x30, 4), (register, 0x1240, 8) INT_SUB (unique, 0x100007f0, 8) , (unique, 0x90d00, 4), (unique, 0x100007f0, 8) INT_LEFT (unique, 0x100007e8, 8) , (const, 0x20, 8), (unique, 0x100007e8, 8) INT_SEXT (unique, 0x10000dd4, 4), (unique, 0x10000dd4, 4) CAST (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x10000102, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x100000fe, 4) , (register, 0x30, 4), (unique, 0x1000011a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000011e, 8), (unique, 0x1000011e, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x4, 8), (unique, 0x1000010e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000112, 8), (unique, 0x10000112, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0x10000102, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000106, 8), (unique, 0x10000106, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x4, 8), (unique, 0x100000fe, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1260, 16), (register, 0x1260, 16) INT_ADD (unique, 0x10000868, 16) , (register, 0x1260, 12), (unique, 0x10000868, 16) INT_LEFT (unique, 0x10000858, 16) , (const, 0x60, 16), (unique, 0x10000858, 16) INT_SEXT (unique, 0x10000de8, 4), (unique, 0x10000de8, 4) CAST (register, 0x126c, 4), (register, 0x126c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x10000142, 4) , (register, 0x30, 4), (register, 0x1260, 12) INT_ADD (unique, 0x1000084c, 12) , (register, 0x1260, 8), (unique, 0x1000084c, 12) INT_LEFT (unique, 0x10000840, 12) , (const, 0x40, 12), (unique, 0x10000840, 12) INT_SEXT (unique, 0x10000de4, 4), (unique, 0x10000de4, 4) CAST (register, 0x1268, 4), (register, 0x1268, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000136, 4) , (register, 0x30, 4), (register, 0x1260, 8) INT_SUB (unique, 0x10000838, 8) , (unique, 0x90d00, 4), (unique, 0x10000838, 8) INT_LEFT (unique, 0x10000830, 8) , (const, 0x20, 8), (unique, 0x10000830, 8) INT_SEXT (unique, 0x10000de0, 4), (unique, 0x10000de0, 4) CAST (register, 0x1264, 4), (register, 0x1264, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000012a, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000126, 4) , (register, 0x30, 4), (unique, 0x10000142, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000146, 8), (unique, 0x10000146, 8) PTRADD (register, 0x38, 8) , (const, 0xb, 8) , (const, 0x4, 8), (unique, 0x10000136, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000013a, 8), (unique, 0x1000013a, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0x1000012a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000012e, 8), (unique, 0x1000012e, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x4, 8), (unique, 0x10000126, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d03e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1280, 16), (register, 0x1280, 16) INT_ADD (unique, 0x100008b0, 16) , (register, 0x1280, 12), (unique, 0x100008b0, 16) INT_LEFT (unique, 0x100008a0, 16) , (const, 0x60, 16), (unique, 0x100008a0, 16) INT_SEXT (unique, 0x10000df4, 4), (unique, 0x10000df4, 4) CAST (register, 0x128c, 4), (register, 0x128c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x1000016a, 4) , (register, 0x30, 4), (register, 0x1280, 12) INT_ADD (unique, 0x10000894, 12) , (register, 0x1280, 8), (unique, 0x10000894, 12) INT_LEFT (unique, 0x10000888, 12) , (const, 0x40, 12), (unique, 0x10000888, 12) INT_SEXT (unique, 0x10000df0, 4), (unique, 0x10000df0, 4) CAST (register, 0x1288, 4), (register, 0x1288, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x1000015e, 4) , (register, 0x30, 4), (register, 0x1280, 8) INT_SUB (unique, 0x10000880, 8) , (unique, 0x90d00, 4), (unique, 0x10000880, 8) INT_LEFT (unique, 0x10000878, 8) , (const, 0x20, 8), (unique, 0x10000878, 8) INT_SEXT (unique, 0x10000dec, 4), (unique, 0x10000dec, 4) CAST (register, 0x1284, 4), (register, 0x1284, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x10000152, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x1000014e, 4) , (register, 0x30, 4), (unique, 0x1000016a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000016e, 8), (unique, 0x1000016e, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x4, 8), (unique, 0x1000015e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000162, 8), (unique, 0x10000162, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (unique, 0x10000152, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000156, 8), (unique, 0x10000156, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x4, 8), (unique, 0x1000014e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[(unique, 0x10000d40, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1d02c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58f00, 8) , (const, 0x0, 8), (unique, 0x58f00, 8) INT_AND (unique, 0x10000df8, 8) , (const, 0x3f, 8), (unique, 0x10000df8, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1d0350, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x40, 8), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x1d03f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1200, 16), (register, 0x1200, 16) INT_ADD (unique, 0x100008f8, 16) , (register, 0x1200, 12), (unique, 0x100008f8, 16) INT_LEFT (unique, 0x100008e8, 16) , (const, 0x60, 16), (unique, 0x100008e8, 16) INT_SEXT (unique, 0x10000e08, 4), (unique, 0x10000e08, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x10000192, 4) , (register, 0x30, 4), (register, 0x1200, 12) INT_ADD (unique, 0x100008dc, 12) , (register, 0x1200, 8), (unique, 0x100008dc, 12) INT_LEFT (unique, 0x100008d0, 12) , (const, 0x40, 12), (unique, 0x100008d0, 12) INT_SEXT (unique, 0x10000e04, 4), (unique, 0x10000e04, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000186, 4) , (register, 0x30, 4), (register, 0x1200, 8) INT_SUB (unique, 0x100008c8, 8) , (unique, 0x90d00, 4), (unique, 0x100008c8, 8) INT_LEFT (unique, 0x100008c0, 8) , (const, 0x20, 8), (unique, 0x100008c0, 8) INT_SEXT (unique, 0x10000e00, 4), (unique, 0x10000e00, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000017a, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000176, 4) , (register, 0x30, 4), (unique, 0x10000192, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000196, 8), (unique, 0x10000196, 8) PTRADD (register, 0x38, 8) , (const, 0x13, 8) , (const, 0x4, 8), (unique, 0x10000186, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000018a, 8), (unique, 0x1000018a, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8), (unique, 0x1000017a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000017e, 8), (unique, 0x1000017e, 8) PTRADD (register, 0x38, 8) , (const, 0x11, 8) , (const, 0x4, 8), (unique, 0x10000176, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1d0400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1240, 16), (register, 0x1240, 16) INT_ADD (unique, 0x10000940, 16) , (register, 0x1240, 12), (unique, 0x10000940, 16) INT_LEFT (unique, 0x10000930, 16) , (const, 0x60, 16), (unique, 0x10000930, 16) INT_SEXT (unique, 0x10000e14, 4), (unique, 0x10000e14, 4) CAST (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100001ba, 4) , (register, 0x30, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000924, 12) , (register, 0x1240, 8), (unique, 0x10000924, 12) INT_LEFT (unique, 0x10000918, 12) , (const, 0x40, 12), (unique, 0x10000918, 12) INT_SEXT (unique, 0x10000e10, 4), (unique, 0x10000e10, 4) CAST (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100001ae, 4) , (register, 0x30, 4), (register, 0x1240, 8) INT_SUB (unique, 0x10000910, 8) , (unique, 0x90d00, 4), (unique, 0x10000910, 8) INT_LEFT (unique, 0x10000908, 8) , (const, 0x20, 8), (unique, 0x10000908, 8) INT_SEXT (unique, 0x10000e0c, 4), (unique, 0x10000e0c, 4) CAST (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x100001a2, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x1000019e, 4) , (register, 0x30, 4), (unique, 0x100001ba, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001be, 8), (unique, 0x100001be, 8) PTRADD (register, 0x38, 8) , (const, 0x17, 8) , (const, 0x4, 8), (unique, 0x100001ae, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001b2, 8), (unique, 0x100001b2, 8) PTRADD (register, 0x38, 8) , (const, 0x16, 8) , (const, 0x4, 8), (unique, 0x100001a2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001a6, 8), (unique, 0x100001a6, 8) PTRADD (register, 0x38, 8) , (const, 0x15, 8) , (const, 0x4, 8), (unique, 0x1000019e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x14, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1260, 16), (register, 0x1260, 16) INT_ADD (unique, 0x10000988, 16) , (register, 0x1260, 12), (unique, 0x10000988, 16) INT_LEFT (unique, 0x10000978, 16) , (const, 0x60, 16), (unique, 0x10000978, 16) INT_SEXT (unique, 0x10000e20, 4), (unique, 0x10000e20, 4) CAST (register, 0x126c, 4), (register, 0x126c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100001e2, 4) , (register, 0x30, 4), (register, 0x1260, 12) INT_ADD (unique, 0x1000096c, 12) , (register, 0x1260, 8), (unique, 0x1000096c, 12) INT_LEFT (unique, 0x10000960, 12) , (const, 0x40, 12), (unique, 0x10000960, 12) INT_SEXT (unique, 0x10000e1c, 4), (unique, 0x10000e1c, 4) CAST (register, 0x1268, 4), (register, 0x1268, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100001d6, 4) , (register, 0x30, 4), (register, 0x1260, 8) INT_SUB (unique, 0x10000958, 8) , (unique, 0x90d00, 4), (unique, 0x10000958, 8) INT_LEFT (unique, 0x10000950, 8) , (const, 0x20, 8), (unique, 0x10000950, 8) INT_SEXT (unique, 0x10000e18, 4), (unique, 0x10000e18, 4) CAST (register, 0x1264, 4), (register, 0x1264, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x100001ca, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x100001c6, 4) , (register, 0x30, 4), (unique, 0x100001e2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) PTRADD (register, 0x38, 8) , (const, 0x1b, 8) , (const, 0x4, 8), (unique, 0x100001d6, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001da, 8), (unique, 0x100001da, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8), (unique, 0x100001ca, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ce, 8), (unique, 0x100001ce, 8) PTRADD (register, 0x38, 8) , (const, 0x19, 8) , (const, 0x4, 8), (unique, 0x100001c6, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x20, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d03e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1260, 16), (register, 0x1260, 16) INT_ADD (unique, 0x100009d0, 16) , (register, 0x1260, 12), (unique, 0x100009d0, 16) INT_LEFT (unique, 0x100009c0, 16) , (const, 0x60, 16), (unique, 0x100009c0, 16) INT_SEXT (unique, 0x10000e2c, 4), (unique, 0x10000e2c, 4) CAST (register, 0x126c, 4), (register, 0x126c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x1000020a, 4) , (register, 0x30, 4), (register, 0x1260, 12) INT_ADD (unique, 0x100009b4, 12) , (register, 0x1260, 8), (unique, 0x100009b4, 12) INT_LEFT (unique, 0x100009a8, 12) , (const, 0x40, 12), (unique, 0x100009a8, 12) INT_SEXT (unique, 0x10000e28, 4), (unique, 0x10000e28, 4) CAST (register, 0x1268, 4), (register, 0x1268, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100001fe, 4) , (register, 0x30, 4), (register, 0x1260, 8) INT_SUB (unique, 0x100009a0, 8) , (unique, 0x90d00, 4), (unique, 0x100009a0, 8) INT_LEFT (unique, 0x10000998, 8) , (const, 0x20, 8), (unique, 0x10000998, 8) INT_SEXT (unique, 0x10000e24, 4), (unique, 0x10000e24, 4) CAST (register, 0x1264, 4), (register, 0x1264, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x100001f2, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x100001ee, 4) , (register, 0x30, 4), (unique, 0x1000020a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) PTRADD (register, 0x38, 8) , (const, 0x1f, 8) , (const, 0x4, 8), (unique, 0x100001fe, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000202, 8), (unique, 0x10000202, 8) PTRADD (register, 0x38, 8) , (const, 0x1e, 8) , (const, 0x4, 8), (unique, 0x100001f2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f6, 8), (unique, 0x100001f6, 8) PTRADD (register, 0x38, 8) , (const, 0x1d, 8) , (const, 0x4, 8), (unique, 0x100001ee, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x10000e30, 8), (unique, 0x10000e30, 8) CAST (register, 0x38, 8), (unique, 0x3880, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3f, 4), (register, 0x8, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(unique, 0x10000d48, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000e40, 8), (unique, 0x10000e40, 8) INT_AND (unique, 0x10000e38, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x10000e38, 8) CAST (register, 0x38, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x38, 8) COPY (unique, 0x10000d58, 8), (unique, 0x10000d58, 8) MULTIEQUAL (unique, 0x10000d40, 8) , (unique, 0x10000d48, 8) , (unique, 0x10000d50, 8)]
[ ---  CBRANCH (ram, 0x1d0350, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x40, 8), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x40, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000d50, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d02c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1280, 16), (register, 0x1280, 16) CALLOTHER (const, 0x8a, 4) , (register, 0x1280, 16) , (register, 0x1260, 16), (register, 0x1280, 16) CALLOTHER (const, 0x8a, 4) , (register, 0x1280, 16) , (register, 0x1240, 16), (register, 0x1260, 16) CALLOTHER (const, 0x8a, 4) , (register, 0x1260, 16) , (register, 0x1200, 16), (register, 0x1280, 16) INT_ADD (unique, 0x10000af0, 16) , (register, 0x1280, 12), (unique, 0x10000af0, 16) INT_LEFT (unique, 0x10000ae0, 16) , (const, 0x60, 16), (unique, 0x10000ae0, 16) INT_SEXT (unique, 0x10000e74, 4), (unique, 0x10000e74, 4) CAST (register, 0x128c, 4), (register, 0x128c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100002aa, 4) , (register, 0x30, 4), (register, 0x1280, 12) INT_ADD (unique, 0x10000ad4, 12) , (register, 0x1280, 8), (unique, 0x10000ad4, 12) INT_LEFT (unique, 0x10000ac8, 12) , (const, 0x40, 12), (unique, 0x10000ac8, 12) INT_SEXT (unique, 0x10000e70, 4), (unique, 0x10000e70, 4) CAST (register, 0x1288, 4), (register, 0x1288, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x1000029e, 4) , (register, 0x30, 4), (register, 0x1280, 8) INT_SUB (unique, 0x10000ac0, 8) , (unique, 0x90d00, 4), (unique, 0x10000ac0, 8) INT_LEFT (unique, 0x10000ab8, 8) , (const, 0x20, 8), (unique, 0x10000ab8, 8) INT_SEXT (unique, 0x10000e6c, 4), (unique, 0x10000e6c, 4) CAST (register, 0x1284, 4), (register, 0x1284, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x10000292, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x1000028e, 4) , (register, 0x30, 4), (register, 0x1260, 16) INT_ADD (unique, 0x10000aa8, 16) , (register, 0x1260, 12), (unique, 0x10000aa8, 16) INT_LEFT (unique, 0x10000a98, 16) , (const, 0x60, 16), (unique, 0x10000a98, 16) INT_SEXT (unique, 0x10000e68, 4), (unique, 0x10000e68, 4) CAST (register, 0x126c, 4), (register, 0x126c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x10000282, 4) , (register, 0x30, 4), (register, 0x1260, 12) INT_ADD (unique, 0x10000a8c, 12) , (register, 0x1260, 8), (unique, 0x10000a8c, 12) INT_LEFT (unique, 0x10000a80, 12) , (const, 0x40, 12), (unique, 0x10000a80, 12) INT_SEXT (unique, 0x10000e64, 4), (unique, 0x10000e64, 4) CAST (register, 0x1268, 4), (register, 0x1268, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000276, 4) , (register, 0x30, 4), (register, 0x1260, 8) INT_SUB (unique, 0x10000a78, 8) , (unique, 0x90d00, 4), (unique, 0x10000a78, 8) INT_LEFT (unique, 0x10000a70, 8) , (const, 0x20, 8), (unique, 0x10000a70, 8) INT_SEXT (unique, 0x10000e60, 4), (unique, 0x10000e60, 4) CAST (register, 0x1264, 4), (register, 0x1264, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000026a, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000266, 4) , (register, 0x30, 4), (register, 0x1240, 16) INT_ADD (unique, 0x10000a60, 16) , (register, 0x1240, 12), (unique, 0x10000a60, 16) INT_LEFT (unique, 0x10000a50, 16) , (const, 0x60, 16), (unique, 0x10000a50, 16) INT_SEXT (unique, 0x10000e5c, 4), (unique, 0x10000e5c, 4) CAST (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x1000025a, 4) , (register, 0x30, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000a44, 12) , (register, 0x1240, 8), (unique, 0x10000a44, 12) INT_LEFT (unique, 0x10000a38, 12) , (const, 0x40, 12), (unique, 0x10000a38, 12) INT_SEXT (unique, 0x10000e58, 4), (unique, 0x10000e58, 4) CAST (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x1000024e, 4) , (register, 0x30, 4), (register, 0x1240, 8) INT_SUB (unique, 0x10000a30, 8) , (unique, 0x90d00, 4), (unique, 0x10000a30, 8) INT_LEFT (unique, 0x10000a28, 8) , (const, 0x20, 8), (unique, 0x10000a28, 8) INT_SEXT (unique, 0x10000e54, 4), (unique, 0x10000e54, 4) CAST (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x10000242, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x1000023e, 4) , (register, 0x30, 4), (register, 0x1200, 16) INT_ADD (unique, 0x10000a18, 16) , (register, 0x1200, 12), (unique, 0x10000a18, 16) INT_LEFT (unique, 0x10000a08, 16) , (const, 0x60, 16), (unique, 0x10000a08, 16) INT_SEXT (unique, 0x10000e50, 4), (unique, 0x10000e50, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x10000232, 4) , (register, 0x30, 4), (register, 0x1200, 12) INT_ADD (unique, 0x100009fc, 12) , (register, 0x1200, 8), (unique, 0x100009fc, 12) INT_LEFT (unique, 0x100009f0, 12) , (const, 0x40, 12), (unique, 0x100009f0, 12) INT_SEXT (unique, 0x10000e4c, 4), (unique, 0x10000e4c, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000226, 4) , (register, 0x30, 4), (register, 0x1200, 8) INT_SUB (unique, 0x100009e8, 8) , (unique, 0x90d00, 4), (unique, 0x100009e8, 8) INT_LEFT (unique, 0x100009e0, 8) , (const, 0x20, 8), (unique, 0x100009e0, 8) INT_SEXT (unique, 0x10000e48, 4), (unique, 0x10000e48, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000021a, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000216, 4) , (register, 0x30, 4), (unique, 0x100002aa, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002ae, 8), (unique, 0x100002ae, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x4, 8), (unique, 0x1000029e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002a2, 8), (unique, 0x100002a2, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (unique, 0x10000292, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000296, 8), (unique, 0x10000296, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x4, 8), (unique, 0x1000028e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x4, 8), (unique, 0x10000282, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000286, 8), (unique, 0x10000286, 8) PTRADD (register, 0x38, 8) , (const, 0xb, 8) , (const, 0x4, 8), (unique, 0x10000276, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0x1000026a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000026e, 8), (unique, 0x1000026e, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x4, 8), (unique, 0x10000266, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0x1000025a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000025e, 8), (unique, 0x1000025e, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x4, 8), (unique, 0x1000024e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000252, 8), (unique, 0x10000252, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0x10000242, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000246, 8), (unique, 0x10000246, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x4, 8), (unique, 0x1000023e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0x10000232, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000236, 8), (unique, 0x10000236, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x10000226, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000022a, 8), (unique, 0x1000022a, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x1000021a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000216, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1d03f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1200, 16)]
[ ---  CBRANCH (ram, 0x1d0400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1240, 16)]
[(register, 0x1220, 16) INT_ADD (unique, 0x10000b80, 16) , (register, 0x1220, 12), (unique, 0x10000b80, 16) INT_LEFT (unique, 0x10000b70, 16) , (const, 0x60, 16), (unique, 0x10000b70, 16) INT_SEXT (unique, 0x10000e8c, 4), (unique, 0x10000e8c, 4) CAST (register, 0x122c, 4), (register, 0x122c, 4) INT_2COMP (unique, 0x90b80, 4), (unique, 0x90b80, 4) INT_ZEXT (unique, 0x90b00, 1), (unique, 0x90b00, 1) INT_EQUAL (register, 0x30, 4) , (unique, 0x100002fa, 4), (register, 0x1220, 12) INT_ADD (unique, 0x10000b64, 12) , (register, 0x1220, 8), (unique, 0x10000b64, 12) INT_LEFT (unique, 0x10000b58, 12) , (const, 0x40, 12), (unique, 0x10000b58, 12) INT_SEXT (unique, 0x10000e88, 4), (unique, 0x10000e88, 4) CAST (register, 0x1228, 4), (register, 0x1228, 4) INT_2COMP (unique, 0x90980, 4), (unique, 0x90980, 4) INT_ZEXT (unique, 0x90900, 1), (unique, 0x90900, 1) INT_EQUAL (register, 0x30, 4) , (unique, 0x100002ee, 4), (register, 0x1220, 8) INT_SUB (unique, 0x10000b50, 8) , (unique, 0x90580, 4), (unique, 0x10000b50, 8) INT_LEFT (unique, 0x10000b48, 8) , (const, 0x20, 8), (unique, 0x10000b48, 8) INT_SEXT (unique, 0x10000e84, 4), (unique, 0x10000e84, 4) CAST (register, 0x1224, 4), (register, 0x1224, 4) INT_2COMP (unique, 0x90780, 4), (unique, 0x90780, 4) INT_ZEXT (unique, 0x90700, 1), (unique, 0x90700, 1) INT_EQUAL (register, 0x30, 4) , (unique, 0x100002e2, 4), (unique, 0x90580, 4) INT_ZEXT (unique, 0x90500, 1), (unique, 0x90500, 1) INT_EQUAL (register, 0x30, 4) , (unique, 0x100002de, 4), (unique, 0x100002fa, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002fe, 8), (unique, 0x100002fe, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x4, 8), (unique, 0x100002ee, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (unique, 0x100002e2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002e6, 8), (unique, 0x100002e6, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x4, 8), (unique, 0x100002de, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1d0410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1260, 16), (register, 0x1260, 16) INT_ADD (unique, 0x10000b38, 16) , (register, 0x1260, 12), (unique, 0x10000b38, 16) INT_LEFT (unique, 0x10000b28, 16) , (const, 0x60, 16), (unique, 0x10000b28, 16) INT_SEXT (unique, 0x10000e80, 4), (unique, 0x10000e80, 4) CAST (register, 0x126c, 4), (register, 0x126c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100002d2, 4) , (register, 0x30, 4), (register, 0x1260, 12) INT_ADD (unique, 0x10000b1c, 12) , (register, 0x1260, 8), (unique, 0x10000b1c, 12) INT_LEFT (unique, 0x10000b10, 12) , (const, 0x40, 12), (unique, 0x10000b10, 12) INT_SEXT (unique, 0x10000e7c, 4), (unique, 0x10000e7c, 4) CAST (register, 0x1268, 4), (register, 0x1268, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100002c6, 4) , (register, 0x30, 4), (register, 0x1260, 8) INT_SUB (unique, 0x10000b08, 8) , (unique, 0x90d00, 4), (unique, 0x10000b08, 8) INT_LEFT (unique, 0x10000b00, 8) , (const, 0x20, 8), (unique, 0x10000b00, 8) INT_SEXT (unique, 0x10000e78, 4), (unique, 0x10000e78, 4) CAST (register, 0x1264, 4), (register, 0x1264, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x100002ba, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x100002b6, 4) , (register, 0x30, 4), (unique, 0x100002d2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002d6, 8), (unique, 0x100002d6, 8) PTRADD (register, 0x38, 8) , (const, 0xb, 8) , (const, 0x4, 8), (unique, 0x100002c6, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002ca, 8), (unique, 0x100002ca, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0x100002ba, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002be, 8), (unique, 0x100002be, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x4, 8), (unique, 0x100002b6, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1220, 16)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x10000e90, 8) , (unique, 0x1000062e, 8), (unique, 0x10000e90, 8) CAST (register, 0x38, 8), (unique, 0x1000062e, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000d60, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x10000e98, 8), (unique, 0x10000e98, 8) CAST (register, 0x38, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1d03b0, 1) , (unique, 0x10000700, 1), (unique, 0x10000700, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x207, 1) INT_SLESS (unique, 0x10000ea0, 4) , (const, 0x0, 4), (unique, 0x10000ea0, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4), (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x20, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1d03f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1200, 16), (register, 0x1200, 16) INT_ADD (unique, 0x10000bc8, 16) , (register, 0x1200, 12), (unique, 0x10000bc8, 16) INT_LEFT (unique, 0x10000bb8, 16) , (const, 0x60, 16), (unique, 0x10000bb8, 16) INT_SEXT (unique, 0x10000eac, 4), (unique, 0x10000eac, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x10000322, 4) , (register, 0x30, 4), (register, 0x1200, 12) INT_ADD (unique, 0x10000bac, 12) , (register, 0x1200, 8), (unique, 0x10000bac, 12) INT_LEFT (unique, 0x10000ba0, 12) , (const, 0x40, 12), (unique, 0x10000ba0, 12) INT_SEXT (unique, 0x10000ea8, 4), (unique, 0x10000ea8, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000316, 4) , (register, 0x30, 4), (register, 0x1200, 8) INT_SUB (unique, 0x10000b98, 8) , (unique, 0x90d00, 4), (unique, 0x10000b98, 8) INT_LEFT (unique, 0x10000b90, 8) , (const, 0x20, 8), (unique, 0x10000b90, 8) INT_SEXT (unique, 0x10000ea4, 4), (unique, 0x10000ea4, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000030a, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000306, 4) , (register, 0x30, 4), (unique, 0x10000322, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000326, 8), (unique, 0x10000326, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x10000316, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000031a, 8), (unique, 0x1000031a, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x1000030a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000030e, 8), (unique, 0x1000030e, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000306, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000d60, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x10000eb0, 8), (unique, 0x10000eb0, 8) CAST (register, 0x38, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  CBRANCH (ram, 0x1d0400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1240, 16), (register, 0x1240, 16) INT_ADD (unique, 0x10000c10, 16) , (register, 0x1240, 12), (unique, 0x10000c10, 16) INT_LEFT (unique, 0x10000c00, 16) , (const, 0x60, 16), (unique, 0x10000c00, 16) INT_SEXT (unique, 0x10000ec0, 4), (unique, 0x10000ec0, 4) CAST (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x1000034a, 4) , (register, 0x30, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000bf4, 12) , (register, 0x1240, 8), (unique, 0x10000bf4, 12) INT_LEFT (unique, 0x10000be8, 12) , (const, 0x40, 12), (unique, 0x10000be8, 12) INT_SEXT (unique, 0x10000ebc, 4), (unique, 0x10000ebc, 4) CAST (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x1000033e, 4) , (register, 0x30, 4), (register, 0x1240, 8) INT_SUB (unique, 0x10000be0, 8) , (unique, 0x90d00, 4), (unique, 0x10000be0, 8) INT_LEFT (unique, 0x10000bd8, 8) , (const, 0x20, 8), (unique, 0x10000bd8, 8) INT_SEXT (unique, 0x10000eb8, 4), (unique, 0x10000eb8, 4) CAST (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x10000332, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x1000032e, 4) , (register, 0x30, 4), (unique, 0x1000034a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000034e, 8), (unique, 0x1000034e, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x4, 8), (unique, 0x1000033e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000342, 8), (unique, 0x10000342, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0x10000332, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000336, 8), (unique, 0x10000336, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x4, 8), (unique, 0x1000032e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000d60, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x10000ec4, 8), (unique, 0x10000ec4, 8) CAST (register, 0x38, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  CBRANCH (ram, 0x1d0440, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1260, 16), (register, 0x1260, 16) INT_ADD (unique, 0x10000c58, 16) , (register, 0x1260, 12), (unique, 0x10000c58, 16) INT_LEFT (unique, 0x10000c48, 16) , (const, 0x60, 16), (unique, 0x10000c48, 16) INT_SEXT (unique, 0x10000ed4, 4), (unique, 0x10000ed4, 4) CAST (register, 0x126c, 4), (register, 0x126c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x10000372, 4) , (register, 0x30, 4), (register, 0x1260, 12) INT_ADD (unique, 0x10000c3c, 12) , (register, 0x1260, 8), (unique, 0x10000c3c, 12) INT_LEFT (unique, 0x10000c30, 12) , (const, 0x40, 12), (unique, 0x10000c30, 12) INT_SEXT (unique, 0x10000ed0, 4), (unique, 0x10000ed0, 4) CAST (register, 0x1268, 4), (register, 0x1268, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000366, 4) , (register, 0x30, 4), (register, 0x1260, 8) INT_SUB (unique, 0x10000c28, 8) , (unique, 0x90d00, 4), (unique, 0x10000c28, 8) INT_LEFT (unique, 0x10000c20, 8) , (const, 0x20, 8), (unique, 0x10000c20, 8) INT_SEXT (unique, 0x10000ecc, 4), (unique, 0x10000ecc, 4) CAST (register, 0x1264, 4), (register, 0x1264, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000035a, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000356, 4) , (register, 0x30, 4), (unique, 0x10000372, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000376, 8), (unique, 0x10000376, 8) PTRADD (register, 0x38, 8) , (const, 0xb, 8) , (const, 0x4, 8), (unique, 0x10000366, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000036a, 8), (unique, 0x1000036a, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0x1000035a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000035e, 8), (unique, 0x1000035e, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x4, 8), (unique, 0x10000356, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  CBRANCH (ram, 0x1d0460, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x10000ed8, 8) , (unique, 0x100006ee, 8), (unique, 0x10000ed8, 8) CAST (register, 0x38, 8), (unique, 0x100006ee, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1d0460, 1) , (unique, 0x10000704, 1), (unique, 0x10000704, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_SLESS (unique, 0x10000ee0, 4) , (const, 0x10, 4), (unique, 0x10000ee0, 4) CAST (register, 0x10, 4), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1d0450, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1220, 16), (register, 0x1220, 16) INT_ADD (unique, 0x10000ca0, 16) , (register, 0x1220, 12), (unique, 0x10000ca0, 16) INT_LEFT (unique, 0x10000c90, 16) , (const, 0x60, 16), (unique, 0x10000c90, 16) INT_SEXT (unique, 0x10000eec, 4), (unique, 0x10000eec, 4) CAST (register, 0x122c, 4), (register, 0x122c, 4) INT_2COMP (unique, 0x90b80, 4), (unique, 0x90b80, 4) INT_ZEXT (unique, 0x90b00, 1), (unique, 0x90b00, 1) INT_EQUAL (register, 0x30, 4) , (unique, 0x1000039a, 4), (register, 0x1220, 12) INT_ADD (unique, 0x10000c84, 12) , (register, 0x1220, 8), (unique, 0x10000c84, 12) INT_LEFT (unique, 0x10000c78, 12) , (const, 0x40, 12), (unique, 0x10000c78, 12) INT_SEXT (unique, 0x10000ee8, 4), (unique, 0x10000ee8, 4) CAST (register, 0x1228, 4), (register, 0x1228, 4) INT_2COMP (unique, 0x90980, 4), (unique, 0x90980, 4) INT_ZEXT (unique, 0x90900, 1), (unique, 0x90900, 1) INT_EQUAL (register, 0x30, 4) , (unique, 0x1000038e, 4), (register, 0x1220, 8) INT_SUB (unique, 0x10000c70, 8) , (unique, 0x90580, 4), (unique, 0x10000c70, 8) INT_LEFT (unique, 0x10000c68, 8) , (const, 0x20, 8), (unique, 0x10000c68, 8) INT_SEXT (unique, 0x10000ee4, 4), (unique, 0x10000ee4, 4) CAST (register, 0x1224, 4), (register, 0x1224, 4) INT_2COMP (unique, 0x90780, 4), (unique, 0x90780, 4) INT_ZEXT (unique, 0x90700, 1), (unique, 0x90700, 1) INT_EQUAL (register, 0x30, 4) , (unique, 0x10000382, 4), (unique, 0x90580, 4) INT_ZEXT (unique, 0x90500, 1), (unique, 0x90500, 1) INT_EQUAL (register, 0x30, 4) , (unique, 0x1000037e, 4), (unique, 0x1000039a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000039e, 8), (unique, 0x1000039e, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x4, 8), (unique, 0x1000038e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000392, 8), (unique, 0x10000392, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (unique, 0x10000382, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000386, 8), (unique, 0x10000386, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x4, 8), (unique, 0x1000037e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  CBRANCH (ram, 0x1d0460, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x10000ef0, 8) , (unique, 0x100006f6, 8), (unique, 0x10000ef0, 8) CAST (register, 0x38, 8), (unique, 0x100006f6, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x40, 4)]
[ ---  CBRANCH (ram, 0x1d0420, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1200, 16), (register, 0x1200, 16) INT_ADD (unique, 0x10000ce8, 16) , (register, 0x1200, 12), (unique, 0x10000ce8, 16) INT_LEFT (unique, 0x10000cd8, 16) , (const, 0x60, 16), (unique, 0x10000cd8, 16) INT_SEXT (unique, 0x10000f00, 4), (unique, 0x10000f00, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100003c2, 4) , (register, 0x30, 4), (register, 0x1200, 12) INT_ADD (unique, 0x10000ccc, 12) , (register, 0x1200, 8), (unique, 0x10000ccc, 12) INT_LEFT (unique, 0x10000cc0, 12) , (const, 0x40, 12), (unique, 0x10000cc0, 12) INT_SEXT (unique, 0x10000efc, 4), (unique, 0x10000efc, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100003b6, 4) , (register, 0x30, 4), (register, 0x1200, 8) INT_SUB (unique, 0x10000cb8, 8) , (unique, 0x90d00, 4), (unique, 0x10000cb8, 8) INT_LEFT (unique, 0x10000cb0, 8) , (const, 0x20, 8), (unique, 0x10000cb0, 8) INT_SEXT (unique, 0x10000ef8, 4), (unique, 0x10000ef8, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x100003aa, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x100003a6, 4) , (register, 0x30, 4), (unique, 0x100003c2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003c6, 8), (unique, 0x100003c6, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x100003b6, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003ba, 8), (unique, 0x100003ba, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100003aa, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003ae, 8), (unique, 0x100003ae, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x100003a6, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1d0460, 1) , (unique, 0x10000708, 1), (unique, 0x10000708, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x30, 4), (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1d0430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1220, 16), (register, 0x1220, 16) INT_ADD (unique, 0x10000d30, 16) , (register, 0x1220, 12), (unique, 0x10000d30, 16) INT_LEFT (unique, 0x10000d20, 16) , (const, 0x60, 16), (unique, 0x10000d20, 16) INT_SEXT (unique, 0x10000f0c, 4), (unique, 0x10000f0c, 4) CAST (register, 0x122c, 4), (register, 0x122c, 4) INT_2COMP (unique, 0x90b80, 4), (unique, 0x90b80, 4) INT_ZEXT (unique, 0x90b00, 1), (unique, 0x90b00, 1) INT_EQUAL (register, 0x30, 4) , (unique, 0x100003ea, 4), (register, 0x1220, 12) INT_ADD (unique, 0x10000d14, 12) , (register, 0x1220, 8), (unique, 0x10000d14, 12) INT_LEFT (unique, 0x10000d08, 12) , (const, 0x40, 12), (unique, 0x10000d08, 12) INT_SEXT (unique, 0x10000f08, 4), (unique, 0x10000f08, 4) CAST (register, 0x1228, 4), (register, 0x1228, 4) INT_2COMP (unique, 0x90980, 4), (unique, 0x90980, 4) INT_ZEXT (unique, 0x90900, 1), (unique, 0x90900, 1) INT_EQUAL (register, 0x30, 4) , (unique, 0x100003de, 4), (register, 0x1220, 8) INT_SUB (unique, 0x10000d00, 8) , (unique, 0x90580, 4), (unique, 0x10000d00, 8) INT_LEFT (unique, 0x10000cf8, 8) , (const, 0x20, 8), (unique, 0x10000cf8, 8) INT_SEXT (unique, 0x10000f04, 4), (unique, 0x10000f04, 4) CAST (register, 0x1224, 4), (register, 0x1224, 4) INT_2COMP (unique, 0x90780, 4), (unique, 0x90780, 4) INT_ZEXT (unique, 0x90700, 1), (unique, 0x90700, 1) INT_EQUAL (register, 0x30, 4) , (unique, 0x100003d2, 4), (unique, 0x90580, 4) INT_ZEXT (unique, 0x90500, 1), (unique, 0x90500, 1) INT_EQUAL (register, 0x30, 4) , (unique, 0x100003ce, 4), (unique, 0x100003ea, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003ee, 8), (unique, 0x100003ee, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x4, 8), (unique, 0x100003de, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003e2, 8), (unique, 0x100003e2, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0x100003d2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003d6, 8), (unique, 0x100003d6, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x4, 8), (unique, 0x100003ce, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  CBRANCH (ram, 0x1d0460, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x10000f10, 8) , (unique, 0x100006e6, 8), (unique, 0x10000f10, 8) CAST (register, 0x38, 8), (unique, 0x100006e6, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  CBRANCH (ram, 0x1d0460, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x10000f18, 8), (unique, 0x10000f18, 8) CAST (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
