[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x3a, 4), (stack, 0xffffffffffffff98, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x3a, 4), (stack, 0xffffffffffffffa0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x3a, 4), (stack, 0xffffffffffffffa8, 16) COPY (const, 0x0, 16)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3a, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x23ed85, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2400e0, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x23ecfd, 1)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x53, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x53, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x53, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x53, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x53, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x53, 4)]
[ ---  CBRANCH (ram, 0x23eced, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x23eed0, 8)]
[ ---  CBRANCH (ram, 0x23ecc7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa8, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffa8, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x479, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x479, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x479, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x479, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x479, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x479, 4)]
[(unique, 0x100002e0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000300, 8), (unique, 0x10000300, 8) CALL (ram, 0x1212c0, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x23ed34, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000300, 8), (unique, 0x10000300, 8) CALL (ram, 0x1212c0, 8) , (const, 0x10, 8)]
[(stack, 0xffffffffffffff9c, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x4, 8)]
[(register, 0x88, 4) COPY (const, 0x0, 4)]
[(unique, 0x100002d0, 8) COPY (stack, 0xffffffffffffffa8, 8)]
[(register, 0x38, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_ADD (register, 0x88, 4) , (const, 0x1, 4), (register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x23eb82, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100002d0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x23eb82, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xf, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x23eb82, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xf, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000308, 8), (unique, 0x10000308, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x23eb42, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x98, 8) , (unique, 0xbd80, 8), (register, 0x98, 8) CAST (unique, 0x10000310, 8), (unique, 0x10000310, 8) INT_ZEXT (unique, 0xbc80, 4)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x30, 8) INT_ZEXT (unique, 0x100001aa, 4), (unique, 0x100001aa, 4) MULTIEQUAL (register, 0x30, 4) , (unique, 0x3100, 4)]
[(unique, 0x100002e8, 4) COPY (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x23eb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (stack, 0xffffffffffffff9c, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000320, 8), (unique, 0x10000320, 8) INT_ADD (unique, 0x10000318, 8) , (const, 0xc, 8), (unique, 0x10000318, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[(unique, 0x100002ec, 4) COPY (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x23eb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000330, 8), (unique, 0x10000330, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000328, 8), (unique, 0x10000328, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x23eb82, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x3, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000340, 8), (unique, 0x10000340, 8) INT_ADD (unique, 0x10000338, 8) , (const, 0x4, 8), (unique, 0x10000338, 8) CAST (register, 0x10, 8)]
[(unique, 0x100002f0, 4) COPY (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x23eb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x10, 2)]
[(register, 0x38, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x88, 4) , (const, 0x2, 4)]
[(unique, 0x100002f4, 4) COPY (unique, 0x100001aa, 4)]
[(register, 0x88, 4) MULTIEQUAL (unique, 0x100002e8, 4) , (unique, 0x100002ec, 4) , (unique, 0x100002f0, 4) , (unique, 0x100002f4, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000360, 8), (unique, 0x10000360, 8) INT_ADD (unique, 0x10000358, 8) , (register, 0x0, 8), (unique, 0x10000358, 8) CAST (register, 0x10, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffc, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x23eb30, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (unique, 0x100001d7, 8), (unique, 0x100001d7, 8) PTRSUB (const, 0x0, 8) , (const, 0x10, 8), (register, 0x8, 8) CAST (unique, 0x10000350, 8), (unique, 0x10000350, 8) INT_SUB (unique, 0x10000348, 8) , (register, 0x0, 8), (unique, 0x10000348, 8) CAST (register, 0x8, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffc, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x23eb82, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0x10, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000368, 8), (unique, 0x10000368, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x23eb82, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000370, 8), (unique, 0x10000370, 8) INT_ZEXT (unique, 0xbc80, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x88, 4) , (const, 0x1, 4)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x23eb00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000378, 8), (unique, 0x10000378, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xea, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xea, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xea, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xea, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xea, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xea, 4)]
[ ---  CBRANCH (ram, 0x23ecdc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000380, 8), (unique, 0x10000380, 8) CALL (ram, 0x1212c0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_LEFT (register, 0x38, 8) , (const, 0x4, 4)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0xa8, 8) PTRADD (register, 0x0, 8) , (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x23ed28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x23ed28, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xf, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x23ed28, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xf, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000388, 8), (unique, 0x10000388, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x23ec1c, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) CAST (unique, 0x10000390, 8), (unique, 0x10000390, 8) INT_ZEXT (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0xa8, 8) PTRADD (register, 0x0, 8) , (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x100002a8, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x23ebf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (stack, 0xffffffffffffff9c, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003a0, 8), (unique, 0x100003a0, 8) INT_ADD (unique, 0x10000398, 8) , (const, 0xc, 8), (unique, 0x10000398, 8) CAST (register, 0x18, 8), (stack, 0xffffffffffffff9c, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(unique, 0x100002b0, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x23ebf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003b0, 8), (unique, 0x100003b0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003a8, 8), (unique, 0x100003a8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x23ed28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x3, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003c0, 8), (unique, 0x100003c0, 8) INT_ADD (unique, 0x100003b8, 8) , (const, 0x4, 8), (unique, 0x100003b8, 8) CAST (register, 0x18, 8)]
[(unique, 0x100002b8, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x23ebf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x10, 2)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x23b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000247, 8) , (unique, 0xbc80, 4), (unique, 0x10000247, 8) PTRSUB (register, 0xa8, 8) , (const, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003d0, 8), (unique, 0x100003d0, 8) INT_ADD (unique, 0x100003c8, 8) , (const, 0x14, 8), (unique, 0x100003c8, 8) CAST (register, 0x18, 8)]
[(register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x23ecb2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (unique, 0x100001bf, 8), (unique, 0x100001bf, 8) PTRSUB (const, 0x0, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x23ecb2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc00, 2) , (const, 0x4, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100003d8, 8), (unique, 0x100003d8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x23ecb2, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x80, 8), (register, 0x80, 8) CAST (unique, 0x100003e0, 8), (unique, 0x100003e0, 8) INT_ZEXT (unique, 0xbc00, 2)]
[ ---  CBRANCH (ram, 0x23ec9d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x3, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003f0, 8), (unique, 0x100003f0, 8) INT_ADD (unique, 0x100003e8, 8) , (const, 0x22, 8), (unique, 0x100003e8, 8) CAST (register, 0x18, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000410, 8), (unique, 0x10000410, 8) INT_ADD (unique, 0x10000408, 8) , (register, 0x10, 8), (unique, 0x10000408, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1fffc, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbc00, 2), (register, 0x38, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0xbc00, 2) MULTIEQUAL (unique, 0xbc00, 2) , (unique, 0xbc00, 2)]
[ ---  CBRANCH (ram, 0x23ec80, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4, 8), (register, 0x30, 8) CAST (unique, 0x10000400, 8), (unique, 0x10000400, 8) INT_SUB (unique, 0x100003f8, 8) , (register, 0x10, 8), (unique, 0x100003f8, 8) CAST (register, 0x30, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1fffc, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbc00, 2), (register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0xbc00, 2) MULTIEQUAL (unique, 0xbc00, 2) , (unique, 0xbc00, 2)]
[ ---  CBRANCH (ram, 0x23ecb2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc00, 2) , (const, 0x4, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000418, 8), (unique, 0x10000418, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x23ecb2, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (register, 0x80, 8), (register, 0x80, 8) CAST (unique, 0x10000420, 8), (unique, 0x10000420, 8) INT_ZEXT (unique, 0xbc00, 2)]
[(register, 0xa8, 8) PTRADD (register, 0x0, 8) , (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)]
[(unique, 0x100002c8, 8) COPY (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x23ebf0, 1)]
[ ---  CBRANCH (ram, 0x23ed50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x3, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000430, 8), (unique, 0x10000430, 8) INT_ADD (unique, 0x10000428, 8) , (const, 0x2, 8), (unique, 0x10000428, 8) CAST (register, 0x38, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000440, 8), (unique, 0x10000440, 8) INT_ADD (unique, 0x10000438, 8) , (const, 0x4, 8), (unique, 0x10000438, 8) CAST (register, 0x38, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000450, 8), (unique, 0x10000450, 8) INT_ADD (unique, 0x10000448, 8) , (const, 0x24, 8), (unique, 0x10000448, 8) CAST (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x23ed58, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x273, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x273, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x273, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x273, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x273, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x273, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0xa8, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x19d9f0, 8) , (unique, 0x10000468, 8) , (register, 0x30, 8), (unique, 0x10000468, 8) CAST (register, 0x38, 8), (register, 0x30, 8) CAST (unique, 0x10000460, 8), (unique, 0x10000460, 8) INT_ADD (unique, 0x10000458, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x10000458, 8) CAST (register, 0x80, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x23ed97, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x19d9f0, 8) , (unique, 0x10000468, 8) , (register, 0x30, 8), (unique, 0x10000468, 8) CAST (register, 0x38, 8), (register, 0x30, 8) CAST (unique, 0x10000460, 8), (unique, 0x10000460, 8) INT_ADD (unique, 0x10000458, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x10000458, 8) CAST (register, 0x80, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000470, 8), (unique, 0x10000470, 8) CAST (register, 0x18, 8)]
[(register, 0xa8, 8) PTRADD (register, 0x0, 8) , (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)]
[(unique, 0x100002c0, 8) COPY (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x23ebf0, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100002a8, 8) , (unique, 0x100002b0, 8) , (unique, 0x100002b8, 8) , (unique, 0x100002c0, 8) , (unique, 0x100002c8, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) CAST (unique, 0x10000490, 8), (unique, 0x10000490, 8) INT_ADD (unique, 0x10000488, 8) , (register, 0x0, 8), (unique, 0x10000488, 8) CAST (register, 0x18, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffc, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x23ed28, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xa0, 8) , (unique, 0x100001cf, 8), (unique, 0x100001cf, 8) PTRSUB (const, 0x0, 8) , (const, 0x10, 8), (register, 0xa0, 8) CAST (unique, 0x10000480, 8), (unique, 0x10000480, 8) INT_SUB (unique, 0x10000478, 8) , (register, 0x0, 8), (unique, 0x10000478, 8) CAST (register, 0xa0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffc, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x23ed28, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0x10, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000498, 8), (unique, 0x10000498, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x23ed28, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100004a0, 8), (unique, 0x100004a0, 8) INT_ZEXT (unique, 0xbc80, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000027f, 8) , (const, 0x0, 4), (unique, 0x1000027f, 8) PTRSUB (register, 0xa8, 8) , (const, 0x0, 8)]
[(unique, 0x100002a0, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x23edb1, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x23eda8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x18, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100002a0, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x23eda8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000297, 8), (unique, 0x10000297, 8) PTRSUB (register, 0x18, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x347, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x347, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x347, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x347, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x347, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x347, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x32c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x32c, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x32c, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x32c, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x32c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x32c, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x23ecdc, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x33b, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004a8, 8) , (const, 0x69, 4), (unique, 0x100004a8, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x100002d8, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x23ebb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100004b0, 8), (unique, 0x100004b0, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x100002d8, 8) , (unique, 0x100002e0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000025f, 8) , (const, 0x0, 4), (unique, 0x1000025f, 8) PTRSUB (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x183, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x180, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0xa8, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x23eced, 1)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CALL (ram, 0x23ee90, 8) , (unique, 0x3800, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x188, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x188, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x188, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x18c, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x188, 4), (stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x18c, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x188, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x188, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x2400d0, 8) , (unique, 0x3800, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x23edcd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004b8, 8), (unique, 0x100004b8, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1b8, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x1b8, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x1b8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b8, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b8, 4)]
[ ---  RETURN (const, 0x1, 4)]
