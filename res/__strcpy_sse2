[(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(unique, 0x1000005f, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x447c7a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000004, 8) , (const, 0x0, 8), (unique, 0x10000004, 8) INT_AND (unique, 0x1000007f, 8) , (const, 0x7, 8), (unique, 0x1000007f, 8) CAST (register, 0x30, 8)]
[(register, 0x8, 4) INT_SUB (const, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000008f, 8) , (unique, 0xba80, 1), (unique, 0x1000008f, 8) CAST (register, 0x10, 8), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000087, 8), (unique, 0x10000087, 8) CAST (register, 0x30, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000005f, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x447d38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (const, 0x0, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000087, 8), (unique, 0x10000087, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[(register, 0x30, 8) CAST (unique, 0x1000009f, 8), (unique, 0x1000009f, 8) INT_ADD (unique, 0x10000097, 8) , (const, 0x1, 8), (unique, 0x10000097, 8) CAST (register, 0x30, 8)]
[(register, 0x10, 8) CAST (unique, 0x100000af, 8), (unique, 0x100000af, 8) INT_ADD (unique, 0x100000a7, 8) , (const, 0x1, 8), (unique, 0x100000a7, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x447c64, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000067, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000057, 8) , (unique, 0x1000005f, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x447d20, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x447d20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x88, 8) INT_XOR (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x447d20, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x447d20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x88, 8) INT_XOR (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x447d20, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x447d20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x88, 8) INT_XOR (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfefefefefefefeff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x447d20, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x101010101010101, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x447d20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (const, 0xfefefefefefefeff, 8), (register, 0x88, 8) INT_XOR (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000b7, 8) , (register, 0x0, 1), (unique, 0x100000b7, 8) CAST (register, 0x10, 8), (register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000067, 8) , (unique, 0x10000067, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x447d38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x1, 1), (register, 0x1, 1) SUBPIECE (unique, 0x1000004f, 8) , (const, 0x0, 4), (unique, 0x1000004f, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4), (register, 0x10, 8) CAST (unique, 0x100000c7, 8), (unique, 0x100000c7, 8) INT_ADD (unique, 0x100000bf, 8) , (const, 0x1, 8), (unique, 0x100000bf, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x447d38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x1, 1) , (const, 0x0, 1), (register, 0x1, 1) SUBPIECE (unique, 0x1000004f, 8) , (const, 0x0, 4), (unique, 0x1000004f, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4)]
[(register, 0x10, 8) CAST (unique, 0x100000d7, 8), (unique, 0x100000d7, 8) INT_ADD (unique, 0x100000cf, 8) , (const, 0x2, 8), (unique, 0x100000cf, 8) CAST (register, 0x10, 8)]
[(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x10, 4)]
[ ---  BRANCH (ram, 0x447d20, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000057, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x447c90, 1)]
