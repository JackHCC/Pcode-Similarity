[ ---  CBRANCH (ram, 0x240474, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffb, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x2405d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x2405d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x7, 4) , (unique, 0x1000017a, 4), (unique, 0x1000017a, 4) CAST (register, 0x8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2405b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) INT_SUB (unique, 0x100000b2, 4) , (const, 0x10, 4), (unique, 0x100000b2, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000e2, 8), (unique, 0x100000e2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x80, 4) COPY (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000172, 8) , (register, 0x0, 8), (unique, 0x10000172, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x240497, 1)]
[(register, 0xa0, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000186, 8), (unique, 0x10000186, 8) INT_ADD (unique, 0x1000017e, 8) , (register, 0x0, 8), (unique, 0x1000017e, 8) CAST (unique, 0x100000ea, 8), (unique, 0x100000ea, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x240598, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3400, 4) , (const, 0x1, 4), (unique, 0x3400, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x18, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x80, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (register, 0x18, 4), (register, 0x18, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000016a, 8), (unique, 0x1000016a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2404c5, 1)]
[ ---  CBRANCH (ram, 0x240560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3400, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x1, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 1), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 1) INT_ADD (unique, 0x100000c4, 1) , (const, 0xfe, 1), (unique, 0x100000c4, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)]
[ ---  CALL (ram, 0x1211f0, 8) , (register, 0x38, 8) , (const, 0x0, 4) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x38, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x2, 8) , (const, 0x1, 8), (register, 0x10, 4) INT_ADD (unique, 0x3400, 4) , (const, 0xfffffffe, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000015a, 8), (unique, 0x1000015a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2404c5, 1)]
[(register, 0x0, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000196, 8), (unique, 0x10000196, 8) INT_ADD (unique, 0x1000018e, 8) , (register, 0x18, 8), (unique, 0x1000018e, 8) CAST (unique, 0x100000fa, 8), (unique, 0x100000fa, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8), (register, 0x18, 8) INT_SEXT (unique, 0x3400, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000010a, 8) , (register, 0x18, 8), (unique, 0x1000010a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0xa0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8), (register, 0x18, 8) INT_SEXT (unique, 0x3400, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x100001a6, 8), (unique, 0x100001a6, 8) INT_ADD (unique, 0x1000019e, 8) , (register, 0x18, 8), (unique, 0x1000019e, 8) CAST (unique, 0x10000112, 8), (unique, 0x10000112, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0xa0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8), (register, 0x18, 8) INT_SEXT (unique, 0x3400, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x240588, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4), (register, 0x10, 4) INT_2COMP (unique, 0x100000ba, 4), (unique, 0x100000ba, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0xa0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8), (register, 0x18, 8) INT_SEXT (unique, 0x3400, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000162, 8), (unique, 0x10000162, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2404f0, 1)]
[ ---  CBRANCH (ram, 0x240530, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x1, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 1), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 1) INT_ADD (unique, 0x100000c2, 1) , (const, 0xfe, 1), (unique, 0x100000c2, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x240558, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_SEXT (unique, 0x100001ae, 4), (unique, 0x100001ae, 4) CAST (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (unique, 0x3a00, 8) , (unique, 0x1000014a, 8) , (const, 0x1, 8), (unique, 0x1000014a, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x24054b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (unique, 0x100001b2, 8), (unique, 0x100001b2, 8) CAST (register, 0x30, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000152, 8), (unique, 0x10000152, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2404f0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000122, 8) , (register, 0x18, 8), (unique, 0x10000122, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100001ba, 4), (unique, 0x100001ba, 4) CAST (register, 0x10, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2405d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000006a, 8) , (const, 0x0, 8), (unique, 0x1000006a, 8) INT_AND (register, 0x18, 8) , (const, 0x7, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100001ba, 4), (unique, 0x100001ba, 4) CAST (register, 0x10, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100000d2, 8) , (unique, 0x100000ca, 8) , (const, 0xcc, 4) , (unique, 0x100000da, 8), (unique, 0x100000da, 8) COPY (const, 0x2ba6a0, 8), (unique, 0x100000d2, 8) COPY (const, 0x2ba670, 8), (unique, 0x100000ca, 8) COPY (const, 0x2b6d2c, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x2405a8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x18, 4) , (const, 0x100, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) INT_RIGHT (register, 0x18, 8) , (const, 0x3, 4), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (const, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 1), (register, 0x18, 1) SUBPIECE (register, 0x18, 4) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x100001c6, 8), (unique, 0x100001c6, 8) INT_ADD (unique, 0x100001be, 8) , (const, 0x1, 8), (unique, 0x100001be, 8) CAST (unique, 0x1000013a, 8), (unique, 0x1000013a, 8) PTRSUB (unique, 0x10000132, 8) , (const, 0x0, 8), (unique, 0x10000132, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
