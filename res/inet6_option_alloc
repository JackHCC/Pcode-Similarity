[ ---  CBRANCH (ram, 0x222ac6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0xfffffffb, 4), (register, 0x80, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x222bd8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x222bd8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x7, 4) , (unique, 0x10000179, 4), (unique, 0x10000179, 4) CAST (register, 0x8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x222c10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) INT_SUB (unique, 0x100000b2, 4) , (const, 0x10, 4), (unique, 0x100000b2, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000e1, 8), (unique, 0x100000e1, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x80, 4) COPY (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000171, 8) , (register, 0x0, 8), (unique, 0x10000171, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x222ae9, 1)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000185, 8), (unique, 0x10000185, 8) INT_ADD (unique, 0x1000017d, 8) , (register, 0x0, 8), (unique, 0x1000017d, 8) CAST (unique, 0x100000e9, 8), (unique, 0x100000e9, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x222be0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x18, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x80, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (register, 0x18, 4), (register, 0x18, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000161, 8), (unique, 0x10000161, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x222b17, 1)]
[ ---  CBRANCH (ram, 0x222bb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x1, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 1), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 1) INT_ADD (unique, 0x100000c4, 1) , (const, 0xfe, 1), (unique, 0x100000c4, 1) SUBPIECE (register, 0x18, 4) , (const, 0x0, 4)]
[ ---  CALL (ram, 0x18e810, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x3100, 4), (register, 0x38, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x3100, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffe, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000159, 8), (unique, 0x10000159, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x222b17, 1)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000195, 8), (unique, 0x10000195, 8) INT_ADD (unique, 0x1000018d, 8) , (register, 0x10, 8), (unique, 0x1000018d, 8) CAST (unique, 0x100000f9, 8), (unique, 0x100000f9, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_SEXT (register, 0x18, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000109, 8) , (register, 0x30, 8), (unique, 0x10000109, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x30, 8) INT_SEXT (register, 0x30, 4), (register, 0x10, 8) INT_SEXT (register, 0x18, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x100001a5, 8), (unique, 0x100001a5, 8) INT_ADD (unique, 0x1000019d, 8) , (register, 0x30, 8), (unique, 0x1000019d, 8) CAST (unique, 0x10000111, 8), (unique, 0x10000111, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x30, 8) INT_SEXT (register, 0x30, 4), (register, 0x10, 8) INT_SEXT (register, 0x18, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x222bf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4), (register, 0x10, 4) INT_2COMP (unique, 0x100000ba, 4), (unique, 0x100000ba, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x30, 8) INT_SEXT (register, 0x30, 4), (register, 0x10, 8) INT_SEXT (register, 0x18, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000169, 8), (unique, 0x10000169, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x222b45, 1)]
[ ---  CBRANCH (ram, 0x222b80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x1, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 1), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 1) INT_ADD (unique, 0x100000c2, 1) , (const, 0xfe, 1), (unique, 0x100000c2, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x222ba8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_SEXT (unique, 0x100001ad, 4), (unique, 0x100001ad, 4) CAST (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (unique, 0x3a00, 8) , (unique, 0x10000149, 8) , (const, 0x1, 8), (unique, 0x10000149, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x222b9b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) CAST (register, 0x30, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000151, 8), (unique, 0x10000151, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x222b45, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000121, 8) , (register, 0x30, 8), (unique, 0x10000121, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100001b9, 4), (unique, 0x100001b9, 4) CAST (register, 0x10, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x222c22, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000007a, 8) , (const, 0x0, 8), (unique, 0x1000007a, 8) INT_AND (register, 0x30, 8) , (const, 0x7, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100001b9, 4), (unique, 0x100001b9, 4) CAST (register, 0x10, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x100000d1, 8) , (unique, 0x100000c9, 8) , (const, 0xcd, 4) , (unique, 0x100000d9, 8), (unique, 0x100000d9, 8) COPY (const, 0x2925b0, 8), (unique, 0x100000d1, 8) COPY (const, 0x292580, 8), (unique, 0x100000c9, 8) COPY (const, 0x28f05a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x222c00, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x30, 4) , (const, 0x100, 4), (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0xffffffff, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x3, 4), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (const, 0x10, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x222b74, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 1), (register, 0x30, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x100001c5, 8), (unique, 0x100001c5, 8) INT_ADD (unique, 0x100001bd, 8) , (const, 0x1, 8), (unique, 0x100001bd, 8) CAST (unique, 0x10000139, 8), (unique, 0x10000139, 8) PTRSUB (unique, 0x10000131, 8) , (const, 0x0, 8), (unique, 0x10000131, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x0, 8)]
