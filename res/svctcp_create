[(unique, 0x10000197, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffc4, 4) COPY (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x238cf8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x172, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x172, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x172, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x172, 4)]
[ ---  CBRANCH (ram, 0x238d66, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207ce0, 8) , (const, 0x2, 4) , (const, 0x1, 4) , (const, 0x6, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x18a, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x186, 4)]
[ ---  CALL (ram, 0x16a940, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002bd, 8), (unique, 0x100002bd, 8) CALL (ram, 0x12e620, 8) , (unique, 0x100001bb, 8) , (unique, 0x100001e3, 8) , (const, 0x5, 8), (unique, 0x100001e3, 8) COPY (const, 0x292a48, 8), (unique, 0x100001bb, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[(ram, 0x4c7e20, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x18a, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x186, 4)]
[(ram, 0x4c7e28, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x18a, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x186, 4)]
[(ram, 0x4c7e30, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x18a, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x186, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000196, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x238b98, 1)]
[(unique, 0x10000195, 1) MULTIEQUAL (unique, 0x10000197, 1) , (unique, 0x10000196, 1)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x46, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x46, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x46, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x46, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x46, 4), (stack, 0xffffffffffffffc8, 8) COPY (const, 0x2, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x46, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x238cd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22b270, 8) , (register, 0x18, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100002c5, 8), (unique, 0x100002c5, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8), (register, 0x18, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x0, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x16b, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x16b, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x16b, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x16b, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x16b, 4), (stack, 0xffffffffffffffc8, 8) INT_AND (stack, 0xffffffffffffffc8, 8) , (const, 0xffffffff0000ffff, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x16b, 4)]
[ ---  CALL (ram, 0x207830, 8) , (register, 0x18, 4) , (unique, 0x100002cd, 8) , (stack, 0xffffffffffffffc4, 4), (unique, 0x100002cd, 8) CAST (unique, 0x3800, 8)]
[ ---  BRANCH (ram, 0x238bcb, 1)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x59, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x59, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x59, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x59, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x59, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x59, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x238c20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2078f0, 8) , (register, 0x18, 4) , (unique, 0x100002d5, 8) , (unique, 0x3800, 8), (unique, 0x100002d5, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xa4, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xa4, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xa4, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xa4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xa4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xa4, 4)]
[ ---  CBRANCH (ram, 0x238bde, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207950, 8) , (register, 0x18, 4) , (const, 0x80, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x6d, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x69, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x6d, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x69, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x6d, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x69, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x6d, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x69, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x6d, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x69, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x6d, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x69, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x16a940, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002dd, 8), (unique, 0x100002dd, 8) CALL (ram, 0x12e620, 8) , (unique, 0x100001ab, 8) , (unique, 0x100001eb, 8) , (const, 0x5, 8), (unique, 0x100001eb, 8) COPY (const, 0x292a70, 8), (unique, 0x100001ab, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  CBRANCH (ram, 0x238cc8, 1) , (unique, 0x10000195, 1)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x9d, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x9d, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x9d, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x9d, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x9d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x9d, 4)]
[ ---  CALL (ram, 0x1f7030, 8) , (register, 0x18, 4)]
[ ---  BRANCH (ram, 0x238c07, 1)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xb8, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xb3, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xb8, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xb3, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xb8, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xb3, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xb8, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xb3, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xb8, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xb3, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb8, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb3, 4)]
[(register, 0x0, 8) CAST (unique, 0x100002ed, 8), (unique, 0x100002ed, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x150, 8)]
[ ---  CBRANCH (ram, 0x238d1d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002e5, 8), (unique, 0x100002e5, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x238d1d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002f5, 8) , (register, 0x0, 8), (unique, 0x100002f5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x1000021b, 8) , (const, 0x10, 8), (unique, 0x1000021b, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x30, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x10, 4), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000023b, 8) , (register, 0x18, 4), (unique, 0x1000023b, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002fd, 8) , (unique, 0x100002b5, 8), (unique, 0x100002fd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000029d, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x1000029d, 8) PTRSUB (unique, 0x1000024b, 8) , (const, 0x8, 8), (unique, 0x1000024b, 8) PTRSUB (register, 0x0, 8) , (const, 0x14, 8), (unique, 0x100002b5, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xd3, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xd0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000305, 8) , (ram, 0x4c7e28, 8), (unique, 0x10000305, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xdf, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xdc, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xda, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xd7, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xd3, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xd0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (ram, 0x4c7e30, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x1000026b, 8) , (const, 0x8, 8), (unique, 0x1000026b, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xe3, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xdf, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xdc, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xda, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xd7, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xd3, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xd0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000030d, 8), (unique, 0x1000030d, 8) CAST (unique, 0x100001fb, 8), (unique, 0x100001fb, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c1760, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 2), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 2) INT_OR (unique, 0x4e880, 2) , (unique, 0x4e980, 2), (unique, 0x4e980, 2) INT_LEFT (stack, 0xffffffffffffffca, 2) , (const, 0x8, 4), (unique, 0x4e880, 2) INT_RIGHT (stack, 0xffffffffffffffca, 2) , (const, 0x8, 4), (stack, 0xffffffffffffffca, 2) SUBPIECE (stack, 0xffffffffffffffc8, 8) , (const, 0x2, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x10a, 4)]
[ ---  CALL (ram, 0x237bc0, 8) , (register, 0x0, 8)]
[(ram, 0x4c7e20, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x10a, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x107, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xeb, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xe7, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xe3, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xdf, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xdc, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xda, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xd7, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xd3, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xd0, 4)]
[(ram, 0x4c7e28, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x10a, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x107, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xeb, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xe7, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xe3, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xdf, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xdc, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xda, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xd7, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xd3, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xd0, 4)]
[(ram, 0x4c7e30, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x10a, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x107, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xeb, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xe7, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xe3, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xdf, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xdc, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xda, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xd7, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xd3, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xd0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CALL (ram, 0x16cfd0, 8) , (const, 0x0, 8) , (unique, 0x100001cb, 8) , (unique, 0x100001f3, 8) , (register, 0x0, 8), (unique, 0x100001f3, 8) COPY (const, 0x292aa0, 8), (unique, 0x100001cb, 8) COPY (const, 0x28eb09, 8), (register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x100001b3, 8) , (unique, 0x100001db, 8) , (const, 0x5, 8), (unique, 0x100001db, 8) COPY (const, 0x28f404, 8), (unique, 0x100001b3, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x149, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x145, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x141, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x127, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x149, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x145, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x141, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x127, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x149, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x145, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x141, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x127, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x149, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x145, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x141, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x127, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x149, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x141, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x127, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x149, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x141, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x127, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x238c09, 1)]
[(ram, 0x4c7e20, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
