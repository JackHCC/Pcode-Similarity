[(register, 0x206, 1) INT_EQUAL (ram, 0x4c89b0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1c99b8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (ram, 0x4c89b0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1c9962, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x1c984d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5d38, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1c9958, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x64, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (ram, 0x4c89b0, 4) , (const, 0x1, 4)]
[(ram, 0x4c89b0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[ ---  CBRANCH (ram, 0x1c9840, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c882a, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x261, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x261, 4)]
[(ram, 0x4c5d28, 8) INDIRECT (ram, 0x4c5d28, 8) , (const, 0x261, 4)]
[(ram, 0x4c5d30, 8) INDIRECT (ram, 0x4c5d30, 8) , (const, 0x261, 4)]
[(ram, 0x4c5d38, 1) INDIRECT (ram, 0x4c5d38, 1) , (const, 0x261, 4)]
[(ram, 0x4c882a, 1) INDIRECT (ram, 0x4c882a, 1) , (const, 0x261, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x261, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x261, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x261, 4)]
[ ---  CBRANCH (ram, 0x1c9944, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x23cb30, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c5d28, 8) COPY (ram, 0x4c5d28, 8)]
[(ram, 0x4c5d30, 8) COPY (ram, 0x4c5d30, 8)]
[(ram, 0x4c5d38, 1) COPY (ram, 0x4c5d38, 1)]
[(ram, 0x4c882a, 1) COPY (ram, 0x4c882a, 1)]
[(ram, 0x4c89b0, 4) COPY (ram, 0x4c89b0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4) , (register, 0x0, 4)]
[(ram, 0x4c882a, 1) MULTIEQUAL (ram, 0x4c882a, 1) , (ram, 0x4c882a, 1) , (ram, 0x4c882a, 1)]
[(ram, 0x4c5d30, 8) MULTIEQUAL (ram, 0x4c5d30, 8) , (ram, 0x4c5d30, 8) , (ram, 0x4c5d30, 8)]
[(ram, 0x4c5d28, 8) MULTIEQUAL (ram, 0x4c5d28, 8) , (ram, 0x4c5d28, 8) , (ram, 0x4c5d28, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1c99d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5d38, 1) , (const, 0x0, 1), (ram, 0x4c5d38, 1) MULTIEQUAL (ram, 0x4c5d38, 1) , (ram, 0x4c5d38, 1) , (ram, 0x4c5d38, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d5, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d5, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c5d28, 8) INDIRECT (ram, 0x4c5d28, 8) , (const, 0x1d5, 4), (ram, 0x4c5d28, 8) MULTIEQUAL (ram, 0x4c5d28, 8) , (ram, 0x4c5d28, 8)]
[(ram, 0x4c5d30, 8) INDIRECT (ram, 0x4c5d30, 8) , (const, 0x1d5, 4), (ram, 0x4c5d30, 8) MULTIEQUAL (ram, 0x4c5d30, 8) , (ram, 0x4c5d30, 8)]
[(ram, 0x4c5d38, 1) INDIRECT (ram, 0x4c5d38, 1) , (const, 0x1d5, 4), (ram, 0x4c5d38, 1) MULTIEQUAL (ram, 0x4c5d38, 1) , (ram, 0x4c5d38, 1)]
[(ram, 0x4c882a, 1) INDIRECT (ram, 0x4c882a, 1) , (const, 0x1d5, 4), (ram, 0x4c882a, 1) MULTIEQUAL (ram, 0x4c882a, 1) , (ram, 0x4c882a, 1)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x1d5, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1d5, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d5, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1c9a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22ab10, 8) , (unique, 0x3800, 8) , (unique, 0x100000fd, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x100000fd, 8) COPY (const, 0x28da57, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x10, 8) , (const, 0x11, 4), (register, 0x10, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1c9a17, 1)]
[(register, 0x10, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x10, 8) , (const, 0x11, 4), (register, 0x10, 8) INT_XOR (unique, 0x10000159, 8) , (unique, 0xbd80, 8), (unique, 0x10000159, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x10, 8) , (const, 0x11, 4), (register, 0x10, 8) INT_XOR (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4c5d28, 8) MULTIEQUAL (register, 0x10, 8) , (ram, 0x4c5d28, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4c5d38, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x1c9889, 1)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c882a, 1) MULTIEQUAL (ram, 0x4c882a, 1) , (ram, 0x4c882a, 1)]
[(ram, 0x4c5d38, 1) MULTIEQUAL (ram, 0x4c5d38, 1) , (ram, 0x4c5d38, 1)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000161, 8), (unique, 0x10000161, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c5d28, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c5d28, 8) , (const, 0x11, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c5d28, 8) MULTIEQUAL (ram, 0x4c5d28, 8) , (ram, 0x4c5d28, 8)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c5d30, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c5d30, 8) , (const, 0x11, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c5d30, 8) MULTIEQUAL (ram, 0x4c5d30, 8) , (ram, 0x4c5d30, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c882a, 1) MULTIEQUAL (ram, 0x4c882a, 1) , (ram, 0x4c882a, 1)]
[(ram, 0x4c5d38, 1) MULTIEQUAL (ram, 0x4c5d38, 1) , (ram, 0x4c5d38, 1)]
[(ram, 0x4c5d30, 8) MULTIEQUAL (ram, 0x4c5d30, 8) , (register, 0x10, 8)]
[(ram, 0x4c5d28, 8) MULTIEQUAL (ram, 0x4c5d28, 8) , (ram, 0x4c5d28, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000151, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x1c9a66, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0xb8, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c5d28, 8) INDIRECT (ram, 0x4c5d28, 8) , (const, 0x1be, 4)]
[(ram, 0x4c5d30, 8) INDIRECT (ram, 0x4c5d30, 8) , (const, 0x1be, 4)]
[(ram, 0x4c5d38, 1) INDIRECT (ram, 0x4c5d38, 1) , (const, 0x1be, 4)]
[(ram, 0x4c882a, 1) INDIRECT (ram, 0x4c882a, 1) , (const, 0x1be, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x1be, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1be, 4)]
[ ---  BRANCH (ram, 0x1c9933, 1)]
[(stack, 0xffffffffffffffa8, 8) COPY (ram, 0x4c2e78, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0xb0, 8) PTRADD (ram, 0x4c2e78, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x242d60, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd9, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcf, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xd9, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xcf, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c5d28, 8) INDIRECT (ram, 0x4c5d28, 8) , (const, 0xd9, 4), (ram, 0x4c5d28, 8) INDIRECT (ram, 0x4c5d28, 8) , (const, 0xcf, 4), (ram, 0x4c5d28, 8) MULTIEQUAL (ram, 0x4c5d28, 8) , (ram, 0x4c5d28, 8)]
[(ram, 0x4c5d30, 8) INDIRECT (ram, 0x4c5d30, 8) , (const, 0xd9, 4), (ram, 0x4c5d30, 8) INDIRECT (ram, 0x4c5d30, 8) , (const, 0xcf, 4), (ram, 0x4c5d30, 8) MULTIEQUAL (ram, 0x4c5d30, 8) , (ram, 0x4c5d30, 8)]
[(ram, 0x4c5d38, 1) INDIRECT (ram, 0x4c5d38, 1) , (const, 0xd9, 4), (ram, 0x4c5d38, 1) INDIRECT (ram, 0x4c5d38, 1) , (const, 0xcf, 4), (ram, 0x4c5d38, 1) MULTIEQUAL (ram, 0x4c5d38, 1) , (ram, 0x4c5d38, 1)]
[(ram, 0x4c882a, 1) INDIRECT (ram, 0x4c882a, 1) , (const, 0xd9, 4), (ram, 0x4c882a, 1) INDIRECT (ram, 0x4c882a, 1) , (const, 0xcf, 4), (ram, 0x4c882a, 1) MULTIEQUAL (ram, 0x4c882a, 1) , (ram, 0x4c882a, 1)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0xd9, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0xcf, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xd9, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd9, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1c98f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xfffffffe, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0xb0, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x1c9998, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000179, 8), (unique, 0x10000179, 8) INT_ADD (unique, 0x10000169, 8) , (unique, 0x10000171, 8), (unique, 0x10000171, 8) CAST (unique, 0x10000151, 8), (unique, 0x10000169, 8) CAST (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1a0, 4)]
[(ram, 0x4c5d28, 8) COPY (ram, 0x4c5d28, 8), (ram, 0x4c5d28, 8) INDIRECT (ram, 0x4c5d28, 8) , (const, 0x1a0, 4)]
[(ram, 0x4c5d30, 8) COPY (ram, 0x4c5d30, 8), (ram, 0x4c5d30, 8) INDIRECT (ram, 0x4c5d30, 8) , (const, 0x1a0, 4)]
[(ram, 0x4c5d38, 1) COPY (ram, 0x4c5d38, 1), (ram, 0x4c5d38, 1) INDIRECT (ram, 0x4c5d38, 1) , (const, 0x1a0, 4)]
[(ram, 0x4c882a, 1) COPY (ram, 0x4c882a, 1), (ram, 0x4c882a, 1) INDIRECT (ram, 0x4c882a, 1) , (const, 0x1a0, 4)]
[(ram, 0x4c89b0, 4) COPY (ram, 0x4c89b0, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x1a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x22, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x116, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x116, 4)]
[(ram, 0x4c5d28, 8) INDIRECT (ram, 0x4c5d28, 8) , (const, 0x116, 4)]
[(ram, 0x4c5d30, 8) INDIRECT (ram, 0x4c5d30, 8) , (const, 0x116, 4)]
[(ram, 0x4c5d38, 1) INDIRECT (ram, 0x4c5d38, 1) , (const, 0x116, 4)]
[(ram, 0x4c882a, 1) INDIRECT (ram, 0x4c882a, 1) , (const, 0x116, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x116, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x116, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x116, 4)]
[ ---  CBRANCH (ram, 0x1c98c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229330, 8) , (unique, 0x3800, 8) , (unique, 0x100000f5, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (register, 0x0, 4) , (const, 0x0, 8), (unique, 0x100000f5, 8) COPY (const, 0x28da57, 8)]
[ ---  CBRANCH (ram, 0x1c9a30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x191, 4)]
[(ram, 0x4c5d28, 8) INDIRECT (ram, 0x4c5d28, 8) , (const, 0x191, 4)]
[(ram, 0x4c5d30, 8) INDIRECT (ram, 0x4c5d30, 8) , (const, 0x191, 4)]
[(ram, 0x4c5d38, 1) INDIRECT (ram, 0x4c5d38, 1) , (const, 0x191, 4)]
[(ram, 0x4c882a, 1) INDIRECT (ram, 0x4c882a, 1) , (const, 0x191, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x191, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0x30, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x12f, 4)]
[(ram, 0x4c5d28, 8) INDIRECT (ram, 0x4c5d28, 8) , (const, 0x12f, 4)]
[(ram, 0x4c5d30, 8) INDIRECT (ram, 0x4c5d30, 8) , (const, 0x12f, 4)]
[(ram, 0x4c5d38, 1) INDIRECT (ram, 0x4c5d38, 1) , (const, 0x12f, 4)]
[(ram, 0x4c882a, 1) INDIRECT (ram, 0x4c882a, 1) , (const, 0x12f, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x12f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1c9a89, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x1c9a35, 1)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c882a, 1) MULTIEQUAL (ram, 0x4c882a, 1) , (ram, 0x4c882a, 1)]
[(ram, 0x4c5d38, 1) MULTIEQUAL (ram, 0x4c5d38, 1) , (ram, 0x4c5d38, 1)]
[(ram, 0x4c5d30, 8) MULTIEQUAL (ram, 0x4c5d30, 8) , (ram, 0x4c5d30, 8)]
[(ram, 0x4c5d28, 8) MULTIEQUAL (ram, 0x4c5d28, 8) , (ram, 0x4c5d28, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x1c9a8d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000191, 8), (unique, 0x10000191, 8) INT_ADD (unique, 0x10000181, 8) , (unique, 0x10000189, 8), (unique, 0x10000189, 8) CAST (stack, 0xffffffffffffffa8, 8), (unique, 0x10000181, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1c9944, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0xfffffffe, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c5d28, 8) COPY (ram, 0x4c5d28, 8)]
[(ram, 0x4c5d30, 8) COPY (ram, 0x4c5d30, 8)]
[(ram, 0x4c5d38, 1) COPY (ram, 0x4c5d38, 1)]
[(ram, 0x4c882a, 1) COPY (ram, 0x4c882a, 1)]
[(ram, 0x4c89b0, 4) COPY (ram, 0x4c89b0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0xbc80, 4)]
[(register, 0x0, 4) COPY (const, 0x16, 4)]
[ ---  BRANCH (ram, 0x1c9a35, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (register, 0x0, 4), (unique, 0x4f00, 8) CAST (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) INT_ADD (unique, 0x10000199, 8) , (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) CAST (stack, 0xffffffffffffffa8, 8), (unique, 0x10000199, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x16c, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c5d28, 8) COPY (ram, 0x4c5d28, 8), (ram, 0x4c5d28, 8) INDIRECT (ram, 0x4c5d28, 8) , (const, 0x16c, 4), (ram, 0x4c5d28, 8) MULTIEQUAL (ram, 0x4c5d28, 8) , (ram, 0x4c5d28, 8) , (ram, 0x4c5d28, 8)]
[(ram, 0x4c5d30, 8) COPY (ram, 0x4c5d30, 8), (ram, 0x4c5d30, 8) INDIRECT (ram, 0x4c5d30, 8) , (const, 0x16c, 4), (ram, 0x4c5d30, 8) MULTIEQUAL (ram, 0x4c5d30, 8) , (ram, 0x4c5d30, 8) , (ram, 0x4c5d30, 8)]
[(ram, 0x4c5d38, 1) COPY (ram, 0x4c5d38, 1), (ram, 0x4c5d38, 1) INDIRECT (ram, 0x4c5d38, 1) , (const, 0x16c, 4), (ram, 0x4c5d38, 1) MULTIEQUAL (ram, 0x4c5d38, 1) , (ram, 0x4c5d38, 1) , (ram, 0x4c5d38, 1)]
[(ram, 0x4c882a, 1) COPY (ram, 0x4c882a, 1), (ram, 0x4c882a, 1) INDIRECT (ram, 0x4c882a, 1) , (const, 0x16c, 4), (ram, 0x4c882a, 1) MULTIEQUAL (ram, 0x4c882a, 1) , (ram, 0x4c882a, 1) , (ram, 0x4c882a, 1)]
[(ram, 0x4c89b0, 4) COPY (ram, 0x4c89b0, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x16c, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
