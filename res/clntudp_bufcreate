[(register, 0x80, 8) INT_ADD (unique, 0x100002ef, 8) , (register, 0x80, 4), (unique, 0x100002ef, 8) INT_LEFT (unique, 0x100002e7, 8) , (const, 0x20, 8), (unique, 0x100002e7, 8) INT_SEXT (unique, 0x1000031f, 4), (unique, 0x1000031f, 4) CAST (register, 0x84, 4)]
[(unique, 0x10000099, 8) CAST (unique, 0x10000327, 8), (unique, 0x10000327, 8) INT_ADD (unique, 0x100002ff, 8) , (register, 0x88, 4), (unique, 0x100002ff, 8) INT_LEFT (unique, 0x100002f7, 8) , (const, 0x20, 8), (unique, 0x100002f7, 8) INT_SEXT (unique, 0x10000323, 4), (unique, 0x10000323, 4) CAST (register, 0x8c, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5c, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2e, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x5c, 4), (stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x2e, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x5c, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x2e, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x5c, 4), (stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x2e, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x5c, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x2e, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x5c, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x2e, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x5c, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x2e, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000337, 8), (unique, 0x10000337, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x3e80, 8), (unique, 0x3e80, 8) INT_ADD (unique, 0x3d00, 8) , (register, 0x18, 8), (unique, 0x3d00, 8) INT_ADD (register, 0xb0, 8) , (const, 0xa0, 8), (register, 0xb0, 8) INT_ZEXT (register, 0x28, 4), (register, 0x28, 4) INT_AND (unique, 0x3100, 4) , (const, 0xfffffffc, 4), (unique, 0x3100, 4) INT_ADD (stack, 0x10, 4) , (const, 0x3, 4), (register, 0x18, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) INT_AND (unique, 0x3100, 4) , (const, 0xfffffffc, 4), (unique, 0x3100, 4) INT_ADD (stack, 0x8, 4) , (const, 0x3, 4), (stack, 0x8, 4) SUBPIECE (stack, 0x8, 16) , (const, 0x0, 4), (stack, 0x10, 4) SUBPIECE (stack, 0x8, 16) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x235e88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000032f, 8), (unique, 0x1000032f, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x235e88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x1f3, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x1d2, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x1f3, 4), (stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x1d9, 4), (stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x1d2, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x1f3, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x1d2, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1f3, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1d2, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1f3, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1d2, 4)]
[ ---  CALL (ram, 0x16cfd0, 8) , (const, 0x0, 8) , (unique, 0x100001a4, 8) , (unique, 0x100001bc, 8) , (register, 0x0, 8), (unique, 0x100001bc, 8) COPY (const, 0x28f4f3, 8), (unique, 0x100001a4, 8) COPY (const, 0x28eb09, 8), (register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000194, 8) , (unique, 0x100001b4, 8) , (const, 0x5, 8), (unique, 0x100001b4, 8) COPY (const, 0x28f404, 8), (unique, 0x10000194, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000284, 8) , (const, 0xc, 4), (unique, 0x10000284, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x237b30, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x201, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1fe, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1f3, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d9, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000033f, 8) , (const, 0xc, 4), (unique, 0x1000033f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x10000294, 8) , (const, 0x8, 8), (unique, 0x10000294, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x237b30, 8)]
[ ---  CBRANCH (ram, 0x235d66, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x85, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000034f, 8) , (unique, 0x3e80, 8), (unique, 0x1000034f, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x24, 8) , (const, 0x4, 8), (unique, 0x3e80, 8) INT_ADD (unique, 0x10000347, 8) , (unique, 0x100001d4, 8), (unique, 0x10000347, 8) CAST (register, 0x0, 8), (unique, 0x100001d4, 8) INT_ADD (register, 0xb0, 8) , (const, 0x9c, 8)]
[ ---  CBRANCH (ram, 0x235d99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x92, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x92, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x92, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x92, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x92, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x92, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x92, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x92, 4)]
[ ---  CBRANCH (ram, 0x235d90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 2) , (const, 0x0, 2), (register, 0x0, 2) CALL (ram, 0x237810, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (const, 0x11, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xea, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 2), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8), (register, 0x0, 2) INT_OR (unique, 0x4e880, 2) , (unique, 0x4e980, 2), (unique, 0x4e980, 2) INT_LEFT (register, 0x0, 2) , (const, 0x8, 4), (unique, 0x4e880, 2) INT_RIGHT (register, 0x0, 2) , (const, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x28, 4), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x26, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x1000035f, 8), (unique, 0x1000035f, 8) CAST (register, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x0, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x10, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x1000036f, 8), (unique, 0x1000036f, 8) CAST (unique, 0x100001c4, 8), (unique, 0x100001c4, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c1720, 8), (unique, 0x3800, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000037f, 8) , (unique, 0xbd80, 8), (unique, 0x1000037f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000357, 8), (unique, 0x10000357, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000387, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x10000387, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000038f, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x1000038f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x18, 4), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x23, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000397, 8) , (unique, 0xbd80, 8), (unique, 0x10000397, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000377, 8), (unique, 0x10000377, 8) CAST (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000039f, 8) , (register, 0x8, 8), (unique, 0x1000039f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003a7, 8) , (register, 0x80, 8), (unique, 0x100003a7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x23b780, 8) , (unique, 0x3100, 8) , (unique, 0xbd80, 8) , (register, 0x18, 4) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003af, 8), (unique, 0x100003af, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x24, 8) , (const, 0x4, 8), (unique, 0x3100, 8) CAST (unique, 0x10000367, 8), (unique, 0x10000367, 8) PTRADD (register, 0x0, 8) , (const, 0x16, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x144, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x14a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x144, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x11c, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x119, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x113, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x10d, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x10a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x107, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x104, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x101, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xfc, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf7, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf4, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf1, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x14a, 4), (stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x144, 4), (stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x11c, 4), (stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (register, 0x0, 8) , (const, 0x144, 4), (register, 0x0, 8) CALL (ram, 0x232ea0, 8)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x14a, 4), (stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x144, 4), (stack, 0xffffffffffffff70, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x144, 4), (stack, 0xffffffffffffff78, 8) COPY (const, 0x2, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (unique, 0x1000030f, 8) , (const, 0x144, 4), (unique, 0x1000030f, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x10000317, 8) , (const, 0x144, 4), (unique, 0x10000317, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x235d5e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22d030, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100003b7, 8), (unique, 0x100003b7, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8), (unique, 0x3100, 8) CAST (unique, 0x10000367, 8), (unique, 0x10000367, 8) PTRADD (register, 0x0, 8) , (const, 0x16, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15d, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x15d, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x15d, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x15d, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x15d, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x15d, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x15d, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x160, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x15d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 4), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x22, 8) , (const, 0x4, 8), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003c7, 8), (unique, 0x100003c7, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003bf, 8), (unique, 0x100003bf, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x235ee0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000099, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x182, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x182, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x182, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x182, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x182, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x182, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x190, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x182, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000099, 8) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207ce0, 8) , (const, 0x2, 4) , (const, 0x802, 4) , (const, 0x11, 4)]
[ ---  CBRANCH (ram, 0x235f3d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207ce0, 8) , (const, 0x2, 4) , (const, 0x802, 4) , (const, 0x11, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x1c4, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x1c4, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x1c4, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1c4, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1c4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002b4, 8) , (const, 0xc, 4), (unique, 0x100002b4, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x237b30, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ce, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c7, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003d7, 8) , (unique, 0xbc80, 4), (unique, 0x100003d7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100002c4, 8) , (const, 0x8, 8), (unique, 0x100002c4, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003cf, 8), (unique, 0x100003cf, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000307, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x10000307, 8) COPY (ram, 0x4c2e78, 8), (register, 0x0, 8) CALL (ram, 0x237b30, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c4, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c4, 4)]
[ ---  BRANCH (ram, 0x235d5e, 1)]
[ ---  CALL (ram, 0x22b270, 8) , (register, 0x0, 4) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x1ba, 4), (stack, 0xffffffffffffff64, 4) COPY (const, 0x1, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x1ba, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x1a0, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x1ba, 4), (stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x1a0, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x1ba, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x1a0, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1ba, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1a0, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ba, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1a0, 4)]
[ ---  CALL (ram, 0x207c80, 8) , (unique, 0xbc80, 4) , (const, 0x0, 4) , (const, 0xb, 4) , (unique, 0x3800, 8) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000099, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff64, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1bd, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ba, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000099, 8)]
[ ---  BRANCH (ram, 0x235e71, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x173, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x179, 4), (stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x179, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x179, 4), (stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x179, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x179, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x179, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000027c, 8) , (register, 0x0, 8), (unique, 0x1000027c, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x22b0b0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x17b, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x179, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x175, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xa1, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0xa1, 4), (stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x235d75, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb9, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xb9, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0xb9, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xb9, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xb9, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xb9, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
