[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002a2, 8), (unique, 0x100002a2, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100001f8, 8) , (unique, 0x10000218, 8) , (const, 0x1, 8), (unique, 0x10000218, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (unique, 0x100001f8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6180, 8), (register, 0x0, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x90, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000292, 8), (unique, 0x10000292, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  CBRANCH (ram, 0x48caab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000029a, 8), (unique, 0x1000029a, 8) INT_ADD (register, 0x38, 8) , (const, 0x2c8, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x8, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002aa, 8), (unique, 0x100002aa, 8) INT_ADD (register, 0x38, 8) , (const, 0x2c0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000262, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002aa, 8), (unique, 0x100002aa, 8) INT_ADD (register, 0x38, 8) , (const, 0x2c0, 8)]
[(unique, 0x10000272, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002aa, 8), (unique, 0x100002aa, 8) INT_ADD (register, 0x38, 8) , (const, 0x2c0, 8)]
[ ---  BRANCH (ram, 0x48ca74, 1)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (unique, 0x12080, 4), (unique, 0x12080, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002b2, 8), (unique, 0x100002b2, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x31c, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000262, 8) , (unique, 0x1000026a, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x48ca70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (unique, 0x3400, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000272, 8) , (unique, 0x1000027a, 8)]
[(unique, 0x1000026a, 8) COPY (register, 0x10, 8)]
[(unique, 0x1000027a, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0xea, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0xea, 4)]
[(ram, 0x4c87c8, 8) INDIRECT (ram, 0x4c87c8, 8) , (const, 0xea, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002ba, 8) , (register, 0x8, 4), (unique, 0x100002ba, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000208, 8) , (unique, 0x10000238, 8) , (const, 0x1, 8), (unique, 0x10000238, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (unique, 0x10000208, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6180, 8), (register, 0x0, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x90, 8), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x48cb96, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x200, 1) , (const, 0x0, 1), (register, 0x200, 1) INT_CARRY (register, 0x8, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c87c8, 8) MULTIEQUAL (ram, 0x4c87c8, 8) , (ram, 0x4c87c8, 8)]
[(ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002ca, 8), (unique, 0x100002ca, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001d8, 8) , (unique, 0x10000248, 8) , (const, 0x1, 8), (unique, 0x10000248, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8), (unique, 0x100001d8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6180, 8), (register, 0x0, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x90, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002d2, 8), (unique, 0x100002d2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002c2, 8), (unique, 0x100002c2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001c8, 8) , (unique, 0x10000240, 8) , (const, 0x1, 8), (unique, 0x10000240, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (unique, 0x100001c8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6180, 8), (register, 0x0, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x90, 8), (register, 0x8, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x48cb00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002ca, 8), (unique, 0x100002ca, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001d8, 8) , (unique, 0x10000248, 8) , (const, 0x1, 8), (unique, 0x10000248, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8), (unique, 0x100001d8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6180, 8), (register, 0x0, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x90, 8)]
[(register, 0xb8, 8) INT_AND (register, 0x8, 8) , (const, 0xffffffff, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48cb96, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x8, 8) , (const, 0xffffffff, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x48cae9, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x0, 8)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8)]
[(ram, 0x4c87c8, 8) COPY (ram, 0x4c87c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(register, 0xb8, 8) INT_AND (unique, 0x100000b7, 8) , (const, 0xffffffff, 8), (unique, 0x100000b7, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x48cb96, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000b7, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x100000b7, 8) , (const, 0xffffffff, 8), (unique, 0x100000b7, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4)]
[(unique, 0x10000176, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x1000017e, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000186, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x48cae9, 1) , (unique, 0x10000175, 1), (unique, 0x10000175, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8)]
[(ram, 0x4c87c8, 8) COPY (ram, 0x4c87c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x10000176, 8)]
[(register, 0xb8, 4) SUBPIECE (unique, 0x10000186, 8) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1bb, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x1bb, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x1bb, 4)]
[(ram, 0x4c87c8, 8) INDIRECT (ram, 0x4c87c8, 8) , (const, 0x1bb, 4)]
[ ---  CBRANCH (ram, 0x48cb96, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_LEFT (unique, 0x10000186, 8) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e2, 8) , (register, 0xb8, 4), (unique, 0x100002e2, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100001e8, 8) , (unique, 0x10000258, 8) , (const, 0x1, 8), (unique, 0x10000258, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8), (unique, 0x100001e8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6180, 8), (register, 0x0, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x90, 8)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x203, 4), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x201, 4), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x1d3, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x203, 4), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x201, 4), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x1d3, 4)]
[(ram, 0x4c87c8, 8) INDIRECT (ram, 0x4c87c8, 8) , (const, 0x203, 4), (ram, 0x4c87c8, 8) INDIRECT (ram, 0x4c87c8, 8) , (const, 0x201, 4), (ram, 0x4c87c8, 8) INDIRECT (ram, 0x4c87c8, 8) , (const, 0x1d3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002da, 8), (unique, 0x100002da, 8) CALL (ram, 0x401060, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (register, 0xb0, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x48cb89, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002ea, 8), (unique, 0x100002ea, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d3, 4)]
[(ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x230, 4)]
[(ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x230, 4)]
[(ram, 0x4c87c8, 8) INDIRECT (ram, 0x4c87c8, 8) , (const, 0x230, 4)]
[ ---  CALLIND (ram, 0x4c87c8, 8)]
[ ---  BRANCH (ram, 0x48cb73, 1)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0x1000017e, 8)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x22c, 4), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x22c, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c87c8, 8) COPY (ram, 0x4c87c8, 8), (ram, 0x4c87c8, 8) INDIRECT (ram, 0x4c87c8, 8) , (const, 0x22c, 4), (ram, 0x4c87c8, 8) MULTIEQUAL (ram, 0x4c87c8, 8) , (ram, 0x4c87c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INDIRECT (const, 0x0, 8) , (const, 0x22c, 4)]
[(register, 0x38, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x23a, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) INT_ADD (register, 0x38, 8) , (const, 0x38, 8)]
[(ram, 0x4c87c8, 8) INDIRECT (ram, 0x4c87c8, 8) , (const, 0x23a, 4), (ram, 0x4c87c8, 8) MULTIEQUAL (ram, 0x4c87c8, 8) , (ram, 0x4c87c8, 8) , (ram, 0x4c87c8, 8) , (ram, 0x4c87c8, 8)]
[ ---  CALL (ram, 0x48ca00, 8)]
[(unique, 0x1000028a, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x23a, 4), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[ ---  CBRANCH (ram, 0x48cc00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c6128, 8) , (const, 0x0, 8), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x23a, 4), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(unique, 0x1000018f, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (ram, 0x4c6128, 8)]
[(unique, 0x1000019f, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (ram, 0x4c6180, 8)]
[(unique, 0x100001a7, 8) MULTIEQUAL (ram, 0x4c87c8, 8) , (ram, 0x4c87c8, 8)]
[ ---  CBRANCH (ram, 0x48cc00, 1) , (unique, 0x1000018e, 1), (unique, 0x1000018e, 1) INT_NOTEQUAL (unique, 0x10000197, 8) , (const, 0x0, 8), (unique, 0x10000197, 8) MULTIEQUAL (unique, 0x10000282, 8) , (unique, 0x1000028a, 8)]
[ ---  CBRANCH (ram, 0x48cbf6, 1) , (unique, 0x1000016e, 1), (unique, 0x1000016e, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100002fa, 8), (unique, 0x100002fa, 8) INT_ADD (unique, 0x10000197, 8) , (const, 0x350, 8)]
[ ---  CBRANCH (ram, 0x48cbf6, 1) , (unique, 0x10000171, 1), (unique, 0x10000171, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000302, 8), (unique, 0x10000302, 8) INT_ADD (unique, 0x10000197, 8) , (const, 0x358, 8)]
[ ---  CBRANCH (ram, 0x48cc10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x1000030a, 8), (unique, 0x1000030a, 8) INT_ADD (unique, 0x10000197, 8) , (const, 0x31d, 8)]
[(ram, 0x4c6128, 8) INDIRECT (unique, 0x1000018f, 8) , (const, 0x290, 4)]
[(ram, 0x4c6180, 8) INDIRECT (unique, 0x1000019f, 8) , (const, 0x290, 4)]
[(ram, 0x4c87c8, 8) INDIRECT (unique, 0x100001a7, 8) , (const, 0x290, 4)]
[ ---  CBRANCH (ram, 0x48cc10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x48fb40, 8) , (unique, 0x10000197, 8) , (register, 0x38, 8)]
[(ram, 0x4c87c8, 8) MULTIEQUAL (unique, 0x100001a7, 8) , (ram, 0x4c87c8, 8)]
[(ram, 0x4c6180, 8) MULTIEQUAL (unique, 0x1000019f, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (unique, 0x1000018f, 8) , (ram, 0x4c6128, 8)]
[ ---  CBRANCH (ram, 0x48cc23, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000312, 8), (unique, 0x10000312, 8) INT_ADD (unique, 0x10000197, 8) , (const, 0x30, 8)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8)]
[(ram, 0x4c87c8, 8) COPY (ram, 0x4c87c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x10000197, 8)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100001b8, 8) , (unique, 0x100001b0, 8) , (const, 0xd3, 4) , (unique, 0x100001c0, 8), (unique, 0x100001c0, 8) COPY (const, 0x4b54e0, 8), (unique, 0x100001b8, 8) COPY (const, 0x4b51b7, 8), (unique, 0x100001b0, 8) COPY (const, 0x4b5192, 8)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) INDIRECT (ram, 0x4c6128, 8) , (const, 0x2eb, 4)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) INDIRECT (ram, 0x4c6180, 8) , (const, 0x2eb, 4)]
[(ram, 0x4c87c8, 8) COPY (ram, 0x4c87c8, 8), (ram, 0x4c87c8, 8) INDIRECT (ram, 0x4c87c8, 8) , (const, 0x2eb, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c87c8, 8) MULTIEQUAL (unique, 0x100001a7, 8) , (unique, 0x100001a7, 8) , (ram, 0x4c87c8, 8)]
[(ram, 0x4c6180, 8) MULTIEQUAL (unique, 0x1000019f, 8) , (unique, 0x1000019f, 8) , (ram, 0x4c6180, 8)]
[(ram, 0x4c6128, 8) MULTIEQUAL (unique, 0x1000018f, 8) , (unique, 0x1000018f, 8) , (ram, 0x4c6128, 8)]
[(unique, 0x10000282, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000031a, 8), (unique, 0x1000031a, 8) INT_ADD (unique, 0x10000197, 8) , (const, 0x18, 8)]
[(ram, 0x4c6128, 8) COPY (ram, 0x4c6128, 8), (ram, 0x4c6128, 8) MULTIEQUAL (ram, 0x4c6128, 8) , (unique, 0x1000018f, 8)]
[(ram, 0x4c6180, 8) COPY (ram, 0x4c6180, 8), (ram, 0x4c6180, 8) MULTIEQUAL (ram, 0x4c6180, 8) , (unique, 0x1000019f, 8)]
[(ram, 0x4c87c8, 8) COPY (ram, 0x4c87c8, 8), (ram, 0x4c87c8, 8) MULTIEQUAL (ram, 0x4c87c8, 8) , (unique, 0x100001a7, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
