[ ---  CBRANCH (ram, 0x212480, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x212470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e10, 8) COPY (ram, 0x4c2e10, 8)]
[(ram, 0x4c2f38, 8) COPY (ram, 0x4c2f38, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(ram, 0x4c2e10, 8) INDIRECT (ram, 0x4c2e10, 8) , (const, 0xcc, 4)]
[(ram, 0x4c2f38, 8) INDIRECT (ram, 0x4c2f38, 8) , (const, 0xcc, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x30, 8) , (register, 0x10, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000b6, 8), (unique, 0x100000b6, 8) CAST (ram, 0x4c2f38, 8)]
[ ---  BRANCH (ram, 0x212460, 1)]
[ ---  CBRANCH (ram, 0x212470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000044, 4) , (const, 0x0, 4), (unique, 0x10000044, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000c6, 8), (unique, 0x100000c6, 8) INT_ADD (unique, 0x100000be, 8) , (const, 0x1c, 8), (unique, 0x100000be, 8) CAST (register, 0x38, 8)]
[(ram, 0x4c2e10, 8) COPY (ram, 0x4c2e10, 8)]
[(ram, 0x4c2f38, 8) COPY (ram, 0x4c2f38, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x212470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e10, 8) COPY (ram, 0x4c2e10, 8)]
[(ram, 0x4c2f38, 8) COPY (ram, 0x4c2f38, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x80, 4)]
[(unique, 0x100000ae, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x21244d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000050, 4) , (const, 0x0, 4), (unique, 0x10000050, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x40, 4)]
[(unique, 0x100000b2, 4) COPY (register, 0x10, 4)]
[(ram, 0x4c2e10, 8) INDIRECT (ram, 0x4c2e10, 8) , (const, 0x59, 4)]
[(ram, 0x4c2f38, 8) INDIRECT (ram, 0x4c2f38, 8) , (const, 0x59, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x28, 4) , (unique, 0xbd80, 8), (register, 0x28, 4) MULTIEQUAL (unique, 0x100000ae, 4) , (unique, 0x100000b2, 4)]
[ ---  CBRANCH (ram, 0x212470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000d6, 8), (unique, 0x100000d6, 8) INT_ADD (unique, 0x100000ce, 8) , (const, 0x1c, 8), (unique, 0x100000ce, 8) CAST (register, 0x38, 8)]
[(ram, 0x4c2e10, 8) COPY (ram, 0x4c2e10, 8)]
[(ram, 0x4c2f38, 8) COPY (ram, 0x4c2f38, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(ram, 0x4c2f38, 8) MULTIEQUAL (ram, 0x4c2f38, 8) , (ram, 0x4c2f38, 8)]
[(ram, 0x4c2e10, 8) MULTIEQUAL (ram, 0x4c2e10, 8) , (ram, 0x4c2e10, 8)]
[ ---  CBRANCH (ram, 0x2124a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000064, 4) , (const, 0x0, 4), (unique, 0x10000064, 4) INT_AND (register, 0x28, 4) , (const, 0x100, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x10, 4)]
[ ---  CALL (ram, 0x13a020, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000de, 8), (unique, 0x100000de, 8) CAST (ram, 0x4c2e10, 8)]
[(ram, 0x4c2e10, 8) COPY (ram, 0x4c2e10, 8), (ram, 0x4c2e10, 8) INDIRECT (ram, 0x4c2e10, 8) , (const, 0xa3, 4)]
[(ram, 0x4c2f38, 8) COPY (ram, 0x4c2f38, 8), (ram, 0x4c2f38, 8) INDIRECT (ram, 0x4c2f38, 8) , (const, 0xa3, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x21249f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000009c, 4) , (const, 0x0, 4), (unique, 0x1000009c, 4) INT_AND (register, 0x28, 4) , (const, 0x200, 4)]
[ ---  CALL (ram, 0x13a020, 8) , (const, 0x0, 4)]
[(ram, 0x4c2e10, 8) COPY (ram, 0x4c2e10, 8), (ram, 0x4c2e10, 8) INDIRECT (ram, 0x4c2e10, 8) , (const, 0x9a, 4)]
[(ram, 0x4c2f38, 8) COPY (ram, 0x4c2f38, 8), (ram, 0x4c2f38, 8) INDIRECT (ram, 0x4c2f38, 8) , (const, 0x9a, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c2e10, 8) COPY (ram, 0x4c2e10, 8)]
[(ram, 0x4c2f38, 8) COPY (ram, 0x4c2f38, 8)]
[ ---  RETURN (const, 0x0, 8)]
