[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000034f, 8), (unique, 0x1000034f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x10000337, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x41c335, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x10, 8), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000347, 8), (unique, 0x10000347, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000033f, 8), (unique, 0x1000033f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41c370, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x100, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x0, 8) CALL (ram, 0x401160, 8) , (register, 0x30, 8) , (unique, 0xbd80, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2fd, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2f8, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x2fd, 4), (stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x2f8, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x2fd, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x2f8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2fd, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x2f8, 4)]
[ ---  CALL (ram, 0x41e890, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x41c224, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 8) , (register, 0xa8, 8), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000035f, 8), (unique, 0x1000035f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000357, 8), (unique, 0x10000357, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_SUB (register, 0x10, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000337, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41c470, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000367, 8), (unique, 0x10000367, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e5, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x2e5, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x2e5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2e5, 4)]
[ ---  CALL (ram, 0x41b380, 8)]
[ ---  BRANCH (ram, 0x41c24b, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x7f, 4), (stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000030f, 8) COPY (stack, 0xffffffffffffff58, 8), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x7f, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[ ---  CBRANCH (ram, 0x41c3c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000036f, 8), (unique, 0x1000036f, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x90, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[ ---  CBRANCH (ram, 0x41c3c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x8000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff40, 4) , (const, 0xf000, 4)]
[ ---  CBRANCH (ram, 0x41c3c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff58, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb6, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xb6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb6, 4)]
[ ---  CBRANCH (ram, 0x41c488, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x88, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_AND (unique, 0x3400, 8) , (register, 0x8, 8), (register, 0x88, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x8, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x8, 8) INT_2COMP (register, 0x0, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000387, 8), (unique, 0x10000387, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_NEGATE (unique, 0x1000037f, 8), (unique, 0x1000037f, 8) CAST (unique, 0xbd80, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x1000030f, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000377, 8), (unique, 0x10000377, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (register, 0x0, 4) CALL (ram, 0x456160, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2d2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2d2, 4)]
[ ---  CALL (ram, 0x4562a0, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (register, 0x88, 8), (register, 0x38, 8) CAST (unique, 0x10000397, 8), (unique, 0x10000397, 8) INT_ADD (unique, 0x1000038f, 8) , (register, 0x88, 8), (unique, 0x1000038f, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003af, 8) , (unique, 0x3400, 8), (unique, 0x100003af, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100003a7, 8) , (stack, 0xffffffffffffff58, 8), (unique, 0x100003a7, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000039f, 8), (unique, 0x1000039f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x2d2, 4)]
[ ---  BRANCH (ram, 0x41c2ce, 1)]
[ ---  CBRANCH (ram, 0x41c4a9, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (register, 0x88, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22c, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x22c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x22c, 4)]
[ ---  CBRANCH (ram, 0x41c3c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x458a60, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8) , (register, 0x88, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x256, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x256, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x4562a0, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100003c7, 8), (unique, 0x100003c7, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003bf, 8), (unique, 0x100003bf, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003b7, 8), (unique, 0x100003b7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6fe0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003cf, 8) , (const, 0x0, 8), (unique, 0x100003cf, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x100003d7, 8), (unique, 0x100003d7, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41c402, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x100003df, 4), (unique, 0x100003df, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6da0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x100003e3, 8), (unique, 0x100003e3, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003eb, 8) , (register, 0x0, 8), (unique, 0x100003eb, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x100001d7, 8), (unique, 0x100001d7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6da0, 8), (unique, 0x3200, 8) CAST (unique, 0x100003fb, 8), (unique, 0x100003fb, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xe0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003f3, 8), (unique, 0x100003f3, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41c4f0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000403, 8), (unique, 0x10000403, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b9, 4)]
[ ---  CALL (ram, 0x41b380, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x41c431, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x29e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x29e, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0xa0, 8) , (register, 0x30, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0xa8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000040b, 8), (unique, 0x1000040b, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8)]
[ ---  BRANCH (ram, 0x41c340, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000413, 8) , (register, 0x0, 8), (unique, 0x10000413, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000423, 8) , (unique, 0x3400, 8), (unique, 0x10000423, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x1000041b, 8) , (stack, 0xffffffffffffff58, 8), (unique, 0x1000041b, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x41c2ce, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000433, 8) , (unique, 0x3400, 8), (unique, 0x10000433, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x1000042b, 8) , (unique, 0x1000030f, 8), (unique, 0x1000042b, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000327, 8) COPY (unique, 0x1000030f, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000044b, 8) , (register, 0x38, 8), (unique, 0x1000044b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000045b, 8) , (register, 0x8, 8), (unique, 0x1000045b, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000453, 8), (unique, 0x10000453, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000443, 8), (unique, 0x10000443, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000043b, 8), (unique, 0x1000043b, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41c450, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (register, 0x80, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000453, 8), (unique, 0x10000453, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000443, 8), (unique, 0x10000443, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000043b, 8), (unique, 0x1000043b, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000327, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x10, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000463, 8) , (register, 0x10, 8), (unique, 0x10000463, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000046b, 8) , (register, 0x10, 8), (unique, 0x1000046b, 8) CAST (unique, 0x100001cb, 8), (unique, 0x100001cb, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x41c33a, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000047b, 8) , (register, 0x10, 8), (unique, 0x1000047b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000483, 8) , (register, 0x38, 8), (unique, 0x10000483, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ADD (unique, 0x10000473, 8) , (register, 0x8, 8), (unique, 0x10000473, 8) CAST (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x151, 4)]
[ ---  CBRANCH (ram, 0x41c4db, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000493, 8), (unique, 0x10000493, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000048b, 8), (unique, 0x1000048b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x4555d0, 8) , (unique, 0xbc80, 4) , (register, 0x80, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000049b, 8) , (register, 0x0, 8), (unique, 0x1000049b, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x41c321, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x20, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x41c3a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0xa8, 8), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004ab, 8), (unique, 0x100004ab, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004a3, 8), (unique, 0x100004a3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x10, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000337, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x41c3a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xb0, 8) , (unique, 0xbd80, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0x0, 8)]
[(unique, 0x10000317, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x41c3ad, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa8, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0x1000031f, 8) COPY (register, 0xa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x200, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x200, 4)]
[(register, 0x0, 8) CALL (ram, 0x401160, 8) , (register, 0xa0, 8) , (register, 0xb0, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000317, 8) , (unique, 0x1000031f, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004b3, 8) , (register, 0x18, 8), (unique, 0x100004b3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0xb0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000317, 8) , (unique, 0x1000031f, 8)]
[ ---  BRANCH (ram, 0x41c33a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) INT_SUB (register, 0xa0, 8) , (register, 0x30, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x0, 8) , (register, 0xa0, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41c504, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004bb, 8), (unique, 0x100004bb, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e1, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
