[ ---  CBRANCH (ram, 0x41006c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4fd8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4102be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e8, 4)]
[(ram, 0x4c4fd8, 8) INDIRECT (ram, 0x4c4fd8, 8) , (const, 0x2e8, 4)]
[(ram, 0x4c77f4, 1) INDIRECT (ram, 0x4c77f4, 1) , (const, 0x2e8, 4)]
[(ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x2e8, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2e8, 4)]
[ ---  CALL (ram, 0x0, 8)]
[ ---  BRANCH (ram, 0x41006c, 1)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 4) MULTIEQUAL (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4)]
[(ram, 0x4c77f4, 1) MULTIEQUAL (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1)]
[(ram, 0x4c4fd8, 8) MULTIEQUAL (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8)]
[ ---  CBRANCH (ram, 0x41026a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ab, 8), (unique, 0x100001ab, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8750, 4) , (const, 0x0, 4)]
[(ram, 0x4c8750, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e4, 4)]
[(ram, 0x4c4fd8, 8) INDIRECT (ram, 0x4c4fd8, 8) , (const, 0x2e4, 4)]
[(ram, 0x4c77f4, 1) INDIRECT (ram, 0x4c77f4, 1) , (const, 0x2e4, 4)]
[(ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x2e4, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2e4, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[ ---  BRANCH (ram, 0x41008c, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8750, 4) , (const, 0x0, 4)]
[(ram, 0x4c8750, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c77f4, 1) MULTIEQUAL (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1)]
[(ram, 0x4c4fd8, 8) MULTIEQUAL (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000197, 4) COPY (ram, 0x4c8750, 4), (ram, 0x4c8750, 4) MULTIEQUAL (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4)]
[ ---  CBRANCH (ram, 0x4100cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100001b3, 8), (unique, 0x100001b3, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(ram, 0x4c77f4, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x4102c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001bb, 8), (unique, 0x100001bb, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c8750, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x41022d, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x10000197, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x41022d, 1)]
[(ram, 0x4c8750, 4) INT_ADD (ram, 0x4c8750, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c8750, 4) MULTIEQUAL (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4)]
[ ---  CBRANCH (ram, 0x410263, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x0, 1)]
[(register, 0x18, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7208, 8)]
[(ram, 0x4c4fd8, 8) INDIRECT (ram, 0x4c4fd8, 8) , (const, 0xda, 4), (ram, 0x4c4fd8, 8) MULTIEQUAL (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8)]
[(ram, 0x4c77f4, 1) INDIRECT (ram, 0x4c77f4, 1) , (const, 0xda, 4), (ram, 0x4c77f4, 1) MULTIEQUAL (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1)]
[(ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0xda, 4), (ram, 0x4c8750, 4) MULTIEQUAL (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xda, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[ ---  CALLIND (unique, 0x100001c3, 8), (unique, 0x100001c3, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x410258, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (unique, 0x100001d3, 8), (unique, 0x100001d3, 8) CAST (unique, 0x10000167, 8), (unique, 0x10000167, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7210, 8), (register, 0x18, 8) PTRADD (unique, 0x100001cb, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x100001cb, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CALL (ram, 0x454cb0, 8) , (register, 0x38, 4)]
[(ram, 0x4c4fd8, 8) COPY (ram, 0x4c4fd8, 8), (ram, 0x4c4fd8, 8) INDIRECT (ram, 0x4c4fd8, 8) , (const, 0xf3, 4), (ram, 0x4c4fd8, 8) MULTIEQUAL (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8)]
[(ram, 0x4c77f4, 1) COPY (ram, 0x4c77f4, 1), (ram, 0x4c77f4, 1) INDIRECT (ram, 0x4c77f4, 1) , (const, 0xf3, 4), (ram, 0x4c77f4, 1) MULTIEQUAL (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1)]
[(ram, 0x4c8750, 4) COPY (ram, 0x4c8750, 4), (ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0xf3, 4), (ram, 0x4c8750, 4) MULTIEQUAL (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8), (ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xf3, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c8750, 4) MULTIEQUAL (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4)]
[(ram, 0x4c77f4, 1) MULTIEQUAL (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1)]
[(ram, 0x4c4fd8, 8) MULTIEQUAL (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001a3, 8) COPY (ram, 0x4c8758, 8), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[ ---  CBRANCH (ram, 0x4101e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c4fd8, 8) INDIRECT (ram, 0x4c4fd8, 8) , (const, 0x283, 4)]
[(ram, 0x4c77f4, 1) INDIRECT (ram, 0x4c77f4, 1) , (const, 0x283, 4)]
[(ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x283, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x283, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4101f3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x291, 4)]
[(ram, 0x4c4fd8, 8) INDIRECT (ram, 0x4c4fd8, 8) , (const, 0x291, 4)]
[(ram, 0x4c77f4, 1) INDIRECT (ram, 0x4c77f4, 1) , (const, 0x291, 4)]
[(ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x291, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x291, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c77f4, 1) MULTIEQUAL (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1)]
[(ram, 0x4c4fd8, 8) MULTIEQUAL (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8)]
[(unique, 0x1000019f, 4) COPY (ram, 0x4c8750, 4), (ram, 0x4c8750, 4) MULTIEQUAL (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4)]
[ ---  CBRANCH (ram, 0x41028c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001db, 8), (unique, 0x100001db, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c8750, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x410070, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x1000019f, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x410070, 1)]
[(ram, 0x4c8750, 4) INT_ADD (ram, 0x4c8750, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x410070, 1)]
[(ram, 0x4c4fd8, 8) INDIRECT (ram, 0x4c4fd8, 8) , (const, 0x133, 4)]
[(ram, 0x4c77f4, 1) INDIRECT (ram, 0x4c77f4, 1) , (const, 0x133, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x133, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001eb, 8), (unique, 0x100001eb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x100001e3, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x100001e3, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000019b, 4) COPY (ram, 0x4c8750, 4), (ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x133, 4)]
[ ---  CBRANCH (ram, 0x4101a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001f3, 8), (unique, 0x100001f3, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c8750, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x410102, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x1000019b, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x410102, 1)]
[(ram, 0x4c8750, 4) INT_ADD (ram, 0x4c8750, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c8750, 4) MULTIEQUAL (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4)]
[ ---  CBRANCH (ram, 0x410148, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x3, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000203, 8), (unique, 0x10000203, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x100001fb, 8), (unique, 0x100001fb, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000017f, 8) , (const, 0x8, 8), (unique, 0x1000017f, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25c, 4)]
[(ram, 0x4c4fd8, 8) INDIRECT (ram, 0x4c4fd8, 8) , (const, 0x25c, 4)]
[(ram, 0x4c77f4, 1) INDIRECT (ram, 0x4c77f4, 1) , (const, 0x25c, 4)]
[(ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x25c, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x25c, 4)]
[ ---  CALLIND (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000021b, 8), (unique, 0x1000021b, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000213, 8), (unique, 0x10000213, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0xbd80, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x11, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000020b, 8), (unique, 0x1000020b, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  BRANCH (ram, 0x4100aa, 1)]
[ ---  CBRANCH (ram, 0x4100a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x410160, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x236, 4)]
[(ram, 0x4c4fd8, 8) INDIRECT (ram, 0x4c4fd8, 8) , (const, 0x236, 4)]
[(ram, 0x4c77f4, 1) INDIRECT (ram, 0x4c77f4, 1) , (const, 0x236, 4)]
[(ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x236, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x236, 4)]
[ ---  CALLIND (register, 0x10, 8) , (register, 0x38, 4) , (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x1000023b, 8), (unique, 0x1000023b, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000233, 8), (unique, 0x10000233, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x10, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0xbd80, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x11, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000022b, 8), (unique, 0x1000022b, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000223, 8), (unique, 0x10000223, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  BRANCH (ram, 0x4100aa, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000253, 8), (unique, 0x10000253, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1bf, 4)]
[(ram, 0x4c4fd8, 8) INDIRECT (ram, 0x4c4fd8, 8) , (const, 0x1bf, 4), (ram, 0x4c4fd8, 8) INDIRECT (ram, 0x4c4fd8, 8) , (const, 0x19b, 4)]
[(ram, 0x4c77f4, 1) INDIRECT (ram, 0x4c77f4, 1) , (const, 0x1bf, 4), (ram, 0x4c77f4, 1) INDIRECT (ram, 0x4c77f4, 1) , (const, 0x19b, 4)]
[(ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x1bf, 4), (ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x19b, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1bf, 4), (ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x19b, 4)]
[ ---  CALLIND (register, 0x10, 8) , (unique, 0xbd80, 8) , (register, 0x38, 4) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000263, 8), (unique, 0x10000263, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x10, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0xbd80, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x11, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000024b, 8), (unique, 0x1000024b, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000243, 8), (unique, 0x10000243, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  BRANCH (ram, 0x4100aa, 1)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 4) MULTIEQUAL (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4)]
[(ram, 0x4c77f4, 1) MULTIEQUAL (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1)]
[(ram, 0x4c4fd8, 8) MULTIEQUAL (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8)]
[ ---  CBRANCH (ram, 0x410180, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8750, 4) , (const, 0x0, 4)]
[(ram, 0x4c8750, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x201, 4)]
[(ram, 0x4c4fd8, 8) INDIRECT (ram, 0x4c4fd8, 8) , (const, 0x201, 4)]
[(ram, 0x4c77f4, 1) INDIRECT (ram, 0x4c77f4, 1) , (const, 0x201, 4)]
[(ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x201, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x201, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[ ---  BRANCH (ram, 0x4100c6, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8750, 4) , (const, 0x0, 4)]
[(ram, 0x4c8750, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c8750, 4) MULTIEQUAL (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4)]
[(ram, 0x4c77f4, 1) MULTIEQUAL (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1) , (ram, 0x4c77f4, 1)]
[(ram, 0x4c4fd8, 8) MULTIEQUAL (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8) , (ram, 0x4c4fd8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x41008c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8758, 8) , (unique, 0x100001a3, 8), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
