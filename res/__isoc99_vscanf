[(unique, 0x100000fc, 8) COPY (unique, 0x1000012c, 8), (unique, 0x1000012c, 8) CAST (ram, 0x4c2fb0, 8)]
[(unique, 0x1000011c, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000134, 8), (unique, 0x10000134, 8) CAST (ram, 0x4c2fb0, 8)]
[ ---  CBRANCH (ram, 0x16b6d2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000008c, 8), (unique, 0x1000008c, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000134, 8), (unique, 0x10000134, 8) CAST (ram, 0x4c2fb0, 8)]
[ ---  CBRANCH (ram, 0x16b740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000014c, 8), (unique, 0x1000014c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000144, 8), (unique, 0x10000144, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000013c, 8), (unique, 0x1000013c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x88, 8)]
[ ---  CBRANCH (ram, 0x16b6a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2fb0, 8) INDIRECT (ram, 0x4c2fb0, 8) , (const, 0x143, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x143, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2fb0, 8) INDIRECT (ram, 0x4c2fb0, 8) , (const, 0x57, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x57, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x16b6bf, 1)]
[(register, 0x88, 8) INDIRECT (unique, 0x100000fc, 8) , (const, 0x126, 4)]
[(register, 0x90, 8) INDIRECT (register, 0x38, 8) , (const, 0x126, 4)]
[(ram, 0x4c2fb0, 8) INDIRECT (ram, 0x4c2fb0, 8) , (const, 0x126, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x126, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000104, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x126, 4)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x90, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x10000104, 8) , (register, 0x30, 8)]
[(ram, 0x4c2fb0, 8) INDIRECT (ram, 0x4c2fb0, 8) , (const, 0x62, 4), (ram, 0x4c2fb0, 8) MULTIEQUAL (ram, 0x4c2fb0, 8) , (ram, 0x4c2fb0, 8) , (ram, 0x4c2fb0, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x62, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000015c, 8) , (unique, 0xbd80, 8), (unique, 0x1000015c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000154, 8), (unique, 0x10000154, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x88, 8)]
[(unique, 0x1000010c, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100000fc, 8) , (register, 0x88, 8) , (unique, 0x100000fc, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x38, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000010c, 8) , (unique, 0x1000011c, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x30, 8)]
[(ram, 0x4c2fb0, 8) INDIRECT (ram, 0x4c2fb0, 8) , (const, 0x6a, 4), (ram, 0x4c2fb0, 8) MULTIEQUAL (ram, 0x4c2fb0, 8) , (ram, 0x4c2fb0, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x6a, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x10, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x74, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000011c, 8) , (register, 0x38, 8)]
[(ram, 0x4c2fb0, 8) INDIRECT (ram, 0x4c2fb0, 8) , (const, 0x96, 4), (ram, 0x4c2fb0, 8) INDIRECT (ram, 0x4c2fb0, 8) , (const, 0x90, 4), (ram, 0x4c2fb0, 8) INDIRECT (ram, 0x4c2fb0, 8) , (const, 0x79, 4), (ram, 0x4c2fb0, 8) MULTIEQUAL (ram, 0x4c2fb0, 8) , (ram, 0x4c2fb0, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x96, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x90, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x79, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffffeb, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x74, 8)]
[(register, 0x30, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x15b830, 8) , (register, 0x38, 8) , (register, 0x90, 8) , (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000011c, 8) , (register, 0x38, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x16b72d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000cc, 8), (unique, 0x100000cc, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(ram, 0x4c2fb0, 8) INDIRECT (ram, 0x4c2fb0, 8) , (const, 0xb8, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xb8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000164, 8), (unique, 0x10000164, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x88, 8)]
[ ---  CBRANCH (ram, 0x16b72d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000164, 8), (unique, 0x10000164, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x88, 8)]
[(ram, 0x4c2fb0, 8) INDIRECT (ram, 0x4c2fb0, 8) , (const, 0xc6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000016c, 8) , (const, 0x0, 8), (unique, 0x1000016c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x16b713, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc6, 4)]
[(ram, 0x4c2fb0, 8) INDIRECT (ram, 0x4c2fb0, 8) , (const, 0x10f, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x10f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c2fb0, 8) INDIRECT (ram, 0x4c2fb0, 8) , (const, 0xd6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xd6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100000ed, 8) MULTIEQUAL (ram, 0x4c2fb0, 8) , (ram, 0x4c2fb0, 8)]
[(unique, 0x100000f5, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x16b72d, 1) , (unique, 0x100000ec, 1), (unique, 0x100000ec, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x101, 4)]
[(ram, 0x4c2fb0, 8) INDIRECT (unique, 0x100000ed, 8) , (const, 0x101, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x100000f5, 4) , (const, 0x101, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2fb0, 8) COPY (ram, 0x4c2fb0, 8), (ram, 0x4c2fb0, 8) MULTIEQUAL (ram, 0x4c2fb0, 8) , (ram, 0x4c2fb0, 8) , (ram, 0x4c2fb0, 8) , (unique, 0x100000ed, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (unique, 0x100000f5, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x30, 8) , (const, 0xffffffff, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
