[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000135, 8), (unique, 0x10000135, 8) CALL (ram, 0x1fa4a0, 8)]
[ ---  CBRANCH (ram, 0x1fa6a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1fa83b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) INT_OR (register, 0x8, 8) , (const, 0x800000, 8)]
[(unique, 0x10000125, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1fa783, 1)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x10000125, 8) , (unique, 0x1000012d, 8)]
[ ---  CBRANCH (ram, 0x1fa81c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xa, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000013d, 8), (unique, 0x1000013d, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000145, 8), (unique, 0x10000145, 8) INT_ADD (register, 0x38, 8) , (const, 0x38, 8), (register, 0x0, 4) CALL (ram, 0x1f15f0, 8) , (register, 0x10, 8) , (register, 0x38, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa6b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x2, 1), (register, 0x10, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xf7, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000014d, 8), (unique, 0x1000014d, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1fa6c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x9, 1)]
[ ---  CBRANCH (ram, 0x1fa7b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa706, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0xf, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000155, 8), (unique, 0x10000155, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000015d, 8), (unique, 0x1000015d, 8) CALL (ram, 0x1fa4a0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 4) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1fa6f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1fa82e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa83b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x1f2ec0, 8) , (register, 0xb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa7c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xf, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000165, 8), (unique, 0x10000165, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000016d, 8), (unique, 0x1000016d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x70, 8)]
[(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x1, 4), (register, 0x80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) INT_MULT (register, 0x10, 8) , (const, 0x40, 8), (register, 0x10, 8) INT_SEXT (register, 0x80, 4), (register, 0x80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8), (register, 0x38, 8) INT_MULT (register, 0x10, 8) , (const, 0x40, 8), (register, 0x10, 8) INT_SEXT (register, 0x80, 4), (register, 0x80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa811, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000175, 8), (unique, 0x10000175, 8) CALL (ram, 0x1212c0, 8) , (const, 0x3c8, 8)]
[(register, 0x80, 4) COPY (const, 0x1, 4)]
[(register, 0x38, 8) COPY (const, 0x30, 8)]
[(register, 0x8, 8) COPY (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x70, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) CAST (unique, 0x10000185, 8), (unique, 0x10000185, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x70, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1fa721, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (register, 0x80, 4), (unique, 0x3c80, 8) CAST (unique, 0x1000018d, 8), (unique, 0x1000018d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x8, 8) CAST (unique, 0x1000019d, 8), (unique, 0x1000019d, 8) INT_ADD (register, 0x8, 8) , (unique, 0x10000195, 8), (unique, 0x10000195, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000d0, 8) , (const, 0x8, 8), (unique, 0x100000d0, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000d0, 8) , (const, 0x8, 8), (unique, 0x100000d0, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000d0, 8) , (const, 0x8, 8), (unique, 0x100000d0, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0xa, 1), (unique, 0x3a00, 8) CAST (unique, 0x100001ad, 8), (unique, 0x100001ad, 8) INT_ADD (unique, 0x100001a5, 8) , (unique, 0x100000f8, 8), (unique, 0x100001a5, 8) CAST (register, 0x0, 8), (unique, 0x100000f8, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xba80, 1), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xf3, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001bd, 8), (unique, 0x100001bd, 8) INT_ADD (unique, 0x100001b5, 8) , (const, 0x3a, 8), (unique, 0x100001b5, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000d0, 8) , (const, 0x8, 8), (unique, 0x100000d0, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000d0, 8) , (const, 0x8, 8), (unique, 0x100000d0, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000d0, 8) , (const, 0x8, 8), (unique, 0x100000d0, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c5, 8) , (const, 0xffffffff, 4), (unique, 0x100001c5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000d0, 8) , (const, 0x8, 8), (unique, 0x100000d0, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1fa76b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb8, 8) , (unique, 0x100001cd, 8), (unique, 0x100001cd, 8) CAST (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1fa808, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x8, 8)]
[(unique, 0x1000012d, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1fa780, 1) , (unique, 0x100000ca, 1), (unique, 0x100000ca, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0xc, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
