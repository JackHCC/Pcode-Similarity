[(unique, 0x10000244, 4) COPY (ram, 0x4f08e8, 4)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18f9f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffa0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff98, 8) PTRSUB (const, 0x0, 8) , (const, 0x18d510, 8)]
[ ---  BRANCH (ram, 0x18f7a0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x65, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x65, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x65, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x65, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x65, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x65, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x65, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x65, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x65, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x65, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x65, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x65, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x65, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (unique, 0x10000188, 8) , (const, 0x0, 8), (unique, 0x10000188, 8) PTRSUB (const, 0x0, 8) , (const, 0x18d510, 8), (register, 0x0, 8) CAST (unique, 0x100002d0, 8), (unique, 0x100002d0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08a8, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08a8, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0x10000290, 8) COPY (ram, 0x4ed8a8, 8), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[ ---  CBRANCH (ram, 0x18f7f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed8a8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[ ---  CBRANCH (ram, 0x18f7ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed8a0, 4) , (const, 0x0, 4)]
[(ram, 0x4ed8a0, 4) COPY (const, 0x1, 4)]
[(unique, 0x100002a8, 8) COPY (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed8a0, 4) , (const, 0x0, 4)]
[(ram, 0x4ed8a0, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000298, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x18f7f1, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2cd, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2cd, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x2cd, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2cd, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x2cd, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2cd, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2cd, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2cd, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2cd, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2cd, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2cd, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2cd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2cd, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000198, 8), (unique, 0x10000198, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed8a0, 8)]
[(unique, 0x100002a0, 8) COPY (unique, 0x10000288, 8), (unique, 0x10000288, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x2cd, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (unique, 0x10000290, 8) , (unique, 0x10000298, 8) , (unique, 0x100002a0, 8) , (unique, 0x100002a8, 8)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) INT_ADD (ram, 0x4ed8a4, 4) , (const, 0x1, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[ ---  CBRANCH (ram, 0x18f94e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ec660, 8) , (const, 0x0, 8), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002e0, 8), (unique, 0x100002e0, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8)]
[(unique, 0x10000248, 8) COPY (unique, 0x100002e8, 8), (unique, 0x100002e8, 8) CAST (ram, 0x4ec660, 8)]
[ ---  BRANCH (ram, 0x18f8f6, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100002b0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000248, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18f840, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000248, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18f889, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f0, 8), (unique, 0x100002f0, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f863, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2bf, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x100002b0, 8) , (const, 0x2bf, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2bf, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x2bf, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2bf, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2bf, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2bf, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2bf, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2bf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x264, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x100002b0, 8) , (const, 0x264, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x264, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x264, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x264, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x264, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x264, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x264, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x264, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x18f87e, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a2, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2a2, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x100002b0, 8) , (const, 0x2a2, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2a2, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x2a2, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2a2, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2a2, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2a2, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2a2, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2a2, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2a2, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2a2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a2, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x26d, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x26d, 4), (ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x26d, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x26d, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x26d, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x26d, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x26d, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x26d, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x26d, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000308, 8) , (unique, 0xbd80, 8), (unique, 0x10000308, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000300, 8), (unique, 0x10000300, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x278, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x278, 4), (ram, 0x4ed890, 8) MULTIEQUAL (unique, 0x100002b0, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x278, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x278, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x278, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x278, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x278, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x278, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x278, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18f91a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x200, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x208, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x18f8e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x200, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x208, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (unique, 0x100002b0, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x18f9e0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000310, 8), (unique, 0x10000310, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x232, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x232, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x232, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x232, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x232, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x232, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x232, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x232, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x232, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x232, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x232, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x232, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x232, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18f930, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x107, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x107, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x107, 4), (ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x107, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x107, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x107, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x107, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x107, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x107, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x107, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x107, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x107, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x107, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x18, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000318, 8), (unique, 0x10000318, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  BRANCH (ram, 0x18f89b, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x18f8e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x11f, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x11f, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x11f, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x11f, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x11f, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x11f, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x11f, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x11f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x11f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000320, 8), (unique, 0x10000320, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f8e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000320, 8), (unique, 0x10000320, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x12d, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x12d, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x12d, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x12d, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x12d, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x12d, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x12d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x12d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000328, 8) , (const, 0x0, 8), (unique, 0x10000328, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f8c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x12d, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x225, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x225, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x225, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x225, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x225, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x225, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x225, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x225, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x225, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x13d, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x13d, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x13d, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x13d, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x13d, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x13d, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x13d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x13d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x13d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x10000201, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0x10000209, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(unique, 0x10000211, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(unique, 0x10000215, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(unique, 0x10000219, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(unique, 0x10000221, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(unique, 0x10000229, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(unique, 0x10000231, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(unique, 0x10000235, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x18f8e2, 1) , (unique, 0x10000200, 1), (unique, 0x10000200, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x217, 4)]
[(ram, 0x4ec660, 8) INDIRECT (unique, 0x10000201, 8) , (const, 0x217, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x10000209, 8) , (const, 0x217, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (unique, 0x10000211, 4) , (const, 0x217, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (unique, 0x10000215, 4) , (const, 0x217, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (unique, 0x10000219, 8) , (const, 0x217, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (unique, 0x10000221, 8) , (const, 0x217, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (unique, 0x10000229, 8) , (const, 0x217, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (unique, 0x10000231, 4) , (const, 0x217, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000235, 4) , (const, 0x217, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x217, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x217, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x217, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (unique, 0x10000235, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (unique, 0x10000231, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (unique, 0x10000229, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (unique, 0x10000221, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (unique, 0x10000219, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (unique, 0x10000215, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (unique, 0x10000211, 4)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (unique, 0x10000201, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ed890, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18f948, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000330, 8), (unique, 0x10000330, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000278, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[ ---  CBRANCH (ram, 0x18f99c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18f97a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000280, 4) COPY (unique, 0x10000239, 4), (unique, 0x10000239, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x18f99c, 1) , (unique, 0x1000023d, 1), (unique, 0x1000023d, 1) INT_NOTEQUAL (unique, 0x10000239, 4) , (const, 0x0, 4), (unique, 0x10000239, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f8, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x1f8, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x1f8, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (register, 0x0, 4) , (const, 0x1f8, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x1f8, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1f8, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1f8, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1f8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1f8, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1f8, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1f8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f8, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000190, 8), (unique, 0x10000190, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed8a0, 8)]
[(unique, 0x1000027c, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x1f8, 4), (ram, 0x4ed8a0, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4ed8a4, 4) , (register, 0x0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ed8a0, 4) COPY (unique, 0x10000284, 4), (unique, 0x10000284, 4) MULTIEQUAL (unique, 0x10000278, 4) , (unique, 0x1000027c, 4) , (unique, 0x10000280, 4)]
[ ---  CBRANCH (ram, 0x18f9bc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000244, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1be, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x1be, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x1be, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x1be, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x1be, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x1be, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1be, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1be, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1be, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1be, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000340, 8), (unique, 0x10000340, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000338, 8), (unique, 0x10000338, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08b0, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08b0, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[ ---  CBRANCH (ram, 0x18fa09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000348, 8), (unique, 0x10000348, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1e9, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1e9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e9, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ec660, 8) COPY (ram, 0x4ec660, 8), (ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x1e9, 4)]
[(ram, 0x4ed890, 8) COPY (ram, 0x4ed890, 8), (ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x1e9, 4)]
[(ram, 0x4ed8a0, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x1e9, 4)]
[(ram, 0x4ed8a4, 4) COPY (ram, 0x4ed8a4, 4), (ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x1e9, 4)]
[(ram, 0x4ed8a8, 8) COPY (ram, 0x4ed8a8, 8), (ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x1e9, 4)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1e9, 4)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1e9, 4)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1e9, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1e9, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ec660, 8) COPY (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) COPY (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) COPY (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) COPY (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) COPY (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8)]
