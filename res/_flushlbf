[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000208, 8), (unique, 0x10000208, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x100001d0, 8) COPY (ram, 0x4c7c38, 8)]
[ ---  CBRANCH (ram, 0x4201f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7c38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000210, 8), (unique, 0x10000210, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x420418, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000218, 8), (unique, 0x10000218, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c30, 4) , (const, 0x0, 4)]
[(ram, 0x4c7c30, 4) COPY (const, 0x1, 4)]
[(unique, 0x100001e0, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x279, 4)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x279, 4)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x279, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x279, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x279, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x279, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000113, 8), (unique, 0x10000113, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7c30, 8)]
[(unique, 0x100001e8, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x4201ed, 1)]
[(unique, 0x100001f0, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c30, 4) , (const, 0x0, 4)]
[(ram, 0x4c7c30, 4) COPY (const, 0x1, 4)]
[(unique, 0x100001d8, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (unique, 0x100001d0, 8) , (unique, 0x100001d8, 8) , (unique, 0x100001e0, 8) , (unique, 0x100001e8, 8) , (unique, 0x100001f0, 8)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c20, 8) MULTIEQUAL (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3100, 4) INT_ADD (ram, 0x4c7c34, 4) , (const, 0x1, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[ ---  CBRANCH (ram, 0x420319, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5120, 8) , (const, 0x0, 8), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000220, 8), (unique, 0x10000220, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8)]
[(unique, 0x10000174, 8) COPY (unique, 0x10000228, 8), (unique, 0x10000228, 8) CAST (ram, 0x4c5120, 8)]
[(unique, 0x100001cc, 4) COPY (unique, 0x3100, 4)]
[ ---  BRANCH (ram, 0x4202b3, 1)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c34, 4) MULTIEQUAL (unique, 0x100001cc, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001f8, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000174, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x420228, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000174, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x420258, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000238, 8), (unique, 0x10000238, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000230, 8), (unique, 0x10000230, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x420398, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000240, 8), (unique, 0x10000240, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x254, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x254, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x254, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x254, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(unique, 0x1000019c, 8) COPY (ram, 0x4c7c20, 8), (ram, 0x4c7c20, 8) INDIRECT (unique, 0x100001f8, 8) , (const, 0x254, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x258, 4)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x258, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x258, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x258, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x258, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[(unique, 0x100001a4, 8) COPY (ram, 0x4c7c20, 8), (ram, 0x4c7c20, 8) INDIRECT (unique, 0x100001f8, 8) , (const, 0x258, 4)]
[ ---  BRANCH (ram, 0x42024d, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x20f, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x20f, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x20f, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x20f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(unique, 0x10000194, 8) COPY (ram, 0x4c7c20, 8), (ram, 0x4c7c20, 8) INDIRECT (unique, 0x100001f8, 8) , (const, 0x20f, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x215, 4), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x215, 4), (ram, 0x4c7c20, 8) MULTIEQUAL (unique, 0x10000194, 8) , (unique, 0x1000019c, 8) , (unique, 0x100001a4, 8) , (unique, 0x100001f8, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x215, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x215, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x215, 4), (ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000250, 8) , (unique, 0xbd80, 8), (unique, 0x10000250, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000248, 8), (unique, 0x10000248, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x220, 4), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x220, 4), (ram, 0x4c7c20, 8) MULTIEQUAL (unique, 0x100001f8, 8) , (ram, 0x4c7c20, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x220, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x220, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x220, 4), (ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4202d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x200, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x208, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x42029f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x200, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x208, 4)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c20, 8) MULTIEQUAL (unique, 0x100001f8, 8) , (ram, 0x4c7c20, 8)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x4203b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000258, 8), (unique, 0x10000258, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x1d9, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x1d9, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x1d9, 4)]
[ ---  CALL (ram, 0x41b380, 8)]
[ ---  BRANCH (ram, 0x4202ff, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd0, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0xd0, 4), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0xd0, 4), (ram, 0x4c7c20, 8) MULTIEQUAL (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xd0, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0xd0, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xd0, 4), (ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x18, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000260, 8), (unique, 0x10000260, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  BRANCH (ram, 0x42026a, 1)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x42029f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0xf1, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xf1, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0xf1, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xf1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000268, 8), (unique, 0x10000268, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x42029f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000268, 8), (unique, 0x10000268, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0xf6, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xf6, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0xf6, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xf6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000270, 8) , (const, 0x0, 8), (unique, 0x10000270, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4203c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000278, 8), (unique, 0x10000278, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x1b9, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x1b9, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x1b9, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x1b9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42029f, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x42029f, 1)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x10c, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x10c, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x10c, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x10c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7c20, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x420310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000280, 8), (unique, 0x10000280, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) INT_ADD (ram, 0x4c7c34, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c20, 8) MULTIEQUAL (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x420345, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (register, 0x0, 4)]
[(ram, 0x4c7c38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4203e4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000288, 8), (unique, 0x10000288, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(unique, 0x100001c4, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x420345, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (ram, 0x4c7c30, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x420345, 1)]
[(ram, 0x4c7c30, 4) INT_ADD (ram, 0x4c7c30, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (unique, 0x100001c4, 4) , (unique, 0x100001c4, 4)]
[ ---  CBRANCH (ram, 0x42043e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000290, 8), (unique, 0x10000290, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c5120, 8) COPY (ram, 0x4c5120, 8), (ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x193, 4)]
[(ram, 0x4c7c20, 8) COPY (ram, 0x4c7c20, 8), (ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x193, 4)]
[(ram, 0x4c7c30, 4) COPY (ram, 0x4c7c30, 4), (ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x193, 4)]
[(ram, 0x4c7c34, 4) COPY (ram, 0x4c7c34, 4), (ram, 0x4c7c34, 4) INDIRECT (register, 0x0, 4) , (const, 0x193, 4)]
[(ram, 0x4c7c38, 8) COPY (ram, 0x4c7c38, 8), (ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x193, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5120, 8) COPY (ram, 0x4c5120, 8)]
[(ram, 0x4c7c20, 8) COPY (ram, 0x4c7c20, 8)]
[(ram, 0x4c7c30, 4) COPY (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) COPY (register, 0x0, 4)]
[(ram, 0x4c7c38, 8) COPY (ram, 0x4c7c38, 8)]
[ ---  RETURN (const, 0x0, 8)]
