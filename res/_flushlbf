[(unique, 0x10000209, 4) COPY (ram, 0x4c8790, 4)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x17c660, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8790, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ba, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x2ba, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x2ba, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x2ba, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x2ba, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x2ba, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x2ba, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x2ba, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2ba, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x2ba, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2ba, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2ba, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ba, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (unique, 0x10000143, 8) , (const, 0x0, 8), (unique, 0x10000143, 8) PTRSUB (const, 0x0, 8) , (const, 0x17a860, 8), (register, 0x0, 8) CAST (unique, 0x100002d1, 8), (unique, 0x100002d1, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002c9, 8), (unique, 0x100002c9, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8750, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8750, 8) , (const, 0x11, 4)]
[ ---  BRANCH (ram, 0x17c42c, 1)]
[(stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) PTRSUB (const, 0x0, 8) , (const, 0x17a860, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(unique, 0x10000291, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[ ---  CBRANCH (ram, 0x17c484, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (ram, 0x4c5768, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002d9, 8), (unique, 0x100002d9, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[ ---  CBRANCH (ram, 0x17c45a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5760, 4) , (const, 0x0, 4)]
[(ram, 0x4c5760, 4) COPY (const, 0x1, 4)]
[(unique, 0x100002a9, 8) COPY (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5760, 4) , (const, 0x0, 4)]
[(ram, 0x4c5760, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000299, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x17c47d, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x272, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x272, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x272, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x272, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x272, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x272, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x272, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x272, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x272, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x272, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x272, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x272, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x272, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x10000153, 8), (unique, 0x10000153, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5760, 8)]
[(unique, 0x100002a1, 8) COPY (unique, 0x10000289, 8), (unique, 0x10000289, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x272, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (unique, 0x10000291, 8) , (unique, 0x10000299, 8) , (unique, 0x100002a1, 8) , (unique, 0x100002a9, 8)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) INT_ADD (ram, 0x4c5764, 4) , (const, 0x1, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[ ---  CBRANCH (ram, 0x17c5df, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4520, 8) , (const, 0x0, 8), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002e1, 8), (unique, 0x100002e1, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8)]
[(unique, 0x1000020d, 8) COPY (unique, 0x100002e9, 8), (unique, 0x100002e9, 8) CAST (ram, 0x4c4520, 8)]
[(unique, 0x1000021d, 4) COPY (ram, 0x4c5758, 4)]
[(unique, 0x10000225, 4) COPY (ram, 0x4c5758, 4)]
[ ---  BRANCH (ram, 0x17c58d, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 4) MULTIEQUAL (unique, 0x1000021d, 4) , (unique, 0x10000221, 4) , (register, 0xa0, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000225, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x100002b9, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000020d, 8) , (unique, 0x10000215, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x17c4c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000020d, 8) , (unique, 0x10000215, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x17c50b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f9, 8), (unique, 0x100002f9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f1, 8), (unique, 0x100002f1, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17c4e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x264, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x100002b9, 8) , (const, 0x264, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x264, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x264, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x264, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x264, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x264, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x264, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x264, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x264, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x209, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x100002b9, 8) , (const, 0x209, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x209, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x209, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x209, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x209, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x209, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x209, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x209, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x209, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x17c500, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x247, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x247, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x100002b9, 8) , (const, 0x247, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x247, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x247, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x247, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x247, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x247, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x247, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x247, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x247, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x247, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x247, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x212, 4), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x212, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x212, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x212, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x212, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x212, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x212, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x212, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x212, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x212, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000309, 8) , (unique, 0xbd80, 8), (unique, 0x10000309, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000301, 8), (unique, 0x10000301, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x21a, 4), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x21a, 4), (ram, 0x4c5750, 8) MULTIEQUAL (unique, 0x100002b9, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x21a, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x21a, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x21a, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x21a, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x21a, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x21a, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x21a, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x21a, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x17c5b2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x200, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x208, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0x10000229, 4) COPY (register, 0x0, 4)]
[(unique, 0x10000265, 4) COPY (ram, 0x4c5758, 4)]
[ ---  CBRANCH (ram, 0x17c56e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x200, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x208, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xad, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0xad, 4), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xad, 4), (ram, 0x4c5750, 8) MULTIEQUAL (unique, 0x100002b9, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0xad, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0xad, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0xad, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xad, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xad, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xad, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xad, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xad, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xad, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xad, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x18, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000319, 8), (unique, 0x10000319, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000311, 8), (unique, 0x10000311, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x17c521, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000022d, 4) COPY (ram, 0x4c5758, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(unique, 0x10000269, 4) COPY (ram, 0x4c5758, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[ ---  CBRANCH (ram, 0x17c568, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0xc5, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xc5, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0xc5, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0xc5, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xc5, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xc5, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xc5, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xc5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000321, 8), (unique, 0x10000321, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(unique, 0x10000231, 4) COPY (ram, 0x4c5758, 4), (ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0xc5, 4)]
[(unique, 0x1000026d, 4) COPY (ram, 0x4c5758, 4), (ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0xc5, 4)]
[ ---  CBRANCH (ram, 0x17c568, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000321, 8), (unique, 0x10000321, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0xd3, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xd3, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0xd3, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0xd3, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0xd3, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xd3, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xd3, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xd3, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xd3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000329, 8) , (const, 0x0, 8), (unique, 0x10000329, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17c54e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xd3, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x1cc, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x1cc, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1cc, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1cc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100002b1, 4) COPY (ram, 0x4c5758, 4), (ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x1cc, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0xe3, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xe3, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0xe3, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0xe3, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xe3, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xe3, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xe3, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xe3, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xe3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100002b5, 4) COPY (ram, 0x4c5758, 4), (ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0xe3, 4)]
[(unique, 0x100001bc, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(unique, 0x100001c4, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x100001d0, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(unique, 0x100001d4, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(unique, 0x100001d8, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(unique, 0x100001e0, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(unique, 0x100001e8, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(unique, 0x100001f0, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(unique, 0x100001f4, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(unique, 0x10000275, 4) COPY (unique, 0x100001cc, 4), (unique, 0x100001cc, 4) MULTIEQUAL (unique, 0x100002b1, 4) , (unique, 0x100002b5, 4)]
[ ---  CBRANCH (ram, 0x17c568, 1) , (unique, 0x100001bb, 1), (unique, 0x100001bb, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1be, 4)]
[(ram, 0x4c4520, 8) INDIRECT (unique, 0x100001bc, 8) , (const, 0x1be, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x100001c4, 8) , (const, 0x1be, 4)]
[(ram, 0x4c5760, 4) INDIRECT (unique, 0x100001d0, 4) , (const, 0x1be, 4)]
[(ram, 0x4c5764, 4) INDIRECT (unique, 0x100001d4, 4) , (const, 0x1be, 4)]
[(ram, 0x4c5768, 8) INDIRECT (unique, 0x100001d8, 8) , (const, 0x1be, 4)]
[(ram, 0x4c8750, 8) INDIRECT (unique, 0x100001e0, 8) , (const, 0x1be, 4)]
[(ram, 0x4c8758, 8) INDIRECT (unique, 0x100001e8, 8) , (const, 0x1be, 4)]
[(ram, 0x4c8790, 4) INDIRECT (unique, 0x100001f0, 4) , (const, 0x1be, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x100001f4, 4) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1be, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000235, 4) COPY (ram, 0x4c5758, 4), (ram, 0x4c5758, 4) INDIRECT (unique, 0x10000275, 4) , (const, 0x1be, 4)]
[(unique, 0x10000271, 4) COPY (ram, 0x4c5758, 4), (ram, 0x4c5758, 4) INDIRECT (unique, 0x10000275, 4) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (unique, 0x100001f4, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (unique, 0x100001f0, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (unique, 0x100001e8, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (unique, 0x100001e0, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (unique, 0x100001d8, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (unique, 0x100001d4, 4)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (unique, 0x100001d0, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (unique, 0x10000265, 4) , (unique, 0x10000269, 4) , (unique, 0x1000026d, 4) , (unique, 0x10000271, 4) , (unique, 0x10000275, 4)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (unique, 0x100001bc, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5750, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17c5d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x10000229, 4) , (unique, 0x1000022d, 4) , (unique, 0x10000231, 4) , (unique, 0x10000235, 4) , (unique, 0x100001cc, 4)]
[ ---  CBRANCH (ram, 0x17c58d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000331, 8), (unique, 0x10000331, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(unique, 0x10000215, 8) COPY (unique, 0x10000339, 8), (unique, 0x10000339, 8) CAST (ram, 0x4c4520, 8)]
[(unique, 0x10000221, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x17c5d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4520, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000279, 4) COPY (ram, 0x4c5760, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[ ---  CBRANCH (ram, 0x17c62d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17c60b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000281, 4) COPY (unique, 0x100001f8, 4), (unique, 0x100001f8, 4) INT_ADD (ram, 0x4c5760, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x17c62d, 1) , (unique, 0x100001fc, 1), (unique, 0x100001fc, 1) INT_NOTEQUAL (unique, 0x100001f8, 4) , (const, 0x0, 4), (unique, 0x100001f8, 4) INT_ADD (ram, 0x4c5760, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x191, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x191, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x191, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x191, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x0, 4) , (const, 0x191, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x191, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x191, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x191, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x191, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x191, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x191, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x191, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x1000014b, 8), (unique, 0x1000014b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5760, 8)]
[(unique, 0x1000027d, 4) COPY (ram, 0x4c5760, 4), (ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x191, 4), (ram, 0x4c5760, 4) INT_ADD (ram, 0x4c5760, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4c5764, 4) , (register, 0x0, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5760, 4) COPY (unique, 0x10000285, 4), (unique, 0x10000285, 4) MULTIEQUAL (unique, 0x10000279, 4) , (unique, 0x1000027d, 4) , (unique, 0x10000281, 4)]
[ ---  CBRANCH (ram, 0x17c64c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000209, 4) , (const, 0x0, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x170, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x170, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x170, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x170, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x170, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x170, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x170, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x170, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x170, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x170, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x170, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x170, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000349, 8), (unique, 0x10000349, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000341, 8), (unique, 0x10000341, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8758, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8758, 8) , (const, 0x11, 4)]
[(ram, 0x4c4520, 8) COPY (ram, 0x4c4520, 8), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) COPY (ram, 0x4c5758, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) COPY (ram, 0x4c5760, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) COPY (ram, 0x4c5764, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) COPY (ram, 0x4c8750, 8), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8)]
