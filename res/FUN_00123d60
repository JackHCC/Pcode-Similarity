[ ---  CBRANCH (ram, 0x123d8a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f04e0, 4) , (const, 0x0, 4)]
[(ram, 0x4f04e0, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f04e0, 4) , (const, 0x0, 4)]
[(ram, 0x4f04e0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x123dad, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12c, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x12c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x12c, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000115, 8), (unique, 0x10000115, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f04e0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x1000016a, 8), (unique, 0x1000016a, 8) PTRADD (unique, 0x1000011d, 8) , (unique, 0x10000125, 8) , (const, 0x1, 8), (unique, 0x10000125, 8) INT_ADD (unique, 0x3900, 8) , (register, 0x38, 8), (unique, 0x3900, 8) INT_MULT (register, 0x30, 8) , (const, 0x68, 8), (unique, 0x1000011d, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffff98, 8)]
[(unique, 0x10000156, 8) COPY (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x123e01, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x123e20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000156, 8) , (register, 0x28, 8)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0xd3, 4)]
[ ---  CALL (ram, 0x12cad0, 8) , (register, 0x38, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x123e3f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd3, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000162, 4) COPY (unique, 0x1000014d, 4), (unique, 0x1000014d, 4) INT_ADD (ram, 0x4f04e0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x123e61, 1) , (unique, 0x10000151, 1), (unique, 0x10000151, 1) INT_NOTEQUAL (unique, 0x1000014d, 4) , (const, 0x0, 4), (unique, 0x1000014d, 4) INT_ADD (ram, 0x4f04e0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x10d, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x1000010d, 8), (unique, 0x1000010d, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f04e0, 8)]
[(unique, 0x1000015e, 4) COPY (ram, 0x4f04e0, 4), (ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x10d, 4), (ram, 0x4f04e0, 4) INT_ADD (ram, 0x4f04e0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f04e0, 4) COPY (ram, 0x4f04e0, 4), (ram, 0x4f04e0, 4) COPY (unique, 0x10000166, 4), (unique, 0x10000166, 4) MULTIEQUAL (unique, 0x1000015e, 4) , (unique, 0x10000162, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x123dc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x88, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x88, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000017a, 8) , (unique, 0xbd00, 4), (unique, 0x1000017a, 8) CAST (unique, 0x3100, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000172, 8), (unique, 0x10000172, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x123df9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000182, 8), (unique, 0x10000182, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x123ded, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x0, 8), (register, 0xb0, 8) CAST (unique, 0x1000019a, 8), (unique, 0x1000019a, 8) INT_XOR (register, 0xb0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000192, 8), (unique, 0x10000192, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0xb0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0xbd80, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x1000018a, 8) , (const, 0x11, 4), (unique, 0x1000018a, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x266330, 8) , (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc7, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc3, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0xc7, 4), (ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0xc3, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc7, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc3, 4)]
[ ---  CALLIND (register, 0xb0, 8) , (register, 0x18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcc, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALL (ram, 0x12cd60, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0xce, 4), (ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0xcc, 4), (ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xce, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xcc, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x123df9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x121355, 8)]
[(ram, 0x4f04e0, 4) COPY (ram, 0x4f04e0, 4), (ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x6c, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x6c, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffff3, 8) , (const, 0x8, 8)]
