[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000298, 8), (unique, 0x10000298, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002a0, 8), (unique, 0x100002a0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x24eedc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x18, 4)]
[(register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0x10000256, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x1000025e, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000266, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(unique, 0x1000026a, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x24ee10, 1) , (unique, 0x10000255, 1), (unique, 0x10000255, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x24ef10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002a8, 8), (unique, 0x100002a8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100002b0, 8), (unique, 0x100002b0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[(register, 0xa8, 4) COPY (const, 0x4, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000026a, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (unique, 0x10000266, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x3800, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x1000025e, 8) , (register, 0x110, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x0, 4) INT_SUB (unique, 0x100000e1, 4) , (unique, 0x100000e9, 4), (unique, 0x100000e1, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (unique, 0x100000e9, 4) SUBPIECE (register, 0xb0, 8) , (const, 0x0, 4), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x1000013f, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xb0, 8)]
[(unique, 0x1000013f, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0x3400, 8)]
[(unique, 0x10000147, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x1000014f, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000157, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(unique, 0x1000015b, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x24ed85, 1) , (unique, 0x1000013e, 1), (unique, 0x1000013e, 1) INT_EQUAL (unique, 0x1000013a, 4) , (const, 0x0, 4), (unique, 0x1000013a, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x1000014f, 8) , (const, 0xa3, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (unique, 0x10000157, 4) , (const, 0xa3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x1000015b, 8) , (const, 0xa3, 4)]
[ ---  CBRANCH (ram, 0x24eee8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0xb0, 8) , (register, 0x10, 4), (unique, 0xbd80, 8) CAST (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x80, 4), (register, 0xb0, 8) CAST (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0x80, 8) INT_ZEXT (register, 0x80, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0x3, 4), (register, 0x80, 4) SUBPIECE (unique, 0x1000013f, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002b8, 8), (unique, 0x100002b8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x9, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3400, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100002d0, 8) , (register, 0x0, 8), (unique, 0x100002d0, 8) CAST (register, 0xb0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[(register, 0x0, 4) INT_SUB (unique, 0x100000f1, 4) , (unique, 0x100000f9, 4), (unique, 0x100000f1, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4), (unique, 0x100000f9, 4) SUBPIECE (register, 0xb0, 8) , (const, 0x0, 4), (unique, 0x3400, 8) INT_ADD (unique, 0x100002d0, 8) , (register, 0x0, 8), (unique, 0x100002d0, 8) CAST (register, 0xb0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[(unique, 0x10000278, 4) COPY (unique, 0x1000013a, 4)]
[ ---  CBRANCH (ram, 0x24ed93, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (register, 0xa8, 4) , (unique, 0x1000013a, 4)]
[(unique, 0x1000027c, 4) COPY (register, 0xa8, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x1000014f, 8) , (const, 0xee, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (unique, 0x10000157, 4) , (const, 0xee, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x1000015b, 8) , (const, 0xee, 4)]
[ ---  CALL (ram, 0x121160, 8) , (stack, 0xffffffffffffff98, 8) , (unique, 0x10000147, 8) , (register, 0x98, 8), (register, 0x98, 8) INT_SEXT (register, 0x90, 4), (register, 0x90, 4) MULTIEQUAL (unique, 0x10000278, 4) , (unique, 0x1000027c, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x100002e0, 8), (unique, 0x100002e0, 8) INT_ADD (unique, 0x100002d8, 8) , (register, 0x98, 8), (unique, 0x100002d8, 8) CAST (stack, 0xffffffffffffff98, 8), (register, 0x98, 8) INT_SEXT (register, 0x90, 4), (register, 0x90, 4) MULTIEQUAL (unique, 0x10000278, 4) , (unique, 0x1000027c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8), (register, 0xb0, 8) CAST (unique, 0x100002f0, 8), (unique, 0x100002f0, 8) INT_ADD (unique, 0x100002e8, 8) , (register, 0x98, 8), (unique, 0x100002e8, 8) CAST (unique, 0x10000147, 8), (register, 0x98, 8) INT_SEXT (register, 0x90, 4), (register, 0x90, 4) MULTIEQUAL (unique, 0x10000278, 4) , (unique, 0x1000027c, 4)]
[ ---  CBRANCH (ram, 0x24ed3e, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (register, 0xa8, 4), (register, 0xa8, 4) INT_SUB (register, 0xa8, 4) , (register, 0x90, 4), (register, 0x90, 4) MULTIEQUAL (unique, 0x10000278, 4) , (unique, 0x1000027c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002f8, 8) , (register, 0x10, 4), (unique, 0x100002f8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xe, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_RIGHT (unique, 0x1bb80, 4) , (const, 0x1f, 4), (unique, 0x1bb80, 4) INT_LEFT (stack, 0xffffffffffffffbc, 4) , (const, 0x18, 4)]
[ ---  CBRANCH (ram, 0x24eee8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (stack, 0xffffffffffffffbc, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (stack, 0xffffffffffffffbc, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (stack, 0xffffffffffffffbc, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (stack, 0xffffffffffffffbc, 4) , (const, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff7fffffff, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)]
[(register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff7fffffff, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)]
[(unique, 0x10000280, 4) COPY (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x24ee19, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x0, 4) , (register, 0x18, 4), (register, 0x0, 4) SUBPIECE (unique, 0x10000256, 8) , (const, 0x0, 4)]
[(unique, 0x10000284, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x24eec6, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x10000300, 4), (unique, 0x10000300, 4) CAST (register, 0xa8, 4), (register, 0xa8, 4) MULTIEQUAL (unique, 0x10000280, 4) , (unique, 0x10000284, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000304, 8), (unique, 0x10000304, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[(unique, 0x10000274, 4) COPY (register, 0xa8, 4)]
[(unique, 0x10000290, 8) COPY (unique, 0x1000030c, 8), (unique, 0x1000030c, 8) CAST (register, 0xa0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000026a, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (unique, 0x10000266, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x10000290, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x1000025e, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0x10000274, 4) , (register, 0x28, 4)]
[(register, 0x10, 4) INT_SUB (unique, 0x10000109, 4) , (unique, 0x10000111, 4), (unique, 0x10000109, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x10000111, 4) SUBPIECE (register, 0xb0, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xb0, 8)]
[(unique, 0x10000163, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000170, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x10000178, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000180, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(unique, 0x10000184, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x24ee79, 1) , (unique, 0x1000016f, 1), (unique, 0x1000016f, 1) INT_EQUAL (unique, 0x1000016b, 4) , (const, 0x0, 4), (unique, 0x1000016b, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000178, 8) , (const, 0x1f2, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (unique, 0x10000180, 4) , (const, 0x1f2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000184, 8) , (const, 0x1f2, 4)]
[ ---  CBRANCH (ram, 0x24ef10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0xb0, 8) , (register, 0x10, 4), (unique, 0xbd80, 8) CAST (unique, 0x10000324, 8), (unique, 0x10000324, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0xb0, 8) CAST (unique, 0x1000031c, 8), (unique, 0x1000031c, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) SUBPIECE (unique, 0x10000163, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000314, 8), (unique, 0x10000314, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x9, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000026a, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x1000025e, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x24eee8, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x1000032c, 8), (unique, 0x1000032c, 8) CAST (register, 0xb0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[(register, 0x10, 4) INT_SUB (unique, 0x10000119, 4) , (unique, 0x10000121, 4), (unique, 0x10000119, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x10000121, 4) SUBPIECE (register, 0xb0, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8)]
[(unique, 0x10000288, 4) COPY (unique, 0x1000016b, 4)]
[ ---  CBRANCH (ram, 0x24ee86, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (unique, 0x10000334, 4) , (unique, 0x10000338, 4), (unique, 0x10000338, 4) CAST (unique, 0x1000016b, 4), (unique, 0x10000334, 4) CAST (register, 0x28, 4)]
[(unique, 0x1000028c, 4) COPY (register, 0x28, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000178, 8) , (const, 0x243, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (unique, 0x10000180, 4) , (const, 0x243, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000184, 8) , (const, 0x243, 4)]
[ ---  CALL (ram, 0x121160, 8) , (stack, 0xffffffffffffff98, 8) , (unique, 0x10000170, 8) , (register, 0x90, 8), (register, 0x90, 8) INT_SEXT (unique, 0x1000033c, 4), (unique, 0x1000033c, 4) CAST (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000288, 4) , (unique, 0x1000028c, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000348, 8), (unique, 0x10000348, 8) INT_ADD (unique, 0x10000340, 8) , (register, 0x90, 8), (unique, 0x10000340, 8) CAST (stack, 0xffffffffffffff98, 8), (register, 0x90, 8) INT_SEXT (unique, 0x1000033c, 4), (unique, 0x1000033c, 4) CAST (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000288, 4) , (unique, 0x1000028c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8), (register, 0xb0, 8) CAST (unique, 0x10000350, 8), (unique, 0x10000350, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x90, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8), (register, 0x90, 8) INT_SEXT (unique, 0x1000033c, 4), (unique, 0x1000033c, 4) CAST (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000288, 4) , (unique, 0x1000028c, 4)]
[ ---  CBRANCH (ram, 0x24ee2d, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x10000358, 4), (unique, 0x10000358, 4) CAST (register, 0x28, 4), (register, 0x28, 4) INT_SUB (register, 0x28, 4) , (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000288, 4) , (unique, 0x1000028c, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000026a, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (unique, 0x10000266, 4) , (stack, 0xffffffffffffffbc, 4)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x1000025e, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) CAST (unique, 0x10000364, 8), (unique, 0x10000364, 8) INT_ADD (unique, 0x1000035c, 8) , (register, 0x10, 8), (unique, 0x1000035c, 8) CAST (register, 0xa0, 8), (register, 0x10, 8) INT_ZEXT (register, 0xa8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0xa8, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000256, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x24ed13, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0xa8, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) COPY (const, 0x1, 4)]
[(register, 0x0, 4) COPY (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x24ef14, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000036c, 8), (unique, 0x1000036c, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2d4, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
