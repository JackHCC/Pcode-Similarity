[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000017d, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000185, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x243bd8, 1) , (unique, 0x1000017c, 1), (unique, 0x1000017c, 1) INT_EQUAL (unique, 0x10000186, 1) , (const, 0x0, 1), (unique, 0x10000186, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x28, 1) , (register, 0x28, 1)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x243a68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000186, 1) , (const, 0x9, 1)]
[ ---  CBRANCH (ram, 0x243a7b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000186, 1) , (const, 0x20, 1)]
[ ---  CBRANCH (ram, 0x243a68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000017d, 8) , (unique, 0x1000017d, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x243a68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x9, 1)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x28, 1) MULTIEQUAL (unique, 0x10000186, 1) , (unique, 0xbb00, 1)]
[(register, 0x8, 8) COPY (const, 0x6, 8)]
[(unique, 0x10000223, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000017d, 8) , (register, 0x18, 8)]
[(unique, 0x10000253, 8) COPY (unique, 0x10000263, 8), (unique, 0x10000263, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b6def, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000253, 8) , (unique, 0x1000025b, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000223, 8) , (unique, 0x1000022b, 8)]
[ ---  CBRANCH (ram, 0x243a88, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x1000022b, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100001da, 8) , (const, 0x1, 8), (unique, 0x100001da, 8) INT_ADD (unique, 0x100000b8, 8) , (const, 0x1, 8), (unique, 0x100000b8, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (unique, 0x10000185, 1)]
[(unique, 0x1000025b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100001d2, 8) , (const, 0x1, 8), (unique, 0x100001d2, 8) INT_ADD (unique, 0x100000b0, 8) , (const, 0x1, 8), (unique, 0x100000b0, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (unique, 0x10000185, 1)]
[ ---  CBRANCH (ram, 0x243a86, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x243bf0, 1) , (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x20a, 1) INDIRECT (unique, 0x10000185, 1) , (const, 0x222, 4)]
[ ---  CBRANCH (ram, 0x243c68, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (const, 0x10, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x145110, 8) , (unique, 0x1000026b, 8) , (const, 0x0, 8) , (const, 0xa, 4), (unique, 0x1000026b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x6, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0xf, 4), (unique, 0x3200, 8) CAST (unique, 0x10000273, 8), (unique, 0x10000273, 8) INT_ADD (register, 0x38, 8) , (const, 0xe4, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x243bc9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 4), (unique, 0x3200, 8) CAST (unique, 0x1000027b, 8), (unique, 0x1000027b, 8) INT_ADD (register, 0x38, 8) , (const, 0xe4, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x243bc9, 1)]
[(register, 0x8, 8) COPY (const, 0x8, 8)]
[(unique, 0x10000213, 8) COPY (register, 0x18, 8)]
[(unique, 0x10000243, 8) COPY (unique, 0x10000283, 8), (unique, 0x10000283, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b6df6, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000243, 8) , (unique, 0x1000024b, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000213, 8) , (unique, 0x1000021b, 8)]
[ ---  CBRANCH (ram, 0x243a9b, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x1000021b, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100001ea, 8) , (const, 0x1, 8), (unique, 0x100001ea, 8) INT_ADD (unique, 0x100000d1, 8) , (const, 0x1, 8), (unique, 0x100000d1, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (unique, 0x10000185, 1)]
[(unique, 0x1000024b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100001e2, 8) , (const, 0x1, 8), (unique, 0x100001e2, 8) INT_ADD (unique, 0x100000c9, 8) , (const, 0x1, 8), (unique, 0x100000c9, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (unique, 0x10000185, 1)]
[ ---  CBRANCH (ram, 0x243a99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x243c18, 1) , (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x20a, 1) INDIRECT (unique, 0x10000185, 1) , (const, 0x1f7, 4)]
[ ---  CBRANCH (ram, 0x243c80, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1f, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x145110, 8) , (unique, 0x1000028b, 8) , (const, 0x0, 8) , (const, 0xa, 4), (unique, 0x1000028b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x1e, 4), (unique, 0x3200, 8) CAST (unique, 0x10000293, 8), (unique, 0x10000293, 8) INT_ADD (register, 0x38, 8) , (const, 0xdc, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x243bc9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 4), (unique, 0x3200, 8) CAST (unique, 0x1000029b, 8), (unique, 0x1000029b, 8) INT_ADD (register, 0x38, 8) , (const, 0xdc, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x243bc9, 1)]
[(register, 0x8, 8) COPY (const, 0x9, 8)]
[(unique, 0x10000203, 8) COPY (register, 0x18, 8)]
[(unique, 0x10000233, 8) COPY (unique, 0x100002a3, 8), (unique, 0x100002a3, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b6dff, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000233, 8) , (unique, 0x1000023b, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000203, 8) , (unique, 0x1000020b, 8)]
[ ---  CBRANCH (ram, 0x243aae, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x1000020b, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100001fa, 8) , (const, 0x1, 8), (unique, 0x100001fa, 8) INT_ADD (unique, 0x100000ea, 8) , (const, 0x1, 8), (unique, 0x100000ea, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (unique, 0x10000185, 1)]
[(unique, 0x1000023b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100001f2, 8) , (const, 0x1, 8), (unique, 0x100001f2, 8) INT_ADD (unique, 0x100000e2, 8) , (const, 0x1, 8), (unique, 0x100000e2, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (unique, 0x10000185, 1)]
[ ---  CBRANCH (ram, 0x243aac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x243c40, 1) , (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x20a, 1) INDIRECT (unique, 0x10000185, 1) , (const, 0x1cc, 4)]
[ ---  CBRANCH (ram, 0x243c98, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (const, 0x6, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x145110, 8) , (unique, 0x100002ab, 8) , (const, 0x0, 8) , (const, 0xa, 4), (unique, 0x100002ab, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x9, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x5, 4), (unique, 0x3200, 8) CAST (unique, 0x100002b3, 8), (unique, 0x100002b3, 8) INT_ADD (register, 0x38, 8) , (const, 0xe0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x243bc9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 4), (unique, 0x3200, 8) CAST (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) INT_ADD (register, 0x38, 8) , (const, 0xe0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x243bc9, 1)]
[(register, 0x20a, 1) INDIRECT (unique, 0x10000185, 1) , (const, 0xca, 4)]
[ ---  CBRANCH (ram, 0x243cbf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x100002c3, 8) , (unique, 0x1000018a, 8) , (const, 0x5, 8), (unique, 0x100002c3, 8) CAST (register, 0x18, 8), (unique, 0x1000018a, 8) COPY (const, 0x2b20a0, 8)]
[(register, 0x0, 4) COPY (const, 0x2000, 4)]
[ ---  BRANCH (ram, 0x243cb0, 1)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xda, 4)]
[ ---  CBRANCH (ram, 0x243cc6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x100002cb, 8) , (unique, 0x10000192, 8) , (const, 0x6, 8), (unique, 0x100002cb, 8) CAST (register, 0x18, 8), (unique, 0x10000192, 8) COPY (const, 0x2b20c0, 8)]
[(register, 0x0, 4) COPY (const, 0x4000, 4)]
[ ---  BRANCH (ram, 0x243cb0, 1)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xea, 4)]
[ ---  CBRANCH (ram, 0x243ccd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x100002d3, 8) , (unique, 0x1000019a, 8) , (const, 0x5, 8), (unique, 0x100002d3, 8) CAST (register, 0x18, 8), (unique, 0x1000019a, 8) COPY (const, 0x2b20e0, 8)]
[(register, 0x0, 4) COPY (const, 0x100000, 4)]
[ ---  BRANCH (ram, 0x243cb0, 1)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xfa, 4)]
[ ---  CBRANCH (ram, 0x243cd4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x100002db, 8) , (unique, 0x100001a2, 8) , (const, 0x15, 8), (unique, 0x100002db, 8) CAST (register, 0x18, 8), (unique, 0x100001a2, 8) COPY (const, 0x2b2100, 8)]
[(register, 0x0, 4) COPY (const, 0x400000, 4)]
[ ---  BRANCH (ram, 0x243cb0, 1)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x10a, 4)]
[ ---  CBRANCH (ram, 0x243cdb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x100002e3, 8) , (unique, 0x100001aa, 8) , (const, 0xe, 8), (unique, 0x100002e3, 8) CAST (register, 0x18, 8), (unique, 0x100001aa, 8) COPY (const, 0x2b2120, 8)]
[(register, 0x0, 4) COPY (const, 0x200000, 4)]
[ ---  BRANCH (ram, 0x243cb0, 1)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x11a, 4)]
[ ---  CBRANCH (ram, 0x243cab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x100002eb, 8) , (unique, 0x100001b2, 8) , (const, 0xc, 8), (unique, 0x100002eb, 8) CAST (register, 0x18, 8), (unique, 0x100001b2, 8) COPY (const, 0x2b2140, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x12a, 4)]
[ ---  CBRANCH (ram, 0x243cab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x100002f3, 8) , (unique, 0x100001ba, 8) , (const, 0xc, 8), (unique, 0x100002f3, 8) CAST (register, 0x18, 8), (unique, 0x100001ba, 8) COPY (const, 0x2b2160, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x0, 4) COPY (const, 0x1000000, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x13a, 4)]
[ ---  CBRANCH (ram, 0x243ce2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x100002fb, 8) , (unique, 0x100001c2, 8) , (const, 0x9, 8), (unique, 0x100002fb, 8) CAST (register, 0x18, 8), (unique, 0x100001c2, 8) COPY (const, 0x2b2180, 8)]
[(register, 0x0, 4) COPY (const, 0x2000000, 4)]
[ ---  BRANCH (ram, 0x243cb0, 1)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x14a, 4)]
[ ---  CBRANCH (ram, 0x243bc9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x10000303, 8) , (unique, 0x100001ca, 8) , (const, 0x6, 8), (unique, 0x10000303, 8) CAST (register, 0x18, 8), (unique, 0x100001ca, 8) COPY (const, 0x2b21a0, 8)]
[(register, 0x0, 4) COPY (const, 0x8, 4)]
[ ---  BRANCH (ram, 0x243cb0, 1)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_OR (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x243bc9, 1)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x243bb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (register, 0x28, 1) , (const, 0xdf, 1), (register, 0x28, 1) MULTIEQUAL (register, 0x28, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x243a4c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 1) , (const, 0x9, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
