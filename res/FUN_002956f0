[(register, 0x80, 8) INT_ZEXT (register, 0x0, 2), (register, 0x0, 2) INT_AND (register, 0x0, 2) , (const, 0x7fff, 2), (register, 0x0, 2) SUBPIECE (unique, 0x100009c3, 4) , (const, 0x0, 4), (unique, 0x100009c3, 4) INT_RIGHT (unique, 0x10000e3f, 4) , (const, 0x10, 4), (unique, 0x10000e3f, 4) CAST (register, 0x120c, 4)]
[(register, 0xb0, 8) INT_ZEXT (register, 0x38, 2), (register, 0x38, 2) INT_AND (register, 0x38, 2) , (const, 0x7fff, 2), (register, 0x38, 2) SUBPIECE (unique, 0x100009c7, 4) , (const, 0x0, 4), (unique, 0x100009c7, 4) INT_RIGHT (register, 0x122c, 4) , (const, 0x10, 4)]
[(register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x100008b7, 4), (unique, 0x100008b7, 4) INT_RIGHT (register, 0x1204, 4) , (const, 0x1d, 4), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3, 4), (register, 0x10, 8) INT_AND (stack, 0xffffffffffffffa0, 8) , (const, 0xffffffffffff, 8), (stack, 0xffffffffffffffa0, 8) INT_ADD (unique, 0x100009ab, 8) , (register, 0x1208, 4), (unique, 0x100009ab, 8) INT_LEFT (unique, 0x100009a3, 8) , (const, 0x20, 8), (unique, 0x100009a3, 8) INT_SEXT (register, 0x120c, 4), (register, 0x1204, 4) SUBPIECE (unique, 0x10000993, 8) , (const, 0x0, 4), (unique, 0x10000993, 8) INT_RIGHT (register, 0x1200, 8) , (const, 0x20, 4)]
[(register, 0x90, 8) INT_OR (register, 0x90, 8) , (register, 0x18, 8), (register, 0x90, 8) INT_LEFT (register, 0x90, 8) , (const, 0x3, 4), (register, 0x18, 8) INT_ZEXT (unique, 0x100008c3, 4), (unique, 0x100008c3, 4) INT_RIGHT (register, 0x1224, 4) , (const, 0x1d, 4), (register, 0x90, 8) INT_AND (unique, 0x10000798, 8) , (const, 0xffffffffffff, 8), (unique, 0x10000798, 8) INT_ADD (unique, 0x100009bb, 8) , (register, 0x1228, 4), (unique, 0x100009bb, 8) INT_LEFT (unique, 0x100009b3, 8) , (const, 0x20, 8), (unique, 0x100009b3, 8) INT_SEXT (unique, 0x10000e3b, 4), (unique, 0x10000e3b, 4) CAST (register, 0x122c, 4), (register, 0x1224, 4) SUBPIECE (unique, 0x1000099b, 8) , (const, 0x0, 4), (unique, 0x1000099b, 8) INT_RIGHT (register, 0x1220, 8) , (const, 0x20, 4)]
[(register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x38, 4), (register, 0x38, 4) INT_ZEXT (register, 0x38, 2), (register, 0x0, 4) INT_ZEXT (register, 0x0, 2), (register, 0x38, 2) INT_AND (register, 0x38, 2) , (const, 0x7fff, 2), (register, 0x38, 2) SUBPIECE (unique, 0x100009c7, 4) , (const, 0x0, 4), (unique, 0x100009c7, 4) INT_RIGHT (register, 0x122c, 4) , (const, 0x10, 4), (register, 0x0, 2) INT_AND (register, 0x0, 2) , (const, 0x7fff, 2), (register, 0x0, 2) SUBPIECE (unique, 0x100009c3, 4) , (const, 0x0, 4), (unique, 0x100009c3, 4) INT_RIGHT (unique, 0x10000e3f, 4) , (const, 0x10, 4), (unique, 0x10000e3f, 4) CAST (register, 0x120c, 4)]
[(unique, 0x3680, 8) INT_MULT (register, 0x1200, 8) , (const, 0x8, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x1220, 8) , (const, 0x8, 8)]
[(unique, 0x1000064f, 4) SUBPIECE (unique, 0x100009cb, 8) , (const, 0x0, 4), (unique, 0x100009cb, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x20, 4), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3, 4), (register, 0x10, 8) INT_AND (stack, 0xffffffffffffffa0, 8) , (const, 0xffffffffffff, 8), (stack, 0xffffffffffffffa0, 8) INT_ADD (unique, 0x100009ab, 8) , (register, 0x1208, 4), (unique, 0x100009ab, 8) INT_LEFT (unique, 0x100009a3, 8) , (const, 0x20, 8), (unique, 0x100009a3, 8) INT_SEXT (register, 0x120c, 4)]
[(unique, 0x100006bf, 4) SUBPIECE (unique, 0x100009d3, 8) , (const, 0x0, 4), (unique, 0x100009d3, 8) INT_RIGHT (register, 0x90, 8) , (const, 0x20, 4), (register, 0x90, 8) INT_LEFT (register, 0x90, 8) , (const, 0x3, 4), (register, 0x90, 8) INT_AND (unique, 0x10000798, 8) , (const, 0xffffffffffff, 8), (unique, 0x10000798, 8) INT_ADD (unique, 0x100009bb, 8) , (register, 0x1228, 4), (unique, 0x100009bb, 8) INT_LEFT (unique, 0x100009b3, 8) , (const, 0x20, 8), (unique, 0x100009b3, 8) INT_SEXT (unique, 0x10000e3b, 4), (unique, 0x10000e3b, 4) CAST (register, 0x122c, 4)]
[ ---  CBRANCH (ram, 0x295950, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (register, 0xa0, 8), (register, 0xa0, 8) INT_ZEXT (unique, 0x100008ab, 4), (unique, 0x100008ab, 4) INT_RIGHT (register, 0x122c, 4) , (const, 0x1f, 4), (register, 0x98, 8) INT_2COMP (unique, 0x10000893, 8), (unique, 0x10000893, 8) INT_SRIGHT (unique, 0x1000089b, 8) , (const, 0x1f, 4), (unique, 0x1000089b, 8) INT_SEXT (register, 0x120c, 4)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x295908, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000e43, 4) , (const, 0x1, 4), (unique, 0x10000e43, 4) CAST (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2959f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x295c50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x7fff, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x90, 8) INT_OR (register, 0x90, 8) , (const, 0x8000000000000, 8)]
[ ---  CBRANCH (ram, 0x295a88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2962a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x295c5c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x296090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x295a0c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x7fff, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x295f60, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000e47, 4) , (const, 0x75, 4), (unique, 0x10000e47, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x1000028c, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 8) , (const, 0x0, 8), (register, 0x90, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000639, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x296148, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000e4b, 4) , (const, 0x40, 4), (unique, 0x10000e4b, 4) CAST (register, 0x0, 4)]
[(register, 0x98, 8) INT_OR (register, 0x98, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x98, 8) INT_OR (register, 0x98, 8) , (register, 0xb0, 8), (register, 0x18, 8) INT_LEFT (unique, 0x3680, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0xb0, 8) INT_RIGHT (unique, 0x3680, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x10000639, 1) , (const, 0x3f, 1), (register, 0x98, 8) INT_LEFT (register, 0x90, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (unique, 0x10000639, 1)]
[(register, 0x90, 8) INT_RIGHT (register, 0x90, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x10000639, 1) , (const, 0x3f, 1)]
[ ---  BRANCH (ram, 0x295f6d, 1)]
[(register, 0xa0, 8) INT_RIGHT (register, 0x90, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (unique, 0x10000639, 1) , (const, 0x40, 1)]
[ ---  CBRANCH (ram, 0x295a39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x40, 4)]
[(register, 0x18, 8) INT_OR (unique, 0x3680, 8) , (register, 0x90, 8), (register, 0x90, 8) INT_LEFT (register, 0x90, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x80, 1) , (unique, 0x10000639, 1)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(register, 0x98, 8) INT_OR (unique, 0x10000145, 8) , (register, 0xa0, 8), (unique, 0x10000145, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3680, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x295f6d, 1)]
[(register, 0x30, 8) INT_SUB (unique, 0x3680, 8) , (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8) , (unique, 0x1000028c, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x10, 8) , (register, 0x90, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (register, 0x98, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8) , (unique, 0x1000028c, 8)]
[(unique, 0x10000bd3, 8) COPY (register, 0x98, 8)]
[(unique, 0x10000d9b, 8) COPY (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x2957e0, 1)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[(register, 0x30, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x10000055, 8), (unique, 0x10000055, 8) INT_MULT (register, 0x1220, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x10, 8) , (register, 0x90, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(unique, 0x10000bcb, 8) COPY (register, 0x98, 8)]
[(unique, 0x10000d93, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x295bc0, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x296180, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x296440, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x2966dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x7fff, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000ac3, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000beb, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000cc3, 8) COPY (unique, 0x3680, 8)]
[(unique, 0x10000db3, 8) COPY (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x295aa0, 1)]
[ ---  CBRANCH (ram, 0x29649c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x2966f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4)]
[(register, 0x18, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x1000055a, 8), (unique, 0x1000055a, 8) INT_MULT (register, 0x1200, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x90, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x90, 8) , (register, 0x10, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x2957e0, 1)]
[ ---  CBRANCH (ram, 0x296773, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x296845, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[(unique, 0x10000855, 8) INT_AND (register, 0x90, 8) , (const, 0x4000000000000, 8)]
[(register, 0x80, 8) COPY (const, 0x7fff, 8)]
[(unique, 0x10000b9b, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x296074, 1)]
[(register, 0x0, 4) INT_NEGATE (register, 0x0, 4)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x295be7, 1)]
[ ---  CBRANCH (ram, 0x296490, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x295cfc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0x80, 8) COPY (const, 0x7fff, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_XOR (unique, 0x10000456, 4) , (const, 0x1, 4), (unique, 0x10000456, 4) INT_RIGHT (unique, 0x100006bf, 4) , (const, 0x12, 4)]
[(unique, 0x10000a5b, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000b63, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000c63, 8) COPY (unique, 0x3680, 8)]
[ ---  BRANCH (ram, 0x295c6c, 1)]
[(register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0x8000000000000, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x296468, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000e4f, 4) , (const, 0x75, 4), (unique, 0x10000e4f, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x10000446, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x295c2f, 1)]
[(register, 0x8, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2965e3, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000e53, 4) , (const, 0x40, 4), (unique, 0x10000e53, 4) CAST (register, 0x0, 4)]
[(register, 0x88, 8) INT_RIGHT (register, 0x10, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (register, 0x8, 1) , (const, 0x40, 1)]
[ ---  CBRANCH (ram, 0x2965fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x40, 4)]
[(register, 0x30, 8) INT_OR (unique, 0x3680, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x80, 1) , (register, 0x8, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 8) INT_OR (unique, 0x100004fa, 8) , (register, 0x88, 8), (unique, 0x100004fa, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3680, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x295c2f, 1)]
[(register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0xb8, 8), (register, 0x30, 8) INT_LEFT (unique, 0x3680, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0xb8, 8) INT_RIGHT (unique, 0x3680, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x80, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (register, 0x8, 1)]
[(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1)]
[(register, 0x30, 8) INT_SUB (unique, 0x3680, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (unique, 0x10000446, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x90, 8) , (register, 0x0, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (register, 0x80, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (unique, 0x10000446, 8)]
[ ---  BRANCH (ram, 0x2957e0, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000ab3, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x90, 8)]
[(unique, 0x10000bdb, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000bcb, 8) , (unique, 0x10000bd3, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0x10000cb3, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x18, 8)]
[(unique, 0x10000da3, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000d93, 8) , (unique, 0x10000d9b, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x295aa0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x1e080, 8) , (const, 0x0, 8), (unique, 0x1e080, 8) INT_AND (unique, 0x1e000, 8) , (const, 0x1, 8), (unique, 0x1e000, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x33, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x90, 8)]
[(register, 0x0, 8) INT_AND (register, 0x10, 8) , (const, 0x7ffffffffffff, 8)]
[(unique, 0x10000bf3, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x295f80, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_LESS (const, 0x1, 2) , (register, 0x38, 2), (register, 0x38, 2) INT_AND (register, 0x38, 2) , (const, 0x7fff, 2), (register, 0x38, 2) INT_ADD (register, 0x0, 2) , (const, 0x1, 2)]
[(register, 0x8, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x100000bd, 8), (unique, 0x100000bd, 8) INT_MULT (register, 0x1220, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x2960e0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x1e080, 8) , (const, 0x0, 8), (unique, 0x1e080, 8) INT_AND (unique, 0x1e000, 8) , (const, 0x1, 8), (unique, 0x1e000, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x33, 4), (register, 0x0, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x10, 8) , (register, 0x90, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x18, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x10000328, 8), (unique, 0x10000328, 8) INT_MULT (register, 0x1200, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x90, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x90, 8) , (register, 0x10, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2957f8, 1)]
[ ---  CBRANCH (ram, 0x2962c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x0, 8) , (register, 0x8, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000bfb, 8) COPY (register, 0x98, 8)]
[ ---  BRANCH (ram, 0x2957f8, 1)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000da3, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x8, 8) , (register, 0x18, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000bf3, 8) , (unique, 0x10000bfb, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x295f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x90, 8)]
[(unique, 0x1b380, 8) COPY (const, 0x3f, 8)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b580, 1), (unique, 0x1b580, 1) INT_EQUAL (unique, 0x1b500, 8) , (const, 0x0, 8), (unique, 0x1b500, 8) INT_RIGHT (register, 0x30, 8) , (unique, 0x1b380, 8), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[(unique, 0x1b380, 8) INT_ADD (unique, 0x1b380, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x40, 4), (register, 0x8, 4) INT_XOR (unique, 0x10000274, 4) , (const, 0x3f, 4), (unique, 0x10000274, 4) SUBPIECE (unique, 0x1b380, 8) , (const, 0x0, 4), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[ ---  BRANCH (ram, 0x295808, 1)]
[(unique, 0x1b380, 8) COPY (const, 0x3f, 8)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b580, 1), (unique, 0x1b580, 1) INT_EQUAL (unique, 0x1b500, 8) , (const, 0x0, 8), (unique, 0x1b500, 8) INT_RIGHT (register, 0x0, 8) , (unique, 0x1b380, 8), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[(unique, 0x1b380, 8) INT_ADD (unique, 0x1b380, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (const, 0x3f, 4), (register, 0x8, 4) SUBPIECE (unique, 0x1b380, 8) , (const, 0x0, 4), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[ ---  CBRANCH (ram, 0x295f28, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x3100, 4) , (const, 0x40, 4), (unique, 0x3100, 4) INT_SUB (register, 0x8, 4) , (const, 0xc, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) INT_LEFT (register, 0x30, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_ADD (unique, 0x10000697, 1) , (const, 0xb4, 1), (unique, 0x10000697, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x295833, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_RIGHT (register, 0x30, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (register, 0x8, 1), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (unique, 0x3100, 4) , (const, 0x0, 4)]
[(register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (unique, 0x3100, 4) , (const, 0x0, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000e0b, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x295f10, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x10, 8) , (unique, 0x10000e57, 8), (unique, 0x10000e57, 8) CAST (register, 0x80, 8), (register, 0x10, 8) INT_SEXT (unique, 0x3100, 4)]
[(unique, 0x10000abb, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_AND (register, 0x0, 8) , (const, 0xfff7ffffffffffff, 8)]
[(unique, 0x10000cbb, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000dab, 8) COPY (register, 0x80, 8), (register, 0x80, 8) INT_SUB (register, 0x80, 8) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x295aa0, 1)]
[(register, 0x8, 1) SUBPIECE (unique, 0x3100, 4) , (const, 0x0, 4), (unique, 0x3100, 4) INT_ADD (register, 0x98, 4) , (const, 0x1, 4), (register, 0x98, 4) INT_SUB (unique, 0x3100, 4) , (register, 0x80, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2960b0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x3100, 4) , (const, 0x40, 4), (unique, 0x3100, 4) INT_ADD (register, 0x98, 4) , (const, 0x1, 4), (register, 0x98, 4) INT_SUB (unique, 0x3100, 4) , (register, 0x80, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4)]
[(register, 0x80, 8) INT_RIGHT (register, 0x0, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (register, 0x8, 1) , (const, 0x40, 1)]
[ ---  CBRANCH (ram, 0x2960cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0x40, 4)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x80, 1) , (register, 0x8, 1)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x80, 8), (register, 0x30, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x295890, 1)]
[(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x90, 8), (register, 0x30, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x90, 8) INT_OR (register, 0x90, 8) , (register, 0x18, 8), (register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x18, 8) INT_RIGHT (register, 0x30, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x90, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (register, 0x8, 1)]
[(register, 0x38, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[(register, 0x98, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x2961e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x296570, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x10000a03, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000c0b, 8) COPY (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x296201, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 8) , (const, 0x0, 8)]
[(register, 0x8, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x1000048e, 8), (unique, 0x1000048e, 8) INT_MULT (register, 0x1220, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x29688a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0x1e080, 8) , (const, 0x0, 8), (unique, 0x1e080, 8) INT_AND (unique, 0x1e000, 8) , (const, 0x1, 8), (unique, 0x1e000, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x33, 4), (register, 0x0, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x10, 8) , (register, 0x90, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x18, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x100004a6, 8), (unique, 0x100004a6, 8) INT_MULT (register, 0x1200, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x90, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x90, 8) , (register, 0x10, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[(unique, 0x10000bbb, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x295890, 1)]
[ ---  CBRANCH (ram, 0x296975, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) INT_OR (register, 0x0, 8) , (register, 0x8, 8)]
[(unique, 0x10000d53, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x295d5d, 1)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000a0b, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000c13, 8) COPY (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x296201, 1)]
[ ---  CBRANCH (ram, 0x2962c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000d4b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x295d5d, 1)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(unique, 0x100009fb, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000bc3, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000c03, 8) COPY (unique, 0x3680, 8)]
[(unique, 0x10000dfb, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x296612, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x296674, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2966ac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x7fff, 8)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_XOR (unique, 0x1000050a, 4) , (const, 0x1, 4), (unique, 0x1000050a, 4) INT_RIGHT (unique, 0x1000064f, 4) , (const, 0x12, 4)]
[ ---  CBRANCH (ram, 0x295fc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x2966ac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x7fff, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x296634, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29674e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8)]
[(unique, 0x10000a23, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000c2b, 8) COPY (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x296669, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x296652, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000083d, 8) , (const, 0x0, 8), (unique, 0x1000083d, 8) INT_AND (register, 0x90, 8) , (const, 0x4000000000000, 8)]
[(unique, 0x10000522, 8) COPY (const, 0x1, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x10000522, 8)]
[(unique, 0x10000afb, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x295fc9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x29667d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000a1b, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000c23, 8) COPY (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x296669, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x80, 8) COPY (const, 0x7fff, 8)]
[(unique, 0x10000a4b, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a1b, 8) , (unique, 0x10000a23, 8) , (register, 0x90, 8)]
[(unique, 0x10000b53, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000dfb, 8) , (unique, 0x10000dfb, 8) , (unique, 0x10000afb, 8)]
[(unique, 0x10000c53, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000c23, 8) , (unique, 0x10000c2b, 8) , (unique, 0x3680, 8)]
[ ---  BRANCH (ram, 0x295c6c, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x100009e3, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_OR (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) INT_AND (register, 0x1200, 8) , (const, 0x1fffffffffffffff, 8), (register, 0x30, 8) INT_LEFT (unique, 0x100008cf, 8) , (const, 0x20, 4), (unique, 0x100008cf, 8) INT_AND (unique, 0x100007d3, 8) , (const, 0xe0000000, 8), (unique, 0x100007d3, 8) INT_ZEXT (register, 0x1204, 4)]
[(unique, 0x10000a9b, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b1b, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x296016, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x90, 8)]
[(unique, 0x100009eb, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000aa3, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000b23, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x296012, 1) , (unique, 0x100007ec, 1), (unique, 0x100007ec, 1) BOOL_OR (register, 0x206, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x80, 8), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x90, 8), (register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0x90, 8), (register, 0x80, 8) INT_AND (register, 0x1220, 8) , (const, 0x1fffffffffffffff, 8), (register, 0x90, 8) INT_LEFT (unique, 0x100008df, 8) , (const, 0x20, 4), (unique, 0x100008df, 8) INT_AND (unique, 0x100007e4, 8) , (const, 0xe0000000, 8), (unique, 0x100007e4, 8) INT_ZEXT (register, 0x1224, 4)]
[(unique, 0x100009f3, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000b2b, 8) COPY (register, 0xa0, 8)]
[(register, 0x80, 8) COPY (const, 0x7fff, 8)]
[(unique, 0x10000a43, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x3d, 4), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x100009e3, 8) , (unique, 0x100009eb, 8) , (unique, 0x100009f3, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a9b, 8) , (unique, 0x10000aa3, 8) , (unique, 0x10000aa3, 8)]
[(unique, 0x10000b4b, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000b1b, 8) , (unique, 0x10000b23, 8) , (unique, 0x10000b2b, 8)]
[(unique, 0x10000c4b, 8) COPY (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100009e3, 8) , (unique, 0x100009eb, 8) , (unique, 0x100009f3, 8)]
[ ---  BRANCH (ram, 0x295c6c, 1)]
[ ---  CBRANCH (ram, 0x296759, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 8) COPY (const, 0x7fff, 8)]
[(unique, 0x10000a53, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000b5b, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000c5b, 8) COPY (unique, 0x3680, 8)]
[ ---  BRANCH (ram, 0x295c6c, 1)]
[(unique, 0x10000d33, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x295cca, 1)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x295e50, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x10000e5f, 4), (unique, 0x10000e5f, 4) CAST (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x295a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x296040, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000ad3, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000cd3, 8) COPY (unique, 0x3680, 8)]
[(unique, 0x10000dc3, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x295aa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x2962b4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_XOR (register, 0x38, 4) , (const, 0x1, 4), (register, 0x38, 4) INT_RIGHT (unique, 0x1000064f, 4) , (const, 0x12, 4)]
[(unique, 0x10000a63, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b6b, 8) COPY (register, 0x98, 8)]
[(unique, 0x10000c6b, 8) COPY (unique, 0x3680, 8)]
[ ---  BRANCH (ram, 0x295c6c, 1)]
[ ---  CBRANCH (ram, 0x296210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[(register, 0x30, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0x12280, 8) , (unique, 0x12080, 8), (unique, 0x12280, 8) INT_ADD (register, 0x10, 8) , (register, 0x90, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[(unique, 0x10000d8b, 8) COPY (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x295999, 1)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x29597e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x7fff, 8)]
[(unique, 0x1000096b, 8) COPY (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x295da9, 1) , (unique, 0x10000973, 1), (unique, 0x10000973, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[(unique, 0x100007f0, 8) INT_AND (register, 0x10, 8) , (const, 0x4000000000000, 8)]
[(unique, 0x10000a7b, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b93, 8) COPY (register, 0x98, 8)]
[(unique, 0x10000c83, 8) COPY (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x295cf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x295d00, 1) , (unique, 0x1000095d, 1), (unique, 0x1000095d, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_XOR (unique, 0x100001e8, 4) , (const, 0x1, 4), (unique, 0x100001e8, 4) INT_RIGHT (unique, 0x1000064f, 4) , (const, 0x12, 4)]
[(unique, 0x10000a3b, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b43, 8) COPY (register, 0x98, 8)]
[(unique, 0x10000c43, 8) COPY (unique, 0x3680, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x90, 8) INT_OR (register, 0x90, 8) , (const, 0x8000000000000, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x296100, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000e63, 4) , (const, 0x75, 4), (unique, 0x10000e63, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x1000070f, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x296388, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000e67, 4) , (const, 0x40, 4), (unique, 0x10000e67, 4) CAST (register, 0x0, 4)]
[(register, 0xa8, 8) INT_RIGHT (register, 0x90, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (unique, 0x1000070f, 1) , (const, 0x40, 1)]
[ ---  CBRANCH (ram, 0x2963a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x40, 4)]
[(register, 0x18, 8) INT_OR (unique, 0x3680, 8) , (register, 0x90, 8), (register, 0x90, 8) INT_LEFT (register, 0x90, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x80, 1) , (unique, 0x1000070f, 1)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) INT_OR (register, 0x18, 8) , (register, 0xa8, 8), (register, 0x18, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3680, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x295993, 1)]
[(register, 0x90, 8) INT_RIGHT (register, 0x90, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x1000070f, 1) , (const, 0x3f, 1)]
[(register, 0x18, 8) INT_OR (register, 0x18, 8) , (register, 0xa8, 8), (register, 0x18, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0xa8, 8) INT_OR (register, 0xa8, 8) , (register, 0xb8, 8), (register, 0x18, 8) INT_LEFT (unique, 0x3680, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0xb8, 8) INT_RIGHT (unique, 0x3680, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x1000070f, 1) , (const, 0x3f, 1), (register, 0xa8, 8) INT_LEFT (register, 0x90, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (unique, 0x1000070f, 1)]
[ ---  BRANCH (ram, 0x295993, 1)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 8) , (const, 0x0, 8), (register, 0x90, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[(register, 0x30, 8) INT_ADD (unique, 0x3680, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0x12280, 8) , (unique, 0x12080, 8), (unique, 0x12280, 8) INT_ADD (register, 0x10, 8) , (register, 0x90, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0x3680, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[(unique, 0x10000d83, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x296270, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x2963c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2966b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x7fff, 8)]
[(register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0x8000000000000, 8)]
[ ---  CBRANCH (ram, 0x295cfc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2965b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x296863, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4)]
[(register, 0x18, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x90, 8) INT_ADD (unique, 0x12280, 8) , (unique, 0x12080, 8), (unique, 0x12280, 8) INT_ADD (register, 0x90, 8) , (register, 0x10, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x295999, 1)]
[ ---  CBRANCH (ram, 0x296935, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x296845, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[(unique, 0x10000883, 8) INT_AND (register, 0x90, 8) , (const, 0x4000000000000, 8)]
[(register, 0x80, 8) COPY (const, 0x7fff, 8)]
[ ---  BRANCH (ram, 0x296074, 1)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x3, 4), (register, 0x38, 4) INT_NEGATE (unique, 0x10000304, 4), (unique, 0x10000304, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100007f0, 8) , (unique, 0x10000855, 8) , (unique, 0x10000883, 8)]
[(unique, 0x10000a33, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a7b, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[(unique, 0x10000b3b, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000b93, 8) , (unique, 0x10000b9b, 8) , (register, 0x98, 8)]
[(unique, 0x10000c3b, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000c83, 8) , (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[ ---  BRANCH (ram, 0x295c6c, 1)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x295da9, 1)]
[(register, 0x0, 4) INT_NEGATE (register, 0x0, 4)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x2963de, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2965d2, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000e6b, 4) , (const, 0x75, 4), (unique, 0x10000e6b, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x100004da, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x296426, 1)]
[(unique, 0x10000726, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x296805, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000e6f, 4) , (const, 0x40, 4), (unique, 0x10000e6f, 4) CAST (register, 0x0, 4)]
[(register, 0xa8, 8) INT_RIGHT (register, 0x10, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (unique, 0x10000726, 1) , (const, 0x40, 1)]
[ ---  CBRANCH (ram, 0x296820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x40, 4)]
[(register, 0x30, 8) INT_OR (unique, 0x3680, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x80, 1) , (unique, 0x10000726, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 8) INT_OR (unique, 0x100005b2, 8) , (register, 0xa8, 8), (unique, 0x100005b2, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3680, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x296426, 1)]
[(register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0xb8, 8), (register, 0x30, 8) INT_LEFT (unique, 0x3680, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0xb8, 8) INT_RIGHT (unique, 0x3680, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x10000726, 1) , (const, 0x3f, 1), (register, 0x80, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (unique, 0x10000726, 1)]
[(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x10000726, 1) , (const, 0x3f, 1)]
[(register, 0x30, 8) INT_ADD (unique, 0x3680, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (unique, 0x100004da, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0x12280, 8) , (unique, 0x12080, 8), (unique, 0x12280, 8) INT_ADD (register, 0x90, 8) , (register, 0x0, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0x3680, 8) , (register, 0x80, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (unique, 0x100004da, 8)]
[ ---  BRANCH (ram, 0x295999, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000acb, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x90, 8)]
[(unique, 0x10000ccb, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x18, 8)]
[(unique, 0x10000dbb, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000d83, 8) , (unique, 0x10000d8b, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x295aa0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x1e080, 8) , (const, 0x0, 8), (unique, 0x1e080, 8) INT_AND (unique, 0x1e000, 8) , (const, 0x1, 8), (unique, 0x1e000, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x33, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x296348, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x7fff, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xfff7ffffffffffff, 8)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3f, 4), (register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x1, 4), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xfff7ffffffffffff, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x98, 8) INT_ZEXT (register, 0x98, 4), (register, 0x98, 4) INT_AND (register, 0x98, 4) , (const, 0x7, 4), (register, 0x98, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x1, 4), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(unique, 0x10000d73, 8) COPY (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x295ab2, 1)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x28, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x296480, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x1084, 4) , (const, 0x6000, 4)]
[ ---  CBRANCH (ram, 0x296834, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x4000, 4)]
[ ---  CBRANCH (ram, 0x295eab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2000, 4)]
[ ---  CBRANCH (ram, 0x295eab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x120c, 4)]
[ ---  CBRANCH (ram, 0x295ec1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x296852, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x7fff, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000adb, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000cdb, 8) COPY (unique, 0x3680, 8)]
[(unique, 0x10000dcb, 8) COPY (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x295aa0, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000cb3, 8) , (unique, 0x10000cbb, 8) , (unique, 0x10000cc3, 8) , (unique, 0x10000ccb, 8) , (unique, 0x10000cd3, 8) , (unique, 0x10000cdb, 8) , (unique, 0x3680, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000ab3, 8) , (unique, 0x10000abb, 8) , (unique, 0x10000ac3, 8) , (unique, 0x10000acb, 8) , (unique, 0x10000ad3, 8) , (unique, 0x10000adb, 8) , (register, 0x10, 8)]
[(unique, 0x10000bb3, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000bdb, 8) , (unique, 0x10000e0b, 8) , (unique, 0x10000beb, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x295890, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000da3, 8) , (unique, 0x10000dab, 8) , (unique, 0x10000db3, 8) , (unique, 0x10000dbb, 8) , (unique, 0x10000dc3, 8) , (unique, 0x10000dcb, 8) , (register, 0x80, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x98, 8) INT_ZEXT (register, 0x98, 4), (register, 0x98, 4) INT_AND (register, 0x98, 4) , (const, 0x7, 4), (register, 0x98, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(unique, 0x10000d6b, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x2962b4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[(register, 0x80, 8) COPY (const, 0x7fff, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_XOR (unique, 0x10000552, 4) , (const, 0x1, 4), (unique, 0x10000552, 4) INT_RIGHT (unique, 0x100006bf, 4) , (const, 0x12, 4)]
[ ---  BRANCH (ram, 0x295c6c, 1)]
[ ---  CBRANCH (ram, 0x296310, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_LESS (const, 0x1, 4) , (register, 0x98, 4), (register, 0x98, 4) INT_AND (register, 0x98, 4) , (const, 0x7fff, 4), (register, 0x98, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x2964c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(register, 0x98, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x296710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x296201, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x2969a6, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0x1e080, 8) , (const, 0x0, 8), (unique, 0x1e080, 8) INT_AND (unique, 0x1e000, 8) , (const, 0x1, 8), (unique, 0x1e000, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x33, 4), (register, 0x10, 8) INT_ADD (unique, 0x12280, 8) , (unique, 0x12080, 8), (unique, 0x12280, 8) INT_ADD (register, 0x10, 8) , (register, 0x90, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x80, 8) COPY (const, 0x1, 8)]
[(register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xfff7ffffffffffff, 8)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x295ab2, 1)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x295890, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000e0b, 8) , (unique, 0x10000e0b, 8) , (unique, 0x10000bb3, 8) , (unique, 0x10000bbb, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x295d58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) INT_OR (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x90, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x18, 8) , (register, 0x30, 8)]
[(register, 0x98, 8) INT_ZEXT (register, 0x98, 4), (register, 0x98, 4) INT_AND (register, 0x98, 4) , (const, 0x7, 4), (register, 0x98, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(unique, 0x10000d5b, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29687c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000a13, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000c1b, 8) COPY (unique, 0x3680, 8)]
[ ---  BRANCH (ram, 0x296201, 1)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000c03, 8) , (unique, 0x10000c0b, 8) , (unique, 0x10000c13, 8) , (unique, 0x10000c1b, 8) , (unique, 0x3680, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000bc3, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100009fb, 8) , (unique, 0x10000a03, 8) , (unique, 0x10000a0b, 8) , (unique, 0x10000a13, 8) , (register, 0x10, 8)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x2958a3, 1)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x3400, 8) INT_SUB (unique, 0x3300, 8) , (unique, 0x10000705, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x10000705, 8) INT_SRIGHT (unique, 0x10000e73, 8) , (const, 0x3f, 4), (unique, 0x10000e73, 8) CAST (register, 0x30, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2958f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000091, 8) , (const, 0x0, 8), (unique, 0x10000091, 8) INT_AND (unique, 0x10000629, 8) , (const, 0x6, 8), (unique, 0x10000629, 8) INT_MULT (register, 0x30, 8) , (const, 0x2, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x20, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x296300, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x2000, 4), (register, 0x80, 4) INT_AND (register, 0x1084, 4) , (const, 0x6000, 4)]
[ ---  CBRANCH (ram, 0x2958f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2962e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x4000, 4)]
[ ---  CBRANCH (ram, 0x2958f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x12080, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xfffffffffffffff7, 8) , (unique, 0x10000629, 8)]
[ ---  BRANCH (ram, 0x2958f0, 1)]
[ ---  CBRANCH (ram, 0x296220, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2958f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x4, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0xf, 4), (register, 0x80, 4) SUBPIECE (unique, 0x10000629, 8) , (const, 0x0, 4)]
[(register, 0x0, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x12080, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xfffffffffffffffb, 8) , (unique, 0x10000629, 8)]
[ ---  BRANCH (ram, 0x2958f0, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_XOR (unique, 0x100000a9, 4) , (const, 0x1, 4), (unique, 0x100000a9, 4) SUBPIECE (unique, 0x100009db, 8) , (const, 0x0, 4), (unique, 0x100009db, 8) INT_RIGHT (unique, 0x10000e7b, 8) , (const, 0x34, 4), (unique, 0x10000e7b, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (register, 0x0, 8) , (unique, 0x3400, 8) , (register, 0x0, 8) , (unique, 0x3400, 8)]
[(unique, 0x10000d63, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x295ab2, 1)]
[ ---  CBRANCH (ram, 0x2967a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x29695f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x296993, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x2962b4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x295c6c, 1)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_XOR (unique, 0x1000057a, 4) , (const, 0x1, 4), (unique, 0x1000057a, 4) INT_RIGHT (unique, 0x1000064f, 4) , (const, 0x12, 4)]
[ ---  CBRANCH (ram, 0x2964ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x2968bf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8), (register, 0xb0, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x2968a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x2968cd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2968bf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (unique, 0x3680, 8) , (register, 0x90, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 8) COPY (const, 0x7fff, 8)]
[(unique, 0x10000b83, 8) COPY (register, 0x98, 8)]
[ ---  BRANCH (ram, 0x295c6c, 1)]
[ ---  CBRANCH (ram, 0x29699f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_OR (register, 0x90, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2967d3, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2967e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000866, 8) , (const, 0x0, 8), (unique, 0x10000866, 8) INT_AND (register, 0x90, 8) , (const, 0x4000000000000, 8)]
[(unique, 0x10000592, 8) COPY (const, 0x1, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x10000592, 8)]
[ ---  CBRANCH (ram, 0x2964f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x80, 8) COPY (const, 0x7fff, 8)]
[(unique, 0x10000b8b, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x295c6c, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000a83, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b03, 8) COPY (register, 0x98, 8)]
[(unique, 0x10000c8b, 8) COPY (register, 0x30, 8), (register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x8, 8), (register, 0x30, 8) INT_LEFT (unique, 0x100008ef, 8) , (const, 0x20, 4), (unique, 0x100008ef, 8) INT_AND (unique, 0x10000820, 8) , (const, 0xe0000000, 8), (unique, 0x10000820, 8) INT_ZEXT (register, 0x1204, 4), (register, 0x8, 8) INT_AND (register, 0x1200, 8) , (const, 0x1fffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x296546, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x90, 8)]
[(unique, 0x10000a8b, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000b0b, 8) COPY (register, 0x98, 8)]
[(unique, 0x10000c93, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x296542, 1) , (unique, 0x10000839, 1), (unique, 0x10000839, 1) BOOL_OR (register, 0x206, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x8, 8), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x90, 8), (register, 0x8, 8) INT_OR (register, 0x8, 8) , (register, 0x90, 8), (register, 0x8, 8) INT_AND (register, 0x1220, 8) , (const, 0x1fffffffffffffff, 8), (register, 0x90, 8) INT_LEFT (unique, 0x100008ff, 8) , (const, 0x20, 4), (unique, 0x100008ff, 8) INT_AND (unique, 0x10000831, 8) , (const, 0xe0000000, 8), (unique, 0x10000831, 8) INT_ZEXT (register, 0x1224, 4)]
[(unique, 0x10000b13, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000c9b, 8) COPY (register, 0x8, 8)]
[(register, 0x80, 8) COPY (const, 0x7fff, 8)]
[(unique, 0x10000a6b, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x3d, 4), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a83, 8) , (unique, 0x10000a8b, 8) , (unique, 0x10000a8b, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000c8b, 8) , (unique, 0x10000c93, 8) , (unique, 0x10000c9b, 8)]
[(unique, 0x10000b73, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000b03, 8) , (unique, 0x10000b0b, 8) , (unique, 0x10000b13, 8)]
[(unique, 0x10000c73, 8) COPY (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (const, 0x3, 4), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000c8b, 8) , (unique, 0x10000c93, 8) , (unique, 0x10000c9b, 8)]
[ ---  BRANCH (ram, 0x295c6c, 1)]
[ ---  CBRANCH (ram, 0x2962b4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x80, 8) COPY (const, 0x7fff, 8)]
[(unique, 0x10000a73, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b7b, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000c7b, 8) COPY (unique, 0x3680, 8)]
[ ---  BRANCH (ram, 0x295c6c, 1)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x295cbe, 1)]
[(register, 0x30, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0x12280, 8) , (unique, 0x12080, 8), (unique, 0x12280, 8) INT_ADD (register, 0x10, 8) , (register, 0x90, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x2961b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (const, 0x7fff, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4)]
[(register, 0x30, 8) INT_OR (register, 0x8, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3f, 4), (register, 0x8, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x1, 4)]
[(register, 0x98, 8) INT_ZEXT (register, 0x98, 4), (register, 0x98, 4) INT_AND (register, 0x98, 4) , (const, 0x7, 4), (register, 0x98, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x1, 4)]
[(unique, 0x10000d7b, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x295ab2, 1)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000d63, 8) , (unique, 0x10000d6b, 8) , (unique, 0x10000d73, 8) , (unique, 0x10000d7b, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000a2b, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000b33, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8)]
[(unique, 0x10000c33, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x295c6c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000c33, 8) , (unique, 0x10000c3b, 8) , (unique, 0x10000c43, 8) , (unique, 0x10000c4b, 8) , (unique, 0x10000c53, 8) , (unique, 0x10000c5b, 8) , (unique, 0x10000c63, 8) , (unique, 0x10000c6b, 8) , (unique, 0x10000c73, 8) , (unique, 0x10000c7b, 8) , (unique, 0x3680, 8) , (unique, 0x3680, 8) , (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000b33, 8) , (unique, 0x10000b3b, 8) , (unique, 0x10000b43, 8) , (unique, 0x10000b4b, 8) , (unique, 0x10000b53, 8) , (unique, 0x10000b5b, 8) , (unique, 0x10000b63, 8) , (unique, 0x10000b6b, 8) , (unique, 0x10000b73, 8) , (unique, 0x10000b7b, 8) , (unique, 0x10000b83, 8) , (unique, 0x10000b8b, 8) , (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x8, 8) INT_AND (register, 0x10, 8) , (const, 0x8000000000000, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a2b, 8) , (unique, 0x10000a33, 8) , (unique, 0x10000a3b, 8) , (unique, 0x10000a43, 8) , (unique, 0x10000a4b, 8) , (unique, 0x10000a53, 8) , (unique, 0x10000a5b, 8) , (unique, 0x10000a63, 8) , (unique, 0x10000a6b, 8) , (unique, 0x10000a73, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x295afc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x295af9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001f0, 8) , (const, 0x0, 8), (unique, 0x100001f0, 8) INT_AND (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x295af9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100007b7, 4) , (const, 0x0, 4), (unique, 0x100007b7, 4) INT_AND (register, 0x1084, 4) , (const, 0x800, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x20, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x295e30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x2000, 4), (register, 0x8, 4) INT_AND (register, 0x1084, 4) , (const, 0x6000, 4)]
[ ---  CBRANCH (ram, 0x295ed8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x4000, 4)]
[(unique, 0x10000ce3, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x295ef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[(unique, 0x10000ceb, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x295ae8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x4, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4), (register, 0x8, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0x12080, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xfffffffffffffffb, 8) , (register, 0x30, 8)]
[(unique, 0x10000cf3, 8) COPY (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x295ae8, 1)]
[ ---  CBRANCH (ram, 0x29669f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x1084, 4) , (const, 0x6000, 4)]
[(register, 0x38, 8) COPY (const, 0x28, 8)]
[ ---  BRANCH (ram, 0x295da9, 1)]
[ ---  CBRANCH (ram, 0x2968f7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x4000, 4)]
[(register, 0x38, 8) COPY (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x29690f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x2000, 4)]
[ ---  CBRANCH (ram, 0x296379, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x295e18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2000, 4), (register, 0x0, 4) INT_AND (register, 0x1084, 4) , (const, 0x6000, 4)]
[ ---  CBRANCH (ram, 0x2968e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4000, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x80, 8) COPY (const, 0x7ffe, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x30, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x295e39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x98, 8)]
[(register, 0x80, 8) COPY (const, 0x7ffe, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000d0b, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x295ae8, 1)]
[(register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x80, 8) COPY (const, 0x7ffe, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x30, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000d03, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x295ae8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x98, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0x12080, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xfffffffffffffff7, 8) , (register, 0x30, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000cfb, 8) COPY (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x295ae8, 1)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x98, 8) , (register, 0x28, 8)]
[(register, 0x8, 8) INT_AND (register, 0x10, 8) , (const, 0x8000000000000, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000ae3, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000d13, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000ce3, 8) , (unique, 0x10000ceb, 8) , (unique, 0x10000cf3, 8) , (unique, 0x10000cfb, 8) , (unique, 0x10000d03, 8) , (unique, 0x10000d0b, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x295afc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000d13, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000ae3, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x10, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000915, 8) MULTIEQUAL (unique, 0x10000ae3, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x1000091d, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x1000092d, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000935, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x10000ca3, 8) COPY (unique, 0x10000925, 8), (unique, 0x10000925, 8) MULTIEQUAL (unique, 0x10000d13, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x295c9f, 1) , (unique, 0x10000914, 1), (unique, 0x10000914, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x10, 8) INT_RIGHT (unique, 0x10000915, 8) , (const, 0x3, 4)]
[(register, 0x98, 8) INT_OR (register, 0x98, 8) , (register, 0x30, 8), (register, 0x98, 8) INT_LEFT (unique, 0x10000915, 8) , (const, 0x3d, 4), (register, 0x30, 8) INT_RIGHT (unique, 0x10000925, 8) , (const, 0x3, 4)]
[(unique, 0x10000d43, 8) COPY (unique, 0x1000092d, 8)]
[ ---  CBRANCH (ram, 0x295d5d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000935, 8) , (const, 0x7fff, 8)]
[(unique, 0x10000d2b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000092d, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2969b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x98, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000d23, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x295b3f, 1)]
[ ---  CBRANCH (ram, 0x29691b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x28, 8)]
[ ---  BRANCH (ram, 0x295da9, 1)]
[(register, 0x80, 8) COPY (const, 0x7ffe, 8)]
[(register, 0x38, 8) COPY (const, 0x28, 8)]
[(unique, 0x10000cab, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x295b05, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000092d, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000ca3, 8) , (unique, 0x10000cab, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x1000091d, 8) , (register, 0x98, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000915, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x295d78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x7ffe, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000935, 8) , (register, 0x80, 8)]
[(register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x295f50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x1084, 4) , (const, 0x6000, 4)]
[ ---  CBRANCH (ram, 0x296240, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4000, 4)]
[ ---  CBRANCH (ram, 0x295f50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x28, 4)]
[ ---  BRANCH (ram, 0x295da9, 1)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x28, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x28, 4)]
[ ---  CBRANCH (ram, 0x29624c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x29624c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x2000, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (unique, 0x1000096b, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000730, 8) COPY (const, 0x0, 8)]
[(register, 0x98, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000d3b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x295d5d, 1)]
[(register, 0x98, 8) INT_OR (register, 0x98, 8) , (register, 0x30, 8), (register, 0x98, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3d, 4), (register, 0x30, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x3, 4)]
[(unique, 0x10000d1b, 8) COPY (register, 0x38, 8)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x295dfb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000d1b, 8) , (unique, 0x10000d23, 8) , (unique, 0x10000d2b, 8) , (unique, 0x10000d33, 8) , (unique, 0x10000d3b, 8) , (unique, 0x10000d43, 8) , (unique, 0x10000d4b, 8) , (unique, 0x10000d53, 8) , (unique, 0x10000d5b, 8) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CALL (ram, 0x299bb0, 8) , (register, 0x1200, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1200, 8) MULTIEQUAL (register, 0x98, 8) , (unique, 0x10000730, 8)]
[ ---  RETURN (const, 0x0, 8)]
