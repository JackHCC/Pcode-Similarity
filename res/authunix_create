[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x2c, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x27, 4)]
[(stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x2c, 4), (stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x27, 4)]
[(stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x2c, 4), (stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x27, 4)]
[(stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0x2c, 4), (stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0x27, 4)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x2c, 4), (stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x27, 4)]
[(stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0x2c, 4), (stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0x27, 4)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x2c, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x27, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x2c, 4), (stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x27, 4)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x2c, 4), (stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x27, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x2c, 4), (stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x27, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000035e, 8), (unique, 0x1000035e, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x1d0, 8)]
[(unique, 0x1000032a, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x2c, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x27, 4)]
[(unique, 0x10000322, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x2c, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x27, 4)]
[ ---  CBRANCH (ram, 0x233d70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000356, 8), (unique, 0x10000356, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x48, 8)]
[ ---  CBRANCH (ram, 0x233d70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000366, 8), (unique, 0x10000366, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x40, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000036e, 8), (unique, 0x1000036e, 8) CAST (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c16a0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000322, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000032a, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000376, 8) , (unique, 0x10000322, 8), (unique, 0x10000376, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000032a, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x10000238, 8) , (const, 0x8, 8), (unique, 0x10000238, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000332, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0x10000332, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x56, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x53, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000037e, 8) , (unique, 0x10000332, 8), (unique, 0x1000037e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x10000258, 8) , (const, 0x10, 8), (unique, 0x10000258, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8), (unique, 0x10000332, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x56, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x53, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x11f7e0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffd98, 8)]
[ ---  CALL (ram, 0x23b780, 8) , (unique, 0x3800, 8) , (unique, 0x3c80, 8) , (const, 0x190, 4) , (const, 0x0, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd8, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe38, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xa2, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x9c, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x6f, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x6c, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x69, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x66, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x63, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x60, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x5d, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x5a, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x56, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x53, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xa2, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x9c, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x6f, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x6c, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x69, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x66, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x63, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x60, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x5d, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x5a, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x56, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x53, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xa2, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x9c, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x6f, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x6c, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x69, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x66, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x63, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x60, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x5d, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x5a, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x56, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x53, 4)]
[(stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0xa2, 4), (stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x9c, 4), (stack, 0xfffffffffffffda8, 8) COPY (stack, 0xfffffffffffffd98, 8), (stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x6f, 4)]
[(stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0xa2, 4), (stack, 0xfffffffffffffdb0, 8) INDIRECT (unique, 0x1000033a, 8) , (const, 0x9c, 4), (unique, 0x1000033a, 8) COPY (register, 0x38, 8)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xa2, 4), (stack, 0xfffffffffffffdb8, 4) INDIRECT (unique, 0x10000342, 4) , (const, 0x9c, 4), (unique, 0x10000342, 4) COPY (register, 0x30, 4)]
[(stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0xa2, 4), (stack, 0xfffffffffffffdbc, 4) INDIRECT (unique, 0x10000346, 4) , (const, 0x9c, 4), (unique, 0x10000346, 4) COPY (register, 0x10, 4)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0xa2, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (unique, 0x1000034a, 4) , (const, 0x9c, 4), (unique, 0x1000034a, 4) COPY (register, 0x8, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0xa2, 4), (stack, 0xfffffffffffffdc8, 8) INDIRECT (unique, 0x1000034e, 8) , (const, 0x9c, 4), (unique, 0x1000034e, 8) COPY (register, 0x80, 8)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0xa2, 4), (stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x9c, 4), (stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x6f, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0xa2, 4), (stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x9c, 4), (stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x6f, 4)]
[ ---  CBRANCH (ram, 0x233db9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22b1e0, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffda8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd8, 8)]
[(stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x193, 4)]
[(stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0x193, 4)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x193, 4)]
[(stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0x193, 4)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x193, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x193, 4)]
[ ---  CALL (ram, 0x136eb0, 8)]
[(ram, 0x4c7e20, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x193, 4)]
[(ram, 0x4c7e28, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x193, 4)]
[(ram, 0x4c7e30, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x193, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000386, 8) , (register, 0x0, 4), (unique, 0x10000386, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xfffffffffffffde0, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000038e, 8) , (const, 0x1, 4), (unique, 0x1000038e, 8) CAST (register, 0x0, 8)]
[(stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0xc0, 4), (stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0xb5, 4)]
[(stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0xc0, 4), (stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0xb5, 4)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xc0, 4), (stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xb5, 4)]
[(stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0xc0, 4), (stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0xb5, 4)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0xc0, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0xb5, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0xc0, 4), (stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0xb5, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0xc0, 4), (stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0xb5, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xcc, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xc0, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xbc, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xba, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xb5, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xcc, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xc0, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xbc, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xba, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xb5, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xcc, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xc0, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xbc, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xba, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xb5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (register, 0x28, 8), (register, 0x28, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xfffffffffffffde0, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x233d70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (register, 0x28, 8), (register, 0x28, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xfffffffffffffde0, 8) , (const, 0x20, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (register, 0x0, 8) , (unique, 0x3c80, 8) , (register, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000396, 8) , (unique, 0xbd80, 8), (unique, 0x10000396, 8) CAST (unique, 0x100002b0, 8), (unique, 0x100002b0, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100002c0, 8) , (const, 0x8, 8), (unique, 0x100002c0, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000039e, 8), (unique, 0x1000039e, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003a6, 8) , (unique, 0xbd80, 8), (unique, 0x100003a6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100002d8, 8) , (const, 0x10, 8), (unique, 0x100002d8, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x23b780, 8) , (unique, 0x3c80, 8) , (unique, 0x3800, 8) , (const, 0x190, 4) , (const, 0x0, 4), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x38, 8) , (const, 0x1, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe08, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x40, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xfe, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xf9, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xf6, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xf0, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xe8, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xd3, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xfe, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xf9, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xf6, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xf0, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xe8, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xd3, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xfe, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xf9, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xf6, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xf0, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xe8, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0xfe, 4), (stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0xf9, 4), (stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0xfe, 4), (stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0xf9, 4), (stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xfe, 4), (stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xf9, 4), (stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0xfe, 4), (stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0xf9, 4), (stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0xfe, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0xf9, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0xfe, 4), (stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0xf9, 4), (stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0xfe, 4), (stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0xf9, 4), (stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0xd3, 4)]
[ ---  CBRANCH (ram, 0x233d48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22cf80, 8) , (unique, 0x3c80, 8) , (unique, 0x100003ae, 8), (unique, 0x100003ae, 8) CAST (register, 0x0, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe08, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x146, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x146, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x146, 4)]
[(stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x146, 4)]
[(stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0x146, 4)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x146, 4)]
[(stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0x146, 4)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x146, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x146, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x146, 4)]
[ ---  CBRANCH (ram, 0x233cf9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22cf80, 8) , (unique, 0x3c80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x113, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x10f, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x113, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x10f, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x113, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x10f, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x113, 4), (stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x10f, 4), (stack, 0xfffffffffffffda8, 8) MULTIEQUAL (stack, 0xfffffffffffffda8, 8) , (stack, 0xfffffffffffffda8, 8)]
[(stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0x113, 4), (stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0x10f, 4), (stack, 0xfffffffffffffdb0, 8) MULTIEQUAL (stack, 0xfffffffffffffdb0, 8) , (stack, 0xfffffffffffffdb0, 8)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x113, 4), (stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x10f, 4), (stack, 0xfffffffffffffdb8, 4) MULTIEQUAL (stack, 0xfffffffffffffdb8, 4) , (stack, 0xfffffffffffffdb8, 4)]
[(stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0x113, 4), (stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0x10f, 4), (stack, 0xfffffffffffffdbc, 4) MULTIEQUAL (stack, 0xfffffffffffffdbc, 4) , (stack, 0xfffffffffffffdbc, 4)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x113, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x10f, 4), (stack, 0xfffffffffffffdc0, 4) MULTIEQUAL (stack, 0xfffffffffffffdc0, 4) , (stack, 0xfffffffffffffdc0, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x113, 4), (stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x10f, 4), (stack, 0xfffffffffffffdc8, 8) MULTIEQUAL (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x113, 4), (stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x10f, 4), (stack, 0xfffffffffffffe10, 8) MULTIEQUAL (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8)]
[ ---  CALL (ram, 0x16a940, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003b6, 8), (unique, 0x100003b6, 8) CALL (ram, 0x12e620, 8) , (unique, 0x100001b8, 8) , (unique, 0x100001e8, 8) , (const, 0x5, 8), (unique, 0x100001e8, 8) COPY (const, 0x2929a8, 8), (unique, 0x100001b8, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[(stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x159, 4)]
[(stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0x159, 4)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x159, 4)]
[(stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0x159, 4)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x159, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x159, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x159, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x15c, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x159, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x15c, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x159, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x15c, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x159, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003be, 8) , (register, 0x0, 4), (unique, 0x100003be, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1c8, 8) , (const, 0x1, 8), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x3c80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xfffffffffffffe10, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x233d19, 1)]
[(stack, 0xfffffffffffffdc8, 8) MULTIEQUAL (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8)]
[(stack, 0xfffffffffffffdc0, 4) MULTIEQUAL (stack, 0xfffffffffffffdc0, 4) , (stack, 0xfffffffffffffdc0, 4)]
[(stack, 0xfffffffffffffdbc, 4) MULTIEQUAL (stack, 0xfffffffffffffdbc, 4) , (stack, 0xfffffffffffffdbc, 4)]
[(stack, 0xfffffffffffffdb8, 4) MULTIEQUAL (stack, 0xfffffffffffffdb8, 4) , (stack, 0xfffffffffffffdb8, 4)]
[(stack, 0xfffffffffffffdb0, 8) MULTIEQUAL (stack, 0xfffffffffffffdb0, 8) , (stack, 0xfffffffffffffdb0, 8)]
[(stack, 0xfffffffffffffda8, 8) MULTIEQUAL (stack, 0xfffffffffffffda8, 8) , (stack, 0xfffffffffffffda8, 8)]
[(ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[ ---  CBRANCH (ram, 0x233d2f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xfffffffffffffe10, 8) , (const, 0x38, 8), (stack, 0xfffffffffffffe10, 8) MULTIEQUAL (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8)]
[(stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x127, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x3c80, 8)]
[(ram, 0x4c7e20, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x127, 4)]
[(ram, 0x4c7e28, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x127, 4)]
[(ram, 0x4c7e30, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x127, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c7e20, 8) COPY (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) COPY (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) COPY (ram, 0x4c7e30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CALL (ram, 0x16cfd0, 8) , (const, 0x0, 8) , (unique, 0x100001d0, 8) , (unique, 0x100001f0, 8) , (register, 0x0, 8), (unique, 0x100001f0, 8) COPY (const, 0x293400, 8), (unique, 0x100001d0, 8) COPY (const, 0x28eb09, 8), (register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x100001c0, 8) , (unique, 0x100001e0, 8) , (const, 0x5, 8), (unique, 0x100001e0, 8) COPY (const, 0x28f404, 8), (unique, 0x100001c0, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[(stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x185, 4), (stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x181, 4), (stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x17d, 4), (stack, 0xfffffffffffffda8, 8) INDIRECT (stack, 0xfffffffffffffda8, 8) , (const, 0x163, 4), (stack, 0xfffffffffffffda8, 8) MULTIEQUAL (stack, 0xfffffffffffffda8, 8) , (stack, 0xfffffffffffffda8, 8) , (stack, 0xfffffffffffffda8, 8)]
[(stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0x185, 4), (stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0x181, 4), (stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0x17d, 4), (stack, 0xfffffffffffffdb0, 8) INDIRECT (stack, 0xfffffffffffffdb0, 8) , (const, 0x163, 4), (stack, 0xfffffffffffffdb0, 8) MULTIEQUAL (stack, 0xfffffffffffffdb0, 8) , (stack, 0xfffffffffffffdb0, 8) , (stack, 0xfffffffffffffdb0, 8)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x185, 4), (stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x181, 4), (stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x17d, 4), (stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x163, 4), (stack, 0xfffffffffffffdb8, 4) MULTIEQUAL (stack, 0xfffffffffffffdb8, 4) , (stack, 0xfffffffffffffdb8, 4) , (stack, 0xfffffffffffffdb8, 4)]
[(stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0x185, 4), (stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0x181, 4), (stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0x17d, 4), (stack, 0xfffffffffffffdbc, 4) INDIRECT (stack, 0xfffffffffffffdbc, 4) , (const, 0x163, 4), (stack, 0xfffffffffffffdbc, 4) MULTIEQUAL (stack, 0xfffffffffffffdbc, 4) , (stack, 0xfffffffffffffdbc, 4) , (stack, 0xfffffffffffffdbc, 4)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x185, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x181, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x17d, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x163, 4), (stack, 0xfffffffffffffdc0, 4) MULTIEQUAL (stack, 0xfffffffffffffdc0, 4) , (stack, 0xfffffffffffffdc0, 4) , (stack, 0xfffffffffffffdc0, 4)]
[(stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x185, 4), (stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x181, 4), (stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x17d, 4), (stack, 0xfffffffffffffdc8, 8) INDIRECT (stack, 0xfffffffffffffdc8, 8) , (const, 0x163, 4), (stack, 0xfffffffffffffdc8, 8) MULTIEQUAL (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8) , (stack, 0xfffffffffffffdc8, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[(ram, 0x4c7e20, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x185, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x181, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x17d, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x163, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x185, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x181, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x17d, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x163, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x185, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x181, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x17d, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x163, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
