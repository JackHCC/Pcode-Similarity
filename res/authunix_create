[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x37, 4)]
[(ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x3c, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x37, 4)]
[(stack, 0xfffffffffffffd88, 8) INDIRECT (stack, 0xfffffffffffffd88, 8) , (const, 0x3c, 4), (stack, 0xfffffffffffffd88, 8) INDIRECT (stack, 0xfffffffffffffd88, 8) , (const, 0x37, 4)]
[(stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x3c, 4), (stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x37, 4)]
[(stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x3c, 4), (stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x37, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x3c, 4), (stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x37, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x3c, 4), (stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x37, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x3c, 4), (stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x37, 4)]
[(stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x3c, 4), (stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x37, 4)]
[(stack, 0xfffffffffffffdd0, 8) INDIRECT (stack, 0xfffffffffffffdd0, 8) , (const, 0x3c, 4), (stack, 0xfffffffffffffdd0, 8) INDIRECT (stack, 0xfffffffffffffdd0, 8) , (const, 0x37, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x3c, 4), (stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x37, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x37, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004a6, 8), (unique, 0x100004a6, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) CAST (unique, 0x100004b6, 8), (unique, 0x100004b6, 8) CALL (ram, 0x1212c0, 8) , (const, 0x1d0, 8)]
[(unique, 0x1000046e, 4) COPY (ram, 0x4eff6c, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x3c, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x37, 4)]
[(unique, 0x1000046a, 4) COPY (ram, 0x4eff68, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x3c, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x37, 4)]
[(unique, 0x10000466, 4) COPY (ram, 0x4eff64, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x3c, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x37, 4)]
[(unique, 0x10000462, 4) COPY (ram, 0x4eff60, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x3c, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x37, 4)]
[ ---  CBRANCH (ram, 0x255410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004ae, 8), (unique, 0x100004ae, 8) CALL (ram, 0x1212c0, 8) , (const, 0x48, 8)]
[ ---  CBRANCH (ram, 0x255410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100004be, 8), (unique, 0x100004be, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x40, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100004c6, 8), (unique, 0x100004c6, 8) CAST (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea4a0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002a2, 8) , (unique, 0x10000462, 4), (unique, 0x100002a2, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000205, 8) , (unique, 0x10000466, 4), (unique, 0x10000205, 8) CAST (unique, 0x100004ce, 8), (unique, 0x100004ce, 8) PTRSUB (unique, 0x100002b2, 8) , (const, 0x4, 8), (unique, 0x100002b2, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004d6, 8) , (unique, 0x1000046a, 4), (unique, 0x100004d6, 8) CAST (unique, 0x1000020d, 8), (unique, 0x1000020d, 8) PTRSUB (unique, 0x100002ca, 8) , (const, 0x8, 8), (unique, 0x100002ca, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000215, 8) , (unique, 0x1000046e, 4), (unique, 0x10000215, 8) CAST (unique, 0x100004e6, 8), (unique, 0x100004e6, 8) INT_ADD (unique, 0x100004de, 8) , (const, 0x4, 8), (unique, 0x100004de, 8) CAST (unique, 0x10000412, 8), (unique, 0x10000412, 8) PTRSUB (unique, 0x100002e2, 8) , (const, 0x8, 8), (unique, 0x100002e2, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004ee, 8) , (const, 0x0, 8), (unique, 0x100004ee, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000462, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000021d, 8) , (unique, 0x10000466, 4), (unique, 0x1000021d, 8) PTRADD (register, 0x0, 8) , (const, 0x7, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000225, 8) , (unique, 0x1000046a, 4), (unique, 0x10000225, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000022d, 8) , (unique, 0x1000046e, 4), (unique, 0x1000022d, 8) PTRADD (register, 0x0, 8) , (const, 0x9, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004f6, 8) , (unique, 0x10000472, 8), (unique, 0x100004f6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x10000322, 8) , (const, 0x10, 8), (unique, 0x10000322, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8), (unique, 0x10000472, 8) COPY (ram, 0x4eff70, 8), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x65, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x62, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004fe, 8) , (unique, 0x10000472, 8), (unique, 0x100004fe, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0x10000472, 8) COPY (ram, 0x4eff70, 8), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x65, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x62, 4)]
[ ---  CALL (ram, 0x120ff0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffd88, 8)]
[ ---  CALL (ram, 0x25dcf0, 8) , (unique, 0x3800, 8) , (unique, 0x3c80, 8) , (const, 0x190, 4) , (const, 0x0, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xab, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x78, 4)]
[(ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0xab, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0xa5, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x78, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x75, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x72, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x465, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x463, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x461, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x460, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x6c, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x45e, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x45c, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x45a, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x459, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x65, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x62, 4)]
[(ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0xab, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0xa5, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x78, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x75, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x72, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x465, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x463, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x461, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x460, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x6c, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x45e, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x45c, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x45a, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x459, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x65, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x62, 4)]
[(ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0xab, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0xa5, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x78, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x75, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x72, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x465, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x463, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x461, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x460, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x6c, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x45e, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x45c, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x45a, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x459, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x65, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x62, 4)]
[(ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0xab, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0xa5, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x78, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x75, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x72, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x465, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x463, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x461, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x460, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x6c, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x45e, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x45c, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x45a, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x459, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x65, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x62, 4)]
[(ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0xab, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0xa5, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x78, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x75, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x72, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x465, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x463, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x461, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x460, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x6c, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x45e, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x45c, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x45a, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x459, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x65, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x62, 4)]
[(stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0xab, 4), (stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0xa5, 4), (stack, 0xfffffffffffffd98, 8) COPY (stack, 0xfffffffffffffd88, 8), (stack, 0xfffffffffffffd88, 8) INDIRECT (stack, 0xfffffffffffffd88, 8) , (const, 0x78, 4)]
[(stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0xab, 4), (stack, 0xfffffffffffffda0, 8) INDIRECT (unique, 0x1000048a, 8) , (const, 0xa5, 4), (unique, 0x1000048a, 8) COPY (register, 0x38, 8)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0xab, 4), (stack, 0xfffffffffffffda8, 4) INDIRECT (unique, 0x10000492, 4) , (const, 0xa5, 4), (unique, 0x10000492, 4) COPY (register, 0x30, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0xab, 4), (stack, 0xfffffffffffffdac, 4) INDIRECT (unique, 0x10000496, 4) , (const, 0xa5, 4), (unique, 0x10000496, 4) COPY (register, 0x10, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0xab, 4), (stack, 0xfffffffffffffdb0, 4) INDIRECT (unique, 0x1000049a, 4) , (const, 0xa5, 4), (unique, 0x1000049a, 4) COPY (register, 0x8, 4)]
[(stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0xab, 4), (stack, 0xfffffffffffffdb8, 8) INDIRECT (unique, 0x1000049e, 8) , (const, 0xa5, 4), (unique, 0x1000049e, 8) COPY (register, 0x80, 8)]
[(stack, 0xfffffffffffffdd0, 8) INDIRECT (stack, 0xfffffffffffffdd0, 8) , (const, 0xab, 4), (stack, 0xfffffffffffffdd0, 8) INDIRECT (stack, 0xfffffffffffffdd0, 8) , (const, 0xa5, 4), (stack, 0xfffffffffffffdd0, 8) INDIRECT (stack, 0xfffffffffffffdd0, 8) , (const, 0x78, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0xab, 4), (stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0xa5, 4), (stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x78, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xab, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x78, 4)]
[ ---  CBRANCH (ram, 0x25545e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24bc20, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffd98, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8)]
[(stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x1ab, 4)]
[(stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x1ab, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x1ab, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x1ab, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x1ab, 4)]
[(stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x1ab, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ab, 4)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4eff60, 4) COPY (ram, 0x4eff60, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x1ab, 4)]
[(ram, 0x4eff64, 4) COPY (ram, 0x4eff64, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x1ab, 4)]
[(ram, 0x4eff68, 4) COPY (ram, 0x4eff68, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x1ab, 4)]
[(ram, 0x4eff6c, 4) COPY (ram, 0x4eff6c, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x1ab, 4)]
[(ram, 0x4eff70, 8) COPY (ram, 0x4eff70, 8), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x1ab, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xfffffffffffffdd0, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc9, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbe, 4)]
[(stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0xc9, 4), (stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0xbe, 4)]
[(stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0xc9, 4), (stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0xbe, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0xc9, 4), (stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0xbe, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0xc9, 4), (stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0xbe, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0xc9, 4), (stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0xbe, 4)]
[(stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0xc9, 4), (stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0xbe, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0xc9, 4), (stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0xbe, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc9, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xbe, 4)]
[(ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0xd5, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0xc9, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0xc5, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0xc3, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0xbe, 4)]
[(ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0xd5, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0xc9, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0xc5, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0xc3, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0xbe, 4)]
[(ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0xd5, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0xc9, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0xc5, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0xc3, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0xbe, 4)]
[(ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0xd5, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0xc9, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0xc5, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0xc3, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0xbe, 4)]
[(ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0xd5, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0xc9, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0xc5, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0xc3, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0xbe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000506, 8) , (register, 0x0, 8), (unique, 0x10000506, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x28, 8), (register, 0x28, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xfffffffffffffdd0, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x255410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x28, 8), (register, 0x28, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xfffffffffffffdd0, 8) , (const, 0x20, 8)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x10000252, 8) , (unique, 0x10000272, 8) , (register, 0x0, 8), (unique, 0x10000272, 8) COPY (const, 0x2bb750, 8), (unique, 0x10000252, 8) COPY (const, 0x2b67f6, 8), (register, 0x0, 8) CALL (ram, 0x130d70, 8) , (unique, 0x10000242, 8) , (unique, 0x10000262, 8) , (const, 0x5, 8), (unique, 0x10000262, 8) COPY (const, 0x2b718a, 8), (unique, 0x10000242, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a7, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a3, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x195, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x17b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x1a7, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x1a3, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x195, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x17b, 4), (ram, 0x4eff60, 4) MULTIEQUAL (ram, 0x4eff60, 4) , (ram, 0x4eff60, 4) , (ram, 0x4eff60, 4)]
[(ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x1a7, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x1a3, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x195, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x17b, 4), (ram, 0x4eff64, 4) MULTIEQUAL (ram, 0x4eff64, 4) , (ram, 0x4eff64, 4) , (ram, 0x4eff64, 4)]
[(ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x1a7, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x1a3, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x195, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x17b, 4), (ram, 0x4eff68, 4) MULTIEQUAL (ram, 0x4eff68, 4) , (ram, 0x4eff68, 4) , (ram, 0x4eff68, 4)]
[(ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x1a7, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x1a3, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x195, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x17b, 4), (ram, 0x4eff6c, 4) MULTIEQUAL (ram, 0x4eff6c, 4) , (ram, 0x4eff6c, 4) , (ram, 0x4eff6c, 4)]
[(ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x1a7, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x1a3, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x195, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x17b, 4), (ram, 0x4eff70, 8) MULTIEQUAL (ram, 0x4eff70, 8) , (ram, 0x4eff70, 8) , (ram, 0x4eff70, 8)]
[(stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x1a7, 4), (stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x1a3, 4), (stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x195, 4), (stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x17b, 4), (stack, 0xfffffffffffffd98, 8) MULTIEQUAL (stack, 0xfffffffffffffd98, 8) , (stack, 0xfffffffffffffd98, 8) , (stack, 0xfffffffffffffd98, 8)]
[(stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x1a7, 4), (stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x1a3, 4), (stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x195, 4), (stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x17b, 4), (stack, 0xfffffffffffffda0, 8) MULTIEQUAL (stack, 0xfffffffffffffda0, 8) , (stack, 0xfffffffffffffda0, 8) , (stack, 0xfffffffffffffda0, 8)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x1a3, 4), (stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x195, 4), (stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x17b, 4), (stack, 0xfffffffffffffda8, 4) MULTIEQUAL (stack, 0xfffffffffffffda8, 4) , (stack, 0xfffffffffffffda8, 4) , (stack, 0xfffffffffffffda8, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x1a3, 4), (stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x195, 4), (stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x17b, 4), (stack, 0xfffffffffffffdac, 4) MULTIEQUAL (stack, 0xfffffffffffffdac, 4) , (stack, 0xfffffffffffffdac, 4) , (stack, 0xfffffffffffffdac, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x1a7, 4), (stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x1a3, 4), (stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x195, 4), (stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x17b, 4), (stack, 0xfffffffffffffdb0, 4) MULTIEQUAL (stack, 0xfffffffffffffdb0, 4) , (stack, 0xfffffffffffffdb0, 4) , (stack, 0xfffffffffffffdb0, 4)]
[(stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x1a7, 4), (stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x1a3, 4), (stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x195, 4), (stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x17b, 4), (stack, 0xfffffffffffffdb8, 8) MULTIEQUAL (stack, 0xfffffffffffffdb8, 8) , (stack, 0xfffffffffffffdb8, 8) , (stack, 0xfffffffffffffdb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a7, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x195, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x17b, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x2553af, 1)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (unique, 0x3c80, 8) , (register, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000042a, 8) , (unique, 0x100001c5, 4), (unique, 0x1000042a, 8) PTRSUB (unique, 0x1000039a, 8) , (const, 0x0, 8), (unique, 0x1000039a, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0x100001c5, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ed, 8) , (unique, 0x100001c9, 4), (unique, 0x100001ed, 8) CAST (unique, 0x10000516, 8), (unique, 0x10000516, 8) PTRSUB (unique, 0x100003a2, 8) , (const, 0x4, 8), (unique, 0x100003a2, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0x100001c9, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001cd, 8), (unique, 0x100001cd, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000051e, 8) , (unique, 0x100001d5, 4), (unique, 0x1000051e, 8) CAST (unique, 0x100001f5, 8), (unique, 0x100001f5, 8) PTRSUB (unique, 0x100003b2, 8) , (const, 0x8, 8), (unique, 0x100003b2, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0x100001d5, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001d9, 8), (unique, 0x100001d9, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001fd, 8) , (unique, 0x100001e1, 4), (unique, 0x100001fd, 8) CAST (unique, 0x1000052e, 8), (unique, 0x1000052e, 8) INT_ADD (unique, 0x10000526, 8) , (const, 0x4, 8), (unique, 0x10000526, 8) CAST (unique, 0x1000044a, 8), (unique, 0x1000044a, 8) PTRSUB (unique, 0x100003c2, 8) , (const, 0x8, 8), (unique, 0x100003c2, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0x100001e1, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e5, 8), (unique, 0x100001e5, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000536, 8) , (unique, 0xbd80, 8), (unique, 0x10000536, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100003d2, 8) , (const, 0x10, 8), (unique, 0x100003d2, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000050e, 8), (unique, 0x1000050e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x25dcf0, 8) , (unique, 0x3c80, 8) , (unique, 0x3800, 8) , (const, 0x190, 4) , (const, 0x0, 4), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x38, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x40, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdf8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x101, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xfc, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xdc, 4)]
[(ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x101, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0xfc, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0xf9, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x453, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x451, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x44f, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x44e, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0xdc, 4)]
[(ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x101, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0xfc, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0xf9, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x453, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x451, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x44f, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x44e, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0xdc, 4)]
[(ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x101, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0xfc, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0xf9, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x453, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x451, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x44f, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x44e, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0xdc, 4)]
[(ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x101, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0xfc, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0xf9, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x453, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x451, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x44f, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x44e, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0xdc, 4)]
[(ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x101, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0xfc, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0xf9, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x453, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x451, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x44f, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x44e, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0xdc, 4)]
[(stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x101, 4), (stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0xfc, 4), (stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0xdc, 4)]
[(stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x101, 4), (stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0xfc, 4), (stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0xdc, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x101, 4), (stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0xfc, 4), (stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0xdc, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x101, 4), (stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0xfc, 4), (stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0xdc, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x101, 4), (stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0xfc, 4), (stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0xdc, 4)]
[(stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x101, 4), (stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0xfc, 4), (stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0xdc, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x101, 4), (stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0xfc, 4), (stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0xdc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x101, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfc, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xdc, 4)]
[ ---  CBRANCH (ram, 0x2553e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24da60, 8) , (unique, 0x3c80, 8) , (unique, 0x1000053e, 8), (unique, 0x1000053e, 8) CAST (register, 0x0, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdf8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15e, 4)]
[(ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x15e, 4)]
[(ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x15e, 4)]
[(ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x15e, 4)]
[(ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x15e, 4)]
[(ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x15e, 4)]
[(stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x15e, 4)]
[(stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x15e, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x15e, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x15e, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x15e, 4)]
[(stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x15e, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x15e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15e, 4)]
[ ---  CBRANCH (ram, 0x255379, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24da60, 8) , (unique, 0x3c80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x171, 4)]
[(stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x171, 4)]
[(stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x171, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x171, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x171, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x171, 4)]
[(stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x171, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x171, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x171, 4)]
[(ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x174, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x171, 4)]
[(ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x174, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x171, 4)]
[(ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x174, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x171, 4)]
[(ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x174, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x171, 4)]
[(ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x174, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x171, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000546, 8) , (register, 0x0, 4), (unique, 0x10000546, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1c8, 8) , (const, 0x1, 8), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x3c80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xfffffffffffffe00, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x255399, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x116, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x112, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x116, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x112, 4), (ram, 0x4eff60, 4) MULTIEQUAL (ram, 0x4eff60, 4) , (ram, 0x4eff60, 4)]
[(ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x116, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x112, 4), (ram, 0x4eff64, 4) MULTIEQUAL (ram, 0x4eff64, 4) , (ram, 0x4eff64, 4)]
[(ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x116, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x112, 4), (ram, 0x4eff68, 4) MULTIEQUAL (ram, 0x4eff68, 4) , (ram, 0x4eff68, 4)]
[(ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x116, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x112, 4), (ram, 0x4eff6c, 4) MULTIEQUAL (ram, 0x4eff6c, 4) , (ram, 0x4eff6c, 4)]
[(ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x116, 4), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x112, 4), (ram, 0x4eff70, 8) MULTIEQUAL (ram, 0x4eff70, 8) , (ram, 0x4eff70, 8)]
[(stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x116, 4), (stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x112, 4), (stack, 0xfffffffffffffd98, 8) MULTIEQUAL (stack, 0xfffffffffffffd98, 8) , (stack, 0xfffffffffffffd98, 8)]
[(stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x116, 4), (stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x112, 4), (stack, 0xfffffffffffffda0, 8) MULTIEQUAL (stack, 0xfffffffffffffda0, 8) , (stack, 0xfffffffffffffda0, 8)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x116, 4), (stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x112, 4), (stack, 0xfffffffffffffda8, 4) MULTIEQUAL (stack, 0xfffffffffffffda8, 4) , (stack, 0xfffffffffffffda8, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x116, 4), (stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x112, 4), (stack, 0xfffffffffffffdac, 4) MULTIEQUAL (stack, 0xfffffffffffffdac, 4) , (stack, 0xfffffffffffffdac, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x116, 4), (stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x112, 4), (stack, 0xfffffffffffffdb0, 4) MULTIEQUAL (stack, 0xfffffffffffffdb0, 4) , (stack, 0xfffffffffffffdb0, 4)]
[(stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x116, 4), (stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x112, 4), (stack, 0xfffffffffffffdb8, 8) MULTIEQUAL (stack, 0xfffffffffffffdb8, 8) , (stack, 0xfffffffffffffdb8, 8)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x116, 4), (stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x112, 4), (stack, 0xfffffffffffffe00, 8) MULTIEQUAL (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x116, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x112, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x17b270, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000054e, 8), (unique, 0x1000054e, 8) CALL (ram, 0x130d70, 8) , (unique, 0x1000023a, 8) , (unique, 0x1000026a, 8) , (const, 0x5, 8), (unique, 0x1000026a, 8) COPY (const, 0x2babf0, 8), (unique, 0x1000023a, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffdb8, 8) MULTIEQUAL (stack, 0xfffffffffffffdb8, 8) , (stack, 0xfffffffffffffdb8, 8)]
[(stack, 0xfffffffffffffdb0, 4) MULTIEQUAL (stack, 0xfffffffffffffdb0, 4) , (stack, 0xfffffffffffffdb0, 4)]
[(stack, 0xfffffffffffffdac, 4) MULTIEQUAL (stack, 0xfffffffffffffdac, 4) , (stack, 0xfffffffffffffdac, 4)]
[(stack, 0xfffffffffffffda8, 4) MULTIEQUAL (stack, 0xfffffffffffffda8, 4) , (stack, 0xfffffffffffffda8, 4)]
[(stack, 0xfffffffffffffda0, 8) MULTIEQUAL (stack, 0xfffffffffffffda0, 8) , (stack, 0xfffffffffffffda0, 8)]
[(stack, 0xfffffffffffffd98, 8) MULTIEQUAL (stack, 0xfffffffffffffd98, 8) , (stack, 0xfffffffffffffd98, 8)]
[(ram, 0x4eff70, 8) MULTIEQUAL (ram, 0x4eff70, 8) , (ram, 0x4eff70, 8)]
[(ram, 0x4eff6c, 4) MULTIEQUAL (ram, 0x4eff6c, 4) , (ram, 0x4eff6c, 4)]
[(ram, 0x4eff68, 4) MULTIEQUAL (ram, 0x4eff68, 4) , (ram, 0x4eff68, 4)]
[(ram, 0x4eff64, 4) MULTIEQUAL (ram, 0x4eff64, 4) , (ram, 0x4eff64, 4)]
[(ram, 0x4eff60, 4) MULTIEQUAL (ram, 0x4eff60, 4) , (ram, 0x4eff60, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000047a, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2553af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xfffffffffffffe00, 8) , (const, 0x38, 8), (stack, 0xfffffffffffffe00, 8) MULTIEQUAL (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12a, 4)]
[(ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x12a, 4)]
[(ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x12a, 4)]
[(ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x12a, 4)]
[(ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x12a, 4)]
[(ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x12a, 4)]
[(stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x12a, 4)]
[(stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x12a, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x12a, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x12a, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x12a, 4)]
[(stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x12a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12a, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x3c80, 8)]
[(stack, 0xfffffffffffffdb8, 8) MULTIEQUAL (stack, 0xfffffffffffffdb8, 8) , (stack, 0xfffffffffffffdb8, 8) , (stack, 0xfffffffffffffdb8, 8)]
[(stack, 0xfffffffffffffdb0, 4) MULTIEQUAL (stack, 0xfffffffffffffdb0, 4) , (stack, 0xfffffffffffffdb0, 4) , (stack, 0xfffffffffffffdb0, 4)]
[(stack, 0xfffffffffffffdac, 4) MULTIEQUAL (stack, 0xfffffffffffffdac, 4) , (stack, 0xfffffffffffffdac, 4) , (stack, 0xfffffffffffffdac, 4)]
[(stack, 0xfffffffffffffda8, 4) MULTIEQUAL (stack, 0xfffffffffffffda8, 4) , (stack, 0xfffffffffffffda8, 4) , (stack, 0xfffffffffffffda8, 4)]
[(stack, 0xfffffffffffffda0, 8) MULTIEQUAL (stack, 0xfffffffffffffda0, 8) , (stack, 0xfffffffffffffda0, 8) , (stack, 0xfffffffffffffda0, 8)]
[(stack, 0xfffffffffffffd98, 8) MULTIEQUAL (stack, 0xfffffffffffffd98, 8) , (stack, 0xfffffffffffffd98, 8) , (stack, 0xfffffffffffffd98, 8)]
[(ram, 0x4eff70, 8) MULTIEQUAL (ram, 0x4eff70, 8) , (ram, 0x4eff70, 8) , (ram, 0x4eff70, 8)]
[(ram, 0x4eff6c, 4) MULTIEQUAL (ram, 0x4eff6c, 4) , (ram, 0x4eff6c, 4) , (ram, 0x4eff6c, 4)]
[(ram, 0x4eff68, 4) MULTIEQUAL (ram, 0x4eff68, 4) , (ram, 0x4eff68, 4) , (ram, 0x4eff68, 4)]
[(ram, 0x4eff64, 4) MULTIEQUAL (ram, 0x4eff64, 4) , (ram, 0x4eff64, 4) , (ram, 0x4eff64, 4)]
[(ram, 0x4eff60, 4) MULTIEQUAL (ram, 0x4eff60, 4) , (ram, 0x4eff60, 4) , (ram, 0x4eff60, 4)]
[(register, 0x0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000047a, 8) , (unique, 0x1000047a, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x255459, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000556, 8), (unique, 0x10000556, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffd98, 8) INDIRECT (stack, 0xfffffffffffffd98, 8) , (const, 0x156, 4)]
[(stack, 0xfffffffffffffda0, 8) INDIRECT (stack, 0xfffffffffffffda0, 8) , (const, 0x156, 4)]
[(stack, 0xfffffffffffffda8, 4) INDIRECT (stack, 0xfffffffffffffda8, 4) , (const, 0x156, 4)]
[(stack, 0xfffffffffffffdac, 4) INDIRECT (stack, 0xfffffffffffffdac, 4) , (const, 0x156, 4)]
[(stack, 0xfffffffffffffdb0, 4) INDIRECT (stack, 0xfffffffffffffdb0, 4) , (const, 0x156, 4)]
[(stack, 0xfffffffffffffdb8, 8) INDIRECT (stack, 0xfffffffffffffdb8, 8) , (const, 0x156, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x156, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eff60, 4) COPY (ram, 0x4eff60, 4), (ram, 0x4eff60, 4) INDIRECT (ram, 0x4eff60, 4) , (const, 0x156, 4)]
[(ram, 0x4eff64, 4) COPY (ram, 0x4eff64, 4), (ram, 0x4eff64, 4) INDIRECT (ram, 0x4eff64, 4) , (const, 0x156, 4)]
[(ram, 0x4eff68, 4) COPY (ram, 0x4eff68, 4), (ram, 0x4eff68, 4) INDIRECT (ram, 0x4eff68, 4) , (const, 0x156, 4)]
[(ram, 0x4eff6c, 4) COPY (ram, 0x4eff6c, 4), (ram, 0x4eff6c, 4) INDIRECT (ram, 0x4eff6c, 4) , (const, 0x156, 4)]
[(ram, 0x4eff70, 8) COPY (ram, 0x4eff70, 8), (ram, 0x4eff70, 8) INDIRECT (ram, 0x4eff70, 8) , (const, 0x156, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eff60, 4) COPY (ram, 0x4eff60, 4)]
[(ram, 0x4eff64, 4) COPY (ram, 0x4eff64, 4)]
[(ram, 0x4eff68, 4) COPY (ram, 0x4eff68, 4)]
[(ram, 0x4eff6c, 4) COPY (ram, 0x4eff6c, 4)]
[(ram, 0x4eff70, 8) COPY (ram, 0x4eff70, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
