[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000f2, 8) , (const, 0x0, 8), (unique, 0x100000f2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[(register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x43b2fc, 4), (register, 0xb0, 4) INT_AND (unique, 0x10000071, 4) , (const, 0xfd4fca, 4), (unique, 0x10000071, 4) INT_2COMP (unique, 0x10000075, 4), (unique, 0x10000075, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)]
[(register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x3b2fc, 4), (register, 0xa8, 4) INT_AND (unique, 0x10000091, 4) , (const, 0xfd4fca, 4), (unique, 0x10000091, 4) INT_2COMP (unique, 0x10000095, 4), (unique, 0x10000095, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8), (register, 0x0, 8) CAST (unique, 0x10000142, 8), (unique, 0x10000142, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x100, 8)]
[ ---  CBRANCH (ram, 0x1e77d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000142, 8), (unique, 0x10000142, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x100, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xc, 4)]
[(unique, 0x1000013a, 4) COPY (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x1e7774, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000a5, 4) , (const, 0x0, 4), (unique, 0x100000a5, 4) INT_AND (register, 0x10, 4) , (const, 0x2, 4)]
[(unique, 0x1000013e, 4) COPY (register, 0xb0, 4)]
[(register, 0xa8, 4) MULTIEQUAL (unique, 0x1000013a, 4) , (unique, 0x1000013e, 4)]
[ ---  CBRANCH (ram, 0x1e77e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000b1, 4) , (const, 0x0, 4), (unique, 0x100000b1, 4) INT_AND (register, 0x10, 4) , (const, 0x4, 4)]
[(register, 0xa8, 4) INT_OR (register, 0xa8, 4) , (const, 0x100, 4), (register, 0xa8, 4) INT_AND (register, 0xa8, 4) , (const, 0xffffffbf, 4)]
[ ---  BRANCH (ram, 0x1e777b, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x18, 1), (unique, 0x3800, 8) CAST (unique, 0x10000156, 8), (unique, 0x10000156, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8), (register, 0x18, 1) INT_OR (unique, 0x100000e9, 1) , (unique, 0x100000ea, 1), (unique, 0x100000ea, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (unique, 0x100000e9, 1) INT_OR (unique, 0x100000eb, 1) , (unique, 0x100000ec, 1), (unique, 0x100000eb, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x6f, 1), (register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x4, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_RIGHT (unique, 0x10000152, 4) , (const, 0x3, 4), (unique, 0x10000152, 4) CAST (register, 0x10, 4), (unique, 0x100000ec, 1) INT_LEFT (register, 0x206, 1) , (const, 0x7, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1e77f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x10, 4), (register, 0x0, 4) CALL (ram, 0x1dfa30, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x0, 8) , (register, 0xa8, 4), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x30, 8), (register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x18, 4) COPY (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1e77fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CALL (ram, 0x1e7040, 8) , (unique, 0x1000015e, 8), (unique, 0x1000015e, 8) CAST (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x18, 4)]
