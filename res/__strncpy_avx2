[ ---  CBRANCH (ram, 0x447c40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[(register, 0x0, 8) COPY (register, 0x38, 8)]
[(register, 0x1200, 32) INT_ZEXT (unique, 0xc8a80, 16), (unique, 0xc8a80, 16) CALLOTHER (const, 0x1da, 4) , (register, 0x1200, 16) , (register, 0x1200, 16), (register, 0x1200, 16) SUBPIECE (register, 0x1200, 32) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x44758e, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 4) , (const, 0x41, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7f, 4), (register, 0x8, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(register, 0x1240, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x1000012c, 8) , (unique, 0x10000134, 8), (unique, 0x10000134, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x1000012c, 8) INT_AND (unique, 0x10000dd1, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000dd1, 8) CAST (register, 0x10, 8), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4477ac, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (const, 0x22, 8)]
[ ---  CBRANCH (ram, 0x4475d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1260, 32)]
[(register, 0x10, 8) INT_OR (unique, 0x1000012c, 8) , (unique, 0x1000014c, 8), (unique, 0x1000014c, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1240, 32)]
[ ---  CBRANCH (ram, 0x4477a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (const, 0x42, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(register, 0x80, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffe0, 8) , (const, 0x1, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x44774d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  CBRANCH (ram, 0x4475d9, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x80, 4) , (unique, 0x1a680, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  CBRANCH (ram, 0x447630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)]
[ ---  BRANCH (ram, 0x447370, 1)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(register, 0x80, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffe0, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x4475d6, 1)]
[(register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x10, 8) INT_OR (unique, 0x10000004, 8) , (unique, 0x1000000c, 8), (unique, 0x1000000c, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x10000004, 8) INT_AND (unique, 0x10000de9, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000de9, 8) CAST (register, 0x10, 8), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4), (register, 0x30, 8) CAST (unique, 0x10000de1, 8), (unique, 0x10000de1, 8) INT_AND (unique, 0x10000dd9, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000dd9, 8) CAST (register, 0x30, 8)]
[(register, 0x80, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x447790, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x90, 8), (register, 0x90, 8) CAST (unique, 0x10000df1, 8), (unique, 0x10000df1, 8) INT_ADD (unique, 0x10000014, 8) , (const, 0x21, 8), (unique, 0x10000014, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)]
[ ---  CBRANCH (ram, 0x447739, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) CAST (unique, 0x10000df9, 8), (unique, 0x10000df9, 8) PTRADD (unique, 0x100006db, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100006db, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x447be4, 1)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  CBRANCH (ram, 0x4475d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x30, 8) CAST (unique, 0x10000e01, 8), (unique, 0x10000e01, 8) PTRADD (unique, 0x10000573, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000573, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(register, 0x10, 8) INT_OR (unique, 0x10000024, 8) , (unique, 0x1000002c, 8), (unique, 0x1000002c, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x10000024, 8) INT_AND (register, 0x10, 8) , (const, 0xffffffff00000000, 8), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x447780, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x90, 8), (register, 0x90, 8) CAST (unique, 0x10000e09, 8), (unique, 0x10000e09, 8) INT_ADD (unique, 0x10000014, 8) , (const, 0x41, 8)]
[ ---  CBRANCH (ram, 0x447720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) CAST (unique, 0x10000e11, 8), (unique, 0x10000e11, 8) PTRADD (unique, 0x100006cb, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100006cb, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x447be4, 1)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x20, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x10000cd4, 8) INT_ZEXT (unique, 0x10000ce4, 4), (unique, 0x10000ce4, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x10000ccb, 8) CAST (unique, 0x10000e19, 8), (unique, 0x10000e19, 8) PTRADD (unique, 0x10000cdc, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000cdc, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4475d9, 1) , (unique, 0x10000cd3, 1), (unique, 0x10000cd3, 1) INT_LESSEQUAL (register, 0x80, 4) , (unique, 0x10000ce4, 4), (unique, 0x10000ce4, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  CBRANCH (ram, 0x447640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x30, 8) CAST (unique, 0x10000e21, 8), (unique, 0x10000e21, 8) PTRADD (unique, 0x100005ab, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100005ab, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x20, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  BRANCH (ram, 0x4475d9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000e29, 8), (unique, 0x10000e29, 8) PTRADD (unique, 0x1000043b, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000043b, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x1240, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x38, 8) CAST (unique, 0x10000e49, 8), (unique, 0x10000e49, 8) INT_SUB (unique, 0x10000e41, 8) , (register, 0x8, 8), (unique, 0x10000e41, 8) CAST (register, 0x38, 8), (register, 0x30, 8) CAST (unique, 0x10000e39, 8), (unique, 0x10000e39, 8) INT_AND (unique, 0x10000e31, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000e31, 8) CAST (register, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x10000054, 8) , (unique, 0x1000005c, 8), (unique, 0x1000005c, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x10000054, 8) INT_AND (register, 0x10, 8) , (const, 0xffffffff00000000, 8), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x30, 8) CAST (unique, 0x10000e39, 8), (unique, 0x10000e39, 8) INT_AND (unique, 0x10000e31, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000e31, 8) CAST (register, 0x30, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x8, 8) COPY (const, 0x40, 8)]
[(unique, 0x10000d39, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000e39, 8), (unique, 0x10000e39, 8) INT_AND (unique, 0x10000e31, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000e31, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x447760, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (unique, 0x10000423, 8) , (register, 0x80, 8) , (const, 0x1, 8), (unique, 0x10000423, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffa0, 8), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (const, 0x60, 8), (register, 0x80, 8) INT_OR (unique, 0x10000e59, 8) , (unique, 0x1000004c, 8), (unique, 0x10000e59, 8) CAST (register, 0x80, 8), (unique, 0x1000004c, 8) INT_2COMP (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x80, 8) PTRADD (register, 0x10, 8) , (register, 0x8, 8) , (const, 0x1, 8), (register, 0x200, 1) INT_CARRY (unique, 0x10000e51, 8) , (register, 0x8, 8), (unique, 0x10000e51, 8) CAST (register, 0x10, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x447a20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x10000054, 8) , (unique, 0x10000074, 8), (unique, 0x10000074, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0x60, 8)]
[ ---  CBRANCH (ram, 0x447760, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) CAST (unique, 0x10000e61, 8), (unique, 0x10000e61, 8) INT_SUB (register, 0x80, 8) , (const, 0x80, 8), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4476f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1260, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x10000054, 8) , (unique, 0x1000008c, 8), (unique, 0x1000008c, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1280, 32), (register, 0x1280, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0x80, 8)]
[ ---  CBRANCH (ram, 0x447760, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (unique, 0x1000041b, 8) , (register, 0x80, 8) , (const, 0x1, 8), (unique, 0x1000041b, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffff60, 8), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4476e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1280, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x10000054, 8) , (unique, 0x100000a4, 8), (unique, 0x100000a4, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x447760, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (unique, 0x10000413, 8) , (register, 0x80, 8) , (const, 0x1, 8), (unique, 0x10000413, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffff40, 8), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x447a20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x20, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x10000054, 8) , (unique, 0x100000bc, 8), (unique, 0x100000bc, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x447760, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (unique, 0x1000040b, 8) , (register, 0x80, 8) , (const, 0x1, 8), (unique, 0x1000040b, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffff20, 8), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x447a20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x20, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x10000054, 8) , (unique, 0x100000d4, 8), (unique, 0x100000d4, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0xe0, 8)]
[ ---  CBRANCH (ram, 0x447760, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) CAST (unique, 0x10000e69, 8), (unique, 0x10000e69, 8) INT_SUB (register, 0x80, 8) , (const, 0x100, 8), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4476f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1260, 32), (unique, 0x3400, 8) CAST (unique, 0x10000e71, 8), (unique, 0x10000e71, 8) PTRADD (unique, 0x1000065b, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000065b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x1260, 32) MULTIEQUAL (register, 0x1260, 32) , (register, 0x1260, 32)]
[ ---  BRANCH (ram, 0x447a30, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1260, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x20, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x100000f4, 8) , (unique, 0x100000fc, 8), (unique, 0x100000fc, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x100000f4, 8) INT_AND (unique, 0x10000eb9, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000eb9, 8) CAST (register, 0x10, 8), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (register, 0x1220, 32), (register, 0x1260, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1260, 32) , (register, 0x1240, 32), (register, 0x1260, 32) CALLOTHER (const, 0x237, 4) , (register, 0x12c0, 32) , (register, 0x12e0, 32), (register, 0x1240, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1280, 32) , (register, 0x12a0, 32), (register, 0x12e0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x12c0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x12a0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x1280, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x10, 8) CAST (unique, 0x10000e99, 8), (unique, 0x10000e99, 8) INT_SUB (unique, 0x10000e89, 8) , (unique, 0x10000e91, 8), (unique, 0x10000e91, 8) CAST (register, 0x30, 8), (unique, 0x10000e89, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000e81, 8), (unique, 0x10000e81, 8) INT_AND (unique, 0x10000e79, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x10000e79, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x20, 8)]
[(unique, 0x10000da1, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000e81, 8), (unique, 0x10000e81, 8) INT_AND (unique, 0x10000e79, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x10000e79, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x20, 8)]
[(unique, 0x10000db1, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000eb1, 8), (unique, 0x10000eb1, 8) INT_SUB (unique, 0x10000ea1, 8) , (unique, 0x10000ea9, 8), (unique, 0x10000ea9, 8) CAST (register, 0x10, 8), (unique, 0x10000ea1, 8) CAST (register, 0x38, 8), (register, 0x10, 8) CAST (unique, 0x10000e99, 8), (unique, 0x10000e99, 8) INT_SUB (unique, 0x10000e89, 8) , (unique, 0x10000e91, 8), (unique, 0x10000e91, 8) CAST (register, 0x30, 8), (unique, 0x10000e89, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000e81, 8), (unique, 0x10000e81, 8) INT_AND (unique, 0x10000e79, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x10000e79, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x447b10, 1) , (unique, 0x100002e9, 1), (unique, 0x100002e9, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (unique, 0x3e80, 8) , (const, 0xffffffffffffff80, 8) , (const, 0x1, 8), (register, 0x200, 1) INT_LESS (const, 0x7f, 8) , (unique, 0x3e80, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x100004c3, 8) , (register, 0x80, 8) , (const, 0x1, 8), (unique, 0x100004c3, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) CAST (unique, 0x10000e99, 8), (unique, 0x10000e99, 8) INT_SUB (unique, 0x10000e89, 8) , (unique, 0x10000e91, 8), (unique, 0x10000e91, 8) CAST (register, 0x30, 8), (unique, 0x10000e89, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000e81, 8), (unique, 0x10000e81, 8) INT_AND (unique, 0x10000e79, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x10000e79, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x20, 8)]
[(unique, 0x10000356, 8) MULTIEQUAL (unique, 0x10000da1, 8) , (unique, 0x10000da9, 8)]
[(unique, 0x1000035e, 8) MULTIEQUAL (unique, 0x10000db1, 8) , (unique, 0x10000db9, 8)]
[(unique, 0x10000366, 32) MULTIEQUAL (register, 0x1280, 32) , (register, 0x1280, 32)]
[(unique, 0x10000386, 32) MULTIEQUAL (register, 0x12a0, 32) , (register, 0x12a0, 32)]
[(unique, 0x100003a6, 32) MULTIEQUAL (register, 0x12c0, 32) , (register, 0x12c0, 32)]
[(unique, 0x100003c6, 32) MULTIEQUAL (register, 0x12e0, 32) , (register, 0x12e0, 32)]
[(unique, 0x100003e6, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x100003ef, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x44752f, 1) , (unique, 0x100003ee, 1), (unique, 0x100003ee, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035e, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000366, 32)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000386, 32), (unique, 0x3100, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x100003a6, 32), (unique, 0x3100, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x100003c6, 32), (unique, 0x3100, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x1000010c, 8) , (unique, 0x10000114, 8), (unique, 0x10000114, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x1000010c, 8) INT_AND (unique, 0x100003ef, 8) , (const, 0xffffffff00000000, 8), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (register, 0x1220, 32), (register, 0x1260, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1260, 32) , (register, 0x1240, 32), (register, 0x1260, 32) CALLOTHER (const, 0x237, 4) , (register, 0x12c0, 32) , (register, 0x12e0, 32), (register, 0x12e0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000356, 8) , (const, 0x7, 8) , (const, 0x20, 8), (register, 0x12c0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000356, 8) , (const, 0x6, 8) , (const, 0x20, 8), (register, 0x1240, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1280, 32) , (register, 0x12a0, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000356, 8) , (const, 0x5, 8) , (const, 0x20, 8), (register, 0x1280, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x10000356, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(unique, 0x10000da9, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x10000356, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(unique, 0x10000db9, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x447b10, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (unique, 0x100003e6, 8) , (const, 0xffffffffffffff80, 8) , (const, 0x1, 8), (register, 0x200, 1) INT_LESS (unique, 0x100003e6, 8) , (const, 0x80, 8)]
[ ---  CBRANCH (ram, 0x447650, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x10000366, 32)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035e, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000366, 32)]
[(register, 0x80, 8) PTRADD (unique, 0x100003e6, 8) , (unique, 0x10000cf3, 8) , (const, 0x1, 8), (unique, 0x10000cf3, 8) INT_SUB (const, 0x7f, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000ec1, 8), (unique, 0x10000ec1, 8) PTRADD (unique, 0x100005c3, 8) , (unique, 0x100005bb, 8) , (const, 0x1, 8), (unique, 0x100005c3, 8) PTRSUB (unique, 0x1000035e, 8) , (const, 0x0, 8), (unique, 0x100005bb, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  BRANCH (ram, 0x447a50, 1)]
[ ---  CBRANCH (ram, 0x447670, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x10000386, 32)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035e, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000366, 32)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000386, 32), (unique, 0x3100, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(register, 0x80, 8) PTRADD (unique, 0x100003e6, 8) , (unique, 0x10000cfb, 8) , (const, 0x1, 8), (unique, 0x10000cfb, 8) INT_SUB (const, 0x5f, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000ec9, 8), (unique, 0x10000ec9, 8) PTRADD (unique, 0x100005f3, 8) , (unique, 0x100005e3, 8) , (const, 0x1, 8), (unique, 0x100005f3, 8) PTRSUB (unique, 0x100005eb, 8) , (const, 0x0, 8), (unique, 0x100005eb, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x1, 8) , (const, 0x20, 8), (unique, 0x100005e3, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  BRANCH (ram, 0x447a50, 1)]
[ ---  CBRANCH (ram, 0x447690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x100003a6, 32)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035e, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000366, 32)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000386, 32), (unique, 0x3100, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x100003a6, 32), (unique, 0x3100, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(register, 0x80, 8) PTRADD (unique, 0x100003e6, 8) , (unique, 0x10000d03, 8) , (const, 0x1, 8), (unique, 0x10000d03, 8) INT_SUB (const, 0x3f, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000ed1, 8), (unique, 0x10000ed1, 8) PTRADD (unique, 0x1000062b, 8) , (unique, 0x1000061b, 8) , (const, 0x1, 8), (unique, 0x1000062b, 8) PTRSUB (unique, 0x10000623, 8) , (const, 0x0, 8), (unique, 0x10000623, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x2, 8) , (const, 0x20, 8), (unique, 0x1000061b, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  BRANCH (ram, 0x447a50, 1)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x100003c6, 32)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035e, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000366, 32)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000386, 32), (unique, 0x3100, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x100003a6, 32), (unique, 0x3100, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x100003c6, 32), (unique, 0x3100, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(register, 0x80, 8) PTRADD (unique, 0x100003e6, 8) , (unique, 0x10000ceb, 8) , (const, 0x1, 8), (unique, 0x10000ceb, 8) INT_SUB (const, 0x1f, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000ed9, 8), (unique, 0x10000ed9, 8) PTRADD (unique, 0x1000055b, 8) , (unique, 0x1000054b, 8) , (const, 0x1, 8), (unique, 0x1000055b, 8) PTRSUB (unique, 0x10000553, 8) , (const, 0x0, 8), (unique, 0x10000553, 8) PTRADD (unique, 0x1000035e, 8) , (const, 0x3, 8) , (const, 0x20, 8), (unique, 0x1000054b, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  BRANCH (ram, 0x447a50, 1)]
[(register, 0x12e0, 32) MULTIEQUAL (register, 0x12e0, 32) , (register, 0x12e0, 32)]
[(register, 0x12c0, 32) MULTIEQUAL (register, 0x12c0, 32) , (register, 0x12c0, 32)]
[(register, 0x12a0, 32) MULTIEQUAL (register, 0x12a0, 32) , (register, 0x12a0, 32)]
[(register, 0x1280, 32) MULTIEQUAL (register, 0x1280, 32) , (register, 0x1280, 32)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x447b60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x10000250, 8) , (unique, 0x10000258, 8), (unique, 0x10000258, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x10000250, 8) INT_AND (register, 0x10, 8) , (const, 0xffffffff00000000, 8), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1280, 32)]
[ ---  CBRANCH (ram, 0x447760, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x207, 1) INT_SLESS (unique, 0x10000ee9, 8) , (const, 0x0, 8), (unique, 0x10000ee9, 8) CAST (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x60, 8) , (const, 0x1, 8), (register, 0x20b, 1) INT_SCARRY (unique, 0x10000ee1, 8) , (const, 0x60, 8), (unique, 0x10000ee1, 8) CAST (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x4476e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1280, 32), (unique, 0x3400, 8) CAST (unique, 0x10000ef1, 8), (unique, 0x10000ef1, 8) PTRADD (unique, 0x1000064b, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000064b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1280, 32) MULTIEQUAL (register, 0x1280, 32) , (register, 0x1280, 32)]
[ ---  BRANCH (ram, 0x447a30, 1)]
[(register, 0x10, 8) INT_OR (unique, 0x10000250, 8) , (unique, 0x10000268, 8), (unique, 0x10000268, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12a0, 32)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1280, 32)]
[(register, 0x8, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x447760, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x40, 8) , (const, 0x1, 8), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4476d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x12a0, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x447a30, 1)]
[(register, 0x10, 8) INT_OR (unique, 0x10000250, 8) , (unique, 0x10000280, 8), (unique, 0x10000280, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12c0, 32)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x12a0, 32), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x447760, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x20, 8) , (const, 0x1, 8), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (const, 0x20, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000d39, 8) , (unique, 0x10000d39, 8) , (unique, 0x10000d39, 8) , (unique, 0x10000d39, 8) , (unique, 0x10000d39, 8) , (unique, 0x10000d39, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x447700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x20, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000ef9, 8), (unique, 0x10000ef9, 8) PTRADD (unique, 0x1000066b, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000066b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) CAST (unique, 0x10000f01, 8), (unique, 0x10000f01, 8) PTRADD (unique, 0x1000067b, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000067b, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  CBRANCH (ram, 0x4475d9, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x80, 4) , (unique, 0x1a680, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  CBRANCH (ram, 0x4476c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x12c0, 32), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12e0, 32)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  CBRANCH (ram, 0x4475d9, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x80, 4) , (unique, 0x1a680, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (unique, 0x10000ccb, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4478b0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x20, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (unique, 0x10000cd4, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1260, 32), (unique, 0x3a00, 8) CAST (unique, 0x10000f11, 8), (unique, 0x10000f11, 8) PTRADD (unique, 0x10000913, 8) , (unique, 0x10000903, 8) , (const, 0x1, 8), (unique, 0x10000913, 8) PTRSUB (unique, 0x1000090b, 8) , (const, 0x0, 8), (unique, 0x1000090b, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000903, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000f09, 8), (unique, 0x10000f09, 8) PTRADD (unique, 0x100008eb, 8) , (unique, 0x100008db, 8) , (const, 0x1, 8), (unique, 0x100008eb, 8) PTRSUB (unique, 0x100008e3, 8) , (const, 0x0, 8), (unique, 0x100008e3, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x100008db, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000f19, 8), (unique, 0x10000f19, 8) PTRADD (unique, 0x1000092b, 8) , (unique, 0x10000923, 8) , (const, 0x1, 8), (unique, 0x1000092b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x10000923, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x447a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (unique, 0x10000d23, 8) , (const, 0x1, 8), (unique, 0x10000d23, 8) INT_SUB (const, 0xffffffffffffffff, 8) , (register, 0x10, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447880, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000088b, 8) , (unique, 0x5300, 16), (unique, 0x1000088b, 8) CAST (unique, 0x10000f31, 8), (unique, 0x10000f31, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x5300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0xbb300, 16), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x1000085b, 8), (unique, 0x1000085b, 8) CAST (unique, 0x10000f21, 8), (unique, 0x10000f21, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5300, 16), (unique, 0x5300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0xbb300, 16), (unique, 0x3a00, 8) CAST (unique, 0x10000f39, 8), (unique, 0x10000f39, 8) PTRADD (unique, 0x100008ab, 8) , (unique, 0x1000089b, 8) , (const, 0x1, 8), (unique, 0x100008ab, 8) PTRSUB (unique, 0x100008a3, 8) , (const, 0x0, 8), (unique, 0x100008a3, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x1000089b, 8) INT_ADD (register, 0x10, 8) , (const, 0x11, 8), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000f29, 8), (unique, 0x10000f29, 8) PTRADD (unique, 0x1000087b, 8) , (unique, 0x1000086b, 8) , (const, 0x1, 8), (unique, 0x1000087b, 8) PTRSUB (unique, 0x10000873, 8) , (const, 0x0, 8), (unique, 0x10000873, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x1000086b, 8) INT_ADD (register, 0x10, 8) , (const, 0x11, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000f41, 8), (unique, 0x10000f41, 8) PTRADD (unique, 0x100008c3, 8) , (unique, 0x100008bb, 8) , (const, 0x1, 8), (unique, 0x100008c3, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x100008bb, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x447a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (unique, 0x10000d1b, 8) , (const, 0x1, 8), (unique, 0x10000d1b, 8) INT_SUB (const, 0xffffffffffffffff, 8) , (register, 0x10, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447850, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000f59, 8) , (unique, 0xbd80, 8), (unique, 0x10000f59, 8) CAST (unique, 0x10000813, 8), (unique, 0x10000813, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000f49, 8), (unique, 0x10000f49, 8) CAST (unique, 0x100007e3, 8), (unique, 0x100007e3, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000f61, 8) , (unique, 0xbd80, 8), (unique, 0x10000f61, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000833, 8) , (unique, 0x10000823, 8) , (const, 0x1, 8), (unique, 0x10000833, 8) PTRSUB (unique, 0x1000082b, 8) , (const, 0x0, 8), (unique, 0x1000082b, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000823, 8) INT_ADD (register, 0x10, 8) , (const, 0x19, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000f51, 8), (unique, 0x10000f51, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000803, 8) , (unique, 0x100007f3, 8) , (const, 0x1, 8), (unique, 0x10000803, 8) PTRSUB (unique, 0x100007fb, 8) , (const, 0x0, 8), (unique, 0x100007fb, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x100007f3, 8) INT_ADD (register, 0x10, 8) , (const, 0x19, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000f69, 8), (unique, 0x10000f69, 8) PTRADD (unique, 0x1000084b, 8) , (unique, 0x10000843, 8) , (const, 0x1, 8), (unique, 0x1000084b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x10000843, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x447a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (unique, 0x10000d13, 8) , (const, 0x1, 8), (unique, 0x10000d13, 8) INT_SUB (const, 0xffffffffffffffff, 8) , (register, 0x10, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447820, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000f79, 8) , (unique, 0xbc80, 4), (unique, 0x10000f79, 8) CAST (unique, 0x10000773, 8), (unique, 0x10000773, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000f71, 8), (unique, 0x10000f71, 8) CAST (unique, 0x1000076b, 8), (unique, 0x1000076b, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000f89, 8) , (unique, 0xbc80, 4), (unique, 0x10000f89, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100007bb, 8) , (unique, 0x100007ab, 8) , (const, 0x1, 8), (unique, 0x100007bb, 8) PTRSUB (unique, 0x100007b3, 8) , (const, 0x0, 8), (unique, 0x100007b3, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x100007ab, 8) INT_ADD (register, 0x10, 8) , (const, 0x1d, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000f81, 8), (unique, 0x10000f81, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000793, 8) , (unique, 0x10000783, 8) , (const, 0x1, 8), (unique, 0x10000793, 8) PTRSUB (unique, 0x1000078b, 8) , (const, 0x0, 8), (unique, 0x1000078b, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000783, 8) INT_ADD (register, 0x10, 8) , (const, 0x1d, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000f91, 8), (unique, 0x10000f91, 8) PTRADD (unique, 0x100007d3, 8) , (unique, 0x100007cb, 8) , (const, 0x1, 8), (unique, 0x100007d3, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x100007cb, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x447a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (unique, 0x10000d0b, 8) , (const, 0x1, 8), (unique, 0x10000d0b, 8) INT_SUB (const, 0xffffffffffffffff, 8) , (register, 0x10, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000fa1, 8) , (unique, 0xbc80, 4), (unique, 0x10000fa1, 8) CAST (unique, 0x10000753, 8), (unique, 0x10000753, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000f99, 8), (unique, 0x10000f99, 8) CAST (unique, 0x1000074b, 8), (unique, 0x1000074b, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000fa9, 8), (unique, 0x10000fa9, 8) PTRADD (unique, 0x1000075b, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x1000075b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4477e0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000fb9, 8) , (unique, 0xbc00, 2), (unique, 0x10000fb9, 8) CAST (unique, 0x10000723, 8), (unique, 0x10000723, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000fb1, 8), (unique, 0x10000fb1, 8) CAST (unique, 0x1000071b, 8), (unique, 0x1000071b, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) PTRADD (unique, 0x1000072b, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x1000072b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000fc1, 8), (unique, 0x10000fc1, 8) PTRADD (unique, 0x1000073b, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0x1000073b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4477c0, 1) , (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000fd1, 8) , (unique, 0xbc00, 2), (unique, 0x10000fd1, 8) CAST (unique, 0x10000703, 8), (unique, 0x10000703, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000fc9, 8), (unique, 0x10000fc9, 8) CAST (unique, 0x100006fb, 8), (unique, 0x100006fb, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000fd9, 8), (unique, 0x10000fd9, 8) PTRADD (unique, 0x1000070b, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x1000070b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000583, 8) , (const, 0x0, 1), (unique, 0x10000583, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000fe1, 8), (unique, 0x10000fe1, 8) PTRADD (unique, 0x1000058b, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x1000058b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x12c0, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x447a30, 1)]
[(register, 0x8, 8) INT_AND (unique, 0x10000fe9, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000fe9, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x80, 8) , (const, 0x80, 8) , (const, 0x1, 8)]
[(unique, 0x10000d81, 8) COPY (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x60, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x447765, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000ff9, 8) , (const, 0x0, 8), (unique, 0x10000ff9, 8) CAST (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x60, 8) , (const, 0x1, 8), (register, 0x20b, 1) INT_SCARRY (unique, 0x10000ff1, 8) , (const, 0x60, 8), (unique, 0x10000ff1, 8) CAST (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1280, 32)]
[(unique, 0x10000d89, 8) COPY (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x40, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x447765, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x1f, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x12a0, 32), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(unique, 0x10000d91, 8) COPY (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x20, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x447765, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x1f, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x12c0, 32), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(unique, 0x10000d99, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x447765, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x1f, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x12e0, 32), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x20, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000d81, 8) , (unique, 0x10000d89, 8) , (unique, 0x10000d91, 8) , (unique, 0x10000d99, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) CAST (unique, 0x10001001, 8), (unique, 0x10001001, 8) PTRADD (unique, 0x100006ab, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100006ab, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) CAST (unique, 0x10001009, 8), (unique, 0x10001009, 8) PTRADD (unique, 0x100006bb, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100006bb, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x447be4, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3a00, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3a00, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (unique, 0x10000ccb, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4479a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x41, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x10, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1260, 32), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b43, 8) , (unique, 0xba80, 1), (unique, 0x10000b43, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000b2b, 8), (unique, 0x10000b2b, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447980, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x20, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1260, 32), (unique, 0x3a00, 8) CAST (unique, 0x10001029, 8), (unique, 0x10001029, 8) PTRADD (unique, 0x10000b0b, 8) , (unique, 0x10001021, 8) , (const, 0x1, 8), (unique, 0x10001021, 8) CAST (register, 0x80, 8), (unique, 0x10000b0b, 8) PTRSUB (unique, 0x10000b03, 8) , (const, 0x0, 8), (unique, 0x10000b03, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10001019, 8), (unique, 0x10001019, 8) PTRADD (unique, 0x10000aeb, 8) , (unique, 0x10001011, 8) , (const, 0x1, 8), (unique, 0x10001011, 8) CAST (register, 0x80, 8), (unique, 0x10000aeb, 8) PTRSUB (unique, 0x10000ae3, 8) , (const, 0x0, 8), (unique, 0x10000ae3, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447960, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x10, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000aab, 8) , (unique, 0x5300, 16), (unique, 0x10000aab, 8) CAST (unique, 0x10001049, 8), (unique, 0x10001049, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x5300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0xbb300, 16), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x10000a7b, 8), (unique, 0x10000a7b, 8) CAST (unique, 0x10001031, 8), (unique, 0x10001031, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5300, 16), (unique, 0x5300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0xbb300, 16), (unique, 0x3a00, 8) CAST (unique, 0x10001059, 8), (unique, 0x10001059, 8) PTRADD (unique, 0x10000acb, 8) , (unique, 0x10001051, 8) , (const, 0x1, 8), (unique, 0x10001051, 8) CAST (unique, 0x10000abb, 8), (unique, 0x10000acb, 8) PTRSUB (unique, 0x10000ac3, 8) , (const, 0x0, 8), (unique, 0x10000ac3, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000abb, 8) PTRADD (register, 0x80, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10001041, 8), (unique, 0x10001041, 8) PTRADD (unique, 0x10000a9b, 8) , (unique, 0x10001039, 8) , (const, 0x1, 8), (unique, 0x10001039, 8) CAST (unique, 0x10000a8b, 8), (unique, 0x10000a9b, 8) PTRSUB (unique, 0x10000a93, 8) , (const, 0x0, 8), (unique, 0x10000a93, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000a8b, 8) PTRADD (register, 0x80, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447940, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x8, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001079, 8) , (unique, 0xbd80, 8), (unique, 0x10001079, 8) CAST (unique, 0x10000a4b, 8), (unique, 0x10000a4b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001061, 8), (unique, 0x10001061, 8) CAST (unique, 0x10000a1b, 8), (unique, 0x10000a1b, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001089, 8) , (unique, 0xbd80, 8), (unique, 0x10001089, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000a6b, 8) , (unique, 0x10001081, 8) , (const, 0x1, 8), (unique, 0x10001081, 8) CAST (unique, 0x10000a5b, 8), (unique, 0x10000a6b, 8) PTRSUB (unique, 0x10000a63, 8) , (const, 0x0, 8), (unique, 0x10000a63, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000a5b, 8) PTRADD (register, 0x80, 8) , (const, 0x18, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001071, 8), (unique, 0x10001071, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000a3b, 8) , (unique, 0x10001069, 8) , (const, 0x1, 8), (unique, 0x10001069, 8) CAST (unique, 0x10000a2b, 8), (unique, 0x10000a3b, 8) PTRSUB (unique, 0x10000a33, 8) , (const, 0x0, 8), (unique, 0x10000a33, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000a2b, 8) PTRADD (register, 0x80, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447920, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x4, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100010a9, 8) , (unique, 0xbc80, 4), (unique, 0x100010a9, 8) CAST (unique, 0x100009eb, 8), (unique, 0x100009eb, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001091, 8), (unique, 0x10001091, 8) CAST (unique, 0x100009bb, 8), (unique, 0x100009bb, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100010b9, 8) , (unique, 0xbc80, 4), (unique, 0x100010b9, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000a0b, 8) , (unique, 0x100010b1, 8) , (const, 0x1, 8), (unique, 0x100010b1, 8) CAST (unique, 0x100009fb, 8), (unique, 0x10000a0b, 8) PTRSUB (unique, 0x10000a03, 8) , (const, 0x0, 8), (unique, 0x10000a03, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x100009fb, 8) PTRADD (register, 0x80, 8) , (const, 0x1c, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100010a1, 8), (unique, 0x100010a1, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100009db, 8) , (unique, 0x10001099, 8) , (const, 0x1, 8), (unique, 0x10001099, 8) CAST (unique, 0x100009cb, 8), (unique, 0x100009db, 8) PTRSUB (unique, 0x100009d3, 8) , (const, 0x0, 8), (unique, 0x100009d3, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x100009cb, 8) PTRADD (register, 0x80, 8) , (const, 0x1c, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447900, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x2, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100010d9, 8) , (unique, 0xbc00, 2), (unique, 0x100010d9, 8) CAST (unique, 0x1000098b, 8), (unique, 0x1000098b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100010c1, 8), (unique, 0x100010c1, 8) CAST (unique, 0x1000095b, 8), (unique, 0x1000095b, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100010e9, 8) , (unique, 0xbc00, 2), (unique, 0x100010e9, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100009ab, 8) , (unique, 0x100010e1, 8) , (const, 0x1, 8), (unique, 0x100010e1, 8) CAST (unique, 0x1000099b, 8), (unique, 0x100009ab, 8) PTRSUB (unique, 0x100009a3, 8) , (const, 0x0, 8), (unique, 0x100009a3, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x1000099b, 8) PTRADD (register, 0x80, 8) , (const, 0x1e, 8) , (const, 0x1, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100010d1, 8), (unique, 0x100010d1, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000097b, 8) , (unique, 0x100010c9, 8) , (const, 0x1, 8), (unique, 0x100010c9, 8) CAST (unique, 0x1000096b, 8), (unique, 0x1000097b, 8) PTRSUB (unique, 0x10000973, 8) , (const, 0x0, 8), (unique, 0x10000973, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x1000096b, 8) PTRADD (register, 0x80, 8) , (const, 0x1e, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4478f0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100010f9, 8) , (unique, 0xbc00, 2), (unique, 0x100010f9, 8) CAST (unique, 0x10000953, 8), (unique, 0x10000953, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100010f1, 8), (unique, 0x100010f1, 8) CAST (unique, 0x1000094b, 8), (unique, 0x1000094b, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4478e0, 1) , (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000943, 8) , (unique, 0xbb00, 1), (unique, 0x10000943, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000093b, 8), (unique, 0x1000093b, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (unique, 0x3400, 8) CAST (unique, 0x10001101, 8), (unique, 0x10001101, 8) PTRADD (unique, 0x10000c1b, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000c1b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x1240, 32) MULTIEQUAL (register, 0x1240, 32) , (register, 0x1240, 32) , (register, 0x1240, 32)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (unique, 0x10000d2b, 8) , (const, 0x1, 8), (unique, 0x10000d2b, 8) INT_SUB (const, 0x1f, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x3a00, 8) CAST (unique, 0x10001109, 8), (unique, 0x10001109, 8) PTRADD (unique, 0x10000c3b, 8) , (unique, 0x10000c33, 8) , (const, 0x1, 8), (unique, 0x10000c3b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x10000c33, 8) INT_ADD (register, 0x10, 8) , (unique, 0x10000c2b, 8), (unique, 0x10000c2b, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x10000d69, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3a00, 8) , (unique, 0x3a00, 8) , (unique, 0x3a00, 8) , (unique, 0x3a00, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3a00, 8) , (unique, 0x3a00, 8) , (unique, 0x3a00, 8) , (unique, 0x3a00, 8) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x447ad0, 1) , (unique, 0x10000325, 1), (unique, 0x10000325, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffe0, 8) , (const, 0x1, 8), (register, 0x200, 1) INT_LESS (const, 0x1f, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1200, 32)]
[(register, 0x38, 8) CAST (unique, 0x10001119, 8), (unique, 0x10001119, 8) INT_SUB (unique, 0x10001111, 8) , (register, 0x30, 8), (unique, 0x10001111, 8) CAST (register, 0x38, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x1f, 4), (register, 0x30, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(unique, 0x10000dc1, 8) COPY (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x1f, 4), (register, 0x30, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(unique, 0x100003f7, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000400, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffff80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000dc1, 8) , (unique, 0x10000dc9, 8)]
[ ---  CBRANCH (ram, 0x447a98, 1) , (unique, 0x100003ff, 1), (unique, 0x100003ff, 1) INT_LESS (const, 0x7f, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000dc1, 8) , (unique, 0x10000dc9, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003f7, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14a, 4) , (register, 0x1200, 32)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14a, 4) , (register, 0x1200, 32), (unique, 0x3100, 8) PTRADD (unique, 0x100003f7, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14a, 4) , (register, 0x1200, 32), (unique, 0x3100, 8) PTRADD (unique, 0x100003f7, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14a, 4) , (register, 0x1200, 32), (unique, 0x3100, 8) PTRADD (unique, 0x100003f7, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) PTRADD (unique, 0x100003f7, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(unique, 0x10000dc9, 8) COPY (unique, 0x10000400, 8)]
[ ---  CBRANCH (ram, 0x447ac0, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10001129, 8) , (const, 0x0, 8), (unique, 0x10001129, 8) CAST (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x20b, 1) INT_SCARRY (unique, 0x10001121, 8) , (const, 0x40, 8), (unique, 0x10001121, 8) CAST (unique, 0x10000400, 8)]
[(unique, 0x10000d79, 8) COPY (unique, 0x100003f7, 8)]
[ ---  CBRANCH (ram, 0x447ad0, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10001139, 8) , (const, 0x0, 8), (unique, 0x10001139, 8) CAST (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffe0, 8) , (const, 0x1, 8), (register, 0x20b, 1) INT_SCARRY (unique, 0x10001131, 8) , (const, 0x20, 8), (unique, 0x10001131, 8) CAST (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003f7, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14a, 4) , (register, 0x1200, 32)]
[(register, 0x38, 8) PTRADD (unique, 0x100003f7, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x447ad4, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003f7, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14a, 4) , (register, 0x1200, 32)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14a, 4) , (register, 0x1200, 32), (unique, 0x3100, 8) PTRADD (unique, 0x100003f7, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(register, 0x80, 8) PTRADD (unique, 0x1000042b, 8) , (unique, 0x10001141, 8) , (const, 0x1, 8), (unique, 0x10001141, 8) CAST (register, 0x80, 8), (unique, 0x1000042b, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffa0, 8)]
[(unique, 0x10000d71, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (unique, 0x100003f7, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x447ad0, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (const, 0x1f, 8) , (unique, 0x10001149, 8), (unique, 0x10001149, 8) CAST (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14a, 4) , (register, 0x1200, 32)]
[(register, 0x38, 8) PTRADD (unique, 0x100003f7, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x447ad4, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000d69, 8) , (unique, 0x10000d71, 8) , (unique, 0x10000d79, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x20, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x447a10, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x10, 4) , (register, 0x80, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000beb, 8) , (unique, 0x5300, 16), (unique, 0x10000beb, 8) CAST (unique, 0x10001151, 8), (unique, 0x10001151, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x5300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0xc8a80, 16)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5300, 16), (unique, 0x5300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0xc8a80, 16), (unique, 0x3a00, 8) CAST (unique, 0x10001161, 8), (unique, 0x10001161, 8) PTRADD (unique, 0x10000c0b, 8) , (unique, 0x10001159, 8) , (const, 0x1, 8), (unique, 0x10001159, 8) CAST (unique, 0x10000bfb, 8), (unique, 0x10000c0b, 8) PTRSUB (unique, 0x10000c03, 8) , (const, 0x0, 8), (unique, 0x10000c03, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000bfb, 8) PTRADD (register, 0x80, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447a00, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x8, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001169, 8) , (const, 0x0, 8), (unique, 0x10001169, 8) CAST (unique, 0x10000bbb, 8), (unique, 0x10000bbb, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001179, 8) , (const, 0x0, 8), (unique, 0x10001179, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000bdb, 8) , (unique, 0x10001171, 8) , (const, 0x1, 8), (unique, 0x10001171, 8) CAST (unique, 0x10000bcb, 8), (unique, 0x10000bdb, 8) PTRSUB (unique, 0x10000bd3, 8) , (const, 0x0, 8), (unique, 0x10000bd3, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000bcb, 8) PTRADD (register, 0x80, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4479f0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x4, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001181, 8) , (const, 0x0, 4), (unique, 0x10001181, 8) CAST (unique, 0x10000b8b, 8), (unique, 0x10000b8b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001191, 8) , (const, 0x0, 4), (unique, 0x10001191, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000bab, 8) , (unique, 0x10001189, 8) , (const, 0x1, 8), (unique, 0x10001189, 8) CAST (unique, 0x10000b9b, 8), (unique, 0x10000bab, 8) PTRSUB (unique, 0x10000ba3, 8) , (const, 0x0, 8), (unique, 0x10000ba3, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000b9b, 8) PTRADD (register, 0x80, 8) , (const, 0x1c, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4479e0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001199, 8) , (const, 0x0, 2), (unique, 0x10001199, 8) CAST (unique, 0x10000b5b, 8), (unique, 0x10000b5b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100011a9, 8) , (const, 0x0, 2), (unique, 0x100011a9, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000b7b, 8) , (unique, 0x100011a1, 8) , (const, 0x1, 8), (unique, 0x100011a1, 8) CAST (unique, 0x10000b6b, 8), (unique, 0x10000b7b, 8) PTRSUB (unique, 0x10000b73, 8) , (const, 0x0, 8), (unique, 0x10000b73, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000b6b, 8) PTRADD (register, 0x80, 8) , (const, 0x1e, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4479d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100011b1, 8) , (const, 0x0, 2), (unique, 0x100011b1, 8) CAST (unique, 0x10000b53, 8), (unique, 0x10000b53, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4479c0, 1) , (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b4b, 8) , (const, 0x0, 1), (unique, 0x10000b4b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
