[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffda8, 8)]
[(register, 0x20, 8) CAST (unique, 0x10000253, 8), (unique, 0x10000253, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffda8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffda8, 8)]
[(register, 0x20, 8) CAST (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffda8, 8)]
[ ---  CBRANCH (ram, 0x136de8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x2, 8)]
[(unique, 0x10000233, 8) COPY (unique, 0x10000263, 8), (unique, 0x10000263, 8) CAST (register, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000233, 8) , (unique, 0x1000023b, 8)]
[ ---  CBRANCH (ram, 0x136df5, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0xf2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x1000023b, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x136df2, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000027b, 8) , (register, 0xa0, 8), (unique, 0x1000027b, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000172, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000172, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffda8, 8), (unique, 0x3300, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8), (register, 0x28, 8) INT_RIGHT (unique, 0x10000273, 8) , (const, 0x6, 4), (unique, 0x10000273, 8) CAST (register, 0x28, 8), (register, 0xa0, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x28, 8) INT_SEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x38, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x156, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x156, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x153, 4)]
[ ---  CBRANCH (ram, 0x136dce, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x135710, 8) , (const, 0x0, 4) , (register, 0x20, 8) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) PTRADD (unique, 0x100001e2, 8) , (const, 0x80, 8) , (const, 0x1, 8), (unique, 0x100001e2, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffda8, 8)]
[ ---  CBRANCH (ram, 0x136e38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000283, 8), (unique, 0x10000283, 8) CAST (unique, 0x3e80, 8), (unique, 0x3e80, 8) PTRADD (unique, 0x10000202, 8) , (unique, 0x100001fa, 8) , (const, 0x1, 8), (unique, 0x10000202, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffda8, 8), (unique, 0x100001fa, 8) INT_ADD (unique, 0x3d80, 8) , (const, 0x80, 8), (unique, 0x3d80, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x2, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x17f, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x17f, 4)]
[ ---  CBRANCH (ram, 0x136daf, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1356e0, 8) , (register, 0x38, 4) , (const, 0x0, 8) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x1000028b, 8), (unique, 0x1000028b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffff48, 8)]
[ ---  CBRANCH (ram, 0x136dc0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x28, 4) , (const, 0x40, 4), (register, 0x28, 4) INT_SUB (register, 0x38, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x136dc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xdc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000293, 8) , (const, 0x16, 4), (unique, 0x10000293, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x3c80, 8) CAST (unique, 0x1000029b, 8), (unique, 0x1000029b, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffea8, 8)]
[(stack, 0xffffffffffffff30, 4) COPY (const, 0x0, 4)]
[(unique, 0x3c80, 8) CAST (unique, 0x100002a3, 8), (unique, 0x100002a3, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(unique, 0x10000223, 8) COPY (unique, 0x100002ab, 8), (unique, 0x100002ab, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001b2, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100001b2, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffea8, 8)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff30, 4) MULTIEQUAL (stack, 0xffffffffffffff30, 4) , (stack, 0xffffffffffffff30, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000223, 8) , (unique, 0x1000022b, 8)]
[ ---  CBRANCH (ram, 0x136d65, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff30, 4) INDIRECT (stack, 0xffffffffffffff30, 4) , (const, 0x59, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x59, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x1000022b, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x136d62, 1)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x5f, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5f, 4)]
[(stack, 0xfffffffffffffe28, 8) INDIRECT (stack, 0xfffffffffffffe28, 8) , (const, 0x5f, 4)]
[(stack, 0xfffffffffffffea8, 8) INDIRECT (unique, 0x1000024b, 8) , (const, 0x5f, 4), (unique, 0x1000024b, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffff30, 4) INDIRECT (stack, 0xffffffffffffff30, 4) , (const, 0x5f, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x5f, 4)]
[ ---  CBRANCH (ram, 0x136dce, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1356e0, 8) , (register, 0x38, 4) , (unique, 0x3c80, 8) , (unique, 0x3c80, 8)]
[(unique, 0x10000213, 8) COPY (unique, 0x100002b3, 8), (unique, 0x100002b3, 8) CAST (register, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff30, 4) MULTIEQUAL (stack, 0xffffffffffffff30, 4) , (stack, 0xffffffffffffff30, 4)]
[(stack, 0xfffffffffffffea8, 8) MULTIEQUAL (stack, 0xfffffffffffffea8, 8) , (stack, 0xfffffffffffffea8, 8)]
[(stack, 0xfffffffffffffe28, 8) MULTIEQUAL (stack, 0xfffffffffffffe28, 8) , (stack, 0xfffffffffffffe28, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000213, 8) , (unique, 0x1000021b, 8)]
[ ---  CBRANCH (ram, 0x136d7e, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xfffffffffffffe28, 8) INDIRECT (stack, 0xfffffffffffffe28, 8) , (const, 0x76, 4)]
[(stack, 0xfffffffffffffea8, 8) INDIRECT (stack, 0xfffffffffffffea8, 8) , (const, 0x76, 4)]
[(stack, 0xffffffffffffff30, 4) INDIRECT (stack, 0xffffffffffffff30, 4) , (const, 0x76, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x76, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x1000021b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000142, 8) , (const, 0x8, 8), (unique, 0x10000142, 8) INT_ADD (unique, 0x1000013a, 8) , (const, 0x1, 8), (unique, 0x1000013a, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x136d7b, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xa8, 4)]
[(stack, 0xfffffffffffffda8, 8) INDIRECT (unique, 0x10000243, 8) , (const, 0xa8, 4), (unique, 0x10000243, 8) COPY (register, 0x18, 8), (register, 0x18, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x28, 4) , (const, 0x0, 4)]
[(stack, 0xfffffffffffffe28, 8) INDIRECT (stack, 0xfffffffffffffe28, 8) , (const, 0xa8, 4)]
[(stack, 0xfffffffffffffea8, 8) INDIRECT (stack, 0xfffffffffffffea8, 8) , (const, 0xa8, 4)]
[(stack, 0xffffffffffffff30, 4) INDIRECT (stack, 0xffffffffffffff30, 4) , (const, 0xa8, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x136dce, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x135710, 8) , (const, 0x1, 4) , (register, 0x20, 8) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) PTRADD (unique, 0x100001ca, 8) , (const, 0x80, 8) , (const, 0x1, 8), (unique, 0x100001ca, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffda8, 8)]
[ ---  CBRANCH (ram, 0x136e2c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (stack, 0xfffffffffffffe28, 8) , (register, 0x18, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffff48, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x2, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
