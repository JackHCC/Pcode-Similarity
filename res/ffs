[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (unique, 0x10000003, 4) , (unique, 0x1a680, 4), (unique, 0x10000003, 4) CAST (register, 0x38, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  CBRANCH (ram, 0x18edfb, 1) , (unique, 0x10000002, 1), (unique, 0x10000002, 1) BOOL_NEGATE (register, 0x206, 1)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x1a680, 4) , (register, 0x0, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
