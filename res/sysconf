[ ---  CBRANCH (ram, 0x1cd620, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) INT_SUB (register, 0x38, 4) , (const, 0xb9, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1db, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1aa2f0, 8) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1cd690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x22, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c5, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c5, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1c5, 4)]
[ ---  CBRANCH (ram, 0x1cd6b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1fc0a0, 8) , (const, 0xb, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x1cd5d8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x22, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1cd5b8, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (const, 0x89, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1cd617, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x38, 4) , (const, 0x8c, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  CBRANCH (ram, 0x1cd5b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x95, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  CBRANCH (ram, 0x1cd630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x127, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x127, 4)]
[ ---  CBRANCH (ram, 0x1cd617, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1fc0a0, 8) , (const, 0x3, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(register, 0x8, 8) INT_RIGHT (stack, 0xffffffffffffffc8, 8) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1cd661, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (stack, 0xffffffffffffffc8, 8) , (const, 0x80000, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x20000, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x20000, 8)]
[ ---  CBRANCH (ram, 0x1cd5b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x3, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  BRANCHIND (register, 0x38, 4)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1f3, 4)]
[(register, 0x0, 8) CALL (ram, 0x1cd400, 8) , (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) COPY (const, 0x28dbb8, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1f8, 4)]
[(register, 0x0, 8) CALL (ram, 0x1cd400, 8) , (unique, 0x100001fe, 8), (unique, 0x100001fe, 8) COPY (const, 0x28dbac, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x40, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x205, 4)]
[(register, 0x0, 8) CALL (ram, 0x1cd400, 8) , (unique, 0x10000226, 8), (unique, 0x10000226, 8) COPY (const, 0x28dbb8, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x20a, 4)]
[(register, 0x0, 8) CALL (ram, 0x1cd400, 8) , (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) COPY (const, 0x28dbac, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x229, 4)]
[(register, 0x0, 8) CALL (ram, 0x1cd400, 8) , (unique, 0x10000216, 8), (unique, 0x10000216, 8) COPY (const, 0x28dbb8, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x22e, 4)]
[(register, 0x0, 8) CALL (ram, 0x1cd400, 8) , (unique, 0x10000206, 8), (unique, 0x10000206, 8) COPY (const, 0x28dbac, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7fffffff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7fffffff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7fffffff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7fffffff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x800, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1000, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0xffff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0xff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0xffffffffffff8000, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7fff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffff80, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7f, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7fff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x14, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x40, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0xffffffff80000000, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7fffffff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffff80, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7f, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x2bc, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x2000, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7fffffff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x27a, 4)]
[(register, 0x0, 8) CALL (ram, 0x205490, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x27e, 4)]
[(register, 0x0, 8) CALL (ram, 0x205420, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x282, 4)]
[(register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x205060, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x287, 4)]
[(register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x205370, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x4000, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x400, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x100, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x400, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x400, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x400, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x800, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7fff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x800, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000241, 8) , (const, 0x16, 4), (unique, 0x10000241, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0xff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x3e8, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x63, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x800, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x63, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7fffffff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2cc, 4)]
[(register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1fcb10, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x8000, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x7fffffff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x14, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x31069, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2f9, 4)]
[(register, 0x0, 8) COPY (const, 0x6, 8)]
[ ---  CBRANCH (ram, 0x1cd617, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x6, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1bc5d0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x30a, 4)]
[(register, 0x0, 8) CALL (ram, 0x1bc5d0, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x310, 4)]
[(register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1fcb50, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0x10000, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x317, 4)]
[(register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x205700, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x31c, 4)]
[(register, 0x0, 8) CALL (ram, 0x1f6070, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1cd617, 1)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
