[(unique, 0x10000344, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x228e84, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7d60, 4) , (const, 0x0, 4)]
[(ram, 0x4c7d60, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7d60, 4) , (const, 0x0, 4)]
[(ram, 0x4c7d60, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x228ea7, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ad, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1ad, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ad, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ad, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000344, 8) , (const, 0x1ad, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d60, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x51, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x51, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x51, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x51, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x228ec2, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x51, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x51, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000344, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000344, 8)]
[ ---  CBRANCH (ram, 0x228ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000354, 8), (unique, 0x10000354, 8) CALL (ram, 0x2024f0, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (unique, 0x10000199, 8), (unique, 0x10000199, 8) PTRSUB (const, 0x0, 8) , (const, 0x228290, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x3800, 8) CAST (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x228ee7, 1)]
[ ---  CBRANCH (ram, 0x228f30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000035c, 8) , (unique, 0x3100, 8), (unique, 0x1000035c, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd5, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xd5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xd5, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xd5, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x228f3a, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xd5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd5, 4)]
[ ---  CBRANCH (ram, 0x229000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000364, 8), (unique, 0x10000364, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x1000036c, 8), (unique, 0x1000036c, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xeb, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xeb, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xe8, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xe2, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xeb, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xe8, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xe2, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xeb, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x228f58, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xeb, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xeb, 4)]
[ ---  CBRANCH (ram, 0x229000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2286d0, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002f0, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x228fd4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000037c, 8), (unique, 0x1000037c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000374, 8), (unique, 0x10000374, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x121, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x228f7e, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x73736e5f, 4), (register, 0x20, 8) CAST (unique, 0x1000039c, 8), (unique, 0x1000039c, 8) INT_ADD (unique, 0x10000394, 8) , (unique, 0x10000128, 8), (unique, 0x10000394, 8) CAST (unique, 0x10000209, 8), (unique, 0x10000209, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x10000128, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0xa0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x121, 4), (register, 0xa0, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x5f, 1), (unique, 0x3800, 8) CAST (unique, 0x100003c4, 8), (unique, 0x100003c4, 8) INT_ADD (unique, 0x100003bc, 8) , (unique, 0x10000279, 8), (unique, 0x100003bc, 8) CAST (unique, 0x10000281, 8), (unique, 0x10000281, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x10000279, 8) INT_ADD (unique, 0x10000128, 8) , (const, 0x4, 8), (unique, 0x10000128, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0xa0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x121, 4), (register, 0xa0, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x228fb2, 8), (register, 0x20, 8) CAST (unique, 0x100003d4, 8), (unique, 0x100003d4, 8) INT_ADD (unique, 0x100003cc, 8) , (unique, 0x10000128, 8), (unique, 0x100003cc, 8) CAST (unique, 0x10000299, 8), (unique, 0x10000299, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x10000128, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0xa0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x121, 4), (register, 0xa0, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x5f, 1), (register, 0x0, 8) CAST (unique, 0x100003dc, 8), (unique, 0x100003dc, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (register, 0xa0, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x100003b4, 8) , (unique, 0x10000261, 8), (unique, 0x100003b4, 8) CAST (unique, 0x10000269, 8), (unique, 0x10000269, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x10000261, 8) INT_ADD (unique, 0x10000128, 8) , (const, 0x5, 8), (unique, 0x10000128, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0xa0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x121, 4), (register, 0xa0, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x228fc1, 8), (register, 0x20, 8) CAST (unique, 0x100003ec, 8), (unique, 0x100003ec, 8) INT_ADD (unique, 0x100003e4, 8) , (unique, 0x10000128, 8), (unique, 0x100003e4, 8) CAST (unique, 0x100002b1, 8), (unique, 0x100002b1, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x10000128, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0xa0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x121, 4), (register, 0xa0, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  CALL (ram, 0x18a770, 8) , (unique, 0x3100, 8) , (unique, 0x100002e0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CAST (unique, 0x100003dc, 8), (unique, 0x100003dc, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (register, 0xa0, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x100003b4, 8) , (unique, 0x10000261, 8), (unique, 0x100003b4, 8) CAST (unique, 0x10000269, 8), (unique, 0x10000269, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x10000261, 8) INT_ADD (unique, 0x10000128, 8) , (const, 0x5, 8), (unique, 0x10000128, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (stack, 0xffffffffffffffc0, 8), (unique, 0x100002e0, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0xa0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x121, 4), (register, 0xa0, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x228fcd, 8), (register, 0x20, 8) CAST (unique, 0x10000404, 8), (unique, 0x10000404, 8) INT_ADD (unique, 0x100003fc, 8) , (unique, 0x10000128, 8), (unique, 0x100003fc, 8) CAST (unique, 0x100002c9, 8), (unique, 0x100002c9, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x10000128, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0xa0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x121, 4), (register, 0xa0, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x159, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x152, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x129, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x121, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x159, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x152, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x14f, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x14a, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x129, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x121, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x159, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x152, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x14f, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x14a, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x129, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x121, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x159, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x158, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x151, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x149, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x129, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x228f8d, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x159, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x158, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x151, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x149, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x147, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x144, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x129, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x121, 4)]
[(register, 0x0, 8) CALL (ram, 0x242ee0, 8) , (unique, 0xbd80, 8) , (register, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003f4, 8), (unique, 0x100003f4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x20, 8) CAST (unique, 0x100003ac, 8), (unique, 0x100003ac, 8) INT_ADD (unique, 0x100003a4, 8) , (unique, 0x10000128, 8), (unique, 0x100003a4, 8) CAST (unique, 0x10000221, 8), (unique, 0x10000221, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x10000128, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0xa0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x121, 4), (register, 0xa0, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[(unique, 0x100002f8, 8) COPY (unique, 0x1000040c, 8), (unique, 0x1000040c, 8) CAST (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x159, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x158, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x151, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x149, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x144, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x129, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000324, 8) , (const, 0x121, 4), (unique, 0x10000324, 8) COPY (unique, 0x1000038c, 8), (unique, 0x1000038c, 8) CAST (register, 0x20, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x17f, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x17f, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x1000041c, 8), (unique, 0x1000041c, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000414, 8), (unique, 0x10000414, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x0, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000308, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x100002f0, 8) , (unique, 0x100002f8, 8)]
[ ---  BRANCH (ram, 0x228ee7, 1)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x186, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x229012, 8)]
[ ---  CALL (ram, 0x2028b0, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) PTRSUB (const, 0x0, 8) , (const, 0x228290, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x18a, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x186, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x18a, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x186, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x18a, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x22901a, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x18a, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x186, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x186, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000310, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x228ee7, 1)]
[(register, 0x10, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000444, 8), (unique, 0x10000444, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x10, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x1000043c, 8) , (const, 0x2f, 4), (unique, 0x1000043c, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x10000434, 8) , (const, 0x11, 4), (unique, 0x10000434, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000042c, 8), (unique, 0x1000042c, 8) INT_ADD (unique, 0x10000424, 8) , (const, 0x8, 8), (unique, 0x10000424, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000300, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000300, 8) , (unique, 0x10000308, 8) , (unique, 0x10000310, 8) , (register, 0x20, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x228efb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000031c, 4) COPY (unique, 0x100002d9, 4), (unique, 0x100002d9, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x228f1d, 1) , (unique, 0x100002dd, 1), (unique, 0x100002dd, 1) INT_NOTEQUAL (unique, 0x100002d9, 4) , (const, 0x0, 4), (unique, 0x100002d9, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x228f16, 8), (register, 0x20, 8) CAST (unique, 0x10000454, 8), (unique, 0x10000454, 8) INT_ADD (unique, 0x1000044c, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x1000044c, 8) CAST (register, 0x20, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xbf, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xbe, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xbe, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xbe, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d60, 8)]
[(unique, 0x100002e8, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0xbf, 4)]
[(unique, 0x10000318, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xbf, 4), (ram, 0x4c7d60, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) COPY (unique, 0x10000320, 4), (unique, 0x10000320, 4) MULTIEQUAL (unique, 0x10000318, 4) , (unique, 0x1000031c, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002e8, 8) , (register, 0x10, 8)]
