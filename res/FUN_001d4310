[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003fe, 8), (unique, 0x100003fe, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1d4730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x39c, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x39c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x39c, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x39c, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x39c, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x39c, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x39c, 4)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x39c, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x39c, 4)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x39c, 4)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x39c, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x39c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x39c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000406, 8) , (const, 0x16, 4), (unique, 0x10000406, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1d4440, 1)]
[(unique, 0x100003f6, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1d435a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4edc20, 4) , (const, 0x0, 4)]
[(ram, 0x4edc20, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4edc20, 4) , (const, 0x0, 4)]
[(ram, 0x4edc20, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1d437d, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x375, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x375, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x375, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x375, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x375, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x375, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x375, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x375, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x375, 4)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x375, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x375, 4)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x375, 4)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x375, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x375, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x375, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x375, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x375, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x375, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100002af, 8), (unique, 0x100002af, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edc20, 8)]
[(unique, 0x10000388, 8) COPY (unique, 0x10000378, 8), (unique, 0x10000378, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x375, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4edc20, 4) MULTIEQUAL (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4)]
[(ram, 0x4edc10, 8) MULTIEQUAL (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8)]
[(ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edbe0, 8) MULTIEQUAL (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8)]
[(ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1d4392, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0x1000040e, 8), (unique, 0x1000040e, 8) CAST (unique, 0x100002b7, 8), (unique, 0x100002b7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f06a0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100003f6, 8) , (unique, 0x10000388, 8) , (unique, 0x100003f6, 8)]
[ ---  CBRANCH (ram, 0x1d4468, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1d4468, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4edbac, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x23c, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x23c, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x23c, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x23c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x23c, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x23c, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x23c, 4), (ram, 0x4edbac, 4) COPY (const, 0x1, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x23c, 4)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x23c, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x23c, 4)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x23c, 4)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x23c, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x23c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x23c, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x23c, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x23c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x23c, 4)]
[(unique, 0x10000370, 8) COPY (ram, 0x4edbb0, 8), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x23c, 4)]
[ ---  CBRANCH (ram, 0x1d4580, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1426e0, 8) , (unique, 0x1000026f, 8), (unique, 0x1000026f, 8) COPY (const, 0x2b5224, 8)]
[ ---  CBRANCH (ram, 0x1d4560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d44a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(register, 0x18, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1d4720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4edbb0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d44bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d44a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x335, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x331, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x34e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x335, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x331, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x34e, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x335, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x331, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x34e, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x335, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x331, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x34e, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x335, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x331, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x34e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x335, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x331, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x34e, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x335, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x331, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x34e, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x335, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x331, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (register, 0x0, 8) , (const, 0x34e, 4), (register, 0x0, 8) CALL (ram, 0x19d9a0, 8) , (unique, 0x10000277, 8), (unique, 0x10000277, 8) COPY (const, 0x2b5227, 8)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x34e, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x335, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x331, 4), (ram, 0x4edbc0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x34e, 4), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x335, 4), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x331, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x34e, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x335, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x331, 4), (ram, 0x4edbf0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x34e, 4), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x335, 4), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x331, 4)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x34e, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x335, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x331, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x34e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x335, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x331, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x34e, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x335, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x331, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x34e, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x335, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x331, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x34e, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x335, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x331, 4)]
[ ---  CALL (ram, 0x1d4750, 8) , (unique, 0x1000027f, 8) , (const, 0x0, 8) , (const, 0x0, 8), (unique, 0x1000027f, 8) COPY (const, 0x2b5227, 8)]
[ ---  CBRANCH (ram, 0x1d4502, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f06d8, 4) , (const, 0x0, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x34e, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x335, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x331, 4)]
[(register, 0x18, 8) COPY (const, 0x2b521a, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d44bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4edbb0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x266, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x266, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x266, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x266, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x266, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x266, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x266, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x266, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x266, 4)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x266, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x266, 4)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x266, 4)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x266, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x266, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x266, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x266, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x266, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x266, 4)]
[ ---  CBRANCH (ram, 0x1d43a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (register, 0x18, 8) , (ram, 0x4edbb0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0x10000370, 8)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x27a, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x276, 4), (ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x293, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x27a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x276, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x293, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x27a, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x276, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x293, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x27a, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x276, 4), (ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x293, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x27a, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x276, 4), (ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x293, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x276, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x293, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x27a, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x276, 4), (ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x293, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x27a, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x276, 4), (ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (register, 0x0, 8) , (const, 0x293, 4), (register, 0x0, 8) CALL (ram, 0x19d9a0, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x293, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x27a, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x276, 4), (ram, 0x4edbc0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x293, 4), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x27a, 4), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x276, 4), (ram, 0x4edbe0, 8) MULTIEQUAL (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x293, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x27a, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x276, 4), (ram, 0x4edbf0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x293, 4), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x27a, 4), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x276, 4), (ram, 0x4edc10, 8) MULTIEQUAL (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x293, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x27a, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x276, 4), (ram, 0x4edc20, 4) MULTIEQUAL (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x293, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x27a, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x276, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x293, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x27a, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x276, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x293, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x27a, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x276, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x293, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x27a, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x276, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x1d4750, 8) , (register, 0x18, 8) , (const, 0x0, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1d4650, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f06d8, 4) , (const, 0x0, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x293, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x27a, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x276, 4), (ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[ ---  CBRANCH (ram, 0x1d45d6, 1) , (unique, 0x10000258, 1), (unique, 0x10000258, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(register, 0x8, 8) COPY (const, 0xf, 8)]
[(unique, 0x100003b8, 8) COPY (register, 0x18, 8)]
[(unique, 0x100003c8, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b5227, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100003c8, 8) , (unique, 0x100003d0, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100003b8, 8) , (unique, 0x100003c0, 8)]
[ ---  CBRANCH (ram, 0x1d4666, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x100003c0, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000317, 8) , (const, 0x1, 8), (unique, 0x10000317, 8) INT_ADD (unique, 0x100001eb, 8) , (const, 0x1, 8), (unique, 0x100001eb, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x100003d0, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x1000030f, 8) , (const, 0x1, 8), (unique, 0x1000030f, 8) INT_ADD (unique, 0x100001e3, 8) , (const, 0x1, 8), (unique, 0x100001e3, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x1d4664, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1d45d6, 1) , (unique, 0x10000259, 1), (unique, 0x10000259, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2d1, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x2d1, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x2d1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2d1, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x2d1, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x2d1, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x2d1, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x2d1, 4)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x2d1, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x2d1, 4)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x2d1, 4)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x2d1, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x2d1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2d1, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x2d1, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x2d1, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2d1, 4)]
[ ---  CALL (ram, 0x1d3540, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x1d43a0, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4edc20, 4) MULTIEQUAL (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4)]
[(ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100003d8, 8) COPY (unique, 0x10000416, 8), (unique, 0x10000416, 8) CAST (register, 0x38, 8), (register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbc8, 8)]
[(register, 0x8, 8) COPY (const, 0xb, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4edc20, 4) MULTIEQUAL (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4)]
[(ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100003d8, 8) , (unique, 0x100003e0, 8)]
[ ---  CBRANCH (ram, 0x1d45f6, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x2ed, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x2ed, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2ed, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x2ed, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x2ed, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x2ed, 4)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x2ed, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x2ed, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2ed, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100003e0, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100002ff, 8) , (const, 0x8, 8), (unique, 0x100002ff, 8) INT_ADD (unique, 0x100002f7, 8) , (const, 0x1, 8), (unique, 0x100002f7, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1d45f3, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000041e, 8) , (const, 0x0, 4), (unique, 0x1000041e, 8) CAST (ram, 0x4eaec8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000426, 8) , (const, 0x0, 8), (unique, 0x10000426, 8) CAST (ram, 0x4eae48, 8), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x2fa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000042e, 8) , (unique, 0x10000267, 8), (unique, 0x1000042e, 8) CAST (ram, 0x4eae40, 8), (unique, 0x10000267, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b5216, 8), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x2fd, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x2fa, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x935, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x934, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x2fd, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x2fa, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x935, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x934, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x2fd, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x2fa, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x935, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x934, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2fd, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2fa, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x935, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x934, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x2fd, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x2fa, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x935, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x934, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x2fd, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x2fa, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x935, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x934, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x2fd, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x2fa, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x935, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x934, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x2fd, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x2fa, 4), (ram, 0x4edbc0, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b5216, 8)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x935, 4), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x934, 4), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x2fd, 4), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x2fa, 4), (ram, 0x4edbe0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x935, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x934, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x2fd, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x2fa, 4), (ram, 0x4edbf0, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b5216, 8)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x935, 4), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x934, 4), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x2fd, 4), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x2fa, 4), (ram, 0x4edc10, 8) COPY (const, 0xffffffffffffffff, 8)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x935, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x934, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x2fd, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x2fa, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x935, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x934, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x2fd, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x2fa, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x935, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x934, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2fd, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2fa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000436, 8) , (unique, 0x1000025f, 8), (unique, 0x10000436, 8) CAST (unique, 0x10000248, 8), (unique, 0x1000025f, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b5216, 8), (unique, 0x10000248, 8) PTRADD (unique, 0x10000360, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000360, 8) COPY (ram, 0x4eae40, 8), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x2fd, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x2fa, 4)]
[ ---  BRANCH (ram, 0x1d43ae, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4edc20, 4) MULTIEQUAL (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4)]
[(ram, 0x4edc10, 8) MULTIEQUAL (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8)]
[(ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edbe0, 8) MULTIEQUAL (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8)]
[(ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1d4502, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f06d8, 4) , (const, 0x0, 4), (ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x236, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x236, 4), (ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x236, 4), (ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x236, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x236, 4), (ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x236, 4), (ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x236, 4), (ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x236, 4), (ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x236, 4), (ram, 0x4edbe0, 8) MULTIEQUAL (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x236, 4), (ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x236, 4), (ram, 0x4edc10, 8) MULTIEQUAL (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x236, 4), (ram, 0x4edc20, 4) MULTIEQUAL (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x236, 4), (ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x236, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x236, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x236, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x236, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x1d5740, 8) , (unique, 0xbd80, 8) , (register, 0x30, 4) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (register, 0x10, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x1d43d6, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x9c, 4), (ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x9c, 4), (ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9c, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x9c, 4), (ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x9c, 4), (ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x9c, 4), (ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x9c, 4), (ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x9c, 4), (ram, 0x4edbe0, 8) MULTIEQUAL (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x9c, 4), (ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x9c, 4), (ram, 0x4edc10, 8) MULTIEQUAL (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x9c, 4), (ram, 0x4edc20, 4) MULTIEQUAL (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x9c, 4), (ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x9c, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x9c, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x10000398, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d4680, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1d0ea0, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CALL (ram, 0x1d2ca0, 8) , (unique, 0x1000028f, 8) , (unique, 0x3200, 4), (unique, 0x1000028f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbc0, 8), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x76c, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x198, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18d, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x198, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x18d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x198, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18d, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x198, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x18d, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x198, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x18d, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x198, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x18d, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x198, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x18d, 4)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x198, 4), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x18d, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x198, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x18d, 4)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x198, 4), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x18d, 4)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x198, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x18d, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x198, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x18d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x198, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x18d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x198, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x18d, 4)]
[ ---  CALL (ram, 0x1d2ca0, 8) , (unique, 0x1000029f, 8) , (unique, 0x3200, 4), (unique, 0x1000029f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbf0, 8), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x76c, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[(unique, 0x10000368, 8) COPY (ram, 0x4eae40, 8), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x198, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x18d, 4)]
[(unique, 0x100003a0, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1d43c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(register, 0x10, 1) BOOL_OR (unique, 0xcc00, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (ram, 0x4edbe0, 8) , (unique, 0xbd80, 8), (unique, 0xcc00, 1) INT_SLESS (unique, 0xbd80, 8) , (ram, 0x4edc10, 8)]
[(unique, 0x100003e8, 1) COPY (register, 0x0, 1), (register, 0x0, 1) BOOL_AND (unique, 0xcc00, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (ram, 0x4edbe0, 8) , (unique, 0xbd80, 8), (unique, 0xcc00, 1) INT_SLESS (unique, 0xbd80, 8) , (ram, 0x4edc10, 8)]
[ ---  CBRANCH (ram, 0x1d46e8, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (ram, 0x4edc10, 8) , (ram, 0x4edbe0, 8)]
[(unique, 0x100003e9, 1) COPY (register, 0x10, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0x10000247, 1), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0x10000247, 1) MULTIEQUAL (unique, 0x100003e8, 1) , (unique, 0x100003e9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000446, 8) , (unique, 0xbd80, 8), (unique, 0x10000446, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000043e, 8), (unique, 0x1000043e, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000368, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000247, 1), (unique, 0x10000247, 1) MULTIEQUAL (unique, 0x100003e8, 1) , (unique, 0x100003e9, 1)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x228, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x1ee, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x1e7, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x228, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x1ee, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x1e7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x228, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ee, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e7, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x228, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x1ee, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x1e7, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x228, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x1ee, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x1e7, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x228, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x1ee, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x1e7, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x228, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x1ee, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x1e7, 4)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x228, 4), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x1ee, 4), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x1e7, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x228, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x1ee, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x1e7, 4)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x228, 4), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x1ee, 4), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x1e7, 4)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x228, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x1ee, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x1e7, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x228, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x1ee, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x1e7, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x228, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1ee, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1e7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000044e, 8) , (unique, 0xbd80, 8), (unique, 0x1000044e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000297, 8) , (unique, 0x1000033f, 8) , (const, 0x8, 8), (unique, 0x1000033f, 8) INT_MULT (register, 0x0, 8) , (const, 0x6, 8), (unique, 0x10000297, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbd8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000247, 1), (unique, 0x10000247, 1) MULTIEQUAL (unique, 0x100003e8, 1) , (unique, 0x100003e9, 1)]
[ ---  BRANCH (ram, 0x1d43c5, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4edc20, 4) MULTIEQUAL (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4)]
[(ram, 0x4edc10, 8) MULTIEQUAL (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8)]
[(ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edbe0, 8) MULTIEQUAL (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8)]
[(ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc4, 4) COPY (const, 0x0, 4)]
[(unique, 0x100003b0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000398, 8) , (unique, 0x100003a0, 8) , (unique, 0x100003a0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4edc20, 4) MULTIEQUAL (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4)]
[(ram, 0x4edc10, 8) MULTIEQUAL (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8)]
[(ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edbe0, 8) MULTIEQUAL (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8)]
[(ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100003b0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1d43ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100003ee, 4) COPY (unique, 0x10000357, 4), (unique, 0x10000357, 4) INT_ADD (ram, 0x4edc20, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1d440c, 1) , (unique, 0x1000035b, 1), (unique, 0x1000035b, 1) INT_NOTEQUAL (unique, 0x10000357, 4) , (const, 0x0, 4), (unique, 0x10000357, 4) INT_ADD (ram, 0x4edc20, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x16d, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x16d, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x16d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x16d, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x16d, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x16d, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x16d, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x16d, 4)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x16d, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x16d, 4)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x16d, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x16d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x16d, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x16d, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x16d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x16d, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100002a7, 8), (unique, 0x100002a7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edc20, 8)]
[(unique, 0x100003ea, 4) COPY (ram, 0x4edc20, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x16d, 4), (ram, 0x4edc20, 4) INT_ADD (ram, 0x4edc20, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4edc10, 8) MULTIEQUAL (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8)]
[(ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edbe0, 8) MULTIEQUAL (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8)]
[(ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4edc20, 4) COPY (unique, 0x100003f2, 4), (unique, 0x100003f2, 4) MULTIEQUAL (unique, 0x100003ea, 4) , (unique, 0x100003ee, 4)]
[ ---  CBRANCH (ram, 0x1d4550, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d4528, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000456, 8) , (const, 0x0, 8), (unique, 0x10000456, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x15f, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x152, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x14f, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x15f, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x152, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x14f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x152, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x14f, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x15f, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x152, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x14f, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x15f, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x152, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x14f, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x15f, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x152, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x14f, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x15f, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x152, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x14f, 4)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x15f, 4), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x152, 4), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x14f, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x15f, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x152, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x14f, 4)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x15f, 4), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x152, 4), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x14f, 4)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x15f, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x152, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x14f, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x15f, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x152, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x14f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x15f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x152, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x14f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000045e, 8) , (unique, 0x10000287, 8), (unique, 0x1000045e, 8) CAST (unique, 0x3100, 8), (unique, 0x10000287, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b5236, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1d4422, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000466, 8), (unique, 0x10000466, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf6, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0xf6, 4), (ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0xf6, 4), (ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf6, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0xf6, 4), (ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0xf6, 4), (ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0xf6, 4), (ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0xf6, 4), (ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0xf6, 4), (ram, 0x4edbe0, 8) MULTIEQUAL (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0xf6, 4), (ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0xf6, 4), (ram, 0x4edc10, 8) MULTIEQUAL (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0xf6, 4), (ram, 0x4edc20, 4) MULTIEQUAL (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0xf6, 4), (ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf6, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xf6, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xf6, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xf6, 4)]
[ ---  CBRANCH (ram, 0x1d4550, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1d0ea0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x18, 8), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (stack, 0xffffffffffffffc8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x10b, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x10b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10b, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x10b, 4)]
[(ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x10b, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x10b, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x10b, 4)]
[(ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x10b, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x10b, 4)]
[(ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x10b, 4)]
[(ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x10b, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x10b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x10b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (stack, 0xffffffffffffffc4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4edc20, 4) MULTIEQUAL (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4)]
[(ram, 0x4edc10, 8) MULTIEQUAL (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8)]
[(ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edbe0, 8) MULTIEQUAL (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8)]
[(ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1d4440, 1)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4edc20, 4) MULTIEQUAL (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4) , (ram, 0x4edc20, 4)]
[(ram, 0x4edc10, 8) MULTIEQUAL (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8) , (ram, 0x4edc10, 8)]
[(ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edbe0, 8) MULTIEQUAL (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8) , (ram, 0x4edbe0, 8)]
[(ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbac, 4) MULTIEQUAL (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4) , (ram, 0x4edbac, 4)]
[(ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(register, 0x0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1d4745, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000046e, 8), (unique, 0x1000046e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x13e, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x13e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x13e, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae40, 8) COPY (ram, 0x4eae40, 8), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x13e, 4)]
[(ram, 0x4eae48, 8) COPY (ram, 0x4eae48, 8), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x13e, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13e, 4)]
[(ram, 0x4eaec8, 8) COPY (ram, 0x4eaec8, 8), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x13e, 4)]
[(ram, 0x4edbac, 4) COPY (ram, 0x4edbac, 4), (ram, 0x4edbac, 4) INDIRECT (ram, 0x4edbac, 4) , (const, 0x13e, 4)]
[(ram, 0x4edbb0, 8) COPY (ram, 0x4edbb0, 8), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x13e, 4)]
[(ram, 0x4edbc0, 8) COPY (ram, 0x4edbc0, 8), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x13e, 4)]
[(ram, 0x4edbe0, 8) COPY (ram, 0x4edbe0, 8), (ram, 0x4edbe0, 8) INDIRECT (ram, 0x4edbe0, 8) , (const, 0x13e, 4)]
[(ram, 0x4edbf0, 8) COPY (ram, 0x4edbf0, 8), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x13e, 4)]
[(ram, 0x4edc10, 8) COPY (ram, 0x4edc10, 8), (ram, 0x4edc10, 8) INDIRECT (ram, 0x4edc10, 8) , (const, 0x13e, 4)]
[(ram, 0x4edc20, 4) COPY (ram, 0x4edc20, 4), (ram, 0x4edc20, 4) INDIRECT (ram, 0x4edc20, 4) , (const, 0x13e, 4)]
[(ram, 0x4f06d8, 4) COPY (ram, 0x4f06d8, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x13e, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x13e, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae40, 8) COPY (ram, 0x4eae40, 8)]
[(ram, 0x4eae48, 8) COPY (ram, 0x4eae48, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaec8, 8) COPY (ram, 0x4eaec8, 8)]
[(ram, 0x4edbac, 4) COPY (ram, 0x4edbac, 4)]
[(ram, 0x4edbb0, 8) COPY (ram, 0x4edbb0, 8)]
[(ram, 0x4edbc0, 8) COPY (ram, 0x4edbc0, 8)]
[(ram, 0x4edbe0, 8) COPY (ram, 0x4edbe0, 8)]
[(ram, 0x4edbf0, 8) COPY (ram, 0x4edbf0, 8)]
[(ram, 0x4edc10, 8) COPY (ram, 0x4edc10, 8)]
[(ram, 0x4edc20, 4) COPY (ram, 0x4edc20, 4)]
[(ram, 0x4f06d8, 4) COPY (ram, 0x4f06d8, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
