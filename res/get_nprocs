[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x32, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x32, 4), (register, 0x20a, 1) COPY (const, 0x0, 1)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x32, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x32, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x32, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x32, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x32, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x32, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000036e, 8), (unique, 0x1000036e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CALL (ram, 0x47bc90, 8) , (const, 0x5, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffff88, 8) COPY (unique, 0x10000376, 8), (unique, 0x10000376, 8) CAST (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x32, 4)]
[ ---  CBRANCH (ram, 0x458741, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7ce0, 8) , (unique, 0x1000037e, 8), (unique, 0x1000037e, 8) CAST (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x32, 4), (ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x32, 4)]
[ ---  CBRANCH (ram, 0x458500, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (ram, 0x4c6080, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x48, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x48, 4)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x48, 4)]
[(ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x48, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x48, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x48, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x48, 4)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x2000, 8), (register, 0x18, 8) INT_AND (unique, 0x100000d6, 8) , (const, 0xffffffffffffe200, 8), (unique, 0x100000d6, 8) INT_2COMP (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x421340, 8) , (const, 0x2000, 8)]
[(register, 0x8, 8) PTRADD (unique, 0x10000255, 8) , (unique, 0x100000de, 8) , (const, 0x1, 8), (unique, 0x10000255, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x100000de, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x2010, 8), (register, 0x18, 8) INT_AND (unique, 0x100000d6, 8) , (const, 0xffffffffffffe200, 8), (unique, 0x100000d6, 8) INT_2COMP (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x421340, 8) , (const, 0x2000, 8)]
[(unique, 0x1000035e, 8) COPY (register, 0x20, 8)]
[(unique, 0x100001ec, 8) MULTIEQUAL (unique, 0x1000035e, 8) , (unique, 0x10000366, 8)]
[(unique, 0x100001f4, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x45854f, 1) , (unique, 0x100001e3, 1), (unique, 0x100001e3, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x8, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100001ec, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000038e, 8) , (unique, 0xbe00, 8), (unique, 0x1000038e, 8) CAST (unique, 0x3c80, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000386, 8), (unique, 0x10000386, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x100001ec, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100001ec, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(unique, 0x10000366, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001ec, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x100000fe, 8) , (const, 0x1, 8), (unique, 0x100000fe, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfff, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x458756, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfff, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000039e, 8) , (unique, 0xbe00, 8), (unique, 0x1000039e, 8) CAST (unique, 0x3880, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000396, 8), (unique, 0x10000396, 8) CAST (unique, 0x3880, 8), (unique, 0x3880, 8) PTRADD (unique, 0x100001f4, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x458560, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003b6, 8) , (const, 0x45858e, 8), (unique, 0x100003b6, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x1000026d, 8) , (const, 0x1, 8), (unique, 0x1000026d, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x101, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x101, 4)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x101, 4)]
[(ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x101, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x101, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x10000332, 8) , (const, 0x101, 4), (unique, 0x10000332, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) INT_AND (unique, 0x100003a6, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100003a6, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x10000265, 8) , (const, 0x1, 8), (unique, 0x10000265, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xf, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x1000033a, 8) , (const, 0x101, 4), (unique, 0x1000033a, 8) COPY (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x100003ae, 8), (unique, 0x100003ae, 8) INT_ADD (register, 0x18, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_AND (unique, 0x100003a6, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100003a6, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x10000265, 8) , (const, 0x1, 8), (unique, 0x10000265, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xf, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000034a, 8) , (const, 0x101, 4), (unique, 0x1000034a, 8) COPY (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x100003ae, 8), (unique, 0x100003ae, 8) INT_ADD (register, 0x18, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_AND (unique, 0x100003a6, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100003a6, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x10000265, 8) , (const, 0x1, 8), (unique, 0x10000265, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xf, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x101, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x101, 4)]
[ ---  CBRANCH (ram, 0x458650, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x455ed0, 8) , (unique, 0x10000205, 8) , (const, 0x80000, 8), (unique, 0x10000205, 8) COPY (const, 0x49e240, 8)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003be, 8) , (const, 0x4585b8, 8), (unique, 0x100003be, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x10000275, 8) , (const, 0x1, 8), (unique, 0x10000275, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x125, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x125, 4)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x125, 4)]
[(ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (register, 0x0, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x125, 4)]
[ ---  CBRANCH (ram, 0x458734, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003c6, 8), (unique, 0x100003c6, 8) CALL (ram, 0x458320, 8) , (register, 0x0, 4) , (register, 0xb0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xb0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003ce, 8) , (const, 0x4585d8, 8), (unique, 0x100003ce, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x1000027d, 8) , (const, 0x1, 8), (unique, 0x1000027d, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x136, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x136, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x136, 4), (ram, 0x4c6080, 4) MULTIEQUAL (ram, 0x4c6080, 4) , (ram, 0x4c6080, 4)]
[(ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x136, 4), (ram, 0x4c7ce0, 8) MULTIEQUAL (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x136, 4), (stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x136, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x136, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x136, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x136, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x136, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x4106e0, 8) , (register, 0xb8, 8) , (unique, 0x100003d6, 8) , (const, 0xa, 4), (unique, 0x100003d6, 8) CAST (unique, 0x3100, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x458734, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100003de, 8) , (register, 0xb8, 8), (unique, 0x100003de, 8) CAST (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x136, 4), (register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x1000035a, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x458710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003e6, 8), (unique, 0x100003e6, 8) CAST (stack, 0xffffffffffffffa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003f6, 8) , (const, 0x458724, 8), (unique, 0x100003f6, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x10000285, 8) , (const, 0x1, 8), (unique, 0x10000285, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x324, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x324, 4)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x324, 4)]
[(ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x324, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x324, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x324, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x324, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x324, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x324, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x324, 4)]
[(register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x4106e0, 8) , (unique, 0x3100, 8) , (unique, 0x100003fe, 8) , (const, 0xa, 4), (unique, 0x100003fe, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003ee, 8), (unique, 0x100003ee, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4585f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000406, 8) , (unique, 0x3100, 8), (unique, 0x10000406, 8) CAST (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x324, 4), (unique, 0x3100, 8) CAST (unique, 0x100003ee, 8), (unique, 0x100003ee, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000040e, 8) , (const, 0x45873c, 8), (unique, 0x1000040e, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x100002b5, 8) , (const, 0x1, 8), (unique, 0x100002b5, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x33a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x33a, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x33a, 4), (ram, 0x4c6080, 4) MULTIEQUAL (ram, 0x4c6080, 4) , (ram, 0x4c6080, 4) , (ram, 0x4c6080, 4)]
[(ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x33a, 4), (ram, 0x4c7ce0, 8) MULTIEQUAL (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x33a, 4), (stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x33a, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x33a, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x33a, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x33a, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x33a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x455d60, 8) , (stack, 0xffffffffffffff84, 4), (stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[ ---  BRANCH (ram, 0x458650, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(ram, 0x4c7ce0, 8) MULTIEQUAL (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8)]
[(ram, 0x4c6080, 4) MULTIEQUAL (ram, 0x4c6080, 4) , (ram, 0x4c6080, 4)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 4) INT_ADD (register, 0xa0, 4) , (register, 0x80, 4), (register, 0xa0, 4) INT_SUB (register, 0xa0, 4) , (register, 0x0, 4), (register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4), (register, 0x80, 4) MULTIEQUAL (unique, 0x1000035a, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x458640, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x10000416, 8), (unique, 0x10000416, 8) CAST (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000041e, 8), (unique, 0x1000041e, 8) INT_ADD (register, 0x110, 8) , (const, 0xfffffffffffffff0, 8)]
[(unique, 0x10000326, 8) COPY (unique, 0x10000426, 8), (unique, 0x10000426, 8) CAST (stack, 0xffffffffffffffa8, 8)]
[ ---  BRANCH (ram, 0x458629, 1)]
[ ---  CBRANCH (ram, 0x458620, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000042e, 8), (unique, 0x1000042e, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000326, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x458640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (stack, 0xffffffffffffffa0, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4585c8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (stack, 0xffffffffffffffa0, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000436, 8) , (const, 0x458648, 8), (unique, 0x10000436, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x1000028d, 8) , (const, 0x1, 8), (unique, 0x1000028d, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a2, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x1a2, 4)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x1a2, 4)]
[(ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x1a2, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x1a2, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1a2, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1a2, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1a2, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1a2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a2, 4)]
[ ---  CALL (ram, 0x455d60, 8) , (stack, 0xffffffffffffff84, 4)]
[ ---  CBRANCH (ram, 0x4586af, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0xb0, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000043e, 8) , (const, 0x45866b, 8), (unique, 0x1000043e, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x10000295, 8) , (const, 0x1, 8), (unique, 0x10000295, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c4, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x1c4, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x1c4, 4), (ram, 0x4c6080, 4) MULTIEQUAL (ram, 0x4c6080, 4) , (ram, 0x4c6080, 4) , (ram, 0x4c6080, 4)]
[(ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x1c4, 4), (ram, 0x4c7ce0, 8) MULTIEQUAL (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x1c4, 4), (stack, 0xffffffffffffff84, 4) MULTIEQUAL (register, 0x0, 4) , (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1c4, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1c4, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x10000342, 8) , (const, 0x1c4, 4), (unique, 0x10000342, 8) COPY (register, 0x18, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x10000352, 8) , (const, 0x1c4, 4), (unique, 0x10000352, 8) COPY (register, 0x18, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c4, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x458761, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x455ed0, 8) , (unique, 0x1000020d, 8) , (const, 0x80000, 8), (unique, 0x1000020d, 8) COPY (const, 0x49e275, 8)]
[(register, 0xa0, 4) COPY (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000446, 8) , (const, 0x45877a, 8), (unique, 0x10000446, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x1000029d, 8) , (const, 0x1, 8), (unique, 0x1000029d, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x28a, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x28a, 4)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x28a, 4)]
[(ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x28a, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x28a, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x28a, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x28a, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x28a, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x28a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x28a, 4)]
[ ---  CBRANCH (ram, 0x4586af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x455ed0, 8) , (unique, 0x10000215, 8) , (const, 0x80000, 8), (unique, 0x10000215, 8) COPY (const, 0x49e280, 8)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[ ---  BRANCH (ram, 0x4587b5, 1)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000044e, 8) , (const, 0x4587ca, 8), (unique, 0x1000044e, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x100002ad, 8) , (const, 0x1, 8), (unique, 0x100002ad, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b0, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x2b0, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x2b0, 4), (ram, 0x4c6080, 4) MULTIEQUAL (ram, 0x4c6080, 4) , (ram, 0x4c6080, 4)]
[(ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x2b0, 4), (ram, 0x4c7ce0, 8) MULTIEQUAL (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x2b0, 4), (stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x2b0, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x2b0, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2b0, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2b0, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b0, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x458798, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000456, 8), (unique, 0x10000456, 8) CALL (ram, 0x458320, 8) , (register, 0x0, 4) , (stack, 0xffffffffffffff90, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x18, 8), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(register, 0x8, 8) COPY (const, 0x9, 8)]
[(unique, 0x10000306, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000316, 8) COPY (unique, 0x1000045e, 8), (unique, 0x1000045e, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49e28e, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000316, 8) , (unique, 0x1000031e, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000306, 8) , (unique, 0x1000030e, 8)]
[ ---  CBRANCH (ram, 0x4587a6, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000030e, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100002fd, 8) , (const, 0x1, 8), (unique, 0x100002fd, 8) INT_ADD (unique, 0x100001be, 8) , (const, 0x1, 8), (unique, 0x100001be, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x1000031e, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100002f5, 8) , (const, 0x1, 8), (unique, 0x100002f5, 8) INT_ADD (unique, 0x100001b6, 8) , (const, 0x1, 8), (unique, 0x100001b6, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x4587a4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (unique, 0x12080, 4), (unique, 0x12080, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x100001c7, 1) , (unique, 0x100001c8, 1), (unique, 0x100001c8, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x100001c7, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000466, 8) , (const, 0x45869d, 8), (unique, 0x10000466, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x100002a5, 8) , (const, 0x1, 8), (unique, 0x100002a5, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1eb, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x1eb, 4), (ram, 0x4c6080, 4) MULTIEQUAL (ram, 0x4c6080, 4) , (ram, 0x4c6080, 4)]
[(ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x1eb, 4), (ram, 0x4c7ce0, 8) MULTIEQUAL (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x1eb, 4), (stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1eb, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1eb, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1eb, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1eb, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1eb, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x4586a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000046e, 8), (unique, 0x1000046e, 8) CALL (ram, 0x458320, 8) , (register, 0x0, 4) , (stack, 0xffffffffffffff90, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x18, 8), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[ ---  CBRANCH (ram, 0x4586f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x63, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4586a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x70, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4586a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x75, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000476, 8) , (const, 0x4586af, 8), (unique, 0x10000476, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001f4, 8) , (unique, 0x100002bd, 8) , (const, 0x1, 8), (unique, 0x100002bd, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x207, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x207, 4), (ram, 0x4c6080, 4) MULTIEQUAL (ram, 0x4c6080, 4) , (ram, 0x4c6080, 4) , (ram, 0x4c6080, 4) , (ram, 0x4c6080, 4) , (ram, 0x4c6080, 4)]
[(ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x207, 4), (ram, 0x4c7ce0, 8) MULTIEQUAL (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x207, 4), (stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x207, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x207, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x207, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x207, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x207, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0xa8, 4), (register, 0xa8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (unique, 0x12080, 4), (unique, 0x12080, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x458688, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7ce0, 8) COPY (stack, 0xffffffffffffff88, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000032e, 4) COPY (register, 0xa0, 4), (register, 0xa0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(ram, 0x4c7ce0, 8) MULTIEQUAL (ram, 0x4c7ce0, 8) , (ram, 0x4c7ce0, 8)]
[(ram, 0x4c6080, 4) MULTIEQUAL (unique, 0x1000032e, 4) , (ram, 0x4c6080, 4)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4587d7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000047e, 8), (unique, 0x1000047e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000486, 8) , (unique, 0x100001fd, 8), (unique, 0x10000486, 8) CAST (register, 0x20, 8), (unique, 0x100001fd, 8) PTRSUB (const, 0x0, 8) , (const, 0x4587dc, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x232, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x232, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x232, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x232, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x232, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x232, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c6080, 4) COPY (ram, 0x4c6080, 4), (ram, 0x4c6080, 4) INDIRECT (ram, 0x4c6080, 4) , (const, 0x232, 4)]
[(ram, 0x4c7ce0, 8) COPY (ram, 0x4c7ce0, 8), (ram, 0x4c7ce0, 8) INDIRECT (ram, 0x4c7ce0, 8) , (const, 0x232, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c6080, 4) COPY (ram, 0x4c6080, 4)]
[(ram, 0x4c7ce0, 8) COPY (ram, 0x4c7ce0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (ram, 0x4c6080, 4)]
