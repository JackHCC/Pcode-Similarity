[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x28, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x28, 4), (register, 0x20a, 1) COPY (const, 0x0, 1)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x28, 4)]
[(ram, 0x4c3220, 4) INDIRECT (ram, 0x4c3220, 4) , (const, 0x28, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x28, 4), (stack, 0xffffffffffffff80, 8) COPY (const, 0x205078, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x28, 4)]
[ ---  CBRANCH (ram, 0x2052c9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (ram, 0x4c6310, 8), (register, 0x0, 8) CALL (ram, 0x11f880, 8) , (const, 0x0, 8), (ram, 0x4c6310, 8) INDIRECT (ram, 0x4c6310, 8) , (const, 0x28, 4)]
[ ---  CBRANCH (ram, 0x20508f, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (ram, 0x4c3220, 4)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[(ram, 0x4c3220, 4) COPY (ram, 0x4c3220, 4)]
[(ram, 0x4c6310, 8) COPY (ram, 0x4c6310, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (ram, 0x4c3220, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x205117, 8), (register, 0x20, 8) CAST (unique, 0x100002fb, 8), (unique, 0x100002fb, 8) INT_ADD (unique, 0x100002f3, 8) , (unique, 0x100000a7, 8), (unique, 0x100002f3, 8) CAST (unique, 0x10000223, 8), (unique, 0x10000223, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x100000a7, 8) INT_2COMP (unique, 0x3c80, 8), (unique, 0x3c80, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2010, 8), (register, 0xa0, 8) INT_AND (unique, 0x1000009f, 8) , (const, 0xffffffffffffe200, 8), (unique, 0x1000009f, 8) INT_2COMP (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2141b0, 8) , (const, 0x2000, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc0, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xc0, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3c, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0xc0, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3c, 4)]
[(ram, 0x4c3220, 4) INDIRECT (ram, 0x4c3220, 4) , (const, 0xc0, 4), (ram, 0x4c3220, 4) INDIRECT (ram, 0x4c3220, 4) , (const, 0x3c, 4)]
[(ram, 0x4c6310, 8) INDIRECT (ram, 0x4c6310, 8) , (const, 0xc0, 4), (ram, 0x4c6310, 8) INDIRECT (ram, 0x4c6310, 8) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x3c, 4), (stack, 0xffffffffffffff80, 8) COPY (const, 0x20509e, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (register, 0x0, 8) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x2, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffffb0, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x100002eb, 8), (unique, 0x100002eb, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x100002e3, 8) , (unique, 0x10000283, 8), (unique, 0x100002e3, 8) CAST (unique, 0x1000028b, 8), (unique, 0x1000028b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x10000283, 8) INT_ADD (unique, 0x100000a7, 8) , (const, 0x10, 8), (unique, 0x100000a7, 8) INT_2COMP (unique, 0x3c80, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2000, 8), (unique, 0x3c80, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2010, 8), (register, 0xa0, 8) INT_AND (unique, 0x1000009f, 8) , (const, 0xffffffffffffe200, 8), (unique, 0x1000009f, 8) INT_2COMP (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2141b0, 8) , (const, 0x2000, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffffb8, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x100002eb, 8), (unique, 0x100002eb, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x100002e3, 8) , (unique, 0x10000283, 8), (unique, 0x100002e3, 8) CAST (unique, 0x1000028b, 8), (unique, 0x1000028b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x10000283, 8) INT_ADD (unique, 0x100000a7, 8) , (const, 0x10, 8), (unique, 0x100000a7, 8) INT_2COMP (unique, 0x3c80, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2000, 8), (unique, 0x3c80, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2010, 8), (register, 0xa0, 8) INT_AND (unique, 0x1000009f, 8) , (const, 0xffffffffffffe200, 8), (unique, 0x1000009f, 8) INT_2COMP (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2141b0, 8) , (const, 0x2000, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3c, 4)]
[ ---  CBRANCH (ram, 0x20518c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000303, 8), (unique, 0x10000303, 8) CALL (ram, 0x204e40, 8) , (const, 0x2, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (register, 0xa0, 8) CAST (unique, 0x100002eb, 8), (unique, 0x100002eb, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x100002e3, 8) , (unique, 0x10000283, 8), (unique, 0x100002e3, 8) CAST (unique, 0x1000028b, 8), (unique, 0x1000028b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x10000283, 8) INT_ADD (unique, 0x100000a7, 8) , (const, 0x10, 8), (unique, 0x100000a7, 8) INT_2COMP (unique, 0x3c80, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2000, 8), (unique, 0x3c80, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2010, 8), (register, 0xa0, 8) INT_AND (unique, 0x1000009f, 8) , (const, 0xffffffffffffe200, 8), (unique, 0x1000009f, 8) INT_2COMP (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2141b0, 8) , (const, 0x2000, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x205138, 8), (register, 0x20, 8) CAST (unique, 0x10000313, 8), (unique, 0x10000313, 8) INT_ADD (unique, 0x1000030b, 8) , (unique, 0x100000a7, 8), (unique, 0x1000030b, 8) CAST (unique, 0x1000023b, 8), (unique, 0x1000023b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd5, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xd5, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0xd5, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c3220, 4) INDIRECT (ram, 0x4c3220, 4) , (const, 0xd5, 4), (ram, 0x4c3220, 4) MULTIEQUAL (ram, 0x4c3220, 4) , (ram, 0x4c3220, 4)]
[(ram, 0x4c6310, 8) INDIRECT (ram, 0x4c6310, 8) , (const, 0xd5, 4), (ram, 0x4c6310, 8) MULTIEQUAL (ram, 0x4c6310, 8) , (ram, 0x4c6310, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xd5, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xd4, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xd5, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xd4, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xd5, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xd4, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xd5, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xd4, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xd5, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xd4, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xd5, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xd4, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x0, 8) CALL (ram, 0x13b3e0, 8) , (register, 0xb8, 8) , (unique, 0x3100, 8) , (const, 0xa, 4), (register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x20535a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd4, 4), (register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x100002ab, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x205298, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2052b0, 8), (register, 0x20, 8) CAST (unique, 0x10000323, 8), (unique, 0x10000323, 8) INT_ADD (unique, 0x1000031b, 8) , (unique, 0x100000a7, 8), (unique, 0x1000031b, 8) CAST (unique, 0x10000253, 8), (unique, 0x10000253, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2d5, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x2d5, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2d5, 4)]
[(ram, 0x4c3220, 4) INDIRECT (ram, 0x4c3220, 4) , (const, 0x2d5, 4)]
[(ram, 0x4c6310, 8) INDIRECT (ram, 0x4c6310, 8) , (const, 0x2d5, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x2d5, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x2d4, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2d5, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2d4, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2d5, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2d4, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2d5, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2d4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2d5, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2d4, 4)]
[(register, 0x0, 8) CALL (ram, 0x13b3e0, 8) , (register, 0xb8, 8) , (unique, 0x3100, 8) , (const, 0xa, 4), (register, 0xb8, 8) PTRADD (stack, 0xffffffffffffffc0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100002b3, 8) COPY (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x2d5, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x2d4, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x20535a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2d5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2d4, 4), (register, 0xb8, 8) PTRADD (stack, 0xffffffffffffffc0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(ram, 0x4c6310, 8) MULTIEQUAL (ram, 0x4c6310, 8) , (ram, 0x4c6310, 8)]
[(ram, 0x4c3220, 4) MULTIEQUAL (ram, 0x4c3220, 4) , (ram, 0x4c3220, 4)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x20518c, 1)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(ram, 0x4c6310, 8) MULTIEQUAL (ram, 0x4c6310, 8) , (ram, 0x4c6310, 8)]
[(ram, 0x4c3220, 4) MULTIEQUAL (ram, 0x4c3220, 4) , (ram, 0x4c3220, 4)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x8, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100002ab, 8) , (unique, 0x100002b3, 8)]
[ ---  CBRANCH (ram, 0x20518c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000032b, 8), (unique, 0x1000032b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e18, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x100002db, 8) COPY (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x205128, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000333, 8), (unique, 0x10000333, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100002db, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x205178, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(ram, 0x4c6310, 8) MULTIEQUAL (ram, 0x4c6310, 8) , (ram, 0x4c6310, 8) , (ram, 0x4c6310, 8) , (ram, 0x4c6310, 8)]
[(ram, 0x4c3220, 4) MULTIEQUAL (ram, 0x4c3220, 4) , (ram, 0x4c3220, 4) , (ram, 0x4c3220, 4) , (ram, 0x4c3220, 4)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x2051c9, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[(stack, 0xffffffffffffffb0, 8) COPY (register, 0xa0, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (register, 0xa0, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(stack, 0xffffffffffffff90, 8) COPY (const, 0x2, 8)]
[(stack, 0xffffffffffffffa0, 8) INT_ADD (unique, 0x100002a3, 8) , (const, 0x2, 4), (unique, 0x100002a3, 8) INT_LEFT (unique, 0x1000029b, 8) , (const, 0x20, 8), (unique, 0x1000029b, 8) INT_SEXT (unique, 0x1000033b, 4), (unique, 0x1000033b, 4) CAST (stack, 0xffffffffffffffa4, 4), (stack, 0xffffffffffffffa4, 4) SUBPIECE (stack, 0xffffffffffffffa0, 8) , (const, 0x4, 8)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x205327, 1)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x205338, 8), (register, 0x20, 8) CAST (unique, 0x10000347, 8), (unique, 0x10000347, 8) INT_ADD (unique, 0x1000033f, 8) , (unique, 0x100000a7, 8), (unique, 0x1000033f, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x26a, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x26a, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c3220, 4) INDIRECT (ram, 0x4c3220, 4) , (const, 0x26a, 4), (ram, 0x4c3220, 4) MULTIEQUAL (ram, 0x4c3220, 4) , (ram, 0x4c3220, 4)]
[(ram, 0x4c6310, 8) INDIRECT (ram, 0x4c6310, 8) , (const, 0x26a, 4), (ram, 0x4c6310, 8) MULTIEQUAL (ram, 0x4c6310, 8) , (ram, 0x4c6310, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x26a, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x269, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x26a, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x269, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x26a, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x269, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x26a, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x269, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x26a, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x269, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x26a, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x269, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x205300, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000034f, 8), (unique, 0x1000034f, 8) CALL (ram, 0x204e40, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0xa0, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) COPY (const, 0x3, 8)]
[(unique, 0x100002bb, 8) COPY (register, 0x0, 8)]
[(unique, 0x100002cb, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x28e156, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100002cb, 8) , (unique, 0x100002d3, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100002bb, 8) , (unique, 0x100002c3, 8)]
[ ---  CBRANCH (ram, 0x205311, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x100002c3, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100001f3, 8) , (const, 0x1, 8), (unique, 0x100001f3, 8) INT_ADD (unique, 0x1000014b, 8) , (const, 0x1, 8), (unique, 0x1000014b, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x100002d3, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100001eb, 8) , (const, 0x1, 8), (unique, 0x100001eb, 8) INT_ADD (unique, 0x10000143, 8) , (const, 0x1, 8), (unique, 0x10000143, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x20530f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x205283, 1) , (unique, 0xc680, 1), (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x20519b, 1)]
[(register, 0x38, 8) INT_AND (stack, 0xffffffffffffffa0, 8) , (const, 0xffffffff, 8)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (unique, 0x12080, 4), (unique, 0x12080, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c3220, 4) COPY (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(ram, 0x4c6310, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
