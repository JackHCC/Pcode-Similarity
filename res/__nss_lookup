[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x29, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x29, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x29, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x29, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x29, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x10000361, 8) , (const, 0x29, 4), (unique, 0x10000361, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x10000369, 8) , (const, 0x29, 4), (unique, 0x10000369, 8) COPY (register, 0x30, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x34, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x29, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x34, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x29, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x228e50, 8)]
[(stack, 0xffffffffffffffb7, 1) COPY (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x229080, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x228e50, 8)]
[ ---  CBRANCH (ram, 0x229080, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x57, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x57, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x57, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x57, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x57, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x57, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x57, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x57, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x59, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x57, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x59, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x57, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x228e50, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(unique, 0x100001db, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(unique, 0x100001e3, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001eb, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(unique, 0x100001ef, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(unique, 0x100001fb, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(unique, 0x10000203, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000020b, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x10000213, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(unique, 0x1000021b, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x10000223, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x1000022b, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[ ---  CBRANCH (ram, 0x229193, 1) , (unique, 0x100001da, 1), (unique, 0x100001da, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4c7d60, 4) COPY (unique, 0x100001eb, 4)]
[(ram, 0x4c87a0, 4) COPY (unique, 0x100001ef, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2292a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000379, 8), (unique, 0x10000379, 8) INT_ADD (unique, 0x10000371, 8) , (const, 0xc, 8), (unique, 0x10000371, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c7d60, 4) COPY (unique, 0x100001eb, 4)]
[(ram, 0x4c87a0, 4) COPY (unique, 0x100001ef, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (unique, 0x100001a4, 4) , (const, 0x2, 4), (unique, 0x100001a4, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2292c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000381, 8), (unique, 0x10000381, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c7d60, 4) COPY (unique, 0x100001eb, 4)]
[(ram, 0x4c87a0, 4) COPY (unique, 0x100001ef, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (unique, 0x100001eb, 4) , (const, 0x88, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0x10000223, 8)]
[ ---  CBRANCH (ram, 0x2290ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (unique, 0x100001ef, 4) , (const, 0x88, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7d60, 4) , (const, 0x0, 4)]
[(ram, 0x4c7d60, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7d60, 4) , (const, 0x0, 4)]
[(ram, 0x4c7d60, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2290f1, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2290ea, 8), (register, 0x20, 8) PTRADD (unique, 0x100001db, 8) , (const, 0xffffffffffffffef, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x100001e3, 8) , (const, 0x283, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x283, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x283, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x283, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (unique, 0x100001fb, 8) , (const, 0x282, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x283, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x10000203, 8) , (const, 0x282, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x283, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x1000020b, 8) , (const, 0x282, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x283, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x10000213, 8) , (const, 0x282, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x283, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000021b, 8) , (const, 0x282, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x283, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x10000223, 8) , (const, 0x282, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x283, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (unique, 0x1000022b, 1) , (const, 0x282, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x283, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x282, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x10000245, 8), (unique, 0x10000245, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d60, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229107, 8), (register, 0x20, 8) PTRADD (unique, 0x100001db, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbb, 4), (register, 0x110, 8) MULTIEQUAL (unique, 0x100001e3, 8) , (register, 0x110, 8) , (unique, 0x100001e3, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xbb, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xbb, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xbb, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xba, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (unique, 0x100001fb, 8) , (stack, 0xffffffffffffff80, 8) , (unique, 0x100001fb, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xbb, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xba, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x10000203, 8) , (stack, 0xffffffffffffff88, 8) , (unique, 0x10000203, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xbb, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xba, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (unique, 0x1000020b, 8) , (stack, 0xffffffffffffff90, 8) , (unique, 0x1000020b, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xbb, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xba, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x10000213, 8) , (stack, 0xffffffffffffff98, 8) , (unique, 0x10000213, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xbb, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xba, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x1000021b, 8) , (stack, 0xffffffffffffffa0, 8) , (unique, 0x1000021b, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xbb, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xba, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x10000223, 8) , (stack, 0xffffffffffffffa8, 8) , (unique, 0x10000223, 8)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0xbb, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0xba, 4), (stack, 0xffffffffffffffb7, 1) MULTIEQUAL (unique, 0x1000022b, 1) , (stack, 0xffffffffffffffb7, 1) , (unique, 0x1000022b, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xbb, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xba, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2292e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000391, 8), (unique, 0x10000391, 8) CALL (ram, 0x2024f0, 8) , (unique, 0x3100, 8) , (unique, 0x10000389, 8) , (unique, 0x1000022d, 8), (unique, 0x10000389, 8) CAST (unique, 0x3100, 8), (unique, 0x1000022d, 8) PTRSUB (const, 0x0, 8) , (const, 0x228290, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x30, 1) COPY (const, 0x1, 1)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x229137, 1)]
[ ---  CBRANCH (ram, 0x2291b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000399, 8) , (unique, 0x3100, 8), (unique, 0x10000399, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2291be, 8), (register, 0x20, 8) PTRADD (unique, 0x100001db, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x185, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x185, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x185, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x185, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x185, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x185, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x185, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x184, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x185, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x185, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x185, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x185, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x184, 4)]
[(unique, 0x10000335, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003a1, 8), (unique, 0x100003a1, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2292f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003a1, 8), (unique, 0x100003a1, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffff98, 8) , (unique, 0x100003a9, 8), (unique, 0x100003a9, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2291e4, 8), (register, 0x20, 8) PTRADD (unique, 0x100001db, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a1, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1a1, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x19e, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x195, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1a1, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x19e, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x195, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1a1, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1a0, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1a1, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1a0, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1a1, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1a0, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1a1, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1a0, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1a1, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1a0, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1a1, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1a0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a1, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a0, 4)]
[(unique, 0x1000033d, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1a1, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1a0, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2292f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2286d0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2292d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003b1, 8), (unique, 0x100003b1, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x30, 1) COPY (const, 0x1, 1)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000325, 8) COPY (stack, 0xffffffffffffff98, 8)]
[ ---  BRANCH (ram, 0x22927e, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229217, 8), (register, 0x20, 8) PTRADD (unique, 0x100001db, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1cf, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ce, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229227, 8), (register, 0x20, 8) PTRADD (unique, 0x100001db, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x73736e5f, 4), (register, 0x20, 8) CAST (unique, 0x100003d1, 8), (unique, 0x100003d1, 8) INT_ADD (unique, 0x100003c9, 8) , (unique, 0x1000016c, 8), (unique, 0x100003c9, 8) CAST (unique, 0x100001db, 8), (unique, 0x1000016c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000031d, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x1000031d, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003c1, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cf, 4), (unique, 0x100003c1, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ce, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x5f, 1), (unique, 0x3800, 8) CAST (unique, 0x100003e9, 8), (unique, 0x100003e9, 8) INT_ADD (unique, 0x100003e1, 8) , (unique, 0x100002c5, 8), (unique, 0x100003e1, 8) CAST (unique, 0x100001db, 8), (unique, 0x100002c5, 8) INT_ADD (unique, 0x1000016c, 8) , (const, 0x4, 8), (unique, 0x1000016c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000031d, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x1000031d, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003c1, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cf, 4), (unique, 0x100003c1, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ce, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229251, 8), (register, 0x20, 8) CAST (unique, 0x100003f9, 8), (unique, 0x100003f9, 8) INT_ADD (unique, 0x100003f1, 8) , (unique, 0x100002cd, 8), (unique, 0x100003f1, 8) CAST (unique, 0x100001db, 8), (unique, 0x100002cd, 8) INT_ADD (unique, 0x1000016c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000016c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000031d, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x1000031d, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003c1, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cf, 4), (unique, 0x100003c1, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ce, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x5f, 1), (register, 0x0, 8) CAST (unique, 0x10000401, 8), (unique, 0x10000401, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x10000305, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x100003d9, 8) , (unique, 0x100002bd, 8), (unique, 0x100003d9, 8) CAST (unique, 0x100001db, 8), (unique, 0x100002bd, 8) INT_ADD (unique, 0x1000016c, 8) , (const, 0x5, 8), (unique, 0x1000016c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (unique, 0x10000305, 8) COPY (stack, 0xffffffffffffff88, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000031d, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x1000031d, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003c1, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cf, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1cf, 4), (unique, 0x100003c1, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ce, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ce, 4), (stack, 0xffffffffffffff88, 8) COPY (unique, 0x100003b9, 8), (unique, 0x100003b9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229260, 8), (register, 0x20, 8) CAST (unique, 0x10000411, 8), (unique, 0x10000411, 8) INT_ADD (unique, 0x10000409, 8) , (unique, 0x100002d5, 8), (unique, 0x10000409, 8) CAST (unique, 0x100001db, 8), (unique, 0x100002d5, 8) INT_ADD (unique, 0x1000016c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000016c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000031d, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x1000031d, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003c1, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cf, 4), (unique, 0x100003c1, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ce, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x18a770, 8) , (unique, 0x3100, 8) , (unique, 0x1000031d, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CAST (unique, 0x10000401, 8), (unique, 0x10000401, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x10000305, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x100003d9, 8) , (unique, 0x100002bd, 8), (unique, 0x100003d9, 8) CAST (unique, 0x100001db, 8), (unique, 0x100002bd, 8) INT_ADD (unique, 0x1000016c, 8) , (const, 0x5, 8), (unique, 0x1000016c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (unique, 0x10000305, 8) COPY (stack, 0xffffffffffffff88, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000031d, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x1000031d, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003c1, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cf, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1cf, 4), (unique, 0x100003c1, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ce, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ce, 4), (stack, 0xffffffffffffff88, 8) COPY (unique, 0x100003b9, 8), (unique, 0x100003b9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x22926c, 8), (register, 0x20, 8) CAST (unique, 0x10000429, 8), (unique, 0x10000429, 8) INT_ADD (unique, 0x10000421, 8) , (unique, 0x100002dd, 8), (unique, 0x10000421, 8) CAST (unique, 0x100001db, 8), (unique, 0x100002dd, 8) INT_ADD (unique, 0x1000016c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000016c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000031d, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x1000031d, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003c1, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cf, 4), (unique, 0x100003c1, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ce, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x20e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x207, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ff, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d9, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1cf, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x20e, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x207, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x204, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1ff, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1d9, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1cf, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x20e, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x207, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x204, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ff, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1d9, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1cf, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x207, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x206, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ff, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1fc, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1cf, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ce, 4), (stack, 0xffffffffffffff88, 8) COPY (unique, 0x100003b9, 8), (unique, 0x100003b9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x207, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x206, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ff, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1fc, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003c1, 8), (unique, 0x100003c1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x207, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x206, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1ff, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1fc, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1cf, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1ce, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x207, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x206, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1ff, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1fc, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1cf, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1ce, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x20e, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x20d, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x207, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x206, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1ff, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1fe, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1fc, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1f9, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1d9, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1d8, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1cf, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1ce, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x207, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x206, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ff, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1fc, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cf, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ce, 4)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x242ee0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000419, 8), (unique, 0x10000419, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(unique, 0x1000032d, 8) COPY (stack, 0xffffffffffffff80, 8), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x207, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x206, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1ff, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1fc, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1cf, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1ce, 4), (stack, 0xffffffffffffff80, 8) COPY (stack, 0xffffffffffffff98, 8)]
[(unique, 0x1000034d, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x207, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x206, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1ff, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1fc, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1cf, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1ce, 4), (stack, 0xffffffffffffff98, 8) COPY (unique, 0x100001db, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x30, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x30, 1)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x1000034d, 8) , (unique, 0x100001db, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x241, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x241, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000439, 8), (unique, 0x10000439, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000431, 8), (unique, 0x10000431, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x1000032d, 8) , (unique, 0x10000325, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  BRANCH (ram, 0x229137, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x22930e, 8), (register, 0x20, 8) PTRADD (unique, 0x100001db, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x2028b0, 8) , (unique, 0x3100, 8) , (unique, 0x10000441, 8) , (unique, 0x10000235, 8), (unique, 0x10000441, 8) CAST (unique, 0x3100, 8), (unique, 0x10000235, 8) PTRSUB (const, 0x0, 8) , (const, 0x228290, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x22931a, 8), (register, 0x20, 8) PTRADD (unique, 0x100001db, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x257, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x25e, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x257, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x25e, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x257, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x25e, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x257, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x256, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x25e, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x257, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x256, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x25e, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x257, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x256, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x25e, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x257, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x256, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000335, 8) , (unique, 0x1000033d, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x25e, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x257, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x256, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x25e, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x257, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x256, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x25e, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x25d, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x257, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x256, 4), (stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x257, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x256, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x1000030d, 8), (unique, 0x1000030d, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x257, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x256, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000335, 8) , (unique, 0x1000033d, 8)]
[(register, 0x30, 1) COPY (const, 0x1, 1)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x229137, 1)]
[(register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000469, 8), (unique, 0x10000469, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x10, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x10000461, 8) , (const, 0x2f, 4), (unique, 0x10000461, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x10000459, 8) , (const, 0x11, 4), (unique, 0x10000459, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000451, 8), (unique, 0x10000451, 8) INT_ADD (unique, 0x10000449, 8) , (const, 0x8, 8), (unique, 0x10000449, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x30, 1) , (register, 0x30, 1) , (register, 0x30, 1)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100001db, 8) , (register, 0x20, 8) , (unique, 0x100001db, 8) , (unique, 0x100001db, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x22914b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000359, 4) COPY (unique, 0x100002fd, 4), (unique, 0x100002fd, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x22916d, 1) , (unique, 0x10000301, 1), (unique, 0x10000301, 1) INT_NOTEQUAL (unique, 0x100002fd, 4) , (const, 0x0, 4), (unique, 0x100002fd, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229166, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffef, 8) , (const, 0x8, 8)]
[(register, 0x30, 1) INDIRECT (register, 0x30, 1) , (const, 0x16c, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x16c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x16c, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x16c, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x16b, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x16c, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x16b, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x16c, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x16b, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x16c, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x16b, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x16c, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x16b, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x16c, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x16b, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x16c, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x16b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x16c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x16b, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x1000023d, 8), (unique, 0x1000023d, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d60, 8)]
[(unique, 0x10000345, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x16c, 4)]
[(unique, 0x10000355, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x16c, 4), (ram, 0x4c7d60, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000315, 8) COPY (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x11f, 4), (ram, 0x4c7d60, 4) COPY (unique, 0x1000035d, 4), (unique, 0x1000035d, 4) MULTIEQUAL (unique, 0x10000355, 4) , (unique, 0x10000359, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x11f, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000345, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2291a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 1) , (const, 0x0, 1), (register, 0x30, 1) MULTIEQUAL (register, 0x30, 1) , (register, 0x30, 1)]
[ ---  CBRANCH (ram, 0x2291a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb7, 1) , (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229187, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x136, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x136, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x135, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x136, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x135, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x136, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x135, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x136, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x135, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x136, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x135, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x136, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x135, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x136, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x135, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x136, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x135, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x141, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x136, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x141, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x136, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x228e50, 8) , (unique, 0xbd80, 8) , (unique, 0x10000315, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
