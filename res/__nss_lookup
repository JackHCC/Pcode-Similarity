[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x100003d7, 8) , (const, 0x3c, 4), (unique, 0x100003d7, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100003df, 8) , (const, 0x3c, 4), (unique, 0x100003df, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x100003e7, 8) , (const, 0x3c, 4), (unique, 0x100003e7, 8) COPY (register, 0x8, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3c, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003f5, 8), (unique, 0x100003f5, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x48, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x3c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x48, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x248f60, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xffffffffffffffb7, 1) COPY (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2491bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x248f60, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x249438, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ec, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x2f2, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x2ec, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2f2, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2ec, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffa8, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x248f60, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2ec, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x2491bb, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x100002bf, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(unique, 0x100002cf, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100002d7, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(unique, 0x100002db, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(unique, 0x100002df, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(unique, 0x100002e7, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x100002ef, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x100002f7, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(unique, 0x100002ff, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x10000307, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x1000030f, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(unique, 0x10000310, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x10000318, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2492e8, 1) , (unique, 0x100002be, 1), (unique, 0x100002be, 1) INT_NOTEQUAL (unique, 0x100002c7, 8) , (const, 0x0, 8), (unique, 0x100002c7, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x100003fd, 8), (unique, 0x100003fd, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x249400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000040d, 8), (unique, 0x1000040d, 8) INT_ADD (unique, 0x10000405, 8) , (const, 0xc, 8), (unique, 0x10000405, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (unique, 0x100001c4, 4) , (const, 0x2, 4), (unique, 0x100001c4, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2492ea, 1)]
[ ---  CBRANCH (ram, 0x249418, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2492ea, 1)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x249483, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000318, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000415, 8), (unique, 0x10000415, 8) INT_ADD (unique, 0x100002cf, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x10000206, 8), (unique, 0x10000206, 8) PTRSUB (const, 0x0, 8) , (const, 0x249488, 8), (register, 0x20, 8) PTRADD (unique, 0x100002bf, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x185, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (unique, 0x100002df, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x185, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x100002e7, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x185, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x100002ef, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x185, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x100002f7, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x185, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100002ff, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x185, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x10000307, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x185, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (unique, 0x1000030f, 1) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x185, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000310, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x185, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000318, 8) , (const, 0x184, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4efeb0, 4) COPY (ram, 0x4efeb0, 4), (ram, 0x4efeb0, 4) INDIRECT (unique, 0x100002d7, 4) , (const, 0x185, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (unique, 0x100002db, 4) , (const, 0x185, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4efeb0, 4) COPY (unique, 0x100002d7, 4)]
[(ram, 0x4f08f8, 4) COPY (unique, 0x100002db, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (unique, 0x100002d7, 4) , (const, 0x95, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (unique, 0x100002ff, 8)]
[ ---  CBRANCH (ram, 0x24920c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (unique, 0x100002db, 4) , (const, 0x95, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4efeb0, 4) , (const, 0x0, 4)]
[(ram, 0x4efeb0, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4efeb0, 4) , (const, 0x0, 4)]
[(ram, 0x4efeb0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x24922f, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x249228, 8), (register, 0x20, 8) PTRADD (unique, 0x100002bf, 8) , (const, 0xffffffffffffffef, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x100002cf, 8) , (const, 0x29b, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x29b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x29b, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x29b, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (unique, 0x100002df, 8) , (const, 0x29a, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x29b, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x100002e7, 8) , (const, 0x29a, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x29b, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x100002ef, 8) , (const, 0x29a, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x29b, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x100002f7, 8) , (const, 0x29a, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x29b, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100002ff, 8) , (const, 0x29a, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x29b, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x10000307, 8) , (const, 0x29a, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x29b, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (unique, 0x1000030f, 1) , (const, 0x29a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x29b, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x29a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x29b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000318, 8) , (const, 0x29a, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000216, 8), (unique, 0x10000216, 8) PTRSUB (const, 0x0, 8) , (const, 0x4efeb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x249245, 8), (register, 0x20, 8) PTRADD (unique, 0x100002bf, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc8, 4), (register, 0x110, 8) MULTIEQUAL (unique, 0x100002cf, 8) , (register, 0x110, 8) , (unique, 0x100002cf, 8)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0xc8, 4), (ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (unique, 0x100002df, 8) , (stack, 0xffffffffffffff80, 8) , (unique, 0x100002df, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x100002e7, 8) , (stack, 0xffffffffffffff88, 8) , (unique, 0x100002e7, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (unique, 0x100002ef, 8) , (stack, 0xffffffffffffff90, 8) , (unique, 0x100002ef, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x100002f7, 8) , (stack, 0xffffffffffffff98, 8) , (unique, 0x100002f7, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x100002ff, 8) , (stack, 0xffffffffffffffa0, 8) , (unique, 0x100002ff, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x10000307, 8) , (stack, 0xffffffffffffffa8, 8) , (unique, 0x10000307, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000318, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000318, 8)]
[(unique, 0x100003f3, 1) COPY (stack, 0xffffffffffffffb7, 1), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0xc8, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0xc7, 4), (stack, 0xffffffffffffffb7, 1) MULTIEQUAL (unique, 0x1000030f, 1) , (stack, 0xffffffffffffffb7, 1) , (unique, 0x1000030f, 1)]
[ ---  CBRANCH (ram, 0x249428, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000425, 8), (unique, 0x10000425, 8) CALL (ram, 0x21d2e0, 8) , (unique, 0x3100, 8) , (unique, 0x1000041d, 8) , (unique, 0x100001f6, 8), (unique, 0x1000041d, 8) CAST (unique, 0x3100, 8), (unique, 0x100001f6, 8) PTRSUB (const, 0x0, 8) , (const, 0x2482f0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x249310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000042d, 8) , (unique, 0x3100, 8), (unique, 0x1000042d, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x24931e, 8), (register, 0x20, 8) PTRADD (unique, 0x100002bf, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ad, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x1ad, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1ad, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1ad, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ad, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ad, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1ad, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1ac, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1ad, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1ad, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1ad, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ad, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ad, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ac, 4)]
[(unique, 0x100003ab, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000435, 8), (unique, 0x10000435, 8) CALL (ram, 0x1212c0, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x249458, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000435, 8), (unique, 0x10000435, 8) CALL (ram, 0x1212c0, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffff98, 8) , (unique, 0x1000043d, 8), (unique, 0x1000043d, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x249344, 8), (register, 0x20, 8) PTRADD (unique, 0x100002bf, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c9, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x1c9, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x1c6, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x1bd, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1c9, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1c6, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1bd, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1c9, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1c8, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1c9, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1c8, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1c9, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1c8, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1c9, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1c8, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1c9, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1c8, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1c9, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1c8, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1c9, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1c8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c9, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c8, 4)]
[(unique, 0x100003b3, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1c9, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1c8, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x249458, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x248760, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100003a3, 8) COPY (stack, 0xffffffffffffff98, 8)]
[(unique, 0x100003bb, 8) COPY (unique, 0x100002bf, 8)]
[(unique, 0x100003f4, 1) COPY (stack, 0xffffffffffffffb7, 1)]
[ ---  CBRANCH (ram, 0x2493dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000445, 8), (unique, 0x10000445, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x249374, 8), (register, 0x20, 8) PTRADD (unique, 0x100002bf, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1f7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x249384, 8), (register, 0x20, 8) PTRADD (unique, 0x100002bf, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x73736e5f, 4), (register, 0x20, 8) CAST (unique, 0x1000045d, 8), (unique, 0x1000045d, 8) INT_ADD (unique, 0x10000455, 8) , (unique, 0x1000017c, 8), (unique, 0x10000455, 8) CAST (unique, 0x100002bf, 8), (unique, 0x1000017c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff88, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000393, 8), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x202, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff88, 8) COPY (register, 0x0, 8), (unique, 0x10000393, 8) COPY (stack, 0xffffffffffffffb8, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x1000044d, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f8, 4), (unique, 0x1000044d, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f7, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x5f, 1), (unique, 0x3800, 8) CAST (unique, 0x1000048d, 8), (unique, 0x1000048d, 8) INT_ADD (unique, 0x10000485, 8) , (unique, 0x10000286, 8), (unique, 0x10000485, 8) CAST (unique, 0x100002bf, 8), (unique, 0x10000286, 8) INT_ADD (unique, 0x1000017c, 8) , (const, 0x4, 8), (unique, 0x1000017c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff88, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000393, 8), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x202, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff88, 8) COPY (register, 0x0, 8), (unique, 0x10000393, 8) COPY (stack, 0xffffffffffffffb8, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x1000044d, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f8, 4), (unique, 0x1000044d, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f7, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2493ad, 8), (register, 0x20, 8) CAST (unique, 0x1000049d, 8), (unique, 0x1000049d, 8) INT_ADD (unique, 0x10000495, 8) , (unique, 0x1000028e, 8), (unique, 0x10000495, 8) CAST (unique, 0x100002bf, 8), (unique, 0x1000028e, 8) INT_ADD (unique, 0x1000017c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000017c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff88, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000393, 8), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x202, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff88, 8) COPY (register, 0x0, 8), (unique, 0x10000393, 8) COPY (stack, 0xffffffffffffffb8, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x1000044d, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f8, 4), (unique, 0x1000044d, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f7, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x5f, 1), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (unique, 0x3800, 8) , (unique, 0x100004a5, 8), (unique, 0x100004a5, 8) CAST (unique, 0x3100, 8), (unique, 0x3800, 8) CAST (unique, 0x1000047d, 8), (unique, 0x1000047d, 8) INT_ADD (unique, 0x10000475, 8) , (unique, 0x1000027e, 8), (unique, 0x10000475, 8) CAST (unique, 0x100002bf, 8), (unique, 0x1000027e, 8) INT_ADD (unique, 0x1000017c, 8) , (const, 0x5, 8), (unique, 0x1000017c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff88, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000393, 8), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x202, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff88, 8) COPY (register, 0x0, 8), (unique, 0x10000393, 8) COPY (stack, 0xffffffffffffffb8, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x1000044d, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f8, 4), (unique, 0x1000044d, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f7, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2493bc, 8), (register, 0x20, 8) CAST (unique, 0x100004b5, 8), (unique, 0x100004b5, 8) INT_ADD (unique, 0x100004ad, 8) , (unique, 0x10000296, 8), (unique, 0x100004ad, 8) CAST (unique, 0x100002bf, 8), (unique, 0x10000296, 8) INT_ADD (unique, 0x1000017c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000017c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff88, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000393, 8), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x202, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff88, 8) COPY (register, 0x0, 8), (unique, 0x10000393, 8) COPY (stack, 0xffffffffffffffb8, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x1000044d, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f8, 4), (unique, 0x1000044d, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f7, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x121170, 8) , (unique, 0x3100, 8) , (unique, 0x10000393, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (unique, 0x3800, 8) , (unique, 0x100004a5, 8), (unique, 0x100004a5, 8) CAST (unique, 0x3100, 8), (unique, 0x3800, 8) CAST (unique, 0x1000047d, 8), (unique, 0x1000047d, 8) INT_ADD (unique, 0x10000475, 8) , (unique, 0x1000027e, 8), (unique, 0x10000475, 8) CAST (unique, 0x100002bf, 8), (unique, 0x1000027e, 8) INT_ADD (unique, 0x1000017c, 8) , (const, 0x5, 8), (unique, 0x1000017c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff88, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000393, 8), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x202, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff88, 8) COPY (register, 0x0, 8), (unique, 0x10000393, 8) COPY (stack, 0xffffffffffffffb8, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x1000044d, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f8, 4), (unique, 0x1000044d, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f7, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2493c9, 8), (register, 0x20, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0x100004c5, 8) , (unique, 0x1000029e, 8), (unique, 0x100004c5, 8) CAST (unique, 0x100002bf, 8), (unique, 0x1000029e, 8) INT_ADD (unique, 0x1000017c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000017c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff88, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000393, 8), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x202, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff88, 8) COPY (register, 0x0, 8), (unique, 0x10000393, 8) COPY (stack, 0xffffffffffffffb8, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x1000044d, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f8, 4), (unique, 0x1000044d, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f7, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x235, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x226, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x202, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f8, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x235, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x22e, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x22b, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x226, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x202, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x1f8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x235, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x22e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x22b, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x226, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x202, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1f8, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x235, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x234, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x22e, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x22d, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x226, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x225, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x223, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x220, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x202, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff88, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x1000044d, 8), (unique, 0x1000044d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x235, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x234, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x22e, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x22d, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x226, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x225, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x223, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x220, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x202, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1f7, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x235, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x234, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x22e, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x22d, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x226, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x225, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x223, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x220, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x202, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x201, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1f7, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x235, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x234, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x22e, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x22d, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x226, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x225, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x223, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x220, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x202, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x201, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1f7, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x235, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x234, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x22e, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x22d, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x226, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x225, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x223, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x220, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x202, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x201, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x235, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x234, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x22e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x22d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x226, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x225, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x223, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x220, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x202, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x201, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f7, 4)]
[(register, 0x10, 1) INT_AND (register, 0x206, 1) , (stack, 0xffffffffffffffb7, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x266520, 8) , (unique, 0xbd80, 8) , (register, 0x20, 8), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x235, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x234, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100004bd, 8), (unique, 0x100004bd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x22e, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x22d, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x226, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x225, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x223, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x220, 4), (register, 0x20, 8) CAST (unique, 0x1000046d, 8), (unique, 0x1000046d, 8) INT_ADD (unique, 0x10000465, 8) , (unique, 0x1000017c, 8), (unique, 0x10000465, 8) CAST (unique, 0x100002bf, 8), (unique, 0x1000017c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff88, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000393, 8), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x202, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x202, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x201, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff88, 8) COPY (register, 0x0, 8), (unique, 0x10000393, 8) COPY (stack, 0xffffffffffffffb8, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x1000044d, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1f8, 4), (unique, 0x1000044d, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f7, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x1f7, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(unique, 0x1000039b, 8) COPY (stack, 0xffffffffffffff80, 8), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x235, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x234, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x22e, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x22d, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x226, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x225, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x223, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x220, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x202, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1f7, 4), (stack, 0xffffffffffffff80, 8) COPY (stack, 0xffffffffffffff98, 8)]
[(unique, 0x100003c3, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x235, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x234, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x22e, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x22d, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x226, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x225, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x223, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x220, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x202, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1f7, 4), (stack, 0xffffffffffffff98, 8) COPY (unique, 0x100002bf, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100003bb, 8) , (unique, 0x100003c3, 8)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x273, 4), (ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x273, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100004dd, 8), (unique, 0x100004dd, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (register, 0xb8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004d5, 8), (unique, 0x100004d5, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003a3, 8) , (unique, 0x1000039b, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100002c7, 8) , (register, 0x0, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100003f1, 1) COPY (unique, 0x100001f3, 1), (unique, 0x100001f3, 1) MULTIEQUAL (unique, 0x100003f4, 1) , (register, 0x10, 1)]
[ ---  BRANCH (ram, 0x24927d, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x24946e, 8), (register, 0x20, 8) PTRADD (unique, 0x100002bf, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x21d720, 8) , (unique, 0x3100, 8) , (unique, 0x100004e5, 8) , (unique, 0x100001fe, 8), (unique, 0x100004e5, 8) CAST (unique, 0x3100, 8), (unique, 0x100001fe, 8) PTRSUB (const, 0x0, 8) , (const, 0x2482f0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x24947a, 8), (register, 0x20, 8) PTRADD (unique, 0x100002bf, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x284, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x27d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x284, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x27d, 4), (ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x284, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x27d, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x284, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x283, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x27d, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x27c, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x284, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x283, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x27d, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x27c, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x284, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x283, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x27d, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x27c, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x284, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x283, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x27d, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x27c, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003ab, 8) , (unique, 0x100003b3, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x284, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x283, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x27d, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x27c, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x284, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x283, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x27d, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x27c, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x284, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x283, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x27d, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x27c, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x284, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x283, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x27d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x27c, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0x1000038b, 8), (unique, 0x1000038b, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x27d, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x27c, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003ab, 8) , (unique, 0x100003b3, 8)]
[(unique, 0x100003f2, 1) COPY (stack, 0xffffffffffffffb7, 1), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x284, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x283, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x27d, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x27c, 4), (stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[ ---  BRANCH (ram, 0x24927d, 1)]
[(unique, 0x100003f0, 1) COPY (register, 0x10, 1), (register, 0x10, 1) INT_AND (register, 0x206, 1) , (stack, 0xffffffffffffffb7, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) INT_XOR (register, 0x80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000050d, 8), (unique, 0x1000050d, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x80, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x10000505, 8) , (const, 0x2f, 4), (unique, 0x10000505, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x100004fd, 8) , (const, 0x11, 4), (unique, 0x100004fd, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004f5, 8), (unique, 0x100004f5, 8) INT_ADD (unique, 0x100004ed, 8) , (const, 0x8, 8), (unique, 0x100004ed, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0xb8, 8) , (unique, 0x100002c7, 8) , (unique, 0x100002c7, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100002bf, 8) , (register, 0x20, 8) , (unique, 0x100002bf, 8) , (unique, 0x100002bf, 8)]
[(register, 0x10, 1) MULTIEQUAL (unique, 0x100003f0, 1) , (unique, 0x100003f1, 1) , (unique, 0x100003f2, 1) , (unique, 0x100003f3, 1)]
[ ---  CBRANCH (ram, 0x249291, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100003cf, 4) COPY (unique, 0x10000320, 4), (unique, 0x10000320, 4) INT_ADD (ram, 0x4efeb0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x2492b3, 1) , (unique, 0x10000324, 1), (unique, 0x10000324, 1) INT_NOTEQUAL (unique, 0x10000320, 4) , (const, 0x0, 4), (unique, 0x10000320, 4) INT_ADD (ram, 0x4efeb0, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2492ac, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffef, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x194, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x194, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x194, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x193, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x194, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x193, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x194, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x193, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x194, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x193, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x194, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x193, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x194, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x193, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x194, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x193, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x194, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x193, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x194, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x193, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4efeb0, 8)]
[(unique, 0x100003cb, 4) COPY (ram, 0x4efeb0, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x194, 4), (ram, 0x4efeb0, 4) INT_ADD (ram, 0x4efeb0, 4) , (const, 0xffffffff, 4)]
[(unique, 0x100003ef, 1) COPY (register, 0x10, 1), (register, 0x10, 1) INDIRECT (const, 0x0, 1) , (const, 0x194, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb7, 1) MULTIEQUAL (stack, 0xffffffffffffffb7, 1) , (stack, 0xffffffffffffffb7, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000383, 8) COPY (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x13c, 4), (ram, 0x4efeb0, 4) COPY (unique, 0x100003d3, 4), (unique, 0x100003d3, 4) MULTIEQUAL (unique, 0x100003cb, 4) , (unique, 0x100003cf, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x13c, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffa8, 8) , (register, 0xb8, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x2491c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x0, 1), (register, 0x10, 1) MULTIEQUAL (unique, 0x100003ef, 1) , (register, 0x10, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2492cf, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x145, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x145, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x144, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x145, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x144, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x145, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x144, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x145, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x144, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x144, 4)]
[(stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x145, 4), (stack, 0xffffffffffffffb7, 1) INDIRECT (stack, 0xffffffffffffffb7, 1) , (const, 0x144, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x144, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x144, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x154, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x145, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x154, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x145, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffa8, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x248f60, 8) , (unique, 0xbd80, 8) , (unique, 0x10000383, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x144, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
