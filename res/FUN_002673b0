[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000009a, 8), (unique, 0x1000009a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x267450, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000a2, 8), (unique, 0x100000a2, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x158, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x26742e, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4f, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffffd8, 16) INDIRECT (stack, 0xffffffffffffffd8, 16) , (const, 0x4f, 4), (stack, 0xffffffffffffffd8, 16) INT_ADD (unique, 0x1000008a, 16) , (const, 0x2000000000, 5), (unique, 0x1000008a, 16) INT_LEFT (unique, 0x1000007a, 16) , (const, 0x28, 16), (unique, 0x1000007a, 16) INT_SEXT (stack, 0xffffffffffffffdd, 11), (stack, 0xffffffffffffffdd, 11) SUBPIECE (unique, 0x1000006a, 16) , (const, 0x0, 4), (unique, 0x1000006a, 16) INT_RIGHT (const, 0x0, 16) , (const, 0x28, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x4f, 4), (stack, 0xffffffffffffffe8, 8) COPY (const, 0x0, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x4f, 4)]
[(register, 0x0, 8) CAST (unique, 0x100000b2, 8), (unique, 0x100000b2, 8) CALLIND (unique, 0xbd80, 8) , (const, 0x0, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (unique, 0x3800, 8) , (unique, 0x3200, 8) , (register, 0x30, 8) , (const, 0x0, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000aa, 8), (unique, 0x100000aa, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x178, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8), (unique, 0x3200, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x388, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x26742e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x3800, 8) , (const, 0x4f, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[ ---  CBRANCH (ram, 0x26742a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000ba, 8), (unique, 0x100000ba, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffe8, 8) MULTIEQUAL (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8)]
[(stack, 0xffffffffffffffd8, 16) MULTIEQUAL (stack, 0xffffffffffffffd8, 16) , (stack, 0xffffffffffffffd8, 16) , (stack, 0xffffffffffffffd8, 16)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x267454, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_XOR (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c2, 8), (unique, 0x100000c2, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xa3, 4)]
[(stack, 0xffffffffffffffd8, 16) INDIRECT (stack, 0xffffffffffffffd8, 16) , (const, 0xa3, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0xa3, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xa3, 4)]
[ ---  CALL (ram, 0x234c80, 8) , (register, 0x38, 8) , (register, 0x30, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xa3, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
