[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000650, 8), (unique, 0x10000650, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18ae88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x18b040, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x90, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x18af0d, 1)]
[(register, 0xa0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000052a, 8), (unique, 0x1000052a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18af80, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18af80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x18af05, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18b148, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000658, 8), (unique, 0x10000658, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x580, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x580, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x580, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18aede, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4d3, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4d3, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4d3, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x18af30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000660, 8), (unique, 0x10000660, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4e9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x18af90, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18b060, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)]
[(register, 0x28, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000030e, 8) , (const, 0x1, 8), (unique, 0x1000030e, 8) INT_2COMP (unique, 0x10000668, 8), (unique, 0x10000668, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x18af0d, 1)]
[(register, 0x28, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100002be, 8) , (const, 0x1, 8), (unique, 0x100002be, 8) INT_2COMP (unique, 0x10000670, 8), (unique, 0x10000670, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x18af0d, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x28, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000029a, 8) , (const, 0x1, 8), (unique, 0x1000029a, 8) INT_2COMP (unique, 0x10000678, 8), (unique, 0x10000678, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18afb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18b152, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000680, 8), (unique, 0x10000680, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x553, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x553, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x553, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18afd7, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x545, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x545, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x545, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x18af30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000688, 8), (unique, 0x10000688, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x18acad, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x10000690, 8), (unique, 0x10000690, 8) CAST (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x28, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18ace0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x18abdb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100003a1, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x18acf0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100003a0, 1) COPY (const, 0x1, 1)]
[(unique, 0x1000039f, 1) MULTIEQUAL (unique, 0x100003a1, 1) , (unique, 0x100003a0, 1)]
[ ---  CBRANCH (ram, 0x18abe7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x800, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000043a, 8), (unique, 0x1000043a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100003a2, 1) MULTIEQUAL (unique, 0x100003a1, 1) , (unique, 0x1000039f, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x68, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x68, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x68, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x68, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x68, 4)]
[ ---  CBRANCH (ram, 0x18af30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x18ddb0, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18ad07, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18ac02, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000039e, 1) MULTIEQUAL (unique, 0x100003a2, 1) , (unique, 0x1000039f, 1)]
[ ---  CBRANCH (ram, 0x18ad1b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x410, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x410, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x410, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x410, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x415, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x410, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000045a, 8) , (unique, 0xbc80, 4), (unique, 0x1000045a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000452, 8), (unique, 0x10000452, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x422, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x422, 4), (stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x422, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x422, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x18e300, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x440, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x43d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x43a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x437, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x434, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x431, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x422, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18ac0c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100003a3, 1) MULTIEQUAL (unique, 0x100003a2, 1) , (unique, 0x1000039f, 1)]
[ ---  CBRANCH (ram, 0x18ad49, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100003a4, 1) MULTIEQUAL (unique, 0x100003a3, 1) , (unique, 0x1000039e, 1)]
[ ---  CBRANCH (ram, 0x18ad71, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x18b110, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000698, 8), (unique, 0x10000698, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3bd, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3bd, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x3bd, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x3bd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3bd, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18ac3d, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc1, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc1, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0xc1, 4), (stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xc1, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc1, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000628, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x18af40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100006a0, 8), (unique, 0x100006a0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x90, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[ ---  CBRANCH (ram, 0x18ac53, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x8000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff40, 4) , (const, 0xf000, 4)]
[(register, 0x28, 8) PTRADD (register, 0x30, 8) , (stack, 0xffffffffffffff58, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x18ad6e, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000039d, 1) MULTIEQUAL (unique, 0x100003a3, 1) , (unique, 0x1000039e, 1)]
[(register, 0x28, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000188, 8) , (const, 0x1, 8), (unique, 0x10000188, 8) INT_2COMP (unique, 0x100006b0, 8), (unique, 0x100006b0, 8) CAST (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000180, 8) , (const, 0x1, 8), (unique, 0x10000180, 8) INT_2COMP (unique, 0x100006a8, 8), (unique, 0x100006a8, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x18af60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x18af20, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100006b8, 8) , (const, 0x0, 8), (unique, 0x100006b8, 8) CAST (register, 0x28, 8), (register, 0x28, 8) PTRADD (register, 0x28, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3f4, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006c0, 8) , (const, 0x16, 4), (unique, 0x100006c0, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000039c, 1) MULTIEQUAL (unique, 0x100003a4, 1) , (unique, 0x1000039d, 1)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[(unique, 0x1000039b, 1) MULTIEQUAL (unique, 0x100003a4, 1) , (unique, 0x1000039c, 1)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0xa8, 4)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x186, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x186, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x186, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x18de50, 8) , (register, 0x38, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004ba, 8), (unique, 0x100004ba, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18adb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x18adb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x18adb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001b8, 4) , (const, 0x0, 4), (unique, 0x100001b8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x100, 4)]
[ ---  CBRANCH (ram, 0x18adb0, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (unique, 0x100006d0, 8) , (unique, 0x100006d8, 8), (unique, 0x100006d8, 8) CAST (register, 0x28, 8), (unique, 0x100006d0, 8) CAST (register, 0x8, 8), (register, 0x8, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100004da, 8) , (const, 0x1, 8), (unique, 0x100004da, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100006c8, 8), (unique, 0x100006c8, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18b070, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100006e0, 8) , (unique, 0xbd80, 8), (unique, 0x100006e0, 8) CAST (register, 0x28, 8)]
[(unique, 0x10000638, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18ac53, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001dc, 4) , (const, 0x0, 4), (unique, 0x100001dc, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(unique, 0x10000640, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000708, 8), (unique, 0x10000708, 8) INT_AND (unique, 0x100006f8, 8) , (unique, 0x10000700, 8), (unique, 0x10000700, 8) CAST (register, 0x28, 8), (unique, 0x100006f8, 8) CAST (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100001e0, 8) , (const, 0x1, 8), (unique, 0x100001e0, 8) INT_2COMP (unique, 0x100006e8, 8), (unique, 0x100006e8, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18adee, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0x10000718, 8) , (unique, 0x10000720, 8), (unique, 0x10000720, 8) CAST (register, 0xa8, 8), (unique, 0x10000718, 8) CAST (register, 0x0, 8), (register, 0xa8, 8) PTRADD (register, 0x28, 8) , (unique, 0x100001f0, 8) , (const, 0x1, 8), (unique, 0x100001f0, 8) INT_2COMP (unique, 0x10000710, 8), (unique, 0x10000710, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000708, 8), (unique, 0x10000708, 8) INT_AND (unique, 0x100006f8, 8) , (unique, 0x10000700, 8), (unique, 0x10000700, 8) CAST (register, 0x28, 8), (unique, 0x100006f8, 8) CAST (register, 0x30, 8), (register, 0x0, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100001e8, 8) , (const, 0x1, 8), (unique, 0x100001e8, 8) INT_2COMP (unique, 0x100006f0, 8), (unique, 0x100006f0, 8) CAST (unique, 0xbd80, 8), (register, 0x30, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100001e0, 8) , (const, 0x1, 8), (unique, 0x100001e0, 8) INT_2COMP (unique, 0x100006e8, 8), (unique, 0x100006e8, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000648, 8) COPY (register, 0x28, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000640, 8) , (unique, 0x10000648, 8)]
[ ---  CBRANCH (ram, 0x18b0e0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xd67, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000728, 8), (unique, 0x10000728, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x33d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x33d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x33d, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18ae04, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x261, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x261, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x261, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x18af30, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000730, 8), (unique, 0x10000730, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x18acad, 1)]
[ ---  CBRANCH (ram, 0x18b000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18b128, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xd67, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000738, 8), (unique, 0x10000738, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x323, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x323, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x323, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18ae3a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000740, 8), (unique, 0x10000740, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x70, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[(unique, 0x10000620, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x18ae51, 1) , (unique, 0x100003a5, 1), (unique, 0x100003a5, 1) BOOL_NEGATE (unique, 0x1000039b, 1)]
[(register, 0x10, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000228, 8) , (const, 0x1, 8), (unique, 0x10000228, 8) INT_2COMP (unique, 0x10000748, 8), (unique, 0x10000748, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x40, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b2, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2b2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b2, 4)]
[ ---  CBRANCH (ram, 0x18b100, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 8) , (unique, 0x10000750, 8), (unique, 0x10000750, 8) CAST (register, 0xa8, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000620, 8) , (register, 0x10, 8)]
[(register, 0xa8, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x18ac53, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x28, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000248, 8) , (const, 0x1, 8), (unique, 0x10000248, 8) INT_2COMP (register, 0x0, 8)]
[(register, 0xa8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x18ac53, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x18b002, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000582, 8) , (unique, 0xbc80, 4), (unique, 0x10000582, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffffef, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000057a, 8), (unique, 0x1000057a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x8, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x90, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000758, 8) , (const, 0x1, 8), (unique, 0x10000758, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (register, 0x0, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x319, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x316, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x313, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x310, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2f5, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e9, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005f2, 8) , (register, 0x0, 4), (unique, 0x100005f2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffffef, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x37b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x366, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x364, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x360, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x35d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x351, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000768, 8) , (const, 0x1, 8), (unique, 0x10000768, 8) CAST (unique, 0xbd80, 8), (register, 0x38, 8) PTRADD (register, 0x28, 8) , (unique, 0x10000316, 8) , (const, 0x1, 8), (unique, 0x10000316, 8) INT_2COMP (unique, 0x10000760, 8), (unique, 0x10000760, 8) CAST (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x18b02e, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18b15c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000770, 8), (unique, 0x10000770, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3b4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3b4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3b4, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  BRANCH (ram, 0x18b0c1, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3af, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3af, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3af, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000778, 8), (unique, 0x10000778, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x18acad, 1)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0x10, 4)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000628, 8) , (unique, 0x10000628, 8) , (unique, 0x10000638, 8) , (register, 0xa8, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcf, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xcf, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x18fbe0, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18b050, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000780, 8), (unique, 0x10000780, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x150, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x150, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x150, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18ac71, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf0, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf0, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf0, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x18acad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CAST (unique, 0x10000790, 8), (unique, 0x10000790, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x28, 8) , (register, 0xa8, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000788, 8), (unique, 0x10000788, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003fa, 8) , (unique, 0xbc80, 4), (unique, 0x100003fa, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffffef, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003f2, 8), (unique, 0x100003f2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x10000798, 8), (unique, 0x10000798, 8) CAST (register, 0x0, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x120, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x11d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x11a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x117, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x114, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x111, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x102, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x28, 8) , (register, 0x0, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18b16d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100007a0, 8), (unique, 0x100007a0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x14b, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x14b, 4)]
[ ---  RETURN (const, 0x1, 4)]
