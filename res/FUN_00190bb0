[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000177, 8), (unique, 0x10000177, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x190cd0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (const, 0x8000, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x190ce0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x4000000, 8) , (register, 0x30, 8)]
[(register, 0x30, 8) COPY (const, 0x4000000, 8)]
[ ---  CBRANCH (ram, 0x190be2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x4000000, 8) , (register, 0x38, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x8000, 8)]
[ ---  BRANCH (ram, 0x190be2, 1)]
[(register, 0x28, 8) INT_AND (register, 0x28, 8) , (unique, 0x3a00, 8), (register, 0x28, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0xbd80, 8), (unique, 0x3880, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x190c6d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed910, 8) , (const, 0x0, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x73, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x73, 4)]
[(ram, 0x4ed910, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x190c6d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x21b9d0, 8) , (ram, 0x4ed910, 8) , (const, 0x4000000, 8) , (const, 0x0, 4) , (const, 0x4022, 4) , (const, 0xffffffff, 4) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x190c60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000a0, 8) , (const, 0x0, 8), (unique, 0x100000a0, 8) INT_AND (unique, 0x1000017f, 8) , (const, 0x3ffffff, 8), (unique, 0x1000017f, 8) CAST (register, 0x0, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xcb, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xcb, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (register, 0x0, 8) , (const, 0x4000000, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xef, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xef, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[ ---  CBRANCH (ram, 0x190d10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x21b9d0, 8) , (const, 0x0, 8) , (const, 0x8000000, 8) , (const, 0x0, 4) , (const, 0x4022, 4) , (const, 0xffffffff, 4) , (const, 0x0, 8)]
[(unique, 0x10000167, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000019f, 8), (unique, 0x1000019f, 8) INT_ADD (unique, 0x10000197, 8) , (const, 0x4000000, 8), (unique, 0x10000197, 8) CAST (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x1000018f, 8), (unique, 0x1000018f, 8) INT_AND (unique, 0x3200, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3200, 8) INT_ADD (unique, 0x10000187, 8) , (const, 0x3ffffff, 8), (unique, 0x10000187, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x190d00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) CAST (unique, 0x100001b7, 8), (unique, 0x100001b7, 8) INT_SUB (unique, 0x100001a7, 8) , (unique, 0x100001af, 8), (unique, 0x100001af, 8) CAST (register, 0x0, 8), (unique, 0x100001a7, 8) CAST (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x1000018f, 8), (unique, 0x1000018f, 8) INT_AND (unique, 0x3200, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3200, 8) INT_ADD (unique, 0x10000187, 8) , (const, 0x3ffffff, 8), (unique, 0x10000187, 8) CAST (register, 0x0, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x127, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (register, 0x0, 8) , (unique, 0x100001bf, 8), (unique, 0x100001bf, 8) CAST (register, 0xa8, 8)]
[(unique, 0x1000015f, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x127, 4)]
[ ---  BRANCH (ram, 0x190cb7, 1)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x121, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x121, 4), (ram, 0x4ed910, 8) COPY (unique, 0x1000016f, 8), (unique, 0x1000016f, 8) MULTIEQUAL (unique, 0x1000015f, 8) , (unique, 0x10000167, 8)]
[ ---  CALL (ram, 0x21bab0, 8) , (unique, 0x3200, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SUB (const, 0x4000000, 8) , (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) CAST (register, 0xa8, 8)]
[ ---  BRANCH (ram, 0x190c2e, 1)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x14d, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x14d, 4)]
[ ---  CBRANCH (ram, 0x190cf2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x21b9d0, 8) , (const, 0x0, 8) , (const, 0x4000000, 8) , (const, 0x0, 4) , (const, 0x4022, 4) , (const, 0xffffffff, 4) , (const, 0x0, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x190c2e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000138, 8) , (const, 0x0, 8), (unique, 0x10000138, 8) INT_AND (unique, 0x100001cf, 8) , (const, 0x3ffffff, 8), (unique, 0x100001cf, 8) CAST (register, 0x0, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x90, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x90, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[ ---  CBRANCH (ram, 0x190d40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x21bae0, 8) , (register, 0x18, 8) , (register, 0x28, 8) , (const, 0x3, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x18, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) CAST (unique, 0x100001df, 8), (unique, 0x100001df, 8) INT_ADD (unique, 0x100001d7, 8) , (const, 0x10, 8), (unique, 0x100001d7, 8) CAST (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) CAST (unique, 0x100001ef, 8), (unique, 0x100001ef, 8) INT_ADD (unique, 0x100001e7, 8) , (const, 0x18, 8), (unique, 0x100001e7, 8) CAST (register, 0x18, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xa1, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x9e, 4)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xa1, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x9e, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x18, 8)]
[ ---  CALL (ram, 0x21bab0, 8) , (register, 0x18, 8) , (const, 0x4000000, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc5, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc5, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
