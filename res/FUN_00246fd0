[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000051b, 8), (unique, 0x1000051b, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x247368, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000513, 8), (unique, 0x10000513, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x247041, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000523, 8), (unique, 0x10000523, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x247027, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x247010, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000052b, 8), (unique, 0x1000052b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x247027, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x24736f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0xa, 2)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3ac, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x1000035f, 8) , (unique, 0x10000347, 8) , (const, 0x18f, 4) , (unique, 0x10000377, 8), (unique, 0x10000377, 8) COPY (const, 0x2bb6e0, 8), (unique, 0x1000035f, 8) COPY (const, 0x2ba950, 8), (unique, 0x10000347, 8) COPY (const, 0x2b6f53, 8)]
[(ram, 0x0, 4) COPY (ram, 0x0, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x3ac, 4)]
[(ram, 0x4, 4) COPY (ram, 0x4, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x3ac, 4)]
[(ram, 0x8, 4) COPY (ram, 0x8, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x3ac, 4)]
[(ram, 0xc, 4) COPY (ram, 0xc, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x3ac, 4)]
[(ram, 0x10, 8) COPY (ram, 0x10, 8), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x3ac, 4)]
[(ram, 0x18, 4) COPY (ram, 0x18, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x3ac, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1c, 8)]
[ ---  CBRANCH (ram, 0x247041, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x24707a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000533, 8), (unique, 0x10000533, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(unique, 0x3b80, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000053b, 8), (unique, 0x1000053b, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa4, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0xa4, 4), (ram, 0x0, 4) MULTIEQUAL (ram, 0x0, 4) , (ram, 0x0, 4)]
[(ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0xa4, 4), (ram, 0x4, 4) MULTIEQUAL (ram, 0x4, 4) , (ram, 0x4, 4)]
[(ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0xa4, 4), (ram, 0x8, 4) MULTIEQUAL (ram, 0x8, 4) , (ram, 0x8, 4)]
[(ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0xa4, 4), (ram, 0xc, 4) MULTIEQUAL (ram, 0xc, 4) , (ram, 0xc, 4)]
[(ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0xa4, 4), (ram, 0x10, 8) MULTIEQUAL (ram, 0x10, 8) , (ram, 0x10, 8)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xa4, 4), (ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x247060, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3b80, 8) , (register, 0x28, 8), (register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3a00, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd6, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0xd6, 4), (ram, 0x0, 4) MULTIEQUAL (ram, 0x0, 4) , (ram, 0x0, 4)]
[(ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0xd6, 4), (ram, 0x4, 4) MULTIEQUAL (ram, 0x4, 4) , (ram, 0x4, 4)]
[(ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0xd6, 4), (ram, 0x8, 4) MULTIEQUAL (ram, 0x8, 4) , (ram, 0x8, 4)]
[(ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0xd6, 4), (ram, 0xc, 4) MULTIEQUAL (ram, 0xc, 4) , (ram, 0xc, 4)]
[(ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0xd6, 4), (ram, 0x10, 8) MULTIEQUAL (ram, 0x10, 8) , (ram, 0x10, 8)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xd6, 4), (ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xd6, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd6, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x100004c3, 8) COPY (register, 0x0, 8), (register, 0x0, 8) SUBPIECE (VARIABLE, 0x0, 4) , (const, 0x0, 4), (VARIABLE, 0x0, 4) CALL (ram, 0x19d630, 8) , (unique, 0x3400, 8) , (unique, 0x3800, 8), (unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xb8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0xbd80, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x9, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000543, 8), (unique, 0x10000543, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x247330, 1) , (unique, 0x100001be, 1), (unique, 0x100001be, 1) BOOL_OR (register, 0x200, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x48, 8), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x9, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x1000055b, 8), (unique, 0x1000055b, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) CAST (unique, 0x10000553, 8), (unique, 0x10000553, 8) INT_ADD (unique, 0x1000054b, 8) , (const, 0x7, 8), (unique, 0x1000054b, 8) CAST (register, 0x0, 8), (register, 0x0, 8) SUBPIECE (VARIABLE, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) SUBPIECE (unique, 0x1000045b, 16) , (const, 0x0, 4), (unique, 0x1000045b, 16) INT_RIGHT (VARIABLE, 0x0, 4) , (const, 0x40, 4), (VARIABLE, 0x0, 4) CALL (ram, 0x19d630, 8) , (unique, 0x3400, 8) , (unique, 0x3800, 8), (unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xb8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0xbd80, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x9, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000543, 8), (unique, 0x10000543, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x247330, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100004d3, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x247330, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x10000327, 16) INT_ADD (unique, 0x100004ab, 16) , (unique, 0x1000056b, 8), (unique, 0x1000056b, 8) CAST (stack, 0xffffffffffffffa8, 8), (unique, 0x100004ab, 16) INT_LEFT (unique, 0x1000049b, 16) , (const, 0x40, 16), (unique, 0x1000049b, 16) INT_SEXT (unique, 0x10000563, 8), (unique, 0x10000563, 8) CAST (register, 0x10, 8), (stack, 0xffffffffffffffa8, 8) COPY (unique, 0x100004db, 8), (unique, 0x100004db, 8) MULTIEQUAL (unique, 0x100004c3, 8) , (unique, 0x100004c3, 8) , (unique, 0x100004d3, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x247393, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffa0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x372, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (register, 0x10, 8) , (const, 0x372, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x372, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000357, 8) , (unique, 0x1000034f, 8) , (const, 0x1a7, 4) , (unique, 0x1000037f, 8), (unique, 0x1000037f, 8) COPY (const, 0x2bb6e0, 8), (unique, 0x10000357, 8) COPY (const, 0x2b6f76, 8), (unique, 0x1000034f, 8) COPY (const, 0x2b6f53, 8)]
[(ram, 0x0, 4) COPY (ram, 0x0, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x372, 4)]
[(ram, 0x4, 4) COPY (ram, 0x4, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x372, 4)]
[(ram, 0x8, 4) COPY (ram, 0x8, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x372, 4)]
[(ram, 0xc, 4) COPY (ram, 0xc, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x372, 4)]
[(ram, 0x10, 8) COPY (ram, 0x10, 8), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x372, 4)]
[(ram, 0x18, 4) COPY (ram, 0x18, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x372, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffa0, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001e6, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0x100001e6, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000057b, 8), (unique, 0x1000057b, 8) INT_ADD (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001fe, 8) , (unique, 0x100001ee, 8), (unique, 0x100001fe, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0x100001ee, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001f6, 8), (unique, 0x100001f6, 8) CAST (unique, 0x10000583, 8), (unique, 0x10000583, 8) INT_ADD (register, 0x38, 8) , (const, 0x40, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000573, 8), (unique, 0x10000573, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x19d5d0, 8) , (unique, 0x100001e6, 8) , (register, 0x0, 8) , (unique, 0x3800, 8) , (const, 0x8, 8) , (const, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000058b, 8), (unique, 0x1000058b, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8), (unique, 0x100001e6, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000057b, 8), (unique, 0x1000057b, 8) INT_ADD (register, 0x38, 8) , (const, 0x38, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000593, 8), (unique, 0x10000593, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x166, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x153, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x166, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x153, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x166, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (register, 0x10, 8) , (const, 0x153, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x166, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x153, 4)]
[(ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x177, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x166, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x160, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x156, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x153, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x14d, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x6dd, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x6dc, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x147, 4)]
[(ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x177, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x166, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x160, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x156, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x153, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x14d, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x6dd, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x6dc, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x147, 4)]
[(ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x177, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x166, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x160, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x156, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x153, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x14d, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x6dd, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x6dc, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x147, 4)]
[(ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x177, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x166, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x160, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x156, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x153, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x14d, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x6dd, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x6dc, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x147, 4)]
[(ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x177, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x166, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x160, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x156, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x153, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x14d, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x6dd, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x6dc, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x147, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x177, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x166, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x160, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x156, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x153, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x14d, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x6dd, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x6dc, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x147, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x19d5d0, 8) , (unique, 0x3800, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x247217, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000059b, 8), (unique, 0x1000059b, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005a3, 8), (unique, 0x100005a3, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2471c2, 1)]
[(ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4) , (ram, 0x18, 4)]
[(ram, 0x10, 8) MULTIEQUAL (ram, 0x10, 8) , (ram, 0x10, 8) , (ram, 0x10, 8)]
[(ram, 0xc, 4) MULTIEQUAL (ram, 0xc, 4) , (ram, 0xc, 4) , (ram, 0xc, 4)]
[(ram, 0x8, 4) MULTIEQUAL (ram, 0x8, 4) , (ram, 0x8, 4) , (ram, 0x8, 4)]
[(ram, 0x4, 4) MULTIEQUAL (ram, 0x4, 4) , (ram, 0x4, 4) , (ram, 0x4, 4)]
[(ram, 0x0, 4) MULTIEQUAL (ram, 0x0, 4) , (ram, 0x0, 4) , (ram, 0x0, 4)]
[(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) CAST (unique, 0x100005c3, 8), (unique, 0x100005c3, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x3100, 8) CAST (unique, 0x100005b3, 8), (unique, 0x100005b3, 8) INT_ADD (unique, 0x100005ab, 8) , (const, 0x3, 8), (unique, 0x100005ab, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x247178, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100005cb, 8), (unique, 0x100005cb, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100005bb, 8), (unique, 0x100005bb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2472f0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x1c, 8), (unique, 0x3100, 8) CAST (unique, 0x100005db, 8), (unique, 0x100005db, 8) INT_ADD (unique, 0x100005d3, 8) , (const, 0x1c, 8), (unique, 0x100005d3, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2472f0, 1) , (register, 0x200, 1)]
[ ---  CBRANCH (ram, 0x2472f0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8)]
[ ---  CALLOTHER (const, 0x49, 4)]
[ ---  BRANCH (ram, 0x247312, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005e3, 8) , (unique, 0x10000206, 4), (unique, 0x100005e3, 8) CAST (register, 0x0, 8), (unique, 0x10000206, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000022e, 8) , (unique, 0x1000020a, 4), (unique, 0x1000022e, 8) CAST (unique, 0x100005f3, 8), (unique, 0x100005f3, 8) INT_ADD (unique, 0x100005eb, 8) , (const, 0x4, 8), (unique, 0x100005eb, 8) CAST (register, 0x0, 8), (unique, 0x1000020a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005fb, 8) , (unique, 0x10000216, 4), (unique, 0x100005fb, 8) CAST (unique, 0x10000236, 8), (unique, 0x10000236, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x10000216, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000021a, 8), (unique, 0x1000021a, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000023e, 8) , (unique, 0x10000222, 4), (unique, 0x1000023e, 8) CAST (unique, 0x1000060b, 8), (unique, 0x1000060b, 8) INT_ADD (unique, 0x10000603, 8) , (const, 0xc, 8), (unique, 0x10000603, 8) CAST (register, 0x0, 8), (unique, 0x10000222, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000226, 8), (unique, 0x10000226, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000613, 8), (unique, 0x10000613, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000061b, 8) , (unique, 0xbc80, 4), (unique, 0x1000061b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x345, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x341, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x33a, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x6eb, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x6e9, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x6e7, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x6e6, 4)]
[(ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x345, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x341, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x33a, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x6eb, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x6e9, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x6e7, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x6e6, 4)]
[(ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x345, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x341, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x33a, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x6eb, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x6e9, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x6e7, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x6e6, 4)]
[(ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x345, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x341, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x33a, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x6eb, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x6e9, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x6e7, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x6e6, 4)]
[(ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x345, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x341, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x33a, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x6eb, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x6e9, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x6e7, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x6e6, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x345, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x341, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x33a, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x6eb, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x6e9, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x6e7, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x6e6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x10000623, 8), (unique, 0x10000623, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x247217, 1) , (unique, 0x100002db, 1), (unique, 0x100002db, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000062b, 8), (unique, 0x1000062b, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x247318, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (unique, 0x10000337, 8), (unique, 0x10000337, 8) PTRSUB (const, 0x0, 8) , (const, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x247318, 1) , (register, 0x200, 1)]
[ ---  CBRANCH (ram, 0x247318, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8)]
[ ---  CALLOTHER (const, 0x49, 4)]
[ ---  BRANCH (ram, 0x247324, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000633, 8) , (unique, 0x10000246, 4), (unique, 0x10000633, 8) CAST (register, 0x0, 8), (unique, 0x10000246, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000026e, 8) , (unique, 0x1000024a, 4), (unique, 0x1000026e, 8) CAST (unique, 0x10000643, 8), (unique, 0x10000643, 8) INT_ADD (unique, 0x1000063b, 8) , (const, 0x4, 8), (unique, 0x1000063b, 8) CAST (register, 0x0, 8), (unique, 0x1000024a, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000024e, 8), (unique, 0x1000024e, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000064b, 8) , (unique, 0x10000256, 4), (unique, 0x1000064b, 8) CAST (unique, 0x10000276, 8), (unique, 0x10000276, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x10000256, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000025a, 8), (unique, 0x1000025a, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000027e, 8) , (unique, 0x10000262, 4), (unique, 0x1000027e, 8) CAST (unique, 0x1000065b, 8), (unique, 0x1000065b, 8) INT_ADD (unique, 0x10000653, 8) , (const, 0xc, 8), (unique, 0x10000653, 8) CAST (register, 0x0, 8), (unique, 0x10000262, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000266, 8), (unique, 0x10000266, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x1e3, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x6f9, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x6f7, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x6f5, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x6f4, 4)]
[(ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x1e3, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x6f9, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x6f7, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x6f5, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x6f4, 4)]
[(ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x1e3, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x6f9, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x6f7, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x6f5, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x6f4, 4)]
[(ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x1e3, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x6f9, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x6f7, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x6f5, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x6f4, 4)]
[(ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x1e3, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x6f9, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x6f7, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x6f5, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x6f4, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x1e3, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x6f9, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x6f7, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x6f5, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x6f4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x10000663, 8), (unique, 0x10000663, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2471c2, 1) , (unique, 0x100002de, 1), (unique, 0x100002de, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000066b, 8), (unique, 0x1000066b, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000673, 8), (unique, 0x10000673, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x20b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20b, 4)]
[(unique, 0x100002f7, 16) INT_ADD (unique, 0x1000047b, 16) , (unique, 0x1000068b, 8), (unique, 0x1000068b, 8) CAST (stack, 0xffffffffffffffa8, 8), (unique, 0x1000047b, 16) INT_LEFT (unique, 0x1000046b, 16) , (const, 0x40, 16), (unique, 0x1000046b, 16) INT_SEXT (unique, 0x10000683, 8), (unique, 0x10000683, 8) CAST (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x20b, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x20b, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x211, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x20b, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x205, 4), (ram, 0x0, 4) MULTIEQUAL (ram, 0x0, 4) , (ram, 0x0, 4) , (ram, 0x0, 4)]
[(ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x211, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x20b, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x205, 4), (ram, 0x4, 4) MULTIEQUAL (ram, 0x4, 4) , (ram, 0x4, 4) , (ram, 0x4, 4)]
[(ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x211, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x20b, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x205, 4), (ram, 0x8, 4) MULTIEQUAL (ram, 0x8, 4) , (ram, 0x8, 4) , (ram, 0x8, 4)]
[(ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x211, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x20b, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x205, 4), (ram, 0xc, 4) MULTIEQUAL (ram, 0xc, 4) , (ram, 0xc, 4) , (ram, 0xc, 4)]
[(ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x211, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x20b, 4), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x205, 4), (ram, 0x10, 8) MULTIEQUAL (ram, 0x10, 8) , (ram, 0x10, 8) , (ram, 0x10, 8)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x211, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x20b, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x205, 4), (ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4) , (ram, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x19d5d0, 8) , (unique, 0x3800, 8) , (const, 0x8, 8) , (const, 0x4, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000067b, 8), (unique, 0x1000067b, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  CBRANCH (ram, 0x247261, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000693, 8), (unique, 0x10000693, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000069b, 8), (unique, 0x1000069b, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x232, 4), (ram, 0x0, 4) MULTIEQUAL (ram, 0x0, 4) , (ram, 0x0, 4)]
[(ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x232, 4), (ram, 0x4, 4) MULTIEQUAL (ram, 0x4, 4) , (ram, 0x4, 4)]
[(ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x232, 4), (ram, 0x8, 4) MULTIEQUAL (ram, 0x8, 4) , (ram, 0x8, 4)]
[(ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x232, 4), (ram, 0xc, 4) MULTIEQUAL (ram, 0xc, 4) , (ram, 0xc, 4)]
[(ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x232, 4), (ram, 0x10, 8) MULTIEQUAL (ram, 0x10, 8) , (ram, 0x10, 8)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x232, 4), (ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbd80, 8), (unique, 0x3400, 8) CAST (unique, 0x100006ab, 8), (unique, 0x100006ab, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100006a3, 8), (unique, 0x100006a3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x247250, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4)]
[(ram, 0x10, 8) MULTIEQUAL (ram, 0x10, 8) , (ram, 0x10, 8)]
[(ram, 0xc, 4) MULTIEQUAL (ram, 0xc, 4) , (ram, 0xc, 4)]
[(ram, 0x8, 4) MULTIEQUAL (ram, 0x8, 4) , (ram, 0x8, 4)]
[(ram, 0x4, 4) MULTIEQUAL (ram, 0x4, 4) , (ram, 0x4, 4)]
[(ram, 0x0, 4) MULTIEQUAL (ram, 0x0, 4) , (ram, 0x0, 4)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24728e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006b3, 8), (unique, 0x100006b3, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(unique, 0x100004bb, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) CAST (unique, 0x100006c3, 8), (unique, 0x100006c3, 8) SUBPIECE (unique, 0x100002e7, 16) , (const, 0x0, 4), (unique, 0x100002e7, 16) MULTIEQUAL (unique, 0x100002f7, 16) , (VARIABLE, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b6, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x2b6, 4), (ram, 0x0, 4) MULTIEQUAL (ram, 0x0, 4) , (ram, 0x0, 4)]
[(ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x2b6, 4), (ram, 0x4, 4) MULTIEQUAL (ram, 0x4, 4) , (ram, 0x4, 4)]
[(ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x2b6, 4), (ram, 0x8, 4) MULTIEQUAL (ram, 0x8, 4) , (ram, 0x8, 4)]
[(ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x2b6, 4), (ram, 0xc, 4) MULTIEQUAL (ram, 0xc, 4) , (ram, 0xc, 4)]
[(ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x2b6, 4), (ram, 0x10, 8) MULTIEQUAL (ram, 0x10, 8) , (ram, 0x10, 8)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x2b6, 4), (ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b6, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x8, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (unique, 0x100004e3, 16) , (const, 0x2b6, 4), (unique, 0x100004e3, 16) COPY (unique, 0x100002e7, 16), (unique, 0x100002e7, 16) MULTIEQUAL (unique, 0x100002f7, 16) , (VARIABLE, 0x0, 4)]
[(stack, 0xffffffffffffffa8, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x0, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (unique, 0x100004e3, 16) , (const, 0x2b6, 4), (unique, 0x100004e3, 16) COPY (unique, 0x100002e7, 16), (unique, 0x100002e7, 16) MULTIEQUAL (unique, 0x100002f7, 16) , (VARIABLE, 0x0, 4)]
[ ---  CBRANCH (ram, 0x247278, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) SUBPIECE (VARIABLE, 0x0, 4) , (const, 0x0, 4), (VARIABLE, 0x0, 4) CALL (ram, 0x19d720, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffb0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100006d3, 8), (unique, 0x100006d3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006cb, 8), (unique, 0x100006cb, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8), (stack, 0xffffffffffffffa8, 8) CAST (unique, 0x100006c3, 8), (unique, 0x100006c3, 8) SUBPIECE (unique, 0x100002e7, 16) , (const, 0x0, 4), (stack, 0xffffffffffffffb0, 8) CAST (unique, 0x100006bb, 8), (unique, 0x100006bb, 8) SUBPIECE (unique, 0x1000048b, 16) , (const, 0x0, 4), (unique, 0x1000048b, 16) INT_RIGHT (unique, 0x100002e7, 16) , (const, 0x40, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8), (unique, 0x100002e7, 16) MULTIEQUAL (unique, 0x100002f7, 16) , (VARIABLE, 0x0, 4)]
[(ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x2e9, 4)]
[(ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x2e9, 4)]
[(ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x2e9, 4)]
[(ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x2e9, 4)]
[(ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x2e9, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x2e9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0x100004bb, 8), (unique, 0x3b80, 8) CAST (unique, 0x100006db, 8), (unique, 0x100006db, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0xa0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x247332, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006e3, 8), (unique, 0x100006e3, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8)]
[(ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x2cb, 4)]
[(ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x2cb, 4)]
[(ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x2cb, 4)]
[(ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x2cb, 4)]
[(ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x2cb, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x2cb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (const, 0x0, 8), (unique, 0x3b80, 8) CAST (unique, 0x100006eb, 8), (unique, 0x100006eb, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0xa0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x24728b, 1) , (unique, 0x100002e2, 1), (unique, 0x100002e2, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006f3, 8), (unique, 0x100006f3, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8)]
[(ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4)]
[(ram, 0x10, 8) MULTIEQUAL (ram, 0x10, 8) , (ram, 0x10, 8)]
[(ram, 0xc, 4) MULTIEQUAL (ram, 0xc, 4) , (ram, 0xc, 4)]
[(ram, 0x8, 4) MULTIEQUAL (ram, 0x8, 4) , (ram, 0x8, 4)]
[(ram, 0x4, 4) MULTIEQUAL (ram, 0x4, 4) , (ram, 0x4, 4)]
[(ram, 0x0, 4) MULTIEQUAL (ram, 0x0, 4) , (ram, 0x0, 4)]
[(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x247332, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa8, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x276, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000367, 8) , (unique, 0x1000033f, 8) , (const, 0x1df, 4) , (unique, 0x1000036f, 8), (unique, 0x1000036f, 8) COPY (const, 0x2bb6e0, 8), (unique, 0x10000367, 8) COPY (const, 0x2ba980, 8), (unique, 0x1000033f, 8) COPY (const, 0x2b6f53, 8)]
[(stack, 0xffffffffffffffb0, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x8, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (unique, 0x100004f3, 16) , (const, 0x276, 4), (unique, 0x100004f3, 16) COPY (unique, 0x10000307, 16), (unique, 0x10000307, 16) MULTIEQUAL (VARIABLE, 0x0, 4) , (unique, 0x100002f7, 16)]
[(stack, 0xffffffffffffffa8, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x0, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (unique, 0x100004f3, 16) , (const, 0x276, 4), (unique, 0x100004f3, 16) COPY (unique, 0x10000307, 16), (unique, 0x10000307, 16) MULTIEQUAL (VARIABLE, 0x0, 4) , (unique, 0x100002f7, 16)]
[(ram, 0x0, 4) COPY (ram, 0x0, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x276, 4), (ram, 0x0, 4) MULTIEQUAL (ram, 0x0, 4) , (ram, 0x0, 4)]
[(ram, 0x4, 4) COPY (ram, 0x4, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x276, 4), (ram, 0x4, 4) MULTIEQUAL (ram, 0x4, 4) , (ram, 0x4, 4)]
[(ram, 0x8, 4) COPY (ram, 0x8, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x276, 4), (ram, 0x8, 4) MULTIEQUAL (ram, 0x8, 4) , (ram, 0x8, 4)]
[(ram, 0xc, 4) COPY (ram, 0xc, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x276, 4), (ram, 0xc, 4) MULTIEQUAL (ram, 0xc, 4) , (ram, 0xc, 4)]
[(ram, 0x10, 8) COPY (ram, 0x10, 8), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x276, 4), (ram, 0x10, 8) MULTIEQUAL (ram, 0x10, 8) , (ram, 0x10, 8)]
[(ram, 0x18, 4) COPY (ram, 0x18, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x276, 4), (ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x10000317, 16) MULTIEQUAL (unique, 0x100002f7, 16) , (VARIABLE, 0x0, 4) , (unique, 0x10000327, 16)]
[(ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4) , (ram, 0x18, 4)]
[(ram, 0x10, 8) MULTIEQUAL (ram, 0x10, 8) , (ram, 0x10, 8) , (ram, 0x10, 8)]
[(ram, 0xc, 4) MULTIEQUAL (ram, 0xc, 4) , (ram, 0xc, 4) , (ram, 0xc, 4)]
[(ram, 0x8, 4) MULTIEQUAL (ram, 0x8, 4) , (ram, 0x8, 4) , (ram, 0x8, 4)]
[(ram, 0x4, 4) MULTIEQUAL (ram, 0x4, 4) , (ram, 0x4, 4) , (ram, 0x4, 4)]
[(ram, 0x0, 4) MULTIEQUAL (ram, 0x0, 4) , (ram, 0x0, 4) , (ram, 0x0, 4)]
[(register, 0x0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x24738e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100006fb, 8), (unique, 0x100006fb, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x0, 4) COPY (ram, 0x0, 4)]
[(ram, 0x4, 4) COPY (ram, 0x4, 4)]
[(ram, 0x8, 4) COPY (ram, 0x8, 4)]
[(ram, 0xc, 4) COPY (ram, 0xc, 4)]
[(ram, 0x10, 8) COPY (ram, 0x10, 8)]
[(ram, 0x18, 4) COPY (ram, 0x18, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a4, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(stack, 0xffffffffffffffb0, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x8, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (unique, 0x10000503, 16) , (const, 0x2a4, 4), (unique, 0x10000503, 16) COPY (unique, 0x10000317, 16)]
[(stack, 0xffffffffffffffa8, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x0, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (unique, 0x10000503, 16) , (const, 0x2a4, 4), (unique, 0x10000503, 16) COPY (unique, 0x10000317, 16)]
[(ram, 0x0, 4) COPY (ram, 0x0, 4), (ram, 0x0, 4) INDIRECT (ram, 0x0, 4) , (const, 0x2a4, 4)]
[(ram, 0x4, 4) COPY (ram, 0x4, 4), (ram, 0x4, 4) INDIRECT (ram, 0x4, 4) , (const, 0x2a4, 4)]
[(ram, 0x8, 4) COPY (ram, 0x8, 4), (ram, 0x8, 4) INDIRECT (ram, 0x8, 4) , (const, 0x2a4, 4)]
[(ram, 0xc, 4) COPY (ram, 0xc, 4), (ram, 0xc, 4) INDIRECT (ram, 0xc, 4) , (const, 0x2a4, 4)]
[(ram, 0x10, 8) COPY (ram, 0x10, 8), (ram, 0x10, 8) INDIRECT (ram, 0x10, 8) , (const, 0x2a4, 4)]
[(ram, 0x18, 4) COPY (ram, 0x18, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x2a4, 4)]
[ ---  RETURN (const, 0x1, 4)]
