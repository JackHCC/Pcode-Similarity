[(unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (unique, 0x100003dc, 8) , (const, 0x2f, 4), (unique, 0x100003dc, 8) COPY (register, 0x10, 8)]
[ ---  CALL (ram, 0x494680, 8) , (unique, 0x3200, 8) , (unique, 0x3100, 8) , (stack, 0x0, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd8, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[(unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd0, 8)]
[(stack, 0xfffffffffffffec8, 4) COPY (stack, 0xfffffffffffffdd8, 4), (stack, 0xfffffffffffffdd8, 4) INDIRECT (stack, 0xfffffffffffffdd8, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffecc, 4) COPY (stack, 0xfffffffffffffddc, 4), (stack, 0xfffffffffffffddc, 4) INDIRECT (stack, 0xfffffffffffffddc, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffed0, 4) COPY (stack, 0xfffffffffffffde0, 4), (stack, 0xfffffffffffffde0, 4) INDIRECT (stack, 0xfffffffffffffde0, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffed4, 4) COPY (stack, 0xfffffffffffffde4, 4), (stack, 0xfffffffffffffde4, 4) INDIRECT (stack, 0xfffffffffffffde4, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffed8, 4) COPY (stack, 0xfffffffffffffde8, 4), (stack, 0xfffffffffffffde8, 4) INDIRECT (stack, 0xfffffffffffffde8, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffedc, 4) COPY (stack, 0xfffffffffffffdec, 4), (stack, 0xfffffffffffffdec, 4) INDIRECT (stack, 0xfffffffffffffdec, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffee0, 4) COPY (stack, 0xfffffffffffffdf0, 4), (stack, 0xfffffffffffffdf0, 4) INDIRECT (stack, 0xfffffffffffffdf0, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffee4, 4) COPY (stack, 0xfffffffffffffdf4, 4), (stack, 0xfffffffffffffdf4, 4) INDIRECT (stack, 0xfffffffffffffdf4, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffee8, 4) COPY (stack, 0xfffffffffffffdf8, 4), (stack, 0xfffffffffffffdf8, 4) INDIRECT (stack, 0xfffffffffffffdf8, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffeec, 4) COPY (stack, 0xfffffffffffffdfc, 4), (stack, 0xfffffffffffffdfc, 4) INDIRECT (stack, 0xfffffffffffffdfc, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffef0, 4) COPY (stack, 0xfffffffffffffe00, 4), (stack, 0xfffffffffffffe00, 4) INDIRECT (stack, 0xfffffffffffffe00, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffef4, 4) COPY (stack, 0xfffffffffffffe04, 4), (stack, 0xfffffffffffffe04, 4) INDIRECT (stack, 0xfffffffffffffe04, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffef8, 4) COPY (stack, 0xfffffffffffffe08, 4), (stack, 0xfffffffffffffe08, 4) INDIRECT (stack, 0xfffffffffffffe08, 4) , (const, 0x2f, 4)]
[(stack, 0xfffffffffffffefc, 4) COPY (stack, 0xfffffffffffffe0c, 4), (stack, 0xfffffffffffffe0c, 4) INDIRECT (stack, 0xfffffffffffffe0c, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff00, 4) COPY (stack, 0xfffffffffffffe10, 4), (stack, 0xfffffffffffffe10, 4) INDIRECT (stack, 0xfffffffffffffe10, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff04, 4) COPY (stack, 0xfffffffffffffe14, 4), (stack, 0xfffffffffffffe14, 4) INDIRECT (stack, 0xfffffffffffffe14, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff08, 4) COPY (stack, 0xfffffffffffffe18, 4), (stack, 0xfffffffffffffe18, 4) INDIRECT (stack, 0xfffffffffffffe18, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff0c, 4) COPY (stack, 0xfffffffffffffe1c, 4), (stack, 0xfffffffffffffe1c, 4) INDIRECT (stack, 0xfffffffffffffe1c, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff10, 4) COPY (stack, 0xfffffffffffffe20, 4), (stack, 0xfffffffffffffe20, 4) INDIRECT (stack, 0xfffffffffffffe20, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff14, 4) COPY (stack, 0xfffffffffffffe24, 4), (stack, 0xfffffffffffffe24, 4) INDIRECT (stack, 0xfffffffffffffe24, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff18, 4) COPY (stack, 0xfffffffffffffe28, 4), (stack, 0xfffffffffffffe28, 4) INDIRECT (stack, 0xfffffffffffffe28, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff1c, 4) COPY (stack, 0xfffffffffffffe2c, 4), (stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff20, 4) COPY (stack, 0xfffffffffffffe30, 4), (stack, 0xfffffffffffffe30, 4) INDIRECT (stack, 0xfffffffffffffe30, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff24, 4) COPY (stack, 0xfffffffffffffe34, 4), (stack, 0xfffffffffffffe34, 4) INDIRECT (stack, 0xfffffffffffffe34, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff28, 4) COPY (stack, 0xfffffffffffffe38, 4), (stack, 0xfffffffffffffe38, 4) INDIRECT (stack, 0xfffffffffffffe38, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff2c, 4) COPY (stack, 0xfffffffffffffe3c, 4), (stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff30, 4) COPY (stack, 0xfffffffffffffe40, 4), (stack, 0xfffffffffffffe40, 4) INDIRECT (stack, 0xfffffffffffffe40, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff34, 4) COPY (stack, 0xfffffffffffffe44, 4), (stack, 0xfffffffffffffe44, 4) INDIRECT (stack, 0xfffffffffffffe44, 4) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff38, 8) COPY (stack, 0xfffffffffffffe48, 8), (stack, 0xfffffffffffffe48, 8) INDIRECT (stack, 0xfffffffffffffe48, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff40, 8) COPY (stack, 0xfffffffffffffe50, 8), (stack, 0xfffffffffffffe50, 8) INDIRECT (stack, 0xfffffffffffffe50, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff48, 8) COPY (stack, 0xfffffffffffffe58, 8), (stack, 0xfffffffffffffe58, 8) INDIRECT (stack, 0xfffffffffffffe58, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff50, 8) COPY (stack, 0xfffffffffffffe60, 8), (stack, 0xfffffffffffffe60, 8) INDIRECT (stack, 0xfffffffffffffe60, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff58, 8) COPY (stack, 0xfffffffffffffe68, 8), (stack, 0xfffffffffffffe68, 8) INDIRECT (stack, 0xfffffffffffffe68, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff60, 8) COPY (stack, 0xfffffffffffffe70, 8), (stack, 0xfffffffffffffe70, 8) INDIRECT (stack, 0xfffffffffffffe70, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff68, 8) COPY (stack, 0xfffffffffffffe78, 8), (stack, 0xfffffffffffffe78, 8) INDIRECT (stack, 0xfffffffffffffe78, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff70, 8) COPY (stack, 0xfffffffffffffe80, 8), (stack, 0xfffffffffffffe80, 8) INDIRECT (stack, 0xfffffffffffffe80, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff78, 8) COPY (stack, 0xfffffffffffffe88, 8), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff80, 8) COPY (stack, 0xfffffffffffffe90, 8), (stack, 0xfffffffffffffe90, 8) INDIRECT (stack, 0xfffffffffffffe90, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff88, 8) COPY (stack, 0xfffffffffffffe98, 8), (stack, 0xfffffffffffffe98, 8) INDIRECT (stack, 0xfffffffffffffe98, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff90, 8) COPY (stack, 0xfffffffffffffea0, 8), (stack, 0xfffffffffffffea0, 8) INDIRECT (stack, 0xfffffffffffffea0, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffff98, 8) COPY (stack, 0xfffffffffffffea8, 8), (stack, 0xfffffffffffffea8, 8) INDIRECT (stack, 0xfffffffffffffea8, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffffa0, 8) COPY (stack, 0xfffffffffffffeb0, 8), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffffa8, 8) COPY (stack, 0xfffffffffffffeb8, 8), (stack, 0xfffffffffffffeb8, 8) INDIRECT (stack, 0xfffffffffffffeb8, 8) , (const, 0x2f, 4)]
[(stack, 0xffffffffffffffb0, 8) COPY (stack, 0xfffffffffffffec0, 8), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x2f, 4)]
[ ---  CBRANCH (ram, 0x495327, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100003e4, 8), (unique, 0x100003e4, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffed0, 4) INDIRECT (stack, 0xfffffffffffffed0, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffed4, 4) INDIRECT (stack, 0xfffffffffffffed4, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffedc, 4) INDIRECT (stack, 0xfffffffffffffedc, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffee0, 4) INDIRECT (stack, 0xfffffffffffffee0, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffee4, 4) INDIRECT (stack, 0xfffffffffffffee4, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffef0, 4) INDIRECT (stack, 0xfffffffffffffef0, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffef8, 4) INDIRECT (stack, 0xfffffffffffffef8, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff00, 4) INDIRECT (stack, 0xffffffffffffff00, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff08, 4) INDIRECT (stack, 0xffffffffffffff08, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff0c, 4) INDIRECT (stack, 0xffffffffffffff0c, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff28, 4) INDIRECT (stack, 0xffffffffffffff28, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff2c, 4) INDIRECT (stack, 0xffffffffffffff2c, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff30, 4) INDIRECT (stack, 0xffffffffffffff30, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xe6, 4)]
[(register, 0x0, 4) CALL (ram, 0x494960, 8) , (stack, 0xfffffffffffffe58, 8) , (stack, 0xfffffffffffffe68, 8) , (stack, 0xfffffffffffffe78, 8) , (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe98, 8) , (stack, 0xfffffffffffffea8, 8) , (stack, 0xfffffffffffffeb8, 8) , (stack, 0xfffffffffffffe48, 8) , (register, 0x38, 8) , (unique, 0x3200, 8) , (unique, 0x3200, 8)]
[ ---  BRANCH (ram, 0x4952ca, 1)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffed0, 4) INDIRECT (stack, 0xfffffffffffffed0, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffed4, 4) INDIRECT (stack, 0xfffffffffffffed4, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffedc, 4) INDIRECT (stack, 0xfffffffffffffedc, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffee0, 4) INDIRECT (stack, 0xfffffffffffffee0, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffee4, 4) INDIRECT (stack, 0xfffffffffffffee4, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffef0, 4) INDIRECT (stack, 0xfffffffffffffef0, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffef8, 4) INDIRECT (stack, 0xfffffffffffffef8, 4) , (const, 0x9f, 4)]
[(stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff00, 4) INDIRECT (stack, 0xffffffffffffff00, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff08, 4) INDIRECT (stack, 0xffffffffffffff08, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff0c, 4) INDIRECT (stack, 0xffffffffffffff0c, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff28, 4) INDIRECT (stack, 0xffffffffffffff28, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff2c, 4) INDIRECT (stack, 0xffffffffffffff2c, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff30, 4) INDIRECT (stack, 0xffffffffffffff30, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x9f, 4)]
[(register, 0x0, 4) CALL (ram, 0x494890, 8) , (stack, 0xfffffffffffffe58, 8) , (stack, 0xfffffffffffffe68, 8) , (stack, 0xfffffffffffffe78, 8) , (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe98, 8) , (stack, 0xfffffffffffffea8, 8) , (stack, 0xfffffffffffffeb8, 8) , (stack, 0xfffffffffffffe48, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff34, 4) MULTIEQUAL (stack, 0xffffffffffffff34, 4) , (stack, 0xffffffffffffff34, 4)]
[(stack, 0xffffffffffffff30, 4) MULTIEQUAL (stack, 0xffffffffffffff30, 4) , (stack, 0xffffffffffffff30, 4)]
[(stack, 0xffffffffffffff2c, 4) MULTIEQUAL (stack, 0xffffffffffffff2c, 4) , (stack, 0xffffffffffffff2c, 4)]
[(stack, 0xffffffffffffff28, 4) MULTIEQUAL (stack, 0xffffffffffffff28, 4) , (stack, 0xffffffffffffff28, 4)]
[(stack, 0xffffffffffffff24, 4) MULTIEQUAL (stack, 0xffffffffffffff24, 4) , (stack, 0xffffffffffffff24, 4)]
[(stack, 0xffffffffffffff20, 4) MULTIEQUAL (stack, 0xffffffffffffff20, 4) , (stack, 0xffffffffffffff20, 4)]
[(stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(stack, 0xffffffffffffff18, 4) MULTIEQUAL (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4)]
[(stack, 0xffffffffffffff14, 4) MULTIEQUAL (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffff0c, 4) MULTIEQUAL (stack, 0xffffffffffffff0c, 4) , (stack, 0xffffffffffffff0c, 4)]
[(stack, 0xffffffffffffff08, 4) MULTIEQUAL (stack, 0xffffffffffffff08, 4) , (stack, 0xffffffffffffff08, 4)]
[(stack, 0xffffffffffffff04, 4) MULTIEQUAL (stack, 0xffffffffffffff04, 4) , (stack, 0xffffffffffffff04, 4)]
[(stack, 0xffffffffffffff00, 4) MULTIEQUAL (stack, 0xffffffffffffff00, 4) , (stack, 0xffffffffffffff00, 4)]
[(stack, 0xfffffffffffffefc, 4) MULTIEQUAL (stack, 0xfffffffffffffefc, 4) , (stack, 0xfffffffffffffefc, 4)]
[(stack, 0xfffffffffffffef8, 4) MULTIEQUAL (stack, 0xfffffffffffffef8, 4) , (stack, 0xfffffffffffffef8, 4)]
[(stack, 0xfffffffffffffef4, 4) MULTIEQUAL (stack, 0xfffffffffffffef4, 4) , (stack, 0xfffffffffffffef4, 4)]
[(stack, 0xfffffffffffffef0, 4) MULTIEQUAL (stack, 0xfffffffffffffef0, 4) , (stack, 0xfffffffffffffef0, 4)]
[(stack, 0xfffffffffffffeec, 4) MULTIEQUAL (stack, 0xfffffffffffffeec, 4) , (stack, 0xfffffffffffffeec, 4)]
[(stack, 0xfffffffffffffee8, 4) MULTIEQUAL (stack, 0xfffffffffffffee8, 4) , (stack, 0xfffffffffffffee8, 4)]
[(stack, 0xfffffffffffffee4, 4) MULTIEQUAL (stack, 0xfffffffffffffee4, 4) , (stack, 0xfffffffffffffee4, 4)]
[(stack, 0xfffffffffffffee0, 4) MULTIEQUAL (stack, 0xfffffffffffffee0, 4) , (stack, 0xfffffffffffffee0, 4)]
[(stack, 0xfffffffffffffedc, 4) MULTIEQUAL (stack, 0xfffffffffffffedc, 4) , (stack, 0xfffffffffffffedc, 4)]
[(stack, 0xfffffffffffffed8, 4) MULTIEQUAL (stack, 0xfffffffffffffed8, 4) , (stack, 0xfffffffffffffed8, 4)]
[(stack, 0xfffffffffffffed4, 4) MULTIEQUAL (stack, 0xfffffffffffffed4, 4) , (stack, 0xfffffffffffffed4, 4)]
[(stack, 0xfffffffffffffed0, 4) MULTIEQUAL (stack, 0xfffffffffffffed0, 4) , (stack, 0xfffffffffffffed0, 4)]
[(stack, 0xfffffffffffffecc, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[ ---  CBRANCH (ram, 0x4017b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffed0, 4) INDIRECT (stack, 0xfffffffffffffed0, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffed4, 4) INDIRECT (stack, 0xfffffffffffffed4, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffedc, 4) INDIRECT (stack, 0xfffffffffffffedc, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffee0, 4) INDIRECT (stack, 0xfffffffffffffee0, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffee4, 4) INDIRECT (stack, 0xfffffffffffffee4, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffef0, 4) INDIRECT (stack, 0xfffffffffffffef0, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffef8, 4) INDIRECT (stack, 0xfffffffffffffef8, 4) , (const, 0xe1, 4)]
[(stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff00, 4) INDIRECT (stack, 0xffffffffffffff00, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff08, 4) INDIRECT (stack, 0xffffffffffffff08, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff0c, 4) INDIRECT (stack, 0xffffffffffffff0c, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff28, 4) INDIRECT (stack, 0xffffffffffffff28, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff2c, 4) INDIRECT (stack, 0xffffffffffffff2c, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff30, 4) INDIRECT (stack, 0xffffffffffffff30, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xe1, 4)]
[ ---  CALL (ram, 0x4011c4, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CALL (ram, 0x493950, 8) , (unique, 0x3200, 8) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003ec, 8) , (register, 0x10, 8), (unique, 0x100003ec, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100003ac, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100003ac, 8) PTRSUB (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) SUBPIECE (VARIABLE, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) SUBPIECE (unique, 0x100003cc, 16) , (const, 0x0, 4), (unique, 0x100003cc, 16) INT_RIGHT (VARIABLE, 0x0, 4) , (const, 0x40, 4), (VARIABLE, 0x0, 4) CALL (ram, 0x494cf0, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff60, 8), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xaf, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffed0, 4) INDIRECT (stack, 0xfffffffffffffed0, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffed0, 4) INDIRECT (stack, 0xfffffffffffffed0, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffed0, 4) INDIRECT (stack, 0xfffffffffffffed0, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffed0, 4) INDIRECT (stack, 0xfffffffffffffed0, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffed4, 4) INDIRECT (stack, 0xfffffffffffffed4, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffed4, 4) INDIRECT (stack, 0xfffffffffffffed4, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffed4, 4) INDIRECT (stack, 0xfffffffffffffed4, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffed4, 4) INDIRECT (stack, 0xfffffffffffffed4, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffed8, 4) INDIRECT (stack, 0xfffffffffffffed8, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffedc, 4) INDIRECT (stack, 0xfffffffffffffedc, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffedc, 4) INDIRECT (stack, 0xfffffffffffffedc, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffedc, 4) INDIRECT (stack, 0xfffffffffffffedc, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffedc, 4) INDIRECT (stack, 0xfffffffffffffedc, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffee0, 4) INDIRECT (stack, 0xfffffffffffffee0, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffee0, 4) INDIRECT (stack, 0xfffffffffffffee0, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffee0, 4) INDIRECT (stack, 0xfffffffffffffee0, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffee0, 4) INDIRECT (stack, 0xfffffffffffffee0, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffee4, 4) INDIRECT (stack, 0xfffffffffffffee4, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffee4, 4) INDIRECT (stack, 0xfffffffffffffee4, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffee4, 4) INDIRECT (stack, 0xfffffffffffffee4, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffee4, 4) INDIRECT (stack, 0xfffffffffffffee4, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffef0, 4) INDIRECT (stack, 0xfffffffffffffef0, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffef0, 4) INDIRECT (stack, 0xfffffffffffffef0, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffef0, 4) INDIRECT (stack, 0xfffffffffffffef0, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffef0, 4) INDIRECT (stack, 0xfffffffffffffef0, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffef4, 4) INDIRECT (stack, 0xfffffffffffffef4, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffef8, 4) INDIRECT (stack, 0xfffffffffffffef8, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffef8, 4) INDIRECT (stack, 0xfffffffffffffef8, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffef8, 4) INDIRECT (stack, 0xfffffffffffffef8, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffef8, 4) INDIRECT (stack, 0xfffffffffffffef8, 4) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0xde, 4), (stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0xbf, 4), (stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0xb9, 4), (stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff00, 4) INDIRECT (stack, 0xffffffffffffff00, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff00, 4) INDIRECT (stack, 0xffffffffffffff00, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff00, 4) INDIRECT (stack, 0xffffffffffffff00, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff00, 4) INDIRECT (stack, 0xffffffffffffff00, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff08, 4) INDIRECT (stack, 0xffffffffffffff08, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff08, 4) INDIRECT (stack, 0xffffffffffffff08, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff08, 4) INDIRECT (stack, 0xffffffffffffff08, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff08, 4) INDIRECT (stack, 0xffffffffffffff08, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff0c, 4) INDIRECT (stack, 0xffffffffffffff0c, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff0c, 4) INDIRECT (stack, 0xffffffffffffff0c, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff0c, 4) INDIRECT (stack, 0xffffffffffffff0c, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff0c, 4) INDIRECT (stack, 0xffffffffffffff0c, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff28, 4) INDIRECT (stack, 0xffffffffffffff28, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff28, 4) INDIRECT (stack, 0xffffffffffffff28, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff28, 4) INDIRECT (stack, 0xffffffffffffff28, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff28, 4) INDIRECT (stack, 0xffffffffffffff28, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff2c, 4) INDIRECT (stack, 0xffffffffffffff2c, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff2c, 4) INDIRECT (stack, 0xffffffffffffff2c, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff2c, 4) INDIRECT (stack, 0xffffffffffffff2c, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff2c, 4) INDIRECT (stack, 0xffffffffffffff2c, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff30, 4) INDIRECT (stack, 0xffffffffffffff30, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff30, 4) INDIRECT (stack, 0xffffffffffffff30, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff30, 4) INDIRECT (stack, 0xffffffffffffff30, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff30, 4) INDIRECT (stack, 0xffffffffffffff30, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0xde, 4), (stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0xbf, 4), (stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0xb9, 4), (stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xde, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xde, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xde, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xde, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xde, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xbf, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xaf, 4)]
[ ---  CALLIND (register, 0x8, 8), (register, 0x8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003f4, 8), (unique, 0x100003f4, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100003bc, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100003bc, 8) PTRSUB (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) SUBPIECE (VARIABLE, 0x0, 4) , (const, 0x0, 4), (VARIABLE, 0x0, 4) CALL (ram, 0x494cf0, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff60, 8), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xaf, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xaf, 4)]
[ ---  RETURN (const, 0x1, 4)]
