[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002fc, 8), (unique, 0x100002fc, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x47a1f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47a1fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x47a2c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000304, 8), (unique, 0x10000304, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x463, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000030c, 8), (unique, 0x1000030c, 8) CALL (ram, 0x4010b0, 8) , (register, 0x38, 8) , (unique, 0xbb00, 1) , (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x47a1c9, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (register, 0x8, 8)]
[(register, 0xb0, 8) CAST (unique, 0x1000031c, 8), (unique, 0x1000031c, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x10000314, 8), (unique, 0x10000314, 8) CAST (register, 0x38, 8), (register, 0xb0, 8) INT_SUB (register, 0x30, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47a234, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x47a28a, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (const, 0x101, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0x100002d4, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(register, 0x8, 8) COPY (const, 0x20, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100002d4, 8) , (unique, 0x100002dc, 8)]
[ ---  CBRANCH (ram, 0x47a093, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x90, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100002dc, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x47a090, 1)]
[ ---  CBRANCH (ram, 0x47a2b3, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x4, 8)]
[(register, 0x30, 4) COPY (const, 0x1, 4)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x47a0f1, 1)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x3, 8), (register, 0x8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x5, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x3a00, 8) CAST (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) INT_ADD (unique, 0x10000334, 8) , (register, 0x0, 8), (unique, 0x10000334, 8) CAST (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (register, 0x0, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8), (register, 0x38, 8) INT_ADD (register, 0x30, 8) , (unique, 0x100000ac, 8), (unique, 0x100000ac, 8) INT_MULT (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000032c, 8), (unique, 0x1000032c, 8) INT_ADD (unique, 0x10000324, 8) , (register, 0x10, 8), (unique, 0x10000324, 8) CAST (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x114, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x38, 1), (unique, 0x3a00, 8) CAST (unique, 0x1000035c, 8), (unique, 0x1000035c, 8) INT_ADD (unique, 0x10000354, 8) , (register, 0x30, 8), (unique, 0x10000354, 8) CAST (unique, 0x100001e9, 8), (unique, 0x100001e9, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (register, 0x38, 1) INT_ADD (register, 0x10, 1) , (const, 0x1, 1), (register, 0x30, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8), (register, 0x38, 8) INT_ADD (register, 0x0, 8) , (unique, 0x100000b4, 8), (unique, 0x100000b4, 8) INT_MULT (register, 0x30, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) INT_ADD (unique, 0x10000344, 8) , (unique, 0x100001d1, 8), (unique, 0x10000344, 8) CAST (register, 0x10, 8), (unique, 0x100001d1, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 1) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000032c, 8), (unique, 0x1000032c, 8) INT_ADD (unique, 0x10000324, 8) , (register, 0x10, 8), (unique, 0x10000324, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x30, 4) INT_ADD (unique, 0x100000c4, 4) , (const, 0x2, 4), (unique, 0x100000c4, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x47a0b2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000180, 1) INT_SUB (unique, 0x10000182, 1) , (unique, 0x10000184, 1), (unique, 0x10000182, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (unique, 0x10000184, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x10000294, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x100002c4, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x19f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x10, 1), (unique, 0x3a00, 8) CAST (unique, 0x1000038d, 8), (unique, 0x1000038d, 8) INT_ADD (unique, 0x10000385, 8) , (register, 0x0, 8), (unique, 0x10000385, 8) CAST (unique, 0x10000211, 8), (unique, 0x10000211, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000384, 1), (unique, 0x10000384, 1) CAST (register, 0x0, 1), (register, 0x10, 1) INT_ADD (unique, 0x10000180, 1) , (unique, 0x10000181, 1), (unique, 0x10000181, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x0, 1) INT_ADD (unique, 0xbb00, 1) , (unique, 0x100000e9, 1), (unique, 0x100000e9, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0xf8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000037c, 8), (unique, 0x1000037c, 8) INT_ADD (unique, 0x10000374, 8) , (unique, 0x100001f9, 8), (unique, 0x10000374, 8) CAST (register, 0x10, 8), (unique, 0x100001f9, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000036c, 8), (unique, 0x1000036c, 8) INT_ADD (unique, 0x10000364, 8) , (register, 0x10, 8), (unique, 0x10000364, 8) CAST (register, 0x10, 8), (register, 0x8, 8) COPY (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) MULTIEQUAL (unique, 0x10000294, 8) , (unique, 0x1000029c, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002c4, 8) , (unique, 0x100002cc, 8)]
[(unique, 0x1000029c, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) COPY (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) MULTIEQUAL (unique, 0x10000294, 8) , (unique, 0x1000029c, 8)]
[(unique, 0x100002cc, 8) COPY (register, 0x8, 8), (register, 0x8, 8) COPY (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) MULTIEQUAL (unique, 0x10000294, 8) , (unique, 0x1000029c, 8)]
[ ---  CBRANCH (ram, 0x47a100, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 8) , (unique, 0x3100, 8), (register, 0x8, 8) COPY (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) MULTIEQUAL (unique, 0x10000294, 8) , (unique, 0x1000029c, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) INT_SUB (register, 0x8, 8) , (const, 0x9, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x210, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0xa8, 1), (register, 0xa8, 1) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3a00, 8) CAST (unique, 0x100003ce, 8), (unique, 0x100003ce, 8) INT_ADD (unique, 0x100003c6, 8) , (register, 0x0, 8), (unique, 0x100003c6, 8) CAST (unique, 0x10000261, 8), (unique, 0x10000261, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100003b5, 1), (unique, 0x100003b5, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_ADD (unique, 0xbb00, 1) , (unique, 0x10000110, 1), (unique, 0x10000110, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0xf8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003ad, 8), (unique, 0x100003ad, 8) INT_ADD (unique, 0x100003a5, 8) , (unique, 0x10000229, 8), (unique, 0x100003a5, 8) CAST (register, 0x10, 8), (unique, 0x10000229, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000039d, 8), (unique, 0x1000039d, 8) INT_ADD (unique, 0x10000395, 8) , (unique, 0x10000221, 8), (unique, 0x10000395, 8) CAST (register, 0x10, 8), (unique, 0x10000221, 8) INT_SUB (register, 0x8, 8) , (const, 0x2, 8)]
[(register, 0x38, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003be, 8), (unique, 0x100003be, 8) INT_ADD (unique, 0x100003b6, 8) , (register, 0x0, 8), (unique, 0x100003b6, 8) CAST (unique, 0x10000241, 8), (unique, 0x10000241, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100003b5, 1), (unique, 0x100003b5, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_ADD (unique, 0xbb00, 1) , (unique, 0x10000110, 1), (unique, 0x10000110, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0xf8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003ad, 8), (unique, 0x100003ad, 8) INT_ADD (unique, 0x100003a5, 8) , (unique, 0x10000229, 8), (unique, 0x100003a5, 8) CAST (register, 0x10, 8), (unique, 0x10000229, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000039d, 8), (unique, 0x1000039d, 8) INT_ADD (unique, 0x10000395, 8) , (unique, 0x10000221, 8), (unique, 0x10000395, 8) CAST (register, 0x10, 8), (unique, 0x10000221, 8) INT_SUB (register, 0x8, 8) , (const, 0x2, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x47a1c9, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x28, 8) , (register, 0xb0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x28, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x47a184, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003ff, 8), (unique, 0x100003ff, 8) INT_ADD (unique, 0x100003f7, 8) , (register, 0x0, 8), (unique, 0x100003f7, 8) CAST (unique, 0x10000281, 8), (unique, 0x10000281, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100003f6, 1), (unique, 0x100003f6, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_ADD (unique, 0xbb00, 1) , (unique, 0x10000125, 1), (unique, 0x10000125, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0xf8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003ee, 8), (unique, 0x100003ee, 8) INT_ADD (unique, 0x100003e6, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x100003e6, 8) CAST (register, 0x28, 8), (register, 0x28, 8) CAST (unique, 0x100003de, 8), (unique, 0x100003de, 8) INT_ADD (unique, 0x100003d6, 8) , (unique, 0x3100, 8), (unique, 0x100003d6, 8) CAST (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x47a160, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb0, 8) , (register, 0x28, 8)]
[(register, 0x28, 8) CAST (unique, 0x1000040f, 8), (unique, 0x1000040f, 8) INT_ADD (unique, 0x10000407, 8) , (unique, 0x10000128, 8), (unique, 0x10000407, 8) CAST (register, 0x28, 8), (unique, 0x10000128, 8) INT_2COMP (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47a15a, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47a19d, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0xf, 8)]
[(unique, 0x100002e4, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x47a1bf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000042f, 8), (unique, 0x1000042f, 8) INT_ADD (unique, 0x10000427, 8) , (register, 0xa0, 8), (unique, 0x10000427, 8) CAST (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x1000041f, 8), (unique, 0x1000041f, 8) INT_ADD (unique, 0x10000417, 8) , (register, 0xa0, 8), (unique, 0x10000417, 8) CAST (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2bc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2bc, 4)]
[ ---  CBRANCH (ram, 0x47a1f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4010f0, 8) , (register, 0x28, 8) , (register, 0x10, 8) , (unique, 0x3100, 8)]
[(unique, 0x100002ec, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) INT_SUB (register, 0xa0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47a1bc, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (const, 0x8, 8)]
[(unique, 0x100002f4, 8) COPY (register, 0x18, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100002e4, 8) , (unique, 0x100002ec, 8) , (unique, 0x100002f4, 8)]
[ ---  CBRANCH (ram, 0x47a160, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb0, 8) , (register, 0x28, 8), (register, 0x28, 8) CAST (unique, 0x1000043f, 8), (unique, 0x1000043f, 8) INT_ADD (unique, 0x10000437, 8) , (register, 0x38, 8), (unique, 0x10000437, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x47a2c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000447, 8), (unique, 0x10000447, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x34f, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000044f, 8), (unique, 0x1000044f, 8) CALL (ram, 0x479c80, 8)]
[(register, 0x38, 4) INT_OR (register, 0x38, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x38, 4) INT_LEFT (unique, 0x10000186, 4) , (const, 0x10, 4), (unique, 0x10000186, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000045f, 8), (unique, 0x1000045f, 8) INT_ADD (unique, 0x10000457, 8) , (const, 0x1, 8), (unique, 0x10000457, 8) CAST (register, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x10, 4) INT_LEFT (unique, 0x1000018a, 4) , (const, 0x10, 4), (unique, 0x1000018a, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000047f, 8), (unique, 0x1000047f, 8) INT_ADD (unique, 0x10000477, 8) , (const, 0x1, 8), (unique, 0x10000477, 8) CAST (register, 0x38, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x47a2c2, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000046f, 8), (unique, 0x1000046f, 8) INT_ADD (unique, 0x10000467, 8) , (const, 0x1, 8), (unique, 0x10000467, 8) CAST (register, 0x38, 8)]
[(unique, 0x100002ac, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x47a268, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (register, 0x10, 4)]
[(register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x10, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000048f, 8), (unique, 0x1000048f, 8) INT_ADD (unique, 0x10000487, 8) , (const, 0x1, 8), (unique, 0x10000487, 8) CAST (register, 0x8, 8), (register, 0x8, 8) COPY (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) MULTIEQUAL (unique, 0x100002ac, 8) , (unique, 0x100002b4, 8), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x47a260, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb0, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x1000049f, 8), (unique, 0x1000049f, 8) INT_ADD (unique, 0x10000497, 8) , (const, 0x1, 8), (unique, 0x10000497, 8) CAST (register, 0x8, 8), (register, 0x8, 8) COPY (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) MULTIEQUAL (unique, 0x100002ac, 8) , (unique, 0x100002b4, 8)]
[(unique, 0x100002b4, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47a1cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (register, 0x10, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x47a1c9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x8, 8) , (register, 0x38, 8) , (register, 0x28, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47a2c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004a7, 8), (unique, 0x100004a7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x322, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
