[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x18, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) INT_ADD (unique, 0x1000006e, 4) , (const, 0x10, 4), (unique, 0x1000006e, 4) INT_MULT (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(stack, 0xffffffffffffffc4, 4) COPY (register, 0x18, 4), (register, 0x18, 4) INT_ADD (unique, 0x1000006e, 4) , (const, 0x10, 4), (unique, 0x1000006e, 4) INT_MULT (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(unique, 0x10000227, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x222ee0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 4) , (const, 0x1001, 4), (register, 0x18, 4) INT_ADD (unique, 0x1000006e, 4) , (const, 0x10, 4), (unique, 0x1000006e, 4) INT_MULT (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x185, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x222ef1, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x185, 4)]
[(stack, 0xffffffffffffffb4, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2141b0, 8)]
[(unique, 0x1000022b, 4) COPY (stack, 0xffffffffffffffb0, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (unique, 0x1000023f, 4) , (const, 0x185, 4), (unique, 0x1000023f, 4) COPY (unique, 0xbc80, 4)]
[(unique, 0x10000243, 4) COPY (stack, 0xffffffffffffffa8, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (unique, 0x10000237, 4) , (const, 0x185, 4), (unique, 0x10000237, 4) COPY (register, 0x10, 4)]
[(unique, 0x10000247, 4) COPY (stack, 0xffffffffffffffac, 4), (stack, 0xffffffffffffffac, 4) INDIRECT (unique, 0x1000023b, 4) , (const, 0x185, 4), (unique, 0x1000023b, 4) COPY (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x222e36, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2141b0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1ac, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x222f16, 8)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x1ac, 4)]
[ ---  CBRANCH (ram, 0x222f58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000024b, 8), (unique, 0x1000024b, 8) CALL (ram, 0x11f8a0, 8) , (register, 0x18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (stack, 0xffffffffffffffa8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffac, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffb0, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1de, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x222f45, 8)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x1de, 4)]
[ ---  CBRANCH (ram, 0x222e87, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207920, 8) , (register, 0x38, 4) , (const, 0x0, 4) , (const, 0x29, 4) , (register, 0x0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8)]
[(register, 0x20, 8) CAST (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) INT_ADD (unique, 0x10000253, 8) , (unique, 0x10000082, 8), (unique, 0x10000253, 8) CAST (unique, 0x10000116, 8), (unique, 0x10000116, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x10000082, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x10, 4), (unique, 0x3800, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) INT_ADD (unique, 0x10000263, 8) , (unique, 0x100001c6, 8), (unique, 0x10000263, 8) CAST (unique, 0x100001ce, 8), (unique, 0x100001ce, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100001c6, 8) INT_ADD (unique, 0x10000082, 8) , (const, 0x8, 8), (unique, 0x10000082, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e, 8), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0x10000243, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) CAST (unique, 0x1000027b, 8), (unique, 0x1000027b, 8) INT_ADD (unique, 0x10000273, 8) , (unique, 0x100001e6, 8), (unique, 0x10000273, 8) CAST (unique, 0x100001ee, 8), (unique, 0x100001ee, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100001e6, 8) INT_ADD (unique, 0x10000082, 8) , (const, 0xc, 8), (unique, 0x10000082, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e, 8), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (unique, 0x10000247, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 4), (unique, 0x3100, 8) CAST (unique, 0x1000028b, 8), (unique, 0x1000028b, 8) INT_ADD (unique, 0x10000283, 8) , (unique, 0x10000206, 8), (unique, 0x10000283, 8) CAST (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x10000206, 8) INT_ADD (unique, 0x10000082, 8) , (const, 0x14, 8), (unique, 0x10000082, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e, 8), (register, 0x8, 4) MULTIEQUAL (unique, 0x10000227, 4) , (unique, 0x1000022b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x222e6c, 8), (register, 0x20, 8) CAST (unique, 0x1000029b, 8), (unique, 0x1000029b, 8) INT_ADD (unique, 0x10000293, 8) , (unique, 0x10000082, 8), (unique, 0x10000293, 8) CAST (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8), (unique, 0x10000082, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xb8, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xb7, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0xb8, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0xb7, 4), (stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0xb8, 4), (stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0xb7, 4), (stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0xb8, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0xb7, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xb8, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xb7, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xb8, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xb7, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[ ---  CBRANCH (ram, 0x222e80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207920, 8) , (register, 0x38, 4) , (const, 0x0, 4) , (const, 0x29, 4) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) INT_ADD (unique, 0x10000263, 8) , (unique, 0x100001c6, 8), (unique, 0x10000263, 8) CAST (unique, 0x100001ce, 8), (unique, 0x100001ce, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100001c6, 8) INT_ADD (unique, 0x10000082, 8) , (const, 0x8, 8), (unique, 0x10000082, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1e, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffb4, 4) COPY (const, 0x1, 4)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[(unique, 0x1000022f, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x222ea7, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[(unique, 0x10000233, 4) COPY (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x222eb3, 8), (register, 0x20, 8) CAST (unique, 0x100002ab, 8), (unique, 0x100002ab, 8) INT_ADD (unique, 0x100002a3, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100002a3, 8) CAST (register, 0x20, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x141, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x140, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x141, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x140, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x141, 4), (stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x140, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x141, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x140, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x141, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x140, 4)]
[ ---  CALL (ram, 0x193a40, 8) , (register, 0x88, 8) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0x1000022f, 4) , (unique, 0x10000233, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0xbc80, 4)]
[(unique, 0x1000021f, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x222e70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb4, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x141, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x140, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x222ecb, 8), (register, 0x20, 8) CAST (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) INT_ADD (unique, 0x100002b3, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100002b3, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x1000021f, 8) , (register, 0x20, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x163, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x162, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x163, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x162, 4), (stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x163, 4), (stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x162, 4), (stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x163, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x162, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x163, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x162, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100002c3, 4), (unique, 0x100002c3, 4) COPY (stack, 0xffffffffffffffb4, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x163, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x162, 4), (stack, 0xffffffffffffffb4, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
