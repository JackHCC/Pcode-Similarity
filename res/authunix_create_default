[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x22, 4)]
[(stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x22, 4)]
[(stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x22, 4)]
[(unique, 0x10000175, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[ ---  CBRANCH (ram, 0x233f05, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1fcb80, 8) , (unique, 0x3200, 8) , (const, 0xff, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(unique, 0x10000132, 1) COPY (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x42, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x42, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3c, 4)]
[(stack, 0xfffffffffffffec4, 4) INDIRECT (register, 0x0, 4) , (const, 0x42, 4), (register, 0x0, 4) CALL (ram, 0x1cc7d0, 8)]
[(stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x42, 4), (stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x3c, 4), (stack, 0xffffffffffffffc7, 1) COPY (const, 0x0, 1)]
[(register, 0x0, 4) CALL (ram, 0x1cc7f0, 8)]
[ ---  BRANCH (ram, 0x233e68, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000018d, 8) , (const, 0x233e71, 8), (unique, 0x1000018d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5c, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x5c, 4), (stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x5b, 4), (stack, 0xfffffffffffffec4, 4) MULTIEQUAL (stack, 0xfffffffffffffec4, 4) , (stack, 0xfffffffffffffec4, 4) , (stack, 0xfffffffffffffec4, 4)]
[(stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x5c, 4), (stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x5b, 4), (stack, 0xffffffffffffffc7, 1) MULTIEQUAL (stack, 0xffffffffffffffc7, 1) , (stack, 0xffffffffffffffc7, 1) , (stack, 0xffffffffffffffc7, 1)]
[ ---  CBRANCH (ram, 0x233e10, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x1000012f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0x100, 4), (register, 0x0, 4) CALL (ram, 0x1cc800, 8) , (const, 0x0, 4) , (const, 0x0, 8), (unique, 0x1000012f, 1) MULTIEQUAL (unique, 0x10000132, 1) , (unique, 0x10000131, 1) , (unique, 0x10000131, 1)]
[(register, 0x88, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) INT_AND (unique, 0x10000199, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000199, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000156, 8) , (const, 0x1, 8), (unique, 0x10000156, 8) INT_ADD (unique, 0x100000b6, 8) , (const, 0xf, 8), (unique, 0x100000b6, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000195, 4), (unique, 0x10000195, 4) CAST (register, 0x0, 4)]
[(unique, 0x1000016d, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x100000b6, 8) , (const, 0x1, 8), (unique, 0x100000b6, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1e, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000195, 4), (unique, 0x10000195, 4) CAST (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ad, 8) , (const, 0x233e8c, 8), (unique, 0x100001ad, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x9c, 4)]
[(stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x9c, 4), (stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x9b, 4)]
[(stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x9c, 4), (stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x9b, 4)]
[(unique, 0x10000165, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x233e2e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001b5, 8), (unique, 0x100001b5, 8) CALL (ram, 0x11f8a0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_LEFT (register, 0x38, 8) , (const, 0x2, 4), (register, 0x38, 8) INT_SEXT (unique, 0x100001a9, 4), (unique, 0x100001a9, 4) CAST (register, 0x0, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001bd, 8) , (const, 0x233e38, 8), (unique, 0x100001bd, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000165, 8) , (unique, 0x1000016d, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc9, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc9, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0xc9, 4), (stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0xc8, 4), (stack, 0xffffffffffffffc7, 1) MULTIEQUAL (stack, 0xffffffffffffffc7, 1) , (stack, 0xffffffffffffffc7, 1)]
[(unique, 0x10000161, 4) COPY (stack, 0xfffffffffffffec4, 4), (stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0xc9, 4), (stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0xc8, 4), (stack, 0xfffffffffffffec4, 4) MULTIEQUAL (stack, 0xfffffffffffffec4, 4) , (stack, 0xfffffffffffffec4, 4)]
[ ---  CBRANCH (ram, 0x233ea8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1cc800, 8) , (register, 0x0, 4) , (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x88, 8)]
[(unique, 0x10000185, 4) COPY (register, 0x8, 4), (register, 0x8, 4) COPY (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x233eb9, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (register, 0x0, 4) , (const, 0x11, 4)]
[(unique, 0x10000189, 4) COPY (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c5, 8) , (const, 0x233ec7, 8), (unique, 0x100001c5, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x12b, 4)]
[(stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x12b, 4), (stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x12a, 4)]
[(stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x12b, 4), (stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x12a, 4)]
[(register, 0x0, 8) CALL (ram, 0x233b80, 8) , (unique, 0x3200, 8) , (unique, 0x10000161, 4) , (register, 0x0, 4) , (register, 0x8, 4) , (register, 0xb0, 8), (register, 0x8, 4) MULTIEQUAL (unique, 0x10000185, 4) , (unique, 0x10000189, 4)]
[ ---  CBRANCH (ram, 0x233ed7, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (const, 0x100, 4)]
[ ---  CBRANCH (ram, 0x233e96, 1) , (unique, 0x10000160, 1), (unique, 0x10000160, 1) BOOL_NEGATE (unique, 0x1000012f, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001cd, 8) , (const, 0x233edf, 8), (unique, 0x100001cd, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x146, 4), (stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x145, 4)]
[(stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x146, 4), (stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x145, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0xb0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x146, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(unique, 0x1000017d, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x233f05, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x16, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001d5, 8), (unique, 0x100001d5, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x10000131, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x233ef8, 1) , (unique, 0x1000012e, 1), (unique, 0x1000012e, 1) CAST (unique, 0x100001dd, 1), (unique, 0x100001dd, 1) INT_OR (unique, 0xc900, 1) , (unique, 0x1000012f, 1), (unique, 0xc900, 1) INT_LESS (const, 0xff, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001de, 8) , (const, 0x233f00, 8), (unique, 0x100001de, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x10a, 4)]
[(stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x10a, 4), (stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x109, 4)]
[(stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x10a, 4), (stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x109, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x233e68, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001e6, 8) , (unique, 0x10000136, 8), (unique, 0x100001e6, 8) CAST (register, 0x20, 8), (unique, 0x10000136, 8) PTRSUB (const, 0x0, 8) , (const, 0x233f0a, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000175, 8) , (unique, 0x1000017d, 8)]
[(stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x10e, 4), (stack, 0xfffffffffffffec4, 4) INDIRECT (stack, 0xfffffffffffffec4, 4) , (const, 0x10d, 4), (stack, 0xfffffffffffffec4, 4) MULTIEQUAL (stack, 0xfffffffffffffec4, 4) , (stack, 0xfffffffffffffec4, 4)]
[(stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x10e, 4), (stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x10d, 4), (stack, 0xffffffffffffffc7, 1) MULTIEQUAL (stack, 0xffffffffffffffc7, 1) , (stack, 0xffffffffffffffc7, 1)]
[ ---  CALL (ram, 0x136eb0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x10e, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x1, 4)]
