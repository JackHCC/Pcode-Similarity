[(register, 0xb0, 8) PTRSUB (const, 0x0, 8) , (const, 0x2af0a0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002bf, 8), (unique, 0x100002bf, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x182331, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x20, 4)]
[(register, 0xb0, 8) PTRSUB (const, 0x0, 8) , (const, 0x2af060, 8)]
[ ---  CBRANCH (ram, 0x182331, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x30, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(unique, 0x1000002d, 16) INT_ADD (unique, 0x100001d7, 16) , (unique, 0x10000045, 12), (unique, 0x100001d7, 16) INT_LEFT (unique, 0x100001c7, 16) , (const, 0x60, 16), (unique, 0x100001c7, 16) INT_SEXT (register, 0x30, 4), (unique, 0x10000045, 12) INT_ADD (unique, 0x100001bb, 12) , (unique, 0x1000003d, 8), (unique, 0x100001bb, 12) INT_LEFT (unique, 0x100001af, 12) , (const, 0x40, 12), (unique, 0x100001af, 12) INT_SEXT (register, 0x30, 4), (unique, 0x1000003d, 8) INT_ADD (unique, 0x100001a7, 8) , (register, 0x30, 4), (unique, 0x100001a7, 8) INT_LEFT (unique, 0x1000019f, 8) , (const, 0x20, 8), (unique, 0x1000019f, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000051, 16) INT_ADD (unique, 0x1000021f, 16) , (unique, 0x10000069, 12), (unique, 0x1000021f, 16) INT_LEFT (unique, 0x1000020f, 16) , (const, 0x60, 16), (unique, 0x1000020f, 16) INT_SEXT (register, 0x30, 4), (unique, 0x10000069, 12) INT_ADD (unique, 0x10000203, 12) , (unique, 0x10000061, 8), (unique, 0x10000203, 12) INT_LEFT (unique, 0x100001f7, 12) , (const, 0x40, 12), (unique, 0x100001f7, 12) INT_SEXT (register, 0x30, 4), (unique, 0x10000061, 8) INT_ADD (unique, 0x100001ef, 8) , (register, 0x30, 4), (unique, 0x100001ef, 8) INT_LEFT (unique, 0x100001e7, 8) , (const, 0x20, 8), (unique, 0x100001e7, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000075, 16) INT_ADD (unique, 0x10000267, 16) , (unique, 0x1000008d, 12), (unique, 0x10000267, 16) INT_LEFT (unique, 0x10000257, 16) , (const, 0x60, 16), (unique, 0x10000257, 16) INT_SEXT (register, 0x30, 4), (unique, 0x1000008d, 12) INT_ADD (unique, 0x1000024b, 12) , (unique, 0x10000085, 8), (unique, 0x1000024b, 12) INT_LEFT (unique, 0x1000023f, 12) , (const, 0x40, 12), (unique, 0x1000023f, 12) INT_SEXT (register, 0x30, 4), (unique, 0x10000085, 8) INT_ADD (unique, 0x10000237, 8) , (register, 0x30, 4), (unique, 0x10000237, 8) INT_LEFT (unique, 0x1000022f, 8) , (const, 0x20, 8), (unique, 0x1000022f, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000099, 16) INT_ADD (unique, 0x100002af, 16) , (unique, 0x100000b1, 12), (unique, 0x100002af, 16) INT_LEFT (unique, 0x1000029f, 16) , (const, 0x60, 16), (unique, 0x1000029f, 16) INT_SEXT (register, 0x30, 4), (unique, 0x100000b1, 12) INT_ADD (unique, 0x10000293, 12) , (unique, 0x100000a9, 8), (unique, 0x10000293, 12) INT_LEFT (unique, 0x10000287, 12) , (const, 0x40, 12), (unique, 0x10000287, 12) INT_SEXT (register, 0x30, 4), (unique, 0x100000a9, 8) INT_ADD (unique, 0x1000027f, 8) , (register, 0x30, 4), (unique, 0x1000027f, 8) INT_LEFT (unique, 0x10000277, 8) , (const, 0x20, 8), (unique, 0x10000277, 8) INT_SEXT (register, 0x30, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (unique, 0x1000002d, 16)]
[(stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16) , (unique, 0x10000051, 16)]
[(stack, 0xffffffffffffff88, 16) MULTIEQUAL (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16) , (unique, 0x10000075, 16)]
[(stack, 0xffffffffffffff78, 16) MULTIEQUAL (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16) , (unique, 0x10000099, 16)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (unique, 0x3800, 8)]
[ ---  CBRANCH (ram, 0x1823a8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x100002c7, 4) , (const, 0x10, 4), (unique, 0x100002c7, 4) CAST (register, 0x10, 4)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 4) INT_AND (register, 0x10, 4) , (const, 0xf, 4)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x182382, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16)]
[(stack, 0xffffffffffffff88, 16) MULTIEQUAL (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16)]
[(stack, 0xffffffffffffff78, 16) MULTIEQUAL (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0xa0, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x182360, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xd67, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002cb, 8), (unique, 0x100002cb, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb0, 4)]
[(stack, 0xffffffffffffff78, 16) INDIRECT (stack, 0xffffffffffffff78, 16) , (const, 0xb0, 4)]
[(stack, 0xffffffffffffff88, 16) INDIRECT (stack, 0xffffffffffffff88, 16) , (const, 0xb0, 4)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0xb0, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xb0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb0, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x182360, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbc, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff78, 16) INDIRECT (stack, 0xffffffffffffff78, 16) , (const, 0xbc, 4), (stack, 0xffffffffffffff78, 16) MULTIEQUAL (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16)]
[(stack, 0xffffffffffffff88, 16) INDIRECT (stack, 0xffffffffffffff88, 16) , (const, 0xbc, 4), (stack, 0xffffffffffffff88, 16) MULTIEQUAL (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0xbc, 4), (stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xbc, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xbc, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xb0, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002d3, 8), (unique, 0x100002d3, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1823e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xb0, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002d3, 8), (unique, 0x100002d3, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1823b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (register, 0x0, 4), (register, 0xa0, 4) INT_SUB (register, 0xa0, 4) , (const, 0x10, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16)]
[(stack, 0xffffffffffffff88, 16) MULTIEQUAL (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16)]
[(stack, 0xffffffffffffff78, 16) MULTIEQUAL (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1823e8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x100002db, 4), (unique, 0x100002db, 4) CAST (register, 0xa0, 4), (register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x18240a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002df, 8), (unique, 0x100002df, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x159, 4)]
[(stack, 0xffffffffffffff78, 16) INDIRECT (stack, 0xffffffffffffff78, 16) , (const, 0x159, 4)]
[(stack, 0xffffffffffffff88, 16) INDIRECT (stack, 0xffffffffffffff88, 16) , (const, 0x159, 4)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x159, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x159, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x159, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x1823d8, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff78, 16) INDIRECT (stack, 0xffffffffffffff78, 16) , (const, 0x11f, 4), (stack, 0xffffffffffffff78, 16) MULTIEQUAL (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16)]
[(stack, 0xffffffffffffff88, 16) INDIRECT (stack, 0xffffffffffffff88, 16) , (const, 0x11f, 4), (stack, 0xffffffffffffff88, 16) MULTIEQUAL (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x11f, 4), (stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x11f, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xb0, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002eb, 8), (unique, 0x100002eb, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100002e7, 4), (unique, 0x100002e7, 4) CAST (register, 0xa0, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffff98, 16) MULTIEQUAL (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16) , (stack, 0xffffffffffffff98, 16)]
[(stack, 0xffffffffffffff88, 16) MULTIEQUAL (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16) , (stack, 0xffffffffffffff88, 16)]
[(stack, 0xffffffffffffff78, 16) MULTIEQUAL (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16) , (stack, 0xffffffffffffff78, 16)]
[(register, 0x0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x182411, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002f3, 8), (unique, 0x100002f3, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff78, 16) INDIRECT (stack, 0xffffffffffffff78, 16) , (const, 0x154, 4)]
[(stack, 0xffffffffffffff88, 16) INDIRECT (stack, 0xffffffffffffff88, 16) , (const, 0x154, 4)]
[(stack, 0xffffffffffffff98, 16) INDIRECT (stack, 0xffffffffffffff98, 16) , (const, 0x154, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x154, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x154, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
