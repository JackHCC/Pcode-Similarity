[ ---  CBRANCH (ram, 0x219260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x10, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x346, 4)]
[(ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x346, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x346, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x346, 4)]
[(ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x346, 4)]
[(ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x346, 4)]
[(ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x346, 4)]
[(ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x346, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x346, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x346, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x346, 4)]
[ ---  CBRANCH (ram, 0x219025, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x18e1c0, 8) , (unique, 0x100001ea, 8) , (register, 0x38, 8) , (const, 0x10, 8), (unique, 0x100001ea, 8) PTRSUB (const, 0x0, 8) , (const, 0x293aa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x10, 8) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e40, 8) COPY (ram, 0x4c2e40, 8), (ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x358, 4), (ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x356, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x358, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x356, 4)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x358, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x356, 4)]
[(ram, 0x4c71f0, 8) COPY (ram, 0x4c71f0, 8), (ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x358, 4), (ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x356, 4)]
[(ram, 0x4c71f8, 8) COPY (ram, 0x4c71f8, 8), (ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x358, 4), (ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x356, 4)]
[(ram, 0x4c7200, 1) COPY (ram, 0x4c7200, 1), (ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x358, 4), (ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x356, 4)]
[(ram, 0x4c882c, 1) COPY (ram, 0x4c882c, 1), (ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x358, 4), (ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x356, 4)]
[(ram, 0x4c89c0, 4) COPY (ram, 0x4c89c0, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x358, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x356, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x2, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c882c, 1) MULTIEQUAL (ram, 0x4c882c, 1) , (ram, 0x4c882c, 1)]
[(ram, 0x4c7200, 1) MULTIEQUAL (ram, 0x4c7200, 1) , (ram, 0x4c7200, 1)]
[(ram, 0x4c71f8, 8) MULTIEQUAL (ram, 0x4c71f8, 8) , (ram, 0x4c71f8, 8)]
[(ram, 0x4c71f0, 8) MULTIEQUAL (ram, 0x4c71f0, 8) , (ram, 0x4c71f0, 8)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e40, 8) MULTIEQUAL (ram, 0x4c2e40, 8) , (ram, 0x4c2e40, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x206, 1) INT_EQUAL (ram, 0x4c89c0, 4) , (const, 0x0, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[ ---  CBRANCH (ram, 0x2192a0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (ram, 0x4c89c0, 4) , (const, 0x1, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[ ---  CBRANCH (ram, 0x219192, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x219053, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7200, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x219188, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x64, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (ram, 0x4c89c0, 4) , (const, 0x1, 4)]
[(ram, 0x4c89c0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[ ---  CBRANCH (ram, 0x219046, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c882c, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x322, 4)]
[(ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x322, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x322, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x322, 4)]
[(ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x322, 4)]
[(ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x322, 4)]
[(ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x322, 4)]
[(ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x322, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x322, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x322, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x322, 4)]
[ ---  CBRANCH (ram, 0x219212, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x23d550, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x10, 4) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x88, 8) , (stack, 0x8, 8) , (stack, 0x10, 8)]
[(ram, 0x4c2e40, 8) COPY (ram, 0x4c2e40, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8)]
[(ram, 0x4c71f0, 8) COPY (ram, 0x4c71f0, 8)]
[(ram, 0x4c71f8, 8) COPY (ram, 0x4c71f8, 8)]
[(ram, 0x4c7200, 1) COPY (ram, 0x4c7200, 1)]
[(ram, 0x4c882c, 1) COPY (ram, 0x4c882c, 1)]
[(ram, 0x4c89c0, 4) COPY (ram, 0x4c89c0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4) , (register, 0x0, 4)]
[(ram, 0x4c882c, 1) MULTIEQUAL (ram, 0x4c882c, 1) , (ram, 0x4c882c, 1) , (ram, 0x4c882c, 1)]
[(ram, 0x4c71f8, 8) MULTIEQUAL (ram, 0x4c71f8, 8) , (ram, 0x4c71f8, 8) , (ram, 0x4c71f8, 8)]
[(ram, 0x4c71f0, 8) MULTIEQUAL (ram, 0x4c71f0, 8) , (ram, 0x4c71f0, 8) , (ram, 0x4c71f0, 8)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e40, 8) MULTIEQUAL (ram, 0x4c2e40, 8) , (ram, 0x4c2e40, 8) , (ram, 0x4c2e40, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x2192b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7200, 1) , (const, 0x0, 1), (ram, 0x4c7200, 1) MULTIEQUAL (ram, 0x4c7200, 1) , (ram, 0x4c7200, 1) , (ram, 0x4c7200, 1)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c882c, 1) MULTIEQUAL (ram, 0x4c882c, 1) , (ram, 0x4c882c, 1)]
[(ram, 0x4c7200, 1) MULTIEQUAL (ram, 0x4c7200, 1) , (ram, 0x4c7200, 1)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e40, 8) MULTIEQUAL (ram, 0x4c2e40, 8) , (ram, 0x4c2e40, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000288, 8), (unique, 0x10000288, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c71f0, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c71f0, 8) , (const, 0x11, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c71f0, 8) MULTIEQUAL (ram, 0x4c71f0, 8) , (ram, 0x4c71f0, 8)]
[(unique, 0x100001cd, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c71f8, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c71f8, 8) , (const, 0x11, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c71f8, 8) MULTIEQUAL (ram, 0x4c71f8, 8) , (ram, 0x4c71f8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x24b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x24b, 4), (ram, 0x4c2e40, 8) MULTIEQUAL (ram, 0x4c2e40, 8) , (ram, 0x4c2e40, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x24b, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x24b, 4), (ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x24b, 4), (ram, 0x4c71f0, 8) MULTIEQUAL (ram, 0x4c71f0, 8) , (ram, 0x4c71f0, 8)]
[(ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x24b, 4), (ram, 0x4c71f8, 8) MULTIEQUAL (ram, 0x4c71f8, 8) , (ram, 0x4c71f8, 8)]
[(ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x24b, 4), (ram, 0x4c7200, 1) MULTIEQUAL (ram, 0x4c7200, 1) , (ram, 0x4c7200, 1)]
[(ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x24b, 4), (ram, 0x4c882c, 1) MULTIEQUAL (ram, 0x4c882c, 1) , (ram, 0x4c882c, 1)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x24b, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x24b, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x24b, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x21932e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22aa10, 8) , (unique, 0x3800, 8) , (unique, 0x100001e2, 8) , (const, 0x0, 8), (unique, 0x100001e2, 8) COPY (const, 0x28ecde, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x28a, 4)]
[(ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x28a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x28a, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x28a, 4)]
[(ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x28a, 4)]
[(ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x28a, 4)]
[(ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x28a, 4)]
[(ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x28a, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x28a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x28a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x28a, 4)]
[ ---  CBRANCH (ram, 0x219394, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x228080, 8) , (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002a0, 8), (unique, 0x100002a0, 8) INT_ADD (unique, 0x10000290, 8) , (unique, 0x10000298, 8), (unique, 0x10000298, 8) CAST (ram, 0x4c2fe8, 8), (unique, 0x10000290, 8) CAST (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x10, 8) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e40, 8) COPY (ram, 0x4c2e40, 8), (ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x2f2, 4), (ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x2ed, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2f2, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ed, 4)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2f2, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2ed, 4)]
[(ram, 0x4c71f0, 8) COPY (ram, 0x4c71f0, 8), (ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x2f2, 4), (ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x2ed, 4)]
[(ram, 0x4c71f8, 8) COPY (ram, 0x4c71f8, 8), (ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x2f2, 4), (ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x2ed, 4)]
[(ram, 0x4c7200, 1) COPY (ram, 0x4c7200, 1), (ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x2f2, 4), (ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x2ed, 4)]
[(ram, 0x4c882c, 1) COPY (ram, 0x4c882c, 1), (ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x2f2, 4), (ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x2ed, 4)]
[(ram, 0x4c89c0, 4) COPY (ram, 0x4c89c0, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x2f2, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x2ed, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002b8, 8), (unique, 0x100002b8, 8) INT_ADD (unique, 0x100002a8, 8) , (unique, 0x100002b0, 8), (unique, 0x100002b0, 8) CAST (ram, 0x4c2e78, 8), (unique, 0x100002a8, 8) CAST (register, 0x110, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2f2, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ed, 4)]
[ ---  CBRANCH (ram, 0x21938d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) CAST (ram, 0x4c2e40, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ea, 4)]
[(ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x2ea, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ea, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2ea, 4)]
[(ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x2ea, 4)]
[(ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x2ea, 4)]
[(ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x2ea, 4)]
[(ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x2ea, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x2ea, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2ea, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ea, 4)]
[ ---  CALL (ram, 0x227b40, 8)]
[ ---  BRANCH (ram, 0x219352, 1)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c882c, 1) MULTIEQUAL (ram, 0x4c882c, 1) , (ram, 0x4c882c, 1)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e40, 8) MULTIEQUAL (ram, 0x4c2e40, 8) , (ram, 0x4c2e40, 8)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (unique, 0x100002c8, 8) , (unique, 0xbd80, 8), (unique, 0x100002c8, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  BRANCH (ram, 0x2192f2, 1)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c882c, 1) MULTIEQUAL (ram, 0x4c882c, 1) , (ram, 0x4c882c, 1)]
[(ram, 0x4c71f8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c71f0, 8) MULTIEQUAL (ram, 0x4c71f0, 8) , (register, 0x0, 8)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e40, 8) MULTIEQUAL (ram, 0x4c2e40, 8) , (ram, 0x4c2e40, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7200, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x219090, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c882c, 1) MULTIEQUAL (ram, 0x4c882c, 1) , (ram, 0x4c882c, 1)]
[(ram, 0x4c7200, 1) MULTIEQUAL (ram, 0x4c7200, 1) , (ram, 0x4c7200, 1)]
[(ram, 0x4c71f8, 8) MULTIEQUAL (ram, 0x4c71f8, 8) , (ram, 0x4c71f8, 8)]
[(ram, 0x4c71f0, 8) MULTIEQUAL (ram, 0x4c71f0, 8) , (ram, 0x4c71f0, 8)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e40, 8) MULTIEQUAL (ram, 0x4c2e40, 8) , (ram, 0x4c2e40, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000280, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x219221, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4), (register, 0xb8, 4) MULTIEQUAL (unique, 0x100001cd, 4) , (register, 0x0, 4)]
[(register, 0xa8, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x21e, 4)]
[(ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x238, 4), (ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x21e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x238, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x21e, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x238, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x21e, 4)]
[(ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x238, 4), (ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x21e, 4)]
[(ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x238, 4), (ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x21e, 4)]
[(ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x238, 4), (ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x21e, 4)]
[(ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x238, 4), (ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x21e, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x238, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x21e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x10, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000148, 4) , (const, 0xffffffff, 4), (unique, 0x10000148, 4) INT_MULT (unique, 0x10000150, 4) , (const, 0x4, 4), (unique, 0x10000150, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002e0, 8), (unique, 0x100002e0, 8) INT_ADD (unique, 0x100002d0, 8) , (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) CAST (ram, 0x4c2e78, 8), (unique, 0x100002d0, 8) CAST (register, 0x110, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x21e, 4)]
[ ---  BRANCH (ram, 0x2191f7, 1)]
[(stack, 0xffffffffffffffb0, 8) COPY (unique, 0x10000280, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0xb8, 8) PTRADD (ram, 0x4c2e78, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  BRANCH (ram, 0x2190f6, 1)]
[ ---  CALL (ram, 0x242d60, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x105, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xec, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x105, 4), (ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0xec, 4), (ram, 0x4c2e40, 8) MULTIEQUAL (ram, 0x4c2e40, 8) , (ram, 0x4c2e40, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x105, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xec, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x105, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0xec, 4), (ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x105, 4), (ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0xec, 4), (ram, 0x4c71f0, 8) MULTIEQUAL (ram, 0x4c71f0, 8) , (ram, 0x4c71f0, 8)]
[(ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x105, 4), (ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0xec, 4), (ram, 0x4c71f8, 8) MULTIEQUAL (ram, 0x4c71f8, 8) , (ram, 0x4c71f8, 8)]
[(ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x105, 4), (ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0xec, 4), (ram, 0x4c7200, 1) MULTIEQUAL (ram, 0x4c7200, 1) , (ram, 0x4c7200, 1)]
[(ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x105, 4), (ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0xec, 4), (ram, 0x4c882c, 1) MULTIEQUAL (ram, 0x4c882c, 1) , (ram, 0x4c882c, 1)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x105, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0xec, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x105, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xec, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x105, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xec, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2190d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xfffffffe, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x10, 4) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x88, 8) , (register, 0xb8, 8) , (stack, 0x10, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xec, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x2190d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (stack, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2190d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x22, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) INT_ADD (unique, 0x100002e8, 8) , (unique, 0x100002f0, 8), (unique, 0x100002f0, 8) CAST (unique, 0x10000280, 8), (unique, 0x100002e8, 8) CAST (register, 0x110, 8)]
[(ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x13b, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x13b, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x13b, 4)]
[(ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x13b, 4)]
[(ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x13b, 4)]
[(ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x13b, 4)]
[(ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x13b, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x13b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000310, 8), (unique, 0x10000310, 8) INT_ADD (unique, 0x10000300, 8) , (unique, 0x10000308, 8), (unique, 0x10000308, 8) CAST (unique, 0x10000280, 8), (unique, 0x10000300, 8) CAST (register, 0x110, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x1cc, 4)]
[(ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x1cc, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x1cc, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1cc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cc, 4)]
[ ---  CBRANCH (ram, 0x2191d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229330, 8) , (unique, 0x3800, 8) , (unique, 0x100001da, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (register, 0x0, 4) , (const, 0x0, 8), (unique, 0x100001da, 8) COPY (const, 0x28ecde, 8)]
[ ---  CBRANCH (ram, 0x219300, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x227ba0, 8) , (register, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x20e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x20a, 4)]
[(ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x20e, 4), (ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x20a, 4), (ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x206, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x20e, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x20a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x206, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x20e, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x20a, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x206, 4)]
[(ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x20e, 4), (ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x20a, 4), (ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x206, 4)]
[(ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x20e, 4), (ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x20a, 4), (ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x206, 4)]
[(ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x20e, 4), (ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x20a, 4), (ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x206, 4)]
[(ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x20e, 4), (ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x20a, 4), (ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x206, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x20e, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x20a, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x206, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x20a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20a, 4)]
[ ---  CALL (ram, 0x227f80, 8) , (register, 0x8, 8)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x1e6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e6, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x1e6, 4)]
[(ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x1e6, 4)]
[(ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x1e6, 4)]
[(ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x1e6, 4)]
[(ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x1e6, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x1e6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x219389, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x219315, 1)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c882c, 1) MULTIEQUAL (ram, 0x4c882c, 1) , (ram, 0x4c882c, 1)]
[(ram, 0x4c7200, 1) MULTIEQUAL (ram, 0x4c7200, 1) , (ram, 0x4c7200, 1)]
[(ram, 0x4c71f8, 8) MULTIEQUAL (ram, 0x4c71f8, 8) , (ram, 0x4c71f8, 8)]
[(ram, 0x4c71f0, 8) MULTIEQUAL (ram, 0x4c71f0, 8) , (ram, 0x4c71f0, 8)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e40, 8) MULTIEQUAL (ram, 0x4c2e40, 8) , (ram, 0x4c2e40, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xa8, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000328, 8), (unique, 0x10000328, 8) INT_ADD (unique, 0x10000318, 8) , (unique, 0x10000320, 8), (unique, 0x10000320, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10000318, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (register, 0x0, 8)]
[(unique, 0x1000023a, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000242, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xa8, 4)]
[(unique, 0x10000246, 8) MULTIEQUAL (unique, 0x10000280, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x1000024e, 8) MULTIEQUAL (ram, 0x4c2e40, 8) , (ram, 0x4c2e40, 8)]
[(unique, 0x10000256, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x1000025e, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(unique, 0x10000266, 8) MULTIEQUAL (ram, 0x4c71f0, 8) , (ram, 0x4c71f0, 8)]
[(unique, 0x1000026e, 8) MULTIEQUAL (ram, 0x4c71f8, 8) , (ram, 0x4c71f8, 8)]
[(unique, 0x10000276, 1) MULTIEQUAL (ram, 0x4c7200, 1) , (ram, 0x4c7200, 1)]
[(unique, 0x10000277, 1) MULTIEQUAL (ram, 0x4c882c, 1) , (ram, 0x4c882c, 1)]
[(unique, 0x10000278, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[ ---  CBRANCH (ram, 0x219208, 1) , (unique, 0x10000239, 1), (unique, 0x10000239, 1) INT_EQUAL (unique, 0x10000235, 4) , (const, 0x22, 4), (unique, 0x10000235, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x10, 4) COPY (const, 0x16, 4)]
[ ---  CBRANCH (ram, 0x219315, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000242, 4) , (const, 0xfffffffe, 4)]
[ ---  CBRANCH (ram, 0x21916f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000242, 4) , (const, 0xfffffffe, 4)]
[(ram, 0x4c2e40, 8) COPY (unique, 0x1000024e, 8)]
[(ram, 0x4c2e78, 8) COPY (unique, 0x10000256, 8)]
[(ram, 0x4c2fe8, 8) COPY (unique, 0x1000025e, 8)]
[(ram, 0x4c71f0, 8) COPY (unique, 0x10000266, 8)]
[(ram, 0x4c71f8, 8) COPY (unique, 0x1000026e, 8)]
[(ram, 0x4c7200, 1) COPY (unique, 0x10000276, 1)]
[(ram, 0x4c882c, 1) COPY (unique, 0x10000277, 1)]
[(ram, 0x4c89c0, 4) COPY (unique, 0x10000278, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x10000235, 4)]
[ ---  CBRANCH (ram, 0x219212, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (stack, 0x10, 8)]
[(ram, 0x4c2e40, 8) COPY (unique, 0x1000024e, 8)]
[(ram, 0x4c2e78, 8) COPY (unique, 0x10000256, 8)]
[(ram, 0x4c2fe8, 8) COPY (unique, 0x1000025e, 8)]
[(ram, 0x4c71f0, 8) COPY (unique, 0x10000266, 8)]
[(ram, 0x4c71f8, 8) COPY (unique, 0x1000026e, 8)]
[(ram, 0x4c7200, 1) COPY (unique, 0x10000276, 1)]
[(ram, 0x4c882c, 1) COPY (unique, 0x10000277, 1)]
[(ram, 0x4c89c0, 4) COPY (unique, 0x10000278, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x10000235, 4)]
[(register, 0x10, 4) COPY (const, 0xb, 4)]
[ ---  BRANCH (ram, 0x219315, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (register, 0x10, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000340, 8), (unique, 0x10000340, 8) INT_ADD (unique, 0x10000330, 8) , (unique, 0x10000338, 8), (unique, 0x10000338, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10000330, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (unique, 0x1000023a, 8) , (unique, 0x1000023a, 8) , (register, 0x110, 8) , (register, 0x110, 8), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000246, 8) , (unique, 0x10000246, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c2e40, 8) COPY (ram, 0x4c2e40, 8), (ram, 0x4c2e40, 8) INDIRECT (ram, 0x4c2e40, 8) , (const, 0x170, 4), (ram, 0x4c2e40, 8) MULTIEQUAL (unique, 0x1000024e, 8) , (unique, 0x1000024e, 8) , (ram, 0x4c2e40, 8) , (ram, 0x4c2e40, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x170, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x10000256, 8) , (unique, 0x10000256, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x170, 4), (ram, 0x4c2fe8, 8) MULTIEQUAL (unique, 0x1000025e, 8) , (unique, 0x1000025e, 8) , (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c71f0, 8) COPY (ram, 0x4c71f0, 8), (ram, 0x4c71f0, 8) INDIRECT (ram, 0x4c71f0, 8) , (const, 0x170, 4), (ram, 0x4c71f0, 8) MULTIEQUAL (unique, 0x10000266, 8) , (unique, 0x10000266, 8) , (ram, 0x4c71f0, 8) , (ram, 0x4c71f0, 8)]
[(ram, 0x4c71f8, 8) COPY (ram, 0x4c71f8, 8), (ram, 0x4c71f8, 8) INDIRECT (ram, 0x4c71f8, 8) , (const, 0x170, 4), (ram, 0x4c71f8, 8) MULTIEQUAL (unique, 0x1000026e, 8) , (unique, 0x1000026e, 8) , (ram, 0x4c71f8, 8) , (ram, 0x4c71f8, 8)]
[(ram, 0x4c7200, 1) COPY (ram, 0x4c7200, 1), (ram, 0x4c7200, 1) INDIRECT (ram, 0x4c7200, 1) , (const, 0x170, 4), (ram, 0x4c7200, 1) MULTIEQUAL (unique, 0x10000276, 1) , (unique, 0x10000276, 1) , (ram, 0x4c7200, 1) , (ram, 0x4c7200, 1)]
[(ram, 0x4c882c, 1) COPY (ram, 0x4c882c, 1), (ram, 0x4c882c, 1) INDIRECT (ram, 0x4c882c, 1) , (const, 0x170, 4), (ram, 0x4c882c, 1) MULTIEQUAL (unique, 0x10000277, 1) , (unique, 0x10000277, 1) , (ram, 0x4c882c, 1) , (ram, 0x4c882c, 1)]
[(ram, 0x4c89c0, 4) COPY (ram, 0x4c89c0, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x170, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (unique, 0x10000278, 4) , (unique, 0x10000278, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
