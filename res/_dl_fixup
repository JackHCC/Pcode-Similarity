[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000f5, 8), (unique, 0x100000f5, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000115, 8), (unique, 0x10000115, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x18, 8), (register, 0x8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x20, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000010d, 8), (unique, 0x1000010d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000105, 8), (unique, 0x10000105, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000fd, 8), (unique, 0x100000fd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1f, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)]
[(register, 0x18, 8) CAST (unique, 0x1000011d, 8), (unique, 0x1000011d, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000105, 8), (unique, 0x10000105, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000fd, 8), (unique, 0x100000fd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1f, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x48c60e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x7, 4), (register, 0x30, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000105, 8), (unique, 0x10000105, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000fd, 8), (unique, 0x100000fd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1f, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0x3400, 8) , (const, 0x1ce, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000095, 8) , (unique, 0x1000008d, 8) , (const, 0x50, 4) , (unique, 0x1000009d, 8), (unique, 0x1000009d, 8) COPY (const, 0x4b5168, 8), (unique, 0x10000095, 8) COPY (const, 0x4b5130, 8), (unique, 0x1000008d, 8) COPY (const, 0x4b511c, 8)]
[(ram, 0x4c87d8, 4) COPY (ram, 0x4c87d8, 4), (ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x1ce, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x48c5b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000012d, 8), (unique, 0x1000012d, 8) INT_ADD (unique, 0x10000125, 8) , (const, 0x5, 8), (unique, 0x10000125, 8) CAST (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x48c5be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0xfff1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000013d, 8), (unique, 0x1000013d, 8) INT_ADD (unique, 0x10000135, 8) , (const, 0x6, 8), (unique, 0x10000135, 8) CAST (unique, 0x3400, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48c50d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x3a, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48c50d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000155, 8), (unique, 0x10000155, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x5d, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7fff, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000014d, 8), (unique, 0x1000014d, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000145, 8), (unique, 0x10000145, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x48c5f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000015d, 8), (unique, 0x1000015d, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x1b3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x1, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000165, 8), (unique, 0x10000165, 8) INT_ADD (register, 0x110, 8) , (const, 0x1c, 8)]
[ ---  BRANCH (ram, 0x48c522, 1)]
[(ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0xe3, 4), (ram, 0x4c87d8, 4) MULTIEQUAL (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0x3400, 8) , (const, 0xe3, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000016d, 8), (unique, 0x1000016d, 8) CALL (ram, 0x481760, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (unique, 0xbd80, 8) , (register, 0x80, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x72, 8) , (const, 0x8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x48c5c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000175, 8), (unique, 0x10000175, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe3, 4)]
[(ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x188, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x0, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) INT_ADD (register, 0x110, 8) , (const, 0x1c, 8)]
[ ---  CBRANCH (ram, 0x48c558, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) INT_ADD (register, 0x110, 8) , (const, 0x1c, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x48c558, 1)]
[(ram, 0x4c87d8, 4) MULTIEQUAL (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48c583, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48c5a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0xfff1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000018d, 8), (unique, 0x1000018d, 8) INT_ADD (unique, 0x10000185, 8) , (const, 0x6, 8), (unique, 0x10000185, 8) CAST (stack, 0xfffffffffffffff0, 8)]
[ ---  CBRANCH (ram, 0x48c5a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x48c573, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(ram, 0x4c87d8, 4) MULTIEQUAL (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000019d, 8), (unique, 0x1000019d, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000195, 8), (unique, 0x10000195, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffff0, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x48c5a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0xa, 1), (register, 0x10, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xf, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100001a5, 8), (unique, 0x100001a5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffff0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x16d, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x16d, 4)]
[(register, 0x0, 8) CAST (unique, 0x100001ad, 8), (unique, 0x100001ad, 8) CALLIND (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x48c583, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48c590, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87d8, 4) , (const, 0x0, 4), (ram, 0x4c87d8, 4) MULTIEQUAL (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4)]
[(ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x15c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (register, 0x0, 8)]
[(ram, 0x4c87d8, 4) COPY (ram, 0x4c87d8, 4), (ram, 0x4c87d8, 4) MULTIEQUAL (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4)]
[ ---  RETURN (const, 0x0, 8)]
