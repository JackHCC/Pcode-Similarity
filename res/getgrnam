[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000166, 8), (unique, 0x10000166, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1e1169, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4edde8, 4) , (const, 0x0, 4)]
[(ram, 0x4edde8, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4edde8, 4) , (const, 0x0, 4)]
[(ram, 0x4edde8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1e118c, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x119, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x119, 4)]
[(ram, 0x4ec8a8, 8) INDIRECT (ram, 0x4ec8a8, 8) , (const, 0x119, 4)]
[(ram, 0x4edde0, 8) INDIRECT (ram, 0x4edde0, 8) , (const, 0x119, 4)]
[(ram, 0x4edde8, 4) INDIRECT (ram, 0x4edde8, 4) , (const, 0x119, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x119, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x119, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x119, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000102, 8), (unique, 0x10000102, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edde8, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4edde8, 4) MULTIEQUAL (ram, 0x4edde8, 4) , (ram, 0x4edde8, 4) , (ram, 0x4edde8, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(unique, 0x1000012a, 8) COPY (ram, 0x4edde0, 8), (ram, 0x4edde0, 8) MULTIEQUAL (ram, 0x4edde0, 8) , (ram, 0x4edde0, 8) , (ram, 0x4edde0, 8)]
[(unique, 0x10000132, 8) COPY (ram, 0x4ec8a8, 8), (ram, 0x4ec8a8, 8) MULTIEQUAL (ram, 0x4ec8a8, 8) , (ram, 0x4ec8a8, 8) , (ram, 0x4ec8a8, 8)]
[ ---  CBRANCH (ram, 0x1e1290, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ec8a8, 8) , (const, 0x0, 8), (ram, 0x4ec8a8, 8) MULTIEQUAL (ram, 0x4ec8a8, 8) , (ram, 0x4ec8a8, 8) , (ram, 0x4ec8a8, 8)]
[(register, 0x18, 8) COPY (const, 0x400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xfe, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xfe, 4)]
[(ram, 0x4ec8a8, 8) INDIRECT (ram, 0x4ec8a8, 8) , (const, 0xfe, 4)]
[(ram, 0x4edde0, 8) INDIRECT (ram, 0x4edde0, 8) , (const, 0xfe, 4), (ram, 0x4edde0, 8) COPY (const, 0x400, 8)]
[(ram, 0x4edde8, 4) INDIRECT (ram, 0x4edde8, 4) , (const, 0xfe, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xfe, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xfe, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xfe, 4)]
[(unique, 0x1000013a, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000016e, 8), (unique, 0x1000016e, 8) CALL (ram, 0x1212c0, 8) , (const, 0x400, 8)]
[ ---  CBRANCH (ram, 0x1e11a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000016e, 8), (unique, 0x1000016e, 8) CALL (ram, 0x1212c0, 8) , (const, 0x400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5c, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4edde0, 8) INDIRECT (ram, 0x4edde0, 8) , (const, 0x5c, 4), (ram, 0x4edde0, 8) MULTIEQUAL (ram, 0x4edde0, 8) , (ram, 0x4edde0, 8) , (ram, 0x4edde0, 8)]
[(ram, 0x4edde8, 4) INDIRECT (ram, 0x4edde8, 4) , (const, 0x5c, 4), (ram, 0x4edde8, 4) MULTIEQUAL (ram, 0x4edde8, 4) , (ram, 0x4edde8, 4) , (ram, 0x4edde8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5c, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x5c, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x5c, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x10000122, 8) COPY (ram, 0x4ec8a8, 8), (ram, 0x4ec8a8, 8) INDIRECT (ram, 0x4ec8a8, 8) , (const, 0x5c, 4), (ram, 0x4ec8a8, 8) COPY (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) MULTIEQUAL (unique, 0x10000132, 8) , (unique, 0x1000013a, 8) , (unique, 0x10000142, 8)]
[ ---  CBRANCH (ram, 0x1e1280, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x1e1cd0, 8) , (register, 0x38, 8) , (unique, 0x100000f2, 8) , (ram, 0x4ec8a8, 8) , (register, 0x18, 8) , (register, 0x20, 8), (unique, 0x100000f2, 8) CAST (unique, 0x10000176, 8), (unique, 0x10000176, 8) PTRSUB (const, 0x0, 8) , (const, 0x4eddc0, 8), (ram, 0x4ec8a8, 8) COPY (unique, 0x1000014a, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000012a, 8) , (register, 0x18, 8) , (unique, 0x100000e3, 8), (unique, 0x1000014a, 8) MULTIEQUAL (unique, 0x10000132, 8) , (unique, 0x1000013a, 8) , (unique, 0x10000142, 8)]
[ ---  CBRANCH (ram, 0x1e1226, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ec8a8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x72, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x72, 4)]
[(ram, 0x4ec8a8, 8) INDIRECT (ram, 0x4ec8a8, 8) , (const, 0x72, 4)]
[(ram, 0x4edde0, 8) INDIRECT (unique, 0x10000152, 8) , (const, 0x72, 4), (unique, 0x10000152, 8) COPY (unique, 0x100000e3, 8), (unique, 0x100000e3, 8) INT_MULT (ram, 0x4edde0, 8) , (const, 0x2, 8)]
[(ram, 0x4edde8, 4) INDIRECT (ram, 0x4edde8, 4) , (const, 0x72, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x72, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x72, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x72, 4)]
[(unique, 0x10000142, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000017e, 8), (unique, 0x1000017e, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec8a8, 8) , (unique, 0x100000e3, 8), (unique, 0x100000e3, 8) INT_MULT (ram, 0x4edde0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1e11b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000017e, 8), (unique, 0x1000017e, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec8a8, 8) , (unique, 0x100000e3, 8), (unique, 0x100000e3, 8) INT_MULT (ram, 0x4edde0, 8) , (const, 0x2, 8)]
[(ram, 0x4ec8a8, 8) INDIRECT (ram, 0x4ec8a8, 8) , (const, 0x82, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x82, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0x10000122, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x87, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x82, 4)]
[(ram, 0x4ec8a8, 8) INDIRECT (ram, 0x4ec8a8, 8) , (const, 0x87, 4), (ram, 0x4ec8a8, 8) COPY (const, 0x0, 8)]
[(ram, 0x4edde0, 8) INDIRECT (ram, 0x4edde0, 8) , (const, 0x87, 4), (ram, 0x4edde0, 8) INDIRECT (ram, 0x4edde0, 8) , (const, 0x82, 4)]
[(ram, 0x4edde8, 4) INDIRECT (ram, 0x4edde8, 4) , (const, 0x87, 4), (ram, 0x4edde8, 4) INDIRECT (ram, 0x4edde8, 4) , (const, 0x82, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x87, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x82, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000186, 8) , (const, 0xc, 4), (unique, 0x10000186, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x82, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x82, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4edde8, 4) MULTIEQUAL (ram, 0x4edde8, 4) , (ram, 0x4edde8, 4) , (ram, 0x4edde8, 4)]
[(ram, 0x4edde0, 8) MULTIEQUAL (ram, 0x4edde0, 8) , (ram, 0x4edde0, 8) , (ram, 0x4edde0, 8)]
[(ram, 0x4ec8a8, 8) MULTIEQUAL (ram, 0x4ec8a8, 8) , (register, 0x0, 8) , (ram, 0x4ec8a8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4edde8, 4) MULTIEQUAL (ram, 0x4edde8, 4) , (ram, 0x4edde8, 4)]
[(ram, 0x4edde0, 8) MULTIEQUAL (ram, 0x4edde0, 8) , (ram, 0x4edde0, 8)]
[(ram, 0x4ec8a8, 8) MULTIEQUAL (ram, 0x4ec8a8, 8) , (ram, 0x4ec8a8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1e123a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000015e, 4) COPY (unique, 0x10000112, 4), (unique, 0x10000112, 4) INT_ADD (ram, 0x4edde8, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1e125c, 1) , (unique, 0x10000116, 1), (unique, 0x10000116, 1) INT_NOTEQUAL (unique, 0x10000112, 4) , (const, 0x0, 4), (unique, 0x10000112, 4) INT_ADD (ram, 0x4edde8, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd9, 4)]
[(ram, 0x4ec8a8, 8) INDIRECT (ram, 0x4ec8a8, 8) , (const, 0xd9, 4)]
[(ram, 0x4edde0, 8) INDIRECT (ram, 0x4edde0, 8) , (const, 0xd9, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xd9, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100000fa, 8), (unique, 0x100000fa, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edde8, 8)]
[(unique, 0x1000015a, 4) COPY (ram, 0x4edde8, 4), (ram, 0x4edde8, 4) INDIRECT (ram, 0x4edde8, 4) , (const, 0xd9, 4), (ram, 0x4edde8, 4) INT_ADD (ram, 0x4edde8, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4edde0, 8) MULTIEQUAL (ram, 0x4edde0, 8) , (ram, 0x4edde0, 8)]
[(ram, 0x4ec8a8, 8) MULTIEQUAL (ram, 0x4ec8a8, 8) , (ram, 0x4ec8a8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4edde8, 4) COPY (unique, 0x10000162, 4), (unique, 0x10000162, 4) MULTIEQUAL (unique, 0x1000015a, 4) , (unique, 0x1000015e, 4)]
[(register, 0x0, 8) COPY (stack, 0xffffffffffffffc8, 8), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x1e12c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xca, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xca, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xca, 4)]
[(ram, 0x4ec8a8, 8) COPY (ram, 0x4ec8a8, 8), (ram, 0x4ec8a8, 8) INDIRECT (ram, 0x4ec8a8, 8) , (const, 0xca, 4)]
[(ram, 0x4edde0, 8) COPY (ram, 0x4edde0, 8), (ram, 0x4edde0, 8) INDIRECT (ram, 0x4edde0, 8) , (const, 0xca, 4)]
[(ram, 0x4edde8, 4) COPY (ram, 0x4edde8, 4), (ram, 0x4edde8, 4) INDIRECT (ram, 0x4edde8, 4) , (const, 0xca, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xca, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ec8a8, 8) COPY (ram, 0x4ec8a8, 8)]
[(ram, 0x4edde0, 8) COPY (ram, 0x4edde0, 8)]
[(ram, 0x4edde8, 4) COPY (ram, 0x4edde8, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
