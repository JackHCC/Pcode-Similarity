[(register, 0x0, 4) CALL (ram, 0x458b50, 8) , (const, 0x2e, 4) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x458ac0, 8) , (unique, 0x1000011e, 8), (unique, 0x1000011e, 8) COPY (const, 0x49a992, 8)]
[(register, 0x0, 4) CALL (ram, 0x458b50, 8) , (const, 0x2c, 4) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x458ac0, 8) , (unique, 0x1000011e, 8), (unique, 0x1000011e, 8) COPY (const, 0x49a992, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x42, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c, 4)]
[(stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x7c, 4), (stack, 0xfffffffffffffbb0, 8) COPY (const, 0x400, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x42, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3c, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x10000168, 8) COPY (stack, 0xfffffffffffffba8, 8), (stack, 0xfffffffffffffba8, 8) INDIRECT (unique, 0x100001a0, 8) , (const, 0x7c, 4), (unique, 0x100001a0, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbb8, 8)]
[ ---  CBRANCH (ram, 0x470fb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x428f80, 8) , (unique, 0x3800, 8) , (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SRIGHT (register, 0xb0, 8) , (const, 0x2, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffba8, 8), (register, 0xb0, 8) INT_SUB (register, 0x30, 8) , (unique, 0x100001a8, 8), (unique, 0x100001a8, 8) CAST (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8f, 4)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x8f, 4)]
[(stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x8f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8f, 4)]
[ ---  CBRANCH (ram, 0x470f32, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x10000168, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b8, 8), (unique, 0x100001b8, 8) INT_SUB (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x401160, 8) , (stack, 0xfffffffffffffba8, 8) , (register, 0x38, 8) , (register, 0xb0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001c0, 8), (unique, 0x100001c0, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000126, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x10000126, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffa0, 8)]
[(unique, 0x10000180, 8) COPY (unique, 0x10000178, 8), (unique, 0x10000178, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x470efb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000180, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x470ef0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x9, 4) , (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x470f21, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x10000168, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001cc, 8), (unique, 0x100001cc, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (register, 0x8, 8) INT_SEXT (unique, 0x100001c8, 4), (unique, 0x100001c8, 4) CAST (register, 0x8, 4), (register, 0x8, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x3, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x470efb, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (unique, 0x10000168, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000170, 8) , (unique, 0x10000178, 8)]
[ ---  CBRANCH (ram, 0x470f70, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3100, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001d8, 8), (unique, 0x100001d8, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (register, 0x8, 8) INT_SEXT (unique, 0x100001d4, 4), (unique, 0x100001d4, 4) CAST (register, 0x8, 4), (register, 0x8, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x3, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x470f7d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x2c, 4), (register, 0x38, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffffd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10000198, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x470fac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x2e, 4)]
[(unique, 0x1000019c, 4) COPY (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x10000198, 4) , (unique, 0x1000019c, 4)]
[ ---  BRANCH (ram, 0x470f7f, 1)]
[(unique, 0x10000170, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x470f21, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x10000168, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(register, 0xa8, 8) CAST (unique, 0x100001f0, 8), (unique, 0x100001f0, 8) INT_ADD (unique, 0x100001e8, 8) , (register, 0x28, 8), (unique, 0x100001e8, 8) CAST (register, 0x10, 8), (register, 0x28, 8) INT_AND (register, 0x28, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x28, 8) INT_NEGATE (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0x100001e0, 8), (unique, 0x100001e0, 8) CAST (unique, 0x10000168, 8)]
[(unique, 0x10000188, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x470f41, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffba8, 8) , (unique, 0x3800, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x135, 4)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x135, 4)]
[(stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x135, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x135, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000188, 8) , (unique, 0x10000188, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x470fb5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa8, 8)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x161, 4)]
[(stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x161, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x161, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
