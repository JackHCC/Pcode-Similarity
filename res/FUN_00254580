[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000085, 8), (unique, 0x10000085, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2545b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xc, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000008d, 8), (unique, 0x1000008d, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000009d, 8), (unique, 0x1000009d, 8) INT_ADD (register, 0x38, 8) , (const, 0x40, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x80, 4)]
[(stack, 0xffffffffffffffe4, 4) INDIRECT (unique, 0xbc80, 4) , (const, 0x80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000095, 8), (unique, 0x10000095, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffe8, 4) INDIRECT (unique, 0xbc80, 4) , (const, 0x80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000095, 8), (unique, 0x10000095, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (unique, 0xbc80, 4) , (const, 0x80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000095, 8), (unique, 0x10000095, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x80, 4)]
[ ---  CBRANCH (ram, 0x25459b, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) CALL (ram, 0x2500c0, 8) , (register, 0x38, 8) , (unique, 0x100000ad, 8) , (const, 0x8, 4) , (const, 0x1, 4), (unique, 0x100000ad, 8) CAST (unique, 0x3800, 8), (register, 0x38, 8) CAST (unique, 0x100000a5, 8), (unique, 0x100000a5, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe4, 8)]
[ ---  CBRANCH (ram, 0x25459b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000052, 8) , (unique, 0xbd80, 8), (unique, 0x10000052, 8) INT_ADD (unique, 0x1000007d, 8) , (register, 0x0, 4), (unique, 0x1000007d, 8) INT_LEFT (unique, 0x10000075, 8) , (const, 0x20, 8), (unique, 0x10000075, 8) INT_SEXT (unique, 0x100000bd, 4), (unique, 0x100000bd, 4) CAST (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000b5, 8), (unique, 0x100000b5, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x74, 8), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (stack, 0xffffffffffffffe8, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (stack, 0xffffffffffffffe8, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (stack, 0xffffffffffffffe8, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (stack, 0xffffffffffffffe8, 4) , (const, 0x18, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (stack, 0xffffffffffffffe4, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (stack, 0xffffffffffffffe4, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (stack, 0xffffffffffffffe4, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (stack, 0xffffffffffffffe4, 4) , (const, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) CAST (unique, 0x100000c1, 8), (unique, 0x100000c1, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffec, 4), (unique, 0x3100, 8) CAST (unique, 0x100000c9, 8), (unique, 0x100000c9, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x3c, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x25459d, 1)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffffec, 4) MULTIEQUAL (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4)]
[(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (stack, 0xffffffffffffffe4, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffec, 4) MULTIEQUAL (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4)]
[(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (register, 0x0, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x25462b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000d1, 8), (unique, 0x100000d1, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x54, 4)]
[(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x54, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0x54, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x54, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
