[(unique, 0x100001ec, 8) COPY (ram, 0x4eae68, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000254, 8), (unique, 0x10000254, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1e6ea8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x6, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe4, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xde, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xde, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xe4, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xde, 4)]
[(unique, 0x1000022c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1e68b0, 8) , (register, 0x0, 4) , (register, 0x20, 8), (register, 0x0, 4) CALL (ram, 0x20f9a0, 8) , (register, 0x38, 4) , (unique, 0x1000025c, 8), (unique, 0x1000025c, 8) CAST (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[ ---  CBRANCH (ram, 0x1e6e60, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x30, 4) , (const, 0x7, 4)]
[ ---  CBRANCH (ram, 0x1e6e80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd8, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd8, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc6, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xd8, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xc6, 4)]
[(unique, 0x10000224, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1e65e0, 8) , (register, 0x0, 4) , (register, 0x20, 8) , (const, 0x0, 8) , (register, 0x38, 4), (register, 0x0, 4) CALL (ram, 0x20f9a0, 8) , (register, 0x38, 4) , (unique, 0x10000264, 8), (unique, 0x10000264, 8) CAST (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[ ---  CBRANCH (ram, 0x1e6e40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0xd, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xaf, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb5, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xb5, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xaf, 4)]
[(unique, 0x1000021c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1e6720, 8) , (register, 0x0, 4) , (register, 0x20, 8), (register, 0x0, 4) CALL (ram, 0x20f9a0, 8) , (register, 0x38, 4) , (unique, 0x1000026c, 8), (unique, 0x1000026c, 8) CAST (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[ ---  CBRANCH (ram, 0x1e6e80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x14, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x50, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x50, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4a, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x50, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x4a, 4)]
[(unique, 0x10000204, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1e6820, 8) , (register, 0x0, 4) , (register, 0x20, 8), (register, 0x0, 4) CALL (ram, 0x20f9a0, 8) , (register, 0x38, 4) , (unique, 0x10000274, 8), (unique, 0x10000274, 8) CAST (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1e7002, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000027c, 8) , (const, 0x9, 4), (unique, 0x1000027c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x10000214, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[ ---  BRANCHIND (register, 0x30, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xef, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xef, 4)]
[(unique, 0x10000244, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1e6e1a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fa40, 8) , (register, 0x38, 4) , (unique, 0x10000284, 8), (unique, 0x10000284, 8) CAST (register, 0x20, 8)]
[(unique, 0x1000024c, 8) COPY (stack, 0xffffffffffffff50, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x106, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x106, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x106, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x106, 4)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1e6e1a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fa40, 8) , (register, 0x38, 4) , (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) CAST (register, 0x20, 8)]
[(unique, 0x100001f4, 8) COPY (stack, 0xffffffffffffff48, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[(register, 0x0, 8) COPY (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x11f, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x11f, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x11f, 4)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1e6e1a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x38, 4) , (register, 0x20, 8)]
[(register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x1000013d, 4) , (const, 0x2, 4), (unique, 0x1000013d, 4) INT_2COMP (unique, 0x10000141, 4), (unique, 0x10000141, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffffdfff, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x6000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff60, 4) , (const, 0xf000, 4)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[(unique, 0x10000234, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000294, 8) , (const, 0x16, 4), (unique, 0x10000294, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x1000020c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[(register, 0x0, 8) COPY (const, 0x1000, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000029c, 8), (unique, 0x1000029c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x191, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x191, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x191, 4)]
[(unique, 0x100001fc, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x191, 4)]
[ ---  CBRANCH (ram, 0x1e701c, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fa40, 8) , (register, 0x38, 4) , (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) CAST (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1e6ec2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x26, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002ac, 8), (unique, 0x100002ac, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001ec, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1e6e1a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x13, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1bc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002b4, 8) , (const, 0x16, 4), (unique, 0x100002b4, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001ec, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002bc, 8) , (unique, 0xbc80, 4), (unique, 0x100002bc, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001ec, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0xff, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[(unique, 0x1000023c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1e6e1a, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000204, 8) , (unique, 0x1000020c, 8) , (unique, 0x10000214, 8) , (unique, 0x1000021c, 8) , (unique, 0x10000224, 8) , (unique, 0x1000022c, 8) , (unique, 0x10000234, 8) , (unique, 0x1000023c, 8) , (unique, 0x10000244, 8) , (unique, 0x1000024c, 8) , (register, 0x0, 8) , (unique, 0x100001f4, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0x100001fc, 8)]
[ ---  CBRANCH (ram, 0x1e7046, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002c4, 8), (unique, 0x100002c4, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x75, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x75, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
