[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3b, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3b, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000010d, 8), (unique, 0x1000010d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x21f7bd, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fd70, 8) , (unique, 0x100000ad, 8) , (const, 0x0, 8), (unique, 0x100000ad, 8) COPY (const, 0x2b5951, 8)]
[(register, 0x28, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x57, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x57, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x57, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x50, 4)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21f7c2, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x210110, 8) , (register, 0x0, 4) , (unique, 0x3800, 8) , (const, 0x40, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x71, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1), (unique, 0x3a00, 8) PTRADD (unique, 0x100000d5, 8) , (unique, 0x100000cd, 8) , (const, 0x1, 8), (unique, 0x100000d5, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x100000cd, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000105, 4) COPY (register, 0xa8, 4), (register, 0xa8, 4) COPY (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x21f778, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (register, 0x30, 4) , (const, 0x4, 4)]
[(unique, 0x10000109, 4) COPY (register, 0x30, 4)]
[(register, 0xa8, 4) MULTIEQUAL (unique, 0x10000105, 4) , (unique, 0x10000109, 4)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21f7c2, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x30, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff70, 8)]
[(unique, 0x100000f5, 8) COPY (unique, 0x3800, 8)]
[ ---  BRANCH (ram, 0x21f79f, 1)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x98, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x98, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (register, 0x1200, 8), (register, 0x1200, 8) CALL (ram, 0x14bf70, 8) , (register, 0x18, 8) , (unique, 0x10000115, 8) , (unique, 0x1000011d, 8), (unique, 0x1000011d, 8) CAST (unique, 0x100000b5, 8), (unique, 0x10000115, 8) CAST (unique, 0x3800, 8), (unique, 0x100000b5, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea960, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100000f5, 8) , (unique, 0x100000fd, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x21f790, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff70, 8) , (register, 0x18, 8), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x98, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0x100000f5, 8) , (unique, 0x100000fd, 8), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100000fd, 8) COPY (stack, 0xffffffffffffff70, 8)]
[ ---  CBRANCH (ram, 0x21f7c2, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x28, 4) , (register, 0xa8, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x21f7e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000125, 8), (unique, 0x10000125, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd6, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x28, 4)]
