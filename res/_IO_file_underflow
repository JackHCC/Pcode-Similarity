[ ---  CBRANCH (ram, 0x18d270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000051, 4) , (const, 0x0, 4), (unique, 0x10000051, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x20, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000262, 8) , (const, 0x9, 4), (unique, 0x10000262, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x29b, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x29f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x29b, 4)]
[(ram, 0x4ec848, 8) COPY (ram, 0x4ec848, 8), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x29f, 4), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x29b, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x29f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x29b, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x18d180, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000272, 8), (unique, 0x10000272, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000026a, 8), (unique, 0x1000026a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ec848, 8) COPY (ram, 0x4ec848, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18d238, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18d24c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000282, 8), (unique, 0x10000282, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x273, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x278, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x273, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x278, 4), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x273, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x278, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x273, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x285, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x285, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x285, 4), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x285, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALL (ram, 0x18e300, 8) , (register, 0x38, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x18d04e, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000021a, 8) COPY (ram, 0x4ec848, 8), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[ ---  CBRANCH (ram, 0x18d100, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x202, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x1000025a, 8) COPY (ram, 0x4ec848, 8)]
[ ---  CBRANCH (ram, 0x18d1b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000028a, 8), (unique, 0x1000028a, 8) CAST (ram, 0x4ec848, 8)]
[ ---  CBRANCH (ram, 0x18d218, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002a2, 8), (unique, 0x100002a2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000029a, 8), (unique, 0x1000029a, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000292, 8), (unique, 0x10000292, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4ec848, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x18d1e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x262, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x262, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x262, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x204, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x204, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x204, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x18d204, 1)]
[(register, 0x88, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x245, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x245, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x245, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x245, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000222, 8) COPY (ram, 0x4ec848, 8), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002b2, 8), (unique, 0x100002b2, 8) CAST (ram, 0x4ec848, 8), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x211, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x211, 4), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x211, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002ba, 8) , (register, 0x88, 8), (unique, 0x100002ba, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002aa, 8), (unique, 0x100002aa, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000021a, 8) , (const, 0x88, 8) , (const, 0x1, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x88, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x223, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x223, 4), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x223, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000232, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000025a, 8) , (unique, 0x10000222, 8)]
[ ---  CBRANCH (ram, 0x18d0b2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x280, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x288, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x18d100, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x280, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x288, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000242, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000232, 8) , (unique, 0x1000025a, 8)]
[ ---  CBRANCH (ram, 0x18d290, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002c2, 8), (unique, 0x100002c2, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xd8, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000232, 8) , (unique, 0x1000025a, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1cd, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1cd, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[(unique, 0x1000024a, 8) COPY (ram, 0x4ec848, 8), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x1cd, 4)]
[ ---  BRANCH (ram, 0x18d0a9, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x96, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x96, 4), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x96, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002ca, 8), (unique, 0x100002ca, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000242, 8) , (unique, 0x1000024a, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x18d100, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002d2, 8), (unique, 0x100002d2, 8) CAST (unique, 0x1000021a, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xad, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0xad, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xad, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002da, 8), (unique, 0x100002da, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000021a, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x18d100, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002da, 8), (unique, 0x100002da, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000021a, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xbb, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0xbb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e2, 8) , (const, 0x0, 8), (unique, 0x100002e2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18d0e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xbb, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c0, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x1c0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1c0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xcb, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0xcb, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xcb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x10000204, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x1000020c, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(unique, 0x10000214, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x18d0fb, 1) , (unique, 0x10000203, 1), (unique, 0x10000203, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x10000204, 8) , (const, 0x1b2, 4)]
[(ram, 0x4ec848, 8) INDIRECT (unique, 0x1000020c, 8) , (const, 0x1b2, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000214, 4) , (const, 0x1b2, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x18ddb0, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002fa, 8) , (unique, 0xbd80, 8), (unique, 0x100002fa, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000302, 8) , (unique, 0xbd80, 8), (unique, 0x10000302, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000030a, 8) , (unique, 0xbd80, 8), (unique, 0x1000030a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000312, 8) , (unique, 0xbd80, 8), (unique, 0x10000312, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000031a, 8) , (unique, 0xbd80, 8), (unique, 0x1000031a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x108, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x105, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf9, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xea, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xdd, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x10000204, 8)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x108, 4), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x105, 4), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0xf9, 4), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0xf6, 4), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0xea, 4), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0xe7, 4), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0xdd, 4), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (unique, 0x1000020c, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x108, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x105, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf9, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf6, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xea, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xe7, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xdd, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (unique, 0x10000214, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000322, 8) , (unique, 0xbd80, 8), (unique, 0x10000322, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18d260, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002ea, 8), (unique, 0x100002ea, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a1, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x1a1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1a1, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000032a, 8), (unique, 0x1000032a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18d13a, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x11c, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x11c, 4), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x11c, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x18d188, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000033a, 8), (unique, 0x1000033a, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x70, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000332, 8), (unique, 0x10000332, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x133, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x133, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x133, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000352, 8) , (unique, 0xbd80, 8), (unique, 0x10000352, 8) CAST (unique, 0x3100, 8), (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000034a, 8), (unique, 0x1000034a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18d168, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000342, 8), (unique, 0x10000342, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x152, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x152, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x152, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035a, 8) , (register, 0x0, 8), (unique, 0x1000035a, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec848, 8) COPY (ram, 0x4ec848, 8), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000362, 8), (unique, 0x10000362, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x8, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x10, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000252, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x20, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18d19f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x10000256, 4) COPY (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000036a, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x1000036a, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x24, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x100000e9, 4), (unique, 0x100000e9, 4) MULTIEQUAL (unique, 0x10000252, 4) , (unique, 0x10000256, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x191, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18f, 4)]
[(ram, 0x4ec848, 8) COPY (ram, 0x4ec848, 8), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x191, 4), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x18f, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x191, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x18f, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
