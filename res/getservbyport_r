[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x206, 1) INT_EQUAL (ram, 0x4f0ad0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x239108, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (ram, 0x4f0ad0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x238fc2, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x238e85, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ef660, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x238fb8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x64, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (ram, 0x4f0ad0, 4) , (const, 0x1, 4)]
[(ram, 0x4f0ad0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4f0ad0, 4) MULTIEQUAL (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4)]
[ ---  CBRANCH (ram, 0x238e78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0974, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x335, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x335, 4)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x335, 4)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x335, 4)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x335, 4)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x335, 4)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x335, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x335, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x335, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x335, 4)]
[ ---  CBRANCH (ram, 0x238e78, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x100001de, 4), (unique, 0x100001de, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x261280, 8) , (register, 0x38, 4) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f0ad0, 4) MULTIEQUAL (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4) , (register, 0x0, 4)]
[(ram, 0x4f0974, 1) MULTIEQUAL (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1)]
[(ram, 0x4ef658, 8) MULTIEQUAL (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8)]
[(ram, 0x4ef650, 8) MULTIEQUAL (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x23911b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ef660, 1) , (const, 0x0, 1), (ram, 0x4ef660, 1) MULTIEQUAL (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f0ad0, 4) MULTIEQUAL (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4)]
[(ram, 0x4f0974, 1) MULTIEQUAL (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1)]
[(ram, 0x4ef660, 1) MULTIEQUAL (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) CAST (unique, 0x100001e2, 8), (unique, 0x100001e2, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4ef650, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4ef650, 8) , (const, 0x11, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4ef650, 8) MULTIEQUAL (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4ef658, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4ef658, 8) , (const, 0x11, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4ef658, 8) MULTIEQUAL (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a3, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2a3, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x2a3, 4), (ram, 0x4ef650, 8) MULTIEQUAL (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x2a3, 4), (ram, 0x4ef658, 8) MULTIEQUAL (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x2a3, 4), (ram, 0x4ef660, 1) MULTIEQUAL (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x2a3, 4), (ram, 0x4f0974, 1) MULTIEQUAL (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x2a3, 4), (ram, 0x4f0ad0, 4) MULTIEQUAL (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2a3, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2a3, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a3, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2391c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24b2a0, 8) , (unique, 0x3800, 8) , (unique, 0x10000173, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x10000173, 8) COPY (const, 0x2b6a8a, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x23916a, 1)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (unique, 0x100001ea, 8) , (unique, 0xbd80, 8), (unique, 0x100001ea, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (stack, 0xffffffffffffffb0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4ef650, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4ef650, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4ef660, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x238ec5, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f0ad0, 4) MULTIEQUAL (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4)]
[(ram, 0x4f0974, 1) MULTIEQUAL (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1)]
[(ram, 0x4ef660, 1) MULTIEQUAL (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1)]
[(ram, 0x4ef658, 8) MULTIEQUAL (ram, 0x4ef658, 8) , (register, 0x0, 8)]
[(ram, 0x4ef650, 8) MULTIEQUAL (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001d6, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x2391d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff9c, 4) , (const, 0x0, 4), (stack, 0xffffffffffffff9c, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27e, 4)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x27e, 4)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x27e, 4)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x27e, 4)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x27e, 4)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x27e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x239000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000202, 8), (unique, 0x10000202, 8) INT_ADD (unique, 0x100001f2, 8) , (unique, 0x100001fa, 8), (unique, 0x100001fa, 8) CAST (unique, 0x100001d6, 8), (unique, 0x100001f2, 8) CAST (register, 0x110, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x10000160, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffff90, 8) COPY (const, 0x0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(register, 0xb8, 8) PTRADD (ram, 0x4eae68, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8)]
[ ---  BRANCH (ram, 0x238f4e, 1)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x10000159, 1) MULTIEQUAL (unique, 0x10000160, 1) , (unique, 0x1000015c, 1)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf9, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf9, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x10b, 4), (ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0xf9, 4), (ram, 0x4ef650, 8) MULTIEQUAL (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x10b, 4), (ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0xf9, 4), (ram, 0x4ef658, 8) MULTIEQUAL (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x10b, 4), (ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0xf9, 4), (ram, 0x4ef660, 1) MULTIEQUAL (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x10b, 4), (ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0xf9, 4), (ram, 0x4f0974, 1) MULTIEQUAL (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x10b, 4), (ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0xf9, 4), (ram, 0x4f0ad0, 4) MULTIEQUAL (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x10b, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xf9, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x10b, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xf9, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf9, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x238f08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xfffffffe, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 4) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0xb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xf9, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x239028, 1) , (unique, 0x10000159, 1)]
[ ---  CBRANCH (ram, 0x238f28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffb0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000020a, 4), (unique, 0x1000020a, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x238f28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x238f8a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x248, 4)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x248, 4)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x248, 4)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x248, 4)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x248, 4)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x248, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000226, 8), (unique, 0x10000226, 8) INT_ADD (unique, 0x10000216, 8) , (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) CAST (unique, 0x100001d6, 8), (unique, 0x10000216, 8) CAST (register, 0x110, 8)]
[(unique, 0x1000015d, 1) COPY (const, 0x0, 1)]
[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x239190, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x22, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000023e, 8), (unique, 0x1000023e, 8) INT_ADD (unique, 0x1000022e, 8) , (unique, 0x10000236, 8), (unique, 0x10000236, 8) CAST (unique, 0x100001d6, 8), (unique, 0x1000022e, 8) CAST (register, 0x110, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x223, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x223, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x223, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x223, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffff90, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x22b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x223, 4)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x22b, 4), (ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x223, 4)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x22b, 4), (ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x223, 4)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x22b, 4), (ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x223, 4)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x22b, 4), (ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x223, 4)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x22b, 4), (ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x223, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0xbc80, 4) COPY (const, 0x22, 4)]
[ ---  BRANCH (ram, 0x239000, 1)]
[ ---  CBRANCH (ram, 0x238f28, 1) , (unique, 0x10000159, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x136, 4)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x136, 4)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x136, 4)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x136, 4)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x136, 4)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x136, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000256, 8), (unique, 0x10000256, 8) INT_ADD (unique, 0x10000246, 8) , (unique, 0x1000024e, 8), (unique, 0x1000024e, 8) CAST (unique, 0x100001d6, 8), (unique, 0x10000246, 8) CAST (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x239050, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000025e, 8), (unique, 0x1000025e, 8) INT_ADD (stack, 0xffffffffffffffb0, 8) , (const, 0x14, 8)]
[(ram, 0x4f0ad0, 4) MULTIEQUAL (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4)]
[(ram, 0x4f0974, 1) MULTIEQUAL (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1)]
[(ram, 0x4ef660, 1) MULTIEQUAL (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1)]
[(ram, 0x4ef658, 8) MULTIEQUAL (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8)]
[(ram, 0x4ef650, 8) MULTIEQUAL (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x2390c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff90, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ff, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ff, 4)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x1ff, 4)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x1ff, 4)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x1ff, 4)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x1ff, 4)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x1ff, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1ff, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ff, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ff, 4)]
[ ---  CBRANCH (ram, 0x239058, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0xc, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000276, 8), (unique, 0x10000276, 8) INT_ADD (unique, 0x10000266, 8) , (unique, 0x1000026e, 8), (unique, 0x1000026e, 8) CAST (unique, 0x100001d6, 8), (unique, 0x10000266, 8) CAST (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x218, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x213, 4)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x218, 4), (ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x213, 4)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x218, 4), (ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x213, 4)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x218, 4), (ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x213, 4)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x218, 4), (ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x213, 4)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x218, 4), (ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x213, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0xbc80, 4) COPY (const, 0xc, 4)]
[ ---  BRANCH (ram, 0x239000, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (register, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f8, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x1f8, 4), (ram, 0x4ef650, 8) MULTIEQUAL (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x1f8, 4), (ram, 0x4ef658, 8) MULTIEQUAL (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x1f8, 4), (ram, 0x4ef660, 1) MULTIEQUAL (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x1f8, 4), (ram, 0x4f0974, 1) MULTIEQUAL (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x1f8, 4), (ram, 0x4f0ad0, 4) MULTIEQUAL (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000028e, 8), (unique, 0x1000028e, 8) INT_ADD (unique, 0x1000027e, 8) , (unique, 0x10000286, 8), (unique, 0x10000286, 8) CAST (unique, 0x100001d6, 8), (unique, 0x1000027e, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x1000015e, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x238f28, 1)]
[(register, 0xb0, 4) COPY (const, 0x1, 4)]
[(unique, 0x1000015f, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x238f28, 1)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x1000015c, 1) MULTIEQUAL (unique, 0x10000159, 1) , (unique, 0x1000015f, 1) , (unique, 0x1000015e, 1) , (unique, 0x1000015d, 1) , (unique, 0x10000159, 1) , (unique, 0x10000159, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x167, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x167, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x167, 4), (ram, 0x4ef650, 8) MULTIEQUAL (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x167, 4), (ram, 0x4ef658, 8) MULTIEQUAL (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x167, 4), (ram, 0x4ef660, 1) MULTIEQUAL (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x167, 4), (ram, 0x4f0974, 1) MULTIEQUAL (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x167, 4), (ram, 0x4f0ad0, 4) MULTIEQUAL (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x167, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x167, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x167, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x239070, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249490, 8) , (unique, 0x3800, 8) , (unique, 0x1000016b, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (register, 0xb0, 4) , (const, 0x0, 8), (unique, 0x1000016b, 8) COPY (const, 0x2b6a8a, 8), (register, 0xb0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x178, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x178, 4)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x178, 4)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x178, 4)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x178, 4)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x178, 4)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x178, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x178, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x178, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x178, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffff90, 8)]
[ ---  CBRANCH (ram, 0x239180, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (register, 0x10, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1df, 4)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x1e6, 4), (ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x1df, 4)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x1e6, 4), (ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x1df, 4)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x1e6, 4), (ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x1df, 4)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x1e6, 4), (ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x1df, 4)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x1e6, 4), (ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x1df, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x0, 4), (unique, 0x4f00, 8) CAST (unique, 0x100002a6, 8), (unique, 0x100002a6, 8) INT_ADD (unique, 0x10000296, 8) , (unique, 0x1000029e, 8), (unique, 0x1000029e, 8) CAST (unique, 0x100001d6, 8), (unique, 0x10000296, 8) CAST (register, 0x110, 8)]
[ ---  BRANCH (ram, 0x239000, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x187, 4)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x187, 4)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x187, 4)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x187, 4)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x187, 4)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x187, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2390b5, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1, 4) , (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x239000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002be, 8), (unique, 0x100002be, 8) INT_ADD (unique, 0x100002ae, 8) , (unique, 0x100002b6, 8), (unique, 0x100002b6, 8) CAST (unique, 0x100001d6, 8), (unique, 0x100002ae, 8) CAST (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x239000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0xfffffffe, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f0ad0, 4) MULTIEQUAL (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4)]
[(ram, 0x4f0974, 1) MULTIEQUAL (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1)]
[(ram, 0x4ef660, 1) MULTIEQUAL (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1)]
[(ram, 0x4ef658, 8) MULTIEQUAL (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8)]
[(ram, 0x4ef650, 8) MULTIEQUAL (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff9c, 4) COPY (const, 0x16, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1af, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x1af, 4), (ram, 0x4ef650, 8) MULTIEQUAL (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8)]
[(ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x1af, 4), (ram, 0x4ef658, 8) MULTIEQUAL (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8)]
[(ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x1af, 4), (ram, 0x4ef660, 1) MULTIEQUAL (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1)]
[(ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x1af, 4), (ram, 0x4f0974, 1) MULTIEQUAL (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1)]
[(ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x1af, 4), (ram, 0x4f0ad0, 4) MULTIEQUAL (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (stack, 0xffffffffffffff9c, 4), (unique, 0x4f00, 8) CAST (unique, 0x100002d6, 8), (unique, 0x100002d6, 8) INT_ADD (unique, 0x100002c6, 8) , (unique, 0x100002ce, 8), (unique, 0x100002ce, 8) CAST (unique, 0x100001d6, 8), (unique, 0x100002c6, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[ ---  BRANCH (ram, 0x239000, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f0ad0, 4) MULTIEQUAL (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4) , (ram, 0x4f0ad0, 4)]
[(ram, 0x4f0974, 1) MULTIEQUAL (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1) , (ram, 0x4f0974, 1)]
[(ram, 0x4ef660, 1) MULTIEQUAL (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1) , (ram, 0x4ef660, 1)]
[(ram, 0x4ef658, 8) MULTIEQUAL (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8) , (ram, 0x4ef658, 8)]
[(ram, 0x4ef650, 8) MULTIEQUAL (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8) , (ram, 0x4ef650, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2391ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ef650, 8) COPY (ram, 0x4ef650, 8)]
[(ram, 0x4ef658, 8) COPY (ram, 0x4ef658, 8)]
[(ram, 0x4ef660, 1) COPY (ram, 0x4ef660, 1)]
[(ram, 0x4f0974, 1) COPY (ram, 0x4f0974, 1)]
[(ram, 0x4f0ad0, 4) COPY (ram, 0x4f0ad0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100002de, 4), (unique, 0x100002de, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1db, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1db, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1db, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1db, 4)]
[(ram, 0x4ef650, 8) COPY (ram, 0x4ef650, 8), (ram, 0x4ef650, 8) INDIRECT (ram, 0x4ef650, 8) , (const, 0x1db, 4)]
[(ram, 0x4ef658, 8) COPY (ram, 0x4ef658, 8), (ram, 0x4ef658, 8) INDIRECT (ram, 0x4ef658, 8) , (const, 0x1db, 4)]
[(ram, 0x4ef660, 1) COPY (ram, 0x4ef660, 1), (ram, 0x4ef660, 1) INDIRECT (ram, 0x4ef660, 1) , (const, 0x1db, 4)]
[(ram, 0x4f0974, 1) COPY (ram, 0x4f0974, 1), (ram, 0x4f0974, 1) INDIRECT (ram, 0x4f0974, 1) , (const, 0x1db, 4)]
[(ram, 0x4f0ad0, 4) COPY (ram, 0x4f0ad0, 4), (ram, 0x4f0ad0, 4) INDIRECT (ram, 0x4f0ad0, 4) , (const, 0x1db, 4)]
[ ---  RETURN (const, 0x1, 4)]
