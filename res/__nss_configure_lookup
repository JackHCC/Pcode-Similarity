[(register, 0x28, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea0e0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2d, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x2d, 4), (ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2d, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (register, 0x38, 8) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x248eb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (register, 0x38, 8) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x248e96, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000c7, 8) , (unique, 0x100000ef, 8) , (const, 0x8, 8), (unique, 0x100000ef, 8) INT_MULT (register, 0x18, 8) , (const, 0x3, 8), (unique, 0x100000c7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea0f0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4efeb0, 4) COPY (ram, 0x4efeb0, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8e, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x8e, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x8e, 4)]
[ ---  CBRANCH (ram, 0x248e82, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x248310, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x248eec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4efeb0, 4) , (const, 0x0, 4)]
[(ram, 0x4efeb0, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4efeb0, 4) , (const, 0x0, 4)]
[(ram, 0x4efeb0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x248f0f, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x106, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x106, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x106, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100000df, 8), (unique, 0x100000df, 8) PTRSUB (const, 0x0, 8) , (const, 0x4efeb0, 8)]
[(unique, 0x1000011a, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x106, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000122, 8) , (register, 0x10, 8), (unique, 0x10000122, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000cf, 8) , (unique, 0x100000ff, 8) , (const, 0x8, 8), (unique, 0x100000ff, 8) INT_MULT (register, 0x18, 8) , (const, 0x3, 8), (unique, 0x100000cf, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea0f0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x1000011a, 8) , (register, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc3, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xbe, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0xc3, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0xbe, 4), (ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x1, 1), (unique, 0x3400, 8) PTRADD (unique, 0x100000e7, 8) , (register, 0x18, 8) , (const, 0x1, 8), (unique, 0x100000e7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f0968, 8)]
[ ---  CBRANCH (ram, 0x248f35, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc3, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xbe, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (ram, 0x248f57, 1) , (unique, 0x10000115, 1), (unique, 0x10000115, 1) INT_EQUAL (unique, 0x10000111, 4) , (const, 0x0, 4), (unique, 0x10000111, 4) INT_ADD (ram, 0x4efeb0, 4) , (const, 0xffffffff, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100000d7, 8), (unique, 0x100000d7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4efeb0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe7, 4)]
[(ram, 0x4efeb0, 4) COPY (ram, 0x4efeb0, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0xe7, 4), (ram, 0x4efeb0, 4) INT_ADD (ram, 0x4efeb0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xe7, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4efeb0, 4) COPY (unique, 0x10000111, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x248e82, 1) , (register, 0x207, 1)]
[(register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x248e60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0xe, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000012a, 8) , (const, 0x16, 4), (unique, 0x1000012a, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5c, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4efeb0, 4) COPY (ram, 0x4efeb0, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x5c, 4), (ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5c, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
