[(unique, 0x10000263, 4) COPY (ram, 0x4c7d8c, 4)]
[ ---  CBRANCH (ram, 0x40193c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7d88, 4) , (const, 0x1, 4)]
[(register, 0x0, 8) CALL (ram, 0x453520, 8) , (const, 0xbc, 8)]
[(register, 0x0, 8) CALL (ram, 0x453520, 8) , (const, 0xbf, 8)]
[(ram, 0x4c6040, 8) INDIRECT (ram, 0x4c6040, 8) , (const, 0x379, 4), (ram, 0x4c6040, 8) INDIRECT (ram, 0x4c6040, 8) , (const, 0x374, 4), (ram, 0x4c6040, 8) INDIRECT (ram, 0x4c6040, 8) , (const, 0x36f, 4)]
[(ram, 0x4c6048, 8) INDIRECT (ram, 0x4c6048, 8) , (const, 0x379, 4), (ram, 0x4c6048, 8) INDIRECT (ram, 0x4c6048, 8) , (const, 0x374, 4), (ram, 0x4c6048, 8) INDIRECT (ram, 0x4c6048, 8) , (const, 0x36f, 4)]
[(ram, 0x4c6050, 8) INDIRECT (ram, 0x4c6050, 8) , (const, 0x379, 4), (ram, 0x4c6050, 8) INDIRECT (ram, 0x4c6050, 8) , (const, 0x374, 4), (ram, 0x4c6050, 8) INDIRECT (ram, 0x4c6050, 8) , (const, 0x36f, 4)]
[(ram, 0x4c6058, 8) INDIRECT (ram, 0x4c6058, 8) , (const, 0x379, 4), (ram, 0x4c6058, 8) INDIRECT (ram, 0x4c6058, 8) , (const, 0x374, 4), (ram, 0x4c6058, 8) INDIRECT (ram, 0x4c6058, 8) , (const, 0x36f, 4)]
[(ram, 0x4c6060, 8) INDIRECT (ram, 0x4c6060, 8) , (const, 0x379, 4), (ram, 0x4c6060, 8) INDIRECT (ram, 0x4c6060, 8) , (const, 0x374, 4), (ram, 0x4c6060, 8) INDIRECT (ram, 0x4c6060, 8) , (const, 0x36f, 4)]
[(ram, 0x4c6068, 8) INDIRECT (ram, 0x4c6068, 8) , (const, 0x379, 4), (ram, 0x4c6068, 8) INDIRECT (ram, 0x4c6068, 8) , (const, 0x374, 4), (ram, 0x4c6068, 8) INDIRECT (ram, 0x4c6068, 8) , (const, 0x36f, 4)]
[(ram, 0x4c6070, 8) INDIRECT (ram, 0x4c6070, 8) , (const, 0x379, 4), (ram, 0x4c6070, 8) INDIRECT (ram, 0x4c6070, 8) , (const, 0x374, 4), (ram, 0x4c6070, 8) INDIRECT (ram, 0x4c6070, 8) , (const, 0x36f, 4)]
[(ram, 0x4c6078, 8) INDIRECT (ram, 0x4c6078, 8) , (const, 0x379, 4), (ram, 0x4c6078, 8) INDIRECT (ram, 0x4c6078, 8) , (const, 0x374, 4), (ram, 0x4c6078, 8) INDIRECT (ram, 0x4c6078, 8) , (const, 0x36f, 4)]
[(ram, 0x4c7d26, 1) INDIRECT (ram, 0x4c7d26, 1) , (const, 0x379, 4), (ram, 0x4c7d26, 1) INDIRECT (ram, 0x4c7d26, 1) , (const, 0x374, 4), (ram, 0x4c7d26, 1) INDIRECT (ram, 0x4c7d26, 1) , (const, 0x36f, 4)]
[(ram, 0x4c7d2c, 4) INDIRECT (ram, 0x4c7d2c, 4) , (const, 0x379, 4), (ram, 0x4c7d2c, 4) INDIRECT (ram, 0x4c7d2c, 4) , (const, 0x374, 4), (ram, 0x4c7d2c, 4) INDIRECT (ram, 0x4c7d2c, 4) , (const, 0x36f, 4)]
[(ram, 0x4c7d88, 4) INDIRECT (ram, 0x4c7d88, 4) , (const, 0x379, 4), (ram, 0x4c7d88, 4) INDIRECT (ram, 0x4c7d88, 4) , (const, 0x374, 4), (ram, 0x4c7d88, 4) INDIRECT (ram, 0x4c7d88, 4) , (const, 0x36f, 4)]
[(ram, 0x4c7d8c, 4) INDIRECT (ram, 0x4c7d8c, 4) , (const, 0x379, 4), (ram, 0x4c7d8c, 4) INDIRECT (ram, 0x4c7d8c, 4) , (const, 0x374, 4), (ram, 0x4c7d8c, 4) INDIRECT (ram, 0x4c7d8c, 4) , (const, 0x36f, 4)]
[(ram, 0x4c7d90, 4) INDIRECT (ram, 0x4c7d90, 4) , (const, 0x379, 4), (ram, 0x4c7d90, 4) INDIRECT (ram, 0x4c7d90, 4) , (const, 0x374, 4), (ram, 0x4c7d90, 4) INDIRECT (ram, 0x4c7d90, 4) , (const, 0x36f, 4)]
[(ram, 0x4c7d94, 4) INDIRECT (ram, 0x4c7d94, 4) , (const, 0x379, 4), (ram, 0x4c7d94, 4) INDIRECT (ram, 0x4c7d94, 4) , (const, 0x374, 4), (ram, 0x4c7d94, 4) INDIRECT (ram, 0x4c7d94, 4) , (const, 0x36f, 4)]
[(ram, 0x4c7db0, 8) INDIRECT (ram, 0x4c7db0, 8) , (const, 0x379, 4), (ram, 0x4c7db0, 8) INDIRECT (ram, 0x4c7db0, 8) , (const, 0x374, 4), (ram, 0x4c7db0, 8) INDIRECT (ram, 0x4c7db0, 8) , (const, 0x36f, 4)]
[(ram, 0x4c7db8, 8) INDIRECT (ram, 0x4c7db8, 8) , (const, 0x379, 4), (ram, 0x4c7db8, 8) INDIRECT (ram, 0x4c7db8, 8) , (const, 0x374, 4), (ram, 0x4c7db8, 8) INDIRECT (ram, 0x4c7db8, 8) , (const, 0x36f, 4)]
[(ram, 0x4c7dc0, 8) INDIRECT (ram, 0x4c7dc0, 8) , (const, 0x379, 4), (ram, 0x4c7dc0, 8) INDIRECT (ram, 0x4c7dc0, 8) , (const, 0x374, 4), (ram, 0x4c7dc0, 8) INDIRECT (ram, 0x4c7dc0, 8) , (const, 0x36f, 4)]
[(ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x379, 4), (ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x374, 4), (ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x36f, 4)]
[(ram, 0x4c8768, 4) INDIRECT (ram, 0x4c8768, 4) , (const, 0x379, 4), (ram, 0x4c8768, 4) INDIRECT (ram, 0x4c8768, 4) , (const, 0x374, 4), (ram, 0x4c8768, 4) INDIRECT (ram, 0x4c8768, 4) , (const, 0x36f, 4)]
[ ---  CBRANCH (ram, 0x4019fe, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x100002b7, 8) , (const, 0x1, 8), (unique, 0x100002b7, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x453520, 8)]
[(register, 0x90, 4) COPY (const, 0xffffffff, 4)]
[(register, 0xb8, 4) COPY (const, 0x2, 4)]
[(unique, 0x10000277, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x40197c, 1)]
[(register, 0x90, 4) COPY (const, 0x0, 4)]
[(register, 0xb8, 4) COPY (const, 0x3, 4)]
[(unique, 0x1000026f, 8) COPY (register, 0x0, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x1000026f, 8) , (unique, 0x10000277, 8)]
[(register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (ram, 0x4c7d2c, 4) , (const, 0x10000000, 4)]
[ ---  CBRANCH (ram, 0x401a51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (ram, 0x4c7d2c, 4) , (const, 0x10000000, 4)]
[ ---  CBRANCH (ram, 0x401a10, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000263, 4) , (const, 0x4, 4)]
[(register, 0x80, 4) COPY (const, 0x0, 4)]
[(register, 0x98, 1) COPY (const, 0x1, 1)]
[(register, 0x30, 4) COPY (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x401b39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[(register, 0x30, 4) COPY (const, 0x1, 4)]
[(register, 0x90, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x4019a2, 1)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x80, 4) COPY (const, 0x0, 4)]
[(register, 0x98, 4) COPY (const, 0x1, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x98, 1) SUBPIECE (register, 0x98, 4) , (const, 0x0, 4), (register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4)]
[(unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100002bf, 8), (unique, 0x100002bf, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x401a19, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000fa, 4) , (const, 0x0, 4), (unique, 0x100000fa, 4) INT_AND (unique, 0x2bf80, 4) , (const, 0x1f, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100002bf, 8), (unique, 0x100002bf, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[(register, 0x98, 1) MULTIEQUAL (register, 0x98, 1) , (register, 0x98, 1)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x30, 8) INT_ZEXT (ram, 0x4c7d26, 1)]
[ ---  CBRANCH (ram, 0x401aeb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x4019fa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000164, 4) , (const, 0x0, 4), (unique, 0x10000164, 4) INT_AND (register, 0x30, 4) , (const, 0x1, 4)]
[(register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xfffffffe, 4)]
[(register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3ff, 4), (register, 0x0, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0xe, 4)]
[ ---  BRANCH (ram, 0x4019f2, 1)]
[ ---  CBRANCH (ram, 0x4019fa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x4019fa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000106, 4) , (const, 0x0, 4), (unique, 0x10000106, 4) INT_AND (register, 0x30, 4) , (const, 0x2, 4)]
[(register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xfffffffd, 4)]
[(register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3ff, 4), (register, 0x0, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0xe, 4)]
[(register, 0x98, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_RIGHT (unique, 0x2c280, 4) , (const, 0x1, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x90, 4)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x0, 4)]
[(register, 0x98, 1) SUBPIECE (register, 0x98, 4) , (const, 0x0, 4), (register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4)]
[ ---  CBRANCH (ram, 0x401b47, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x401be1, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0xa, 4) , (unique, 0x10000263, 4)]
[(register, 0x0, 1) COPY (const, 0x1, 1)]
[(unique, 0x10000213, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xd080, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x3, 4), (unique, 0xd080, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x401b7a, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100002c7, 4) , (const, 0x1, 4), (unique, 0x100002c7, 4) CAST (register, 0x90, 4)]
[(unique, 0x1000020a, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xd080, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x2, 4)]
[(register, 0x38, 1) INT_OR (unique, 0x100001fc, 1) , (unique, 0x10000213, 1), (unique, 0x100001fc, 1) INT_MULT (register, 0x0, 1) , (const, 0x2, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (unique, 0x1000020a, 1)]
[ ---  BRANCH (ram, 0x401b96, 1)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x401be1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 1) , (const, 0x0, 1), (register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1)]
[(register, 0x8, 4) INT_AND (unique, 0x2c400, 4) , (const, 0xff00, 4), (unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) CAST (unique, 0x100002d3, 8), (unique, 0x100002d3, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0xc, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x33, 4) , (const, 0xb, 4)]
[ ---  CBRANCH (ram, 0x401be1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_AND (unique, 0x2c100, 4) , (const, 0xff, 4), (unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) CAST (unique, 0x100002cb, 8), (unique, 0x100002cb, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x33, 4) , (const, 0xb, 4)]
[ ---  CBRANCH (ram, 0x401be1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x401b87, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x100, 4)]
[ ---  CBRANCH (ram, 0x401c55, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x200, 4)]
[ ---  CBRANCH (ram, 0x401b93, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001d2, 1) , (const, 0x0, 1), (unique, 0x100001d2, 1) INT_AND (register, 0x38, 1) , (const, 0x2, 1)]
[(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x401cb3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x2, 4)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x80, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[(register, 0x80, 4) INT_AND (register, 0x80, 4) , (register, 0x18, 4), (register, 0x80, 4) INT_NEGATE (register, 0x80, 4), (register, 0x80, 4) INT_LEFT (const, 0xffffffff, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x8, 1) INT_ADD (unique, 0x10000204, 1) , (const, 0x1, 1), (unique, 0x10000204, 1) SUBPIECE (unique, 0x1b080, 4) , (const, 0x0, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  BRANCH (ram, 0x401c7c, 1)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x90, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[(register, 0x90, 4) INT_AND (register, 0x90, 4) , (register, 0x18, 4), (register, 0x90, 4) INT_NEGATE (register, 0x90, 4), (register, 0x90, 4) INT_LEFT (const, 0xffffffff, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x8, 1) INT_ADD (unique, 0x10000202, 1) , (const, 0x1, 1), (unique, 0x10000202, 1) SUBPIECE (unique, 0x1b080, 4) , (const, 0x0, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x38, 1) INT_AND (register, 0x38, 1) , (const, 0xfd, 1)]
[ ---  BRANCH (ram, 0x401b93, 1)]
[ ---  CBRANCH (ram, 0x401b93, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001ae, 1) , (const, 0x0, 1), (unique, 0x100001ae, 1) INT_AND (register, 0x38, 1) , (const, 0x1, 1)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x80, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[(register, 0x38, 1) INT_AND (register, 0x38, 1) , (const, 0xfe, 1)]
[(register, 0x80, 4) INT_AND (register, 0x80, 4) , (unique, 0x3100, 4), (register, 0x80, 4) INT_NEGATE (register, 0x80, 4), (register, 0x80, 4) INT_LEFT (const, 0xffffffff, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (unique, 0x3100, 4) INT_SUB (register, 0x18, 4) , (const, 0x1, 4), (register, 0x8, 1) INT_ADD (unique, 0x10000200, 1) , (const, 0x1, 1), (unique, 0x10000200, 1) SUBPIECE (unique, 0x1b080, 4) , (const, 0x0, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  BRANCH (ram, 0x401b93, 1)]
[(register, 0x80, 4) INT_SUB (unique, 0x12800, 4) , (unique, 0x12600, 4), (unique, 0x12800, 4) INT_ADD (register, 0x80, 4) , (const, 0x1, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x401c84, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x100002db, 4) , (const, 0x1, 4), (unique, 0x100002db, 4) CAST (register, 0x90, 4), (register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x401c03, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x2, 4)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x401a36, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[(register, 0x30, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x401a20, 1)]
[(unique, 0x3100, 4) INT_ADD (register, 0x90, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x401c03, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x2, 4)]
[(register, 0x30, 8) INT_ZEXT (unique, 0x3100, 4)]
[ ---  BRANCH (ram, 0x401a20, 1)]
[ ---  CBRANCH (ram, 0x401ca3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[(register, 0x30, 8) INT_ZEXT (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x401a20, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 4) , (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x401a20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7d90, 4) , (const, 0x6, 4)]
[ ---  BRANCHIND (ram, 0x4c7d94, 4)]
[(register, 0x30, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x401a20, 1)]
[(register, 0x98, 1) MULTIEQUAL (register, 0x98, 1) , (register, 0x98, 1) , (register, 0x98, 1) , (register, 0x98, 1) , (register, 0x98, 1) , (register, 0x98, 1) , (register, 0x98, 1)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x401a36, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x100002df, 8), (unique, 0x100002df, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x401a36, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(register, 0x0, 8) INT_SDIV (unique, 0x100002e7, 8) , (unique, 0x100002ef, 8), (unique, 0x100002ef, 8) CAST (register, 0x30, 8), (unique, 0x100002e7, 8) CAST (register, 0x28, 8)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x0, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x401a51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 1) , (const, 0x0, 1), (register, 0x98, 1) MULTIEQUAL (register, 0x98, 1) , (register, 0x98, 1) , (register, 0x98, 1) , (register, 0x98, 1)]
[ ---  CBRANCH (ram, 0x401a4e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[(register, 0x0, 8) INT_SDIV (unique, 0x100002fb, 8) , (register, 0x80, 8), (unique, 0x100002fb, 8) CAST (register, 0x0, 8), (register, 0x80, 8) INT_SEXT (unique, 0x100002f7, 4), (unique, 0x100002f7, 4) CAST (register, 0x80, 4)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x401a4e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 1) , (const, 0x0, 1)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0xb0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x401a66, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7d88, 4) , (const, 0x2, 4)]
[(register, 0x0, 8) CALL (ram, 0x453010, 8) , (const, 0xbc, 8)]
[(register, 0x0, 8) CALL (ram, 0x453010, 8) , (const, 0xbf, 8)]
[(ram, 0x4c6040, 8) INDIRECT (ram, 0x4c6040, 8) , (const, 0x120, 4), (ram, 0x4c6040, 8) INDIRECT (ram, 0x4c6040, 8) , (const, 0x11b, 4), (ram, 0x4c6040, 8) INDIRECT (ram, 0x4c6040, 8) , (const, 0x116, 4)]
[(ram, 0x4c6048, 8) INDIRECT (ram, 0x4c6048, 8) , (const, 0x120, 4), (ram, 0x4c6048, 8) INDIRECT (ram, 0x4c6048, 8) , (const, 0x11b, 4), (ram, 0x4c6048, 8) INDIRECT (ram, 0x4c6048, 8) , (const, 0x116, 4)]
[(ram, 0x4c6050, 8) INDIRECT (ram, 0x4c6050, 8) , (const, 0x120, 4), (ram, 0x4c6050, 8) INDIRECT (ram, 0x4c6050, 8) , (const, 0x11b, 4), (ram, 0x4c6050, 8) INDIRECT (ram, 0x4c6050, 8) , (const, 0x116, 4)]
[(ram, 0x4c6058, 8) INDIRECT (ram, 0x4c6058, 8) , (const, 0x120, 4), (ram, 0x4c6058, 8) INDIRECT (ram, 0x4c6058, 8) , (const, 0x11b, 4), (ram, 0x4c6058, 8) INDIRECT (ram, 0x4c6058, 8) , (const, 0x116, 4)]
[(ram, 0x4c6060, 8) INDIRECT (ram, 0x4c6060, 8) , (const, 0x120, 4), (ram, 0x4c6060, 8) INDIRECT (ram, 0x4c6060, 8) , (const, 0x11b, 4), (ram, 0x4c6060, 8) INDIRECT (ram, 0x4c6060, 8) , (const, 0x116, 4)]
[(ram, 0x4c6068, 8) INDIRECT (ram, 0x4c6068, 8) , (const, 0x120, 4), (ram, 0x4c6068, 8) INDIRECT (ram, 0x4c6068, 8) , (const, 0x11b, 4), (ram, 0x4c6068, 8) INDIRECT (ram, 0x4c6068, 8) , (const, 0x116, 4)]
[(ram, 0x4c6070, 8) INDIRECT (ram, 0x4c6070, 8) , (const, 0x120, 4), (ram, 0x4c6070, 8) INDIRECT (ram, 0x4c6070, 8) , (const, 0x11b, 4), (ram, 0x4c6070, 8) INDIRECT (ram, 0x4c6070, 8) , (const, 0x116, 4)]
[(ram, 0x4c6078, 8) INDIRECT (ram, 0x4c6078, 8) , (const, 0x120, 4), (ram, 0x4c6078, 8) INDIRECT (ram, 0x4c6078, 8) , (const, 0x11b, 4), (ram, 0x4c6078, 8) INDIRECT (ram, 0x4c6078, 8) , (const, 0x116, 4)]
[(ram, 0x4c7d26, 1) INDIRECT (ram, 0x4c7d26, 1) , (const, 0x120, 4), (ram, 0x4c7d26, 1) INDIRECT (ram, 0x4c7d26, 1) , (const, 0x11b, 4), (ram, 0x4c7d26, 1) INDIRECT (ram, 0x4c7d26, 1) , (const, 0x116, 4)]
[(ram, 0x4c7d2c, 4) INDIRECT (ram, 0x4c7d2c, 4) , (const, 0x120, 4), (ram, 0x4c7d2c, 4) INDIRECT (ram, 0x4c7d2c, 4) , (const, 0x11b, 4), (ram, 0x4c7d2c, 4) INDIRECT (ram, 0x4c7d2c, 4) , (const, 0x116, 4)]
[(ram, 0x4c7d88, 4) INDIRECT (ram, 0x4c7d88, 4) , (const, 0x120, 4), (ram, 0x4c7d88, 4) INDIRECT (ram, 0x4c7d88, 4) , (const, 0x11b, 4), (ram, 0x4c7d88, 4) INDIRECT (ram, 0x4c7d88, 4) , (const, 0x116, 4)]
[(ram, 0x4c7d8c, 4) INDIRECT (ram, 0x4c7d8c, 4) , (const, 0x120, 4), (ram, 0x4c7d8c, 4) INDIRECT (ram, 0x4c7d8c, 4) , (const, 0x11b, 4), (ram, 0x4c7d8c, 4) INDIRECT (ram, 0x4c7d8c, 4) , (const, 0x116, 4)]
[(ram, 0x4c7d90, 4) INDIRECT (ram, 0x4c7d90, 4) , (const, 0x120, 4), (ram, 0x4c7d90, 4) INDIRECT (ram, 0x4c7d90, 4) , (const, 0x11b, 4), (ram, 0x4c7d90, 4) INDIRECT (ram, 0x4c7d90, 4) , (const, 0x116, 4)]
[(ram, 0x4c7d94, 4) INDIRECT (ram, 0x4c7d94, 4) , (const, 0x120, 4), (ram, 0x4c7d94, 4) INDIRECT (ram, 0x4c7d94, 4) , (const, 0x11b, 4), (ram, 0x4c7d94, 4) INDIRECT (ram, 0x4c7d94, 4) , (const, 0x116, 4)]
[(ram, 0x4c7db0, 8) INDIRECT (ram, 0x4c7db0, 8) , (const, 0x120, 4), (ram, 0x4c7db0, 8) INDIRECT (ram, 0x4c7db0, 8) , (const, 0x11b, 4), (ram, 0x4c7db0, 8) INDIRECT (ram, 0x4c7db0, 8) , (const, 0x116, 4)]
[(ram, 0x4c7db8, 8) INDIRECT (ram, 0x4c7db8, 8) , (const, 0x120, 4), (ram, 0x4c7db8, 8) INDIRECT (ram, 0x4c7db8, 8) , (const, 0x11b, 4), (ram, 0x4c7db8, 8) INDIRECT (ram, 0x4c7db8, 8) , (const, 0x116, 4)]
[(ram, 0x4c7dc0, 8) INDIRECT (ram, 0x4c7dc0, 8) , (const, 0x120, 4), (ram, 0x4c7dc0, 8) INDIRECT (ram, 0x4c7dc0, 8) , (const, 0x11b, 4), (ram, 0x4c7dc0, 8) INDIRECT (ram, 0x4c7dc0, 8) , (const, 0x116, 4)]
[(ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x120, 4), (ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x11b, 4), (ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x116, 4)]
[(ram, 0x4c8768, 4) INDIRECT (ram, 0x4c8768, 4) , (const, 0x120, 4), (ram, 0x4c8768, 4) INDIRECT (ram, 0x4c8768, 4) , (const, 0x11b, 4), (ram, 0x4c8768, 4) INDIRECT (ram, 0x4c8768, 4) , (const, 0x116, 4)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000303, 8), (unique, 0x10000303, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000000, 4)]
[ ---  CBRANCH (ram, 0x401ac8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x453010, 8)]
[ ---  CBRANCH (ram, 0x401b08, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x2bf80, 4) , (const, 0x80000008, 4)]
[(unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000008, 4)]
[(register, 0x30, 8) INT_ZEXT (unique, 0x10000313, 4), (unique, 0x10000313, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_LEFT (const, 0x1, 4) , (register, 0x8, 1), (register, 0x8, 1) INT_AND (unique, 0x100001fa, 1) , (const, 0xf, 1), (unique, 0x100001fa, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_RIGHT (unique, 0x2c400, 4) , (const, 0xc, 4), (unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000008, 4)]
[(unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000317, 8), (unique, 0x10000317, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000317, 8), (unique, 0x10000317, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0x2c280, 4) , (const, 0x10000000, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000317, 8), (unique, 0x10000317, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x401ac5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (unique, 0x2c280, 4) , (const, 0x10000000, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000317, 8), (unique, 0x10000317, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(register, 0x30, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4), (register, 0x0, 4) INT_RIGHT (unique, 0x2c100, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x401b20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4), (register, 0x0, 4) INT_RIGHT (unique, 0x2c100, 4) , (const, 0x10, 4)]
[(register, 0x38, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (unique, 0x2bf80, 4)]
[(register, 0x0, 8) INT_SDIV (register, 0x0, 8) , (unique, 0x1000031f, 8), (unique, 0x1000031f, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x401ac5, 1)]
[(register, 0x38, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (unique, 0x2bf80, 4) , (register, 0x38, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x0, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x401a51, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x80000000, 4) , (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (register, 0x38, 4)]
[(unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) CAST (unique, 0x10000327, 8), (unique, 0x10000327, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0x8, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000001, 4)]
[ ---  CBRANCH (ram, 0x401b2f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000206, 4) , (const, 0x0, 4), (unique, 0x10000206, 4) INT_AND (unique, 0x2c400, 4) , (const, 0x100, 4), (unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) CAST (unique, 0x1000032f, 8), (unique, 0x1000032f, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0xc, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000001, 4)]
[ ---  CBRANCH (ram, 0x401a51, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x2c280, 4) , (const, 0x0, 4)]
[(ram, 0x4c8768, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x401a51, 1)]
[(ram, 0x4c8768, 4) MULTIEQUAL (ram, 0x4c8768, 4) , (ram, 0x4c8768, 4) , (ram, 0x4c8768, 4) , (ram, 0x4c8768, 4) , (ram, 0x4c8768, 4) , (ram, 0x4c8768, 4) , (ram, 0x4c8768, 4)]
[(ram, 0x4c7dc0, 8) MULTIEQUAL (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8)]
[(ram, 0x4c7db8, 8) MULTIEQUAL (ram, 0x4c7db8, 8) , (ram, 0x4c7db8, 8) , (ram, 0x4c7db8, 8) , (ram, 0x4c7db8, 8) , (ram, 0x4c7db8, 8) , (ram, 0x4c7db8, 8) , (ram, 0x4c7db8, 8)]
[(ram, 0x4c7d94, 4) MULTIEQUAL (ram, 0x4c7d94, 4) , (ram, 0x4c7d94, 4) , (ram, 0x4c7d94, 4) , (ram, 0x4c7d94, 4) , (ram, 0x4c7d94, 4) , (ram, 0x4c7d94, 4) , (ram, 0x4c7d94, 4)]
[(ram, 0x4c7d90, 4) MULTIEQUAL (ram, 0x4c7d90, 4) , (ram, 0x4c7d90, 4) , (ram, 0x4c7d90, 4) , (ram, 0x4c7d90, 4) , (ram, 0x4c7d90, 4) , (ram, 0x4c7d90, 4) , (ram, 0x4c7d90, 4)]
[(ram, 0x4c7d8c, 4) MULTIEQUAL (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4)]
[(ram, 0x4c7d88, 4) MULTIEQUAL (ram, 0x4c7d88, 4) , (ram, 0x4c7d88, 4) , (ram, 0x4c7d88, 4) , (ram, 0x4c7d88, 4) , (ram, 0x4c7d88, 4) , (ram, 0x4c7d88, 4) , (ram, 0x4c7d88, 4)]
[(ram, 0x4c7d2c, 4) MULTIEQUAL (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4)]
[(ram, 0x4c7d26, 1) MULTIEQUAL (ram, 0x4c7d26, 1) , (ram, 0x4c7d26, 1) , (ram, 0x4c7d26, 1) , (ram, 0x4c7d26, 1) , (ram, 0x4c7d26, 1) , (ram, 0x4c7d26, 1) , (ram, 0x4c7d26, 1)]
[(ram, 0x4c6078, 8) MULTIEQUAL (ram, 0x4c6078, 8) , (ram, 0x4c6078, 8) , (ram, 0x4c6078, 8) , (ram, 0x4c6078, 8) , (ram, 0x4c6078, 8) , (ram, 0x4c6078, 8) , (ram, 0x4c6078, 8)]
[(ram, 0x4c6070, 8) MULTIEQUAL (ram, 0x4c6070, 8) , (ram, 0x4c6070, 8) , (ram, 0x4c6070, 8) , (ram, 0x4c6070, 8) , (ram, 0x4c6070, 8) , (ram, 0x4c6070, 8) , (ram, 0x4c6070, 8)]
[(ram, 0x4c6068, 8) MULTIEQUAL (ram, 0x4c6068, 8) , (ram, 0x4c6068, 8) , (ram, 0x4c6068, 8) , (ram, 0x4c6068, 8) , (ram, 0x4c6068, 8) , (ram, 0x4c6068, 8) , (ram, 0x4c6068, 8)]
[(ram, 0x4c6060, 8) MULTIEQUAL (ram, 0x4c6060, 8) , (ram, 0x4c6060, 8) , (ram, 0x4c6060, 8) , (ram, 0x4c6060, 8) , (ram, 0x4c6060, 8) , (ram, 0x4c6060, 8) , (ram, 0x4c6060, 8)]
[(ram, 0x4c6058, 8) MULTIEQUAL (ram, 0x4c6058, 8) , (ram, 0x4c6058, 8) , (ram, 0x4c6058, 8) , (ram, 0x4c6058, 8) , (ram, 0x4c6058, 8) , (ram, 0x4c6058, 8) , (ram, 0x4c6058, 8)]
[(ram, 0x4c6050, 8) MULTIEQUAL (ram, 0x4c6050, 8) , (ram, 0x4c6050, 8) , (ram, 0x4c6050, 8) , (ram, 0x4c6050, 8) , (ram, 0x4c6050, 8) , (ram, 0x4c6050, 8) , (ram, 0x4c6050, 8)]
[(ram, 0x4c6048, 8) MULTIEQUAL (ram, 0x4c6048, 8) , (ram, 0x4c6048, 8) , (ram, 0x4c6048, 8) , (ram, 0x4c6048, 8) , (ram, 0x4c6048, 8) , (ram, 0x4c6048, 8) , (ram, 0x4c6048, 8)]
[(ram, 0x4c6040, 8) MULTIEQUAL (ram, 0x4c6040, 8) , (ram, 0x4c6040, 8) , (ram, 0x4c6040, 8) , (ram, 0x4c6040, 8) , (ram, 0x4c6040, 8) , (ram, 0x4c6040, 8) , (ram, 0x4c6040, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x401883, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7db0, 8) , (const, 0x0, 8), (ram, 0x4c7db0, 8) MULTIEQUAL (ram, 0x4c7db0, 8) , (ram, 0x4c7db0, 8) , (ram, 0x4c7db0, 8) , (ram, 0x4c7db0, 8) , (ram, 0x4c7db0, 8) , (ram, 0x4c7db0, 8) , (ram, 0x4c7db0, 8)]
[ ---  CBRANCH (ram, 0x40192c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7db0, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c8768, 4) MULTIEQUAL (ram, 0x4c8768, 4) , (ram, 0x4c8768, 4)]
[(ram, 0x4c7dc0, 8) MULTIEQUAL (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8)]
[(ram, 0x4c7db8, 8) MULTIEQUAL (ram, 0x4c7db8, 8) , (ram, 0x4c7db8, 8)]
[(ram, 0x4c7d94, 4) MULTIEQUAL (ram, 0x4c7d94, 4) , (ram, 0x4c7d94, 4)]
[(ram, 0x4c7d90, 4) MULTIEQUAL (ram, 0x4c7d90, 4) , (ram, 0x4c7d90, 4)]
[(ram, 0x4c7d8c, 4) MULTIEQUAL (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4)]
[(ram, 0x4c7d88, 4) MULTIEQUAL (ram, 0x4c7d88, 4) , (ram, 0x4c7d88, 4)]
[(ram, 0x4c7d2c, 4) MULTIEQUAL (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4)]
[(ram, 0x4c7d26, 1) MULTIEQUAL (ram, 0x4c7d26, 1) , (ram, 0x4c7d26, 1)]
[(ram, 0x4c6078, 8) MULTIEQUAL (ram, 0x4c6078, 8) , (ram, 0x4c6078, 8)]
[(ram, 0x4c6070, 8) MULTIEQUAL (ram, 0x4c6070, 8) , (ram, 0x4c6070, 8)]
[(ram, 0x4c6068, 8) MULTIEQUAL (ram, 0x4c6068, 8) , (ram, 0x4c6068, 8)]
[(ram, 0x4c6060, 8) MULTIEQUAL (ram, 0x4c6060, 8) , (ram, 0x4c6060, 8)]
[(ram, 0x4c6058, 8) MULTIEQUAL (ram, 0x4c6058, 8) , (ram, 0x4c6058, 8)]
[(ram, 0x4c6050, 8) MULTIEQUAL (ram, 0x4c6050, 8) , (ram, 0x4c6050, 8)]
[(ram, 0x4c6048, 8) MULTIEQUAL (ram, 0x4c6048, 8) , (ram, 0x4c6048, 8)]
[(ram, 0x4c6040, 8) MULTIEQUAL (ram, 0x4c6040, 8) , (ram, 0x4c6040, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x1000028f, 8) COPY (ram, 0x4c7db0, 8), (ram, 0x4c7db0, 8) MULTIEQUAL (ram, 0x4c7db0, 8) , (ram, 0x4c7db0, 8)]
[(ram, 0x4c8768, 4) MULTIEQUAL (ram, 0x4c8768, 4) , (ram, 0x4c8768, 4)]
[(ram, 0x4c7dc0, 8) MULTIEQUAL (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8)]
[(ram, 0x4c7db8, 8) MULTIEQUAL (ram, 0x4c7db8, 8) , (ram, 0x4c7db8, 8)]
[(ram, 0x4c7db0, 8) MULTIEQUAL (ram, 0x4c7db0, 8) , (ram, 0x4c7db0, 8)]
[(ram, 0x4c7d94, 4) MULTIEQUAL (ram, 0x4c7d94, 4) , (ram, 0x4c7d94, 4)]
[(ram, 0x4c7d90, 4) MULTIEQUAL (ram, 0x4c7d90, 4) , (ram, 0x4c7d90, 4)]
[(ram, 0x4c7d8c, 4) MULTIEQUAL (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4)]
[(ram, 0x4c7d88, 4) MULTIEQUAL (ram, 0x4c7d88, 4) , (ram, 0x4c7d88, 4)]
[(ram, 0x4c7d2c, 4) MULTIEQUAL (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4)]
[(ram, 0x4c7d26, 1) MULTIEQUAL (ram, 0x4c7d26, 1) , (ram, 0x4c7d26, 1)]
[(ram, 0x4c6078, 8) MULTIEQUAL (ram, 0x4c6078, 8) , (ram, 0x4c6078, 8)]
[(ram, 0x4c6070, 8) MULTIEQUAL (ram, 0x4c6070, 8) , (ram, 0x4c6070, 8)]
[(ram, 0x4c6068, 8) MULTIEQUAL (ram, 0x4c6068, 8) , (ram, 0x4c6068, 8)]
[(ram, 0x4c6058, 8) MULTIEQUAL (ram, 0x4c6058, 8) , (ram, 0x4c6058, 8)]
[(ram, 0x4c6050, 8) MULTIEQUAL (ram, 0x4c6050, 8) , (ram, 0x4c6050, 8)]
[(ram, 0x4c6048, 8) MULTIEQUAL (ram, 0x4c6048, 8) , (ram, 0x4c6048, 8)]
[(ram, 0x4c6040, 8) MULTIEQUAL (ram, 0x4c6040, 8) , (ram, 0x4c6040, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x100002a7, 8) COPY (ram, 0x4c6060, 8), (ram, 0x4c6060, 8) MULTIEQUAL (ram, 0x4c6060, 8) , (ram, 0x4c6060, 8)]
[ ---  CBRANCH (ram, 0x4018b3, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x10000337, 8), (unique, 0x10000337, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x1000028f, 8) , (register, 0xa0, 8)]
[(register, 0x0, 8) INT_SRIGHT (unique, 0x1000033f, 8) , (const, 0x1, 4), (unique, 0x1000033f, 8) CAST (register, 0xa0, 8)]
[(register, 0x0, 8) INT_SRIGHT (unique, 0x10000347, 8) , (const, 0x1, 4), (unique, 0x10000347, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) INT_AND (register, 0xa0, 8) , (const, 0xffffffffffffff00, 8)]
[(unique, 0x100002af, 8) COPY (register, 0xa0, 8)]
[(ram, 0x4c6078, 8) MULTIEQUAL (ram, 0x4c6078, 8) , (register, 0x0, 8)]
[(ram, 0x4c6070, 8) MULTIEQUAL (ram, 0x4c6070, 8) , (register, 0xa0, 8)]
[(ram, 0x4c6068, 8) MULTIEQUAL (ram, 0x4c6068, 8) , (register, 0x0, 8)]
[(ram, 0x4c6060, 8) MULTIEQUAL (unique, 0x100002a7, 8) , (unique, 0x100002af, 8)]
[(unique, 0x1000027f, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x4018c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7db8, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4018bf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7db8, 8) , (const, 0x0, 8)]
[(ram, 0x4c8768, 4) MULTIEQUAL (ram, 0x4c8768, 4) , (ram, 0x4c8768, 4)]
[(ram, 0x4c7dc0, 8) MULTIEQUAL (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8)]
[(ram, 0x4c7db0, 8) MULTIEQUAL (ram, 0x4c7db0, 8) , (ram, 0x4c7db0, 8)]
[(ram, 0x4c7d94, 4) MULTIEQUAL (ram, 0x4c7d94, 4) , (ram, 0x4c7d94, 4)]
[(ram, 0x4c7d90, 4) MULTIEQUAL (ram, 0x4c7d90, 4) , (ram, 0x4c7d90, 4)]
[(ram, 0x4c7d8c, 4) MULTIEQUAL (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4)]
[(ram, 0x4c7d88, 4) MULTIEQUAL (ram, 0x4c7d88, 4) , (ram, 0x4c7d88, 4)]
[(ram, 0x4c7d2c, 4) MULTIEQUAL (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4)]
[(ram, 0x4c7d26, 1) MULTIEQUAL (ram, 0x4c7d26, 1) , (ram, 0x4c7d26, 1)]
[(ram, 0x4c6078, 8) MULTIEQUAL (ram, 0x4c6078, 8) , (ram, 0x4c6078, 8)]
[(ram, 0x4c6070, 8) MULTIEQUAL (ram, 0x4c6070, 8) , (ram, 0x4c6070, 8)]
[(ram, 0x4c6068, 8) MULTIEQUAL (ram, 0x4c6068, 8) , (ram, 0x4c6068, 8)]
[(ram, 0x4c6060, 8) MULTIEQUAL (ram, 0x4c6060, 8) , (ram, 0x4c6060, 8)]
[(ram, 0x4c6058, 8) MULTIEQUAL (ram, 0x4c6058, 8) , (ram, 0x4c6058, 8)]
[(ram, 0x4c6050, 8) MULTIEQUAL (ram, 0x4c6050, 8) , (ram, 0x4c6050, 8)]
[(ram, 0x4c6048, 8) MULTIEQUAL (ram, 0x4c6048, 8) , (ram, 0x4c6048, 8)]
[(ram, 0x4c6040, 8) MULTIEQUAL (ram, 0x4c6040, 8) , (ram, 0x4c6040, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000287, 8) COPY (ram, 0x4c7db8, 8), (ram, 0x4c7db8, 8) MULTIEQUAL (ram, 0x4c7db8, 8) , (ram, 0x4c7db8, 8)]
[(ram, 0x4c8768, 4) MULTIEQUAL (ram, 0x4c8768, 4) , (ram, 0x4c8768, 4)]
[(ram, 0x4c7dc0, 8) MULTIEQUAL (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8)]
[(ram, 0x4c7db8, 8) MULTIEQUAL (ram, 0x4c7db8, 8) , (ram, 0x4c7db8, 8)]
[(ram, 0x4c7db0, 8) MULTIEQUAL (ram, 0x4c7db0, 8) , (ram, 0x4c7db0, 8)]
[(ram, 0x4c7d94, 4) MULTIEQUAL (ram, 0x4c7d94, 4) , (ram, 0x4c7d94, 4)]
[(ram, 0x4c7d90, 4) MULTIEQUAL (ram, 0x4c7d90, 4) , (ram, 0x4c7d90, 4)]
[(ram, 0x4c7d8c, 4) MULTIEQUAL (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4)]
[(ram, 0x4c7d88, 4) MULTIEQUAL (ram, 0x4c7d88, 4) , (ram, 0x4c7d88, 4)]
[(ram, 0x4c7d2c, 4) MULTIEQUAL (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4)]
[(ram, 0x4c7d26, 1) MULTIEQUAL (ram, 0x4c7d26, 1) , (ram, 0x4c7d26, 1)]
[(ram, 0x4c6078, 8) MULTIEQUAL (ram, 0x4c6078, 8) , (ram, 0x4c6078, 8)]
[(ram, 0x4c6070, 8) MULTIEQUAL (ram, 0x4c6070, 8) , (ram, 0x4c6070, 8)]
[(ram, 0x4c6068, 8) MULTIEQUAL (ram, 0x4c6068, 8) , (ram, 0x4c6068, 8)]
[(ram, 0x4c6060, 8) MULTIEQUAL (ram, 0x4c6060, 8) , (ram, 0x4c6060, 8)]
[(ram, 0x4c6058, 8) MULTIEQUAL (ram, 0x4c6058, 8) , (ram, 0x4c6058, 8)]
[(ram, 0x4c6050, 8) MULTIEQUAL (ram, 0x4c6050, 8) , (ram, 0x4c6050, 8)]
[(ram, 0x4c6048, 8) MULTIEQUAL (ram, 0x4c6048, 8) , (ram, 0x4c6048, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000297, 8) COPY (ram, 0x4c6040, 8), (ram, 0x4c6040, 8) MULTIEQUAL (ram, 0x4c6040, 8) , (ram, 0x4c6040, 8)]
[ ---  CBRANCH (ram, 0x4018f2, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x1000034f, 8), (unique, 0x1000034f, 8) CAST (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x1000027f, 8) , (unique, 0x10000287, 8)]
[(register, 0x0, 8) INT_SRIGHT (unique, 0x10000357, 8) , (const, 0x1, 4), (unique, 0x10000357, 8) CAST (register, 0x28, 8)]
[(register, 0x0, 8) INT_SRIGHT (unique, 0x1000035f, 8) , (const, 0x1, 4), (unique, 0x1000035f, 8) CAST (register, 0x28, 8), (register, 0x28, 8) INT_AND (register, 0x28, 8) , (const, 0xffffffffffffff00, 8)]
[(unique, 0x1000029f, 8) COPY (register, 0x28, 8)]
[(ram, 0x4c8768, 4) MULTIEQUAL (ram, 0x4c8768, 4) , (ram, 0x4c8768, 4) , (ram, 0x4c8768, 4)]
[(ram, 0x4c7db8, 8) MULTIEQUAL (ram, 0x4c7db8, 8) , (ram, 0x4c7db8, 8) , (ram, 0x4c7db8, 8)]
[(ram, 0x4c7db0, 8) MULTIEQUAL (ram, 0x4c7db0, 8) , (ram, 0x4c7db0, 8) , (ram, 0x4c7db0, 8)]
[(ram, 0x4c7d94, 4) MULTIEQUAL (ram, 0x4c7d94, 4) , (ram, 0x4c7d94, 4) , (ram, 0x4c7d94, 4)]
[(ram, 0x4c7d90, 4) MULTIEQUAL (ram, 0x4c7d90, 4) , (ram, 0x4c7d90, 4) , (ram, 0x4c7d90, 4)]
[(ram, 0x4c7d8c, 4) MULTIEQUAL (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4)]
[(ram, 0x4c7d88, 4) MULTIEQUAL (ram, 0x4c7d88, 4) , (ram, 0x4c7d88, 4) , (ram, 0x4c7d88, 4)]
[(ram, 0x4c7d2c, 4) MULTIEQUAL (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4)]
[(ram, 0x4c7d26, 1) MULTIEQUAL (ram, 0x4c7d26, 1) , (ram, 0x4c7d26, 1) , (ram, 0x4c7d26, 1)]
[(ram, 0x4c6078, 8) MULTIEQUAL (ram, 0x4c6078, 8) , (ram, 0x4c6078, 8) , (ram, 0x4c6078, 8)]
[(ram, 0x4c6070, 8) MULTIEQUAL (ram, 0x4c6070, 8) , (ram, 0x4c6070, 8) , (ram, 0x4c6070, 8)]
[(ram, 0x4c6068, 8) MULTIEQUAL (ram, 0x4c6068, 8) , (ram, 0x4c6068, 8) , (ram, 0x4c6068, 8)]
[(ram, 0x4c6060, 8) MULTIEQUAL (ram, 0x4c6060, 8) , (ram, 0x4c6060, 8) , (ram, 0x4c6060, 8)]
[(ram, 0x4c6058, 8) MULTIEQUAL (ram, 0x4c6058, 8) , (register, 0x0, 8) , (ram, 0x4c6058, 8)]
[(ram, 0x4c6050, 8) MULTIEQUAL (ram, 0x4c6050, 8) , (register, 0x28, 8) , (ram, 0x4c6050, 8)]
[(ram, 0x4c6048, 8) MULTIEQUAL (ram, 0x4c6048, 8) , (register, 0x0, 8) , (ram, 0x4c6048, 8)]
[(ram, 0x4c6040, 8) MULTIEQUAL (unique, 0x10000297, 8) , (unique, 0x1000029f, 8) , (ram, 0x4c6040, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000267, 8) COPY (ram, 0x4c7dc0, 8), (ram, 0x4c7dc0, 8) MULTIEQUAL (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8)]
[ ---  CBRANCH (ram, 0x401916, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7dc0, 8) , (const, 0x0, 8), (ram, 0x4c7dc0, 8) MULTIEQUAL (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8) , (ram, 0x4c7dc0, 8)]
[(register, 0x0, 8) INT_SDIV (unique, 0x10000367, 8) , (const, 0x4, 8), (unique, 0x10000367, 8) CAST (unique, 0x1000009e, 8), (unique, 0x1000009e, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_MULT (register, 0x30, 8) , (ram, 0x4c6050, 8)]
[(ram, 0x4c6040, 8) COPY (ram, 0x4c6040, 8)]
[(ram, 0x4c6048, 8) COPY (ram, 0x4c6048, 8)]
[(ram, 0x4c6050, 8) COPY (ram, 0x4c6050, 8)]
[(ram, 0x4c6058, 8) COPY (ram, 0x4c6058, 8)]
[(ram, 0x4c6060, 8) COPY (ram, 0x4c6060, 8)]
[(ram, 0x4c6068, 8) COPY (ram, 0x4c6068, 8)]
[(ram, 0x4c6070, 8) COPY (ram, 0x4c6070, 8)]
[(ram, 0x4c6078, 8) COPY (ram, 0x4c6078, 8)]
[(ram, 0x4c7d26, 1) COPY (ram, 0x4c7d26, 1)]
[(ram, 0x4c7d2c, 4) COPY (ram, 0x4c7d2c, 4)]
[(ram, 0x4c7d88, 4) COPY (ram, 0x4c7d88, 4)]
[(ram, 0x4c7d8c, 4) COPY (ram, 0x4c7d8c, 4)]
[(ram, 0x4c7d90, 4) COPY (ram, 0x4c7d90, 4)]
[(ram, 0x4c7d94, 4) COPY (ram, 0x4c7d94, 4)]
[(ram, 0x4c7db0, 8) COPY (ram, 0x4c7db0, 8)]
[(ram, 0x4c7db8, 8) COPY (ram, 0x4c7db8, 8)]
[(ram, 0x4c7dc0, 8) COPY (ram, 0x4c7dc0, 8)]
[(ram, 0x4c8760, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000267, 8) , (register, 0x0, 8)]
[(ram, 0x4c8768, 4) COPY (ram, 0x4c8768, 4)]
[ ---  RETURN (const, 0x0, 8)]
